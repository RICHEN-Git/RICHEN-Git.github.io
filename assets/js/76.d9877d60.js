(window.webpackJsonp=window.webpackJsonp||[]).push([[76],{587:function(s,t,e){"use strict";e.r(t);var a=e(19),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-log-show-commit-logs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-log-show-commit-logs"}},[s._v("#")]),s._v(" 📌 git log - Show commit logs")]),s._v(" "),e("h2",{attrs:{id:"follow"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#follow"}},[s._v("#")]),s._v(" 🔹 --follow")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list all commits that changed a specific file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1262    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8808453",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow -- filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: git diff file against its last change")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 252    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22412252",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p [-m] [--follow] [-1] <path>\n\ngit log -p -1 <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I rewrite history so that all files, except the ones I already moved, are in a subdirectory?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4042965",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want the project"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s history to look as though all files have always been in the directory foo/bar, then you need to do a little surgery. Use git filter-branch with the \"tree filter\" to rewrite the commits so that anywhere foo/bar doesn'")]),s._v("t exist, it is created and all files are moved to it:\ngit filter-branch --prune-empty --tree-filter '\nif [ ! -e foo/bar ]; then\n    mkdir -p foo/bar\n    git ls-tree --name-only $GIT_COMMIT | xargs -I files mv files foo/bar\nfi'\n\n▲ If you just want to see the history of a file that has been moved or renamed at some point in the past, then simply use the --follow option to git log:\ngit log --follow foo/bar/file.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Merge git repository in subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 43    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[s._v("git mv")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6442034",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir -p z/a z/b\ncd z/a\ngit init\necho A>A\ngit add A\ngit commit -m A\necho AA>>A\ngit commit -a -m AA\ncd ../b\ngit init\necho B>B\ngit add B\ngit commit -m B\necho BB>>B\ngit commit -a -m BB\ncd ../a\ngit remote add -f B ../b\ngit merge -s ours --no-commit B/master\ngit read-tree --prefix=bdir -u B/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subtree merge B into bdir"')]),s._v("\ncd bdir\necho BBB>>B\ngit commit -a -m BBB\n\nmkdir -p z/a z/b\ncd z/a\ngit init\necho A>A\ngit add A\ngit commit -m A\necho AA>>A\ngit commit -a -m AA\n\ncd ../b\ngit init\necho B>B\ngit add B\ngit commit -m B\necho BB>>B\ngit commit -a -m BB\n\nmkdir bdir\ngit mv B bdir\ngit commit -a -m bdir-rename\n\ncd ../a\ngit remote add -f B ../b\ngit merge -s ours --no-commit B/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# According to Alex Brown and pjvandehaar, newer versions of git need --allow-unrelated-histories")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git merge -s ours --allow-unrelated-histories --no-commit B/master")]),s._v("\ngit read-tree --prefix= -u B/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"subtree merge B into bdir"')]),s._v("\n\ncd bdir\necho BBB>>B\ngit commit -a -m BBB\n\ngit log --follow B\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git: See changes to a specific file by a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44246693",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status include/svl/itemset.hxx")]),s._v("\n00aa9f622c29 Revert "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"used std::map in SfxItemSet"')]),s._v("\nM       include/svl/itemset.hxx\nafaa10da2572 make SfxItemSet with SAL_WARN_UNUSED\nM       include/svl/itemset.hxx\n[snip]\na7724966ab4f Bin comments that claim to say why some header is included\nM       include/svl/itemset.hxx\nb9337e22ce1d execute move of global headers\nR100    svl/inc/svl/itemset.hxx include/svl/itemset.hxx\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --diff")]),s._v("-filter=R"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status include/svl/itemset.hxx")]),s._v("\nb9337e22ce1d execute move of global headers\nR100    svl/inc/svl/itemset.hxx include/svl/itemset.hxx\ne6b4345c7f40 #i103496#: split svtools in two libs, depending on whether the code needs vcl or not\nR100    svtools/inc/svtools/itemset.hxx svl/inc/svl/itemset.hxx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: nicely display file rename history in git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13620202",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" --name-only --follow -- README.md\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H%%'")]),s._v(" --name-only --follow -- README.md | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':a;N;$!ba;s/%\\n\\n/ /g'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v('7. Usage scenario: How to "git log --follow '),e("path",[s._v('" in JGit?  (To retrieve the full history including renames)')])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11504177",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("import org.eclipse.jgit.api.Git;\nimport org.eclipse.jgit.api.errors.GitAPIException;\nimport org.eclipse.jgit.diff.DiffEntry;\nimport org.eclipse.jgit.diff.RenameDetector;\nimport org.eclipse.jgit.errors.MissingObjectException;\nimport org.eclipse.jgit.lib.Repository;\nimport org.eclipse.jgit.revwalk.RevCommit;\nimport org.eclipse.jgit.treewalk.TreeWalk;\n\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.List;\n\n/**\n * Create a Log command that enables the follow option: git log --follow -- < path >\n * User: OneWorld\n * Example for usage: ArrayList<RevCommit> commits =  new  LogFollowCommand(repo,"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"src/com/mycompany/myfile.java"')]),s._v(").call();\n */\npublic class LogFollowCommand {\n\n    private final Repository repository;\n    private String path;\n    private Git git;\n\n    /**\n     * Create a Log command that enables the follow option: git log --follow -- < path >\n     * @param repository\n     * @param path\n     */\n    public LogFollowCommand(Repository repository, String path){\n        this.repository = repository;\n        this.path = path;\n    }\n\n    /**\n     * Returns the result of a git log --follow -- < path >\n     * @return\n     * @throws IOException\n     * @throws MissingObjectException\n     * @throws GitAPIException\n     */\n    public ArrayList<RevCommit> call() throws IOException, MissingObjectException, GitAPIException {\n        ArrayList<RevCommit> commits = new ArrayList<RevCommit>();\n        git = new Git(repository);\n        RevCommit start = null;\n        do {\n            Iterable<RevCommit> log = git.log().addPath(path).call();\n            for (RevCommit commit : log) {\n                if (commits.contains(commit)) {\n                    start = null;\n                } else {\n                    start = commit;\n                    commits.add(commit);\n                }\n            }\n            if (start == null) return commits;\n        }\n        while ((path = getRenamedPath( start)) != null);\n\n        return commits;\n    }\n\n    /**\n     * Checks for renames in history of a certain file. Returns null, if no rename was found.\n     * Can take some seconds, especially if nothing is found... Here might be some tweaking necessary or the LogFollowCommand must be run in a thread.\n     * @param start\n     * @return String or null\n     * @throws IOException\n     * @throws MissingObjectException\n     * @throws GitAPIException\n     */\n    private String getRenamedPath( RevCommit start) throws IOException, MissingObjectException, GitAPIException {\n        Iterable<RevCommit> allCommitsLater = git.log().add(start).call();\n        for (RevCommit commit : allCommitsLater) {\n\n            TreeWalk tw = new TreeWalk(repository);\n            tw.addTree(commit.getTree());\n            tw.addTree(start.getTree());\n            tw.setRecursive(true);\n            RenameDetector rd = new RenameDetector(repository);\n            rd.addAll(DiffEntry.scan(tw));\n            List<DiffEntry> files = rd.compute();\n            for (DiffEntry diffEntry : files) {\n                if ((diffEntry.getChangeType() == DiffEntry.ChangeType.RENAME || diffEntry.getChangeType() == DiffEntry.ChangeType.COPY) && diffEntry.getNewPath().contains(path)) {\n                    System.out.println("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Found: "')]),s._v(" + diffEntry.toString() + "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" return "')]),s._v(" + diffEntry.getOldPath());\n                    return diffEntry.getOldPath();\n                }\n            }\n        }\n        return null;\n    }\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: "),e("code",[s._v("git log --follow --graph")]),s._v(" skips commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46492159",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --cc")]),s._v(" -- b.txt")]),s._v("\n*   e5a17d7 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'feature'")]),s._v("\n|\\  \n| | \n... \n* | 52e75c9 Move\n|/  \n|   diff --git a/a.txt b/b.txt\n|   similarity index 100%\n|   rename from a.txt\n|   rename to b.txt\n* 7590cfd First commit\n  diff --git a/a.txt b/a.txt\n  new file mode 100644\n  index 0000000..e965047\n  --- /dev/null\n  +++ b/a.txt\n  @@ -0,0 +1 @@\n  +Hello\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: GIT Split Repository directory preserving "),e("em",[s._v("move / renames")]),s._v(" history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59832729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This script should run in the same folder as the project folder is.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This script uses git-filter-repo (https://github.com/newren/git-filter-repo).")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The list of files and folders that you want to keep should be named <your_repo_folder_name>_KEEP.txt. I should contain a line end in the last line, otherwise the last file/folder will be skipped.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The result will be the folder called <your_repo_folder_name>_REWRITE_CLONE. Your original repo won't be changed.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tags are not preserved, see line below to preserve tags.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Running subsequent times will backup the last run in <your_repo_folder_name>_REWRITE_CLONE_BKP.")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Define here the name of the folder containing the repo: ")]),s._v("\nGIT_REPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git-test-orig"')]),s._v("\n\nclone="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v("_REWRITE_CLONE\ntemp=/tmp/git_rewrite_temp\nrm -Rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("_BKP\nmv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("_BKP\nrm -Rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\nmkdir "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\ngit clone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("\ngit remote remove origin\nopen .\nopen "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Comment line below to preserve tags")]),s._v("\ngit tag | xargs git tag -d\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Start logging file history...'")]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"# git log results:\\n"')]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n\nwhile read p\ndo\n    shopt -s dotglob\n    find "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$p"')]),s._v(" -type f > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/temp\n    while read f\n    do\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"## "')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v(" >> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n        # print every file and follow to get any previous renames\n        # Then remove blank lines.  Then remove every other line to end up with the list of filenames       \n        git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" --name-only --follow -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NF > 0'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR%2==0'")]),s._v(" | tee -a "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n        \n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n"')]),s._v(" >> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n    done < "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/temp\ndone < ../"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v("_KEEP.txt > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\nmv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE_full\nawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE_full > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\nsort -o "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Starting filter-branch --------------------------'")]),s._v("\ngit filter-repo --paths-from-file "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE --force --replace-refs delete-no-add\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Finished filter-branch --------------------------'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Git squash commits of renamed files (an keep history)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28606759",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow --find-rename=50 -- someFile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Git: massive refactor keeping changes log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5271716",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow -- filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git: how to analyze code that has a multi-file history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2096744",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show <sha1_of_interesting_commit>^ -- file/path\n\ngit blame <sha1_of_interesting_commit>^ -- file/path\n\ngit log --follow -- file/path\n\ngit log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Interesting_Function"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to repair a git history and correctly merge unrelated histories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58022936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How git log works when there is more than one commit to show\n... <-F <-G <-H ...\n\ngit log master develop origin/feature\n\n▲ Think about how the rename-detection interacts with the priority queue\nM     (merge commit)\n|\\\n| B   (parent #2)\nA     (parent #1)\n\n*   f11ea2a (HEAD -> master) merge A and B to final\n|\\  \n| * 811819b (B) B\n* 50d92c7 A\n\ngit log --name-status --oneline --follow --full-history -m -- final\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-history"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" -- final")]),s._v("\nf11ea2a (from 50d92c7) (HEAD -> master) merge A and B to final\nR100    A       final\n50d92c7 A\nA       A\n\n▲ Conclusion\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git: How do you check out the initial version of a file in a git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3450825",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout $(git log --follow --pretty=%H path/to/file | tail -n 1) path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Preserve history of file in git repo while moving to other folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49464177",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow -- path/to/file\n\ngit log -M40% --follow -- path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: clean git history of deleted files, keeping renamed files history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33865903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --raw")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --diff")]),s._v("-filter=R"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%H builtin/var.c")]),s._v("\n81b50f3ce40bfdd66e5d967bf82be001039a9a98\n:100644 100644 2280518... 2280518... R100       builtin-var.c   builtin/var.c\n\n55b6745d633b9501576eb02183da0b0fb1cee964\n:100644 100644 d9892f8... 2280518... R096       var.c   builtin-var.c\n\ngit log --follow --raw --diff-filter=R --pretty=format:%H builtin/var.c |\nwhile true; do\n    if ! read hash; then break; fi\n    IFS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" read mode_etc oldname newname\n    read blankline\n    echo in $hash, rename $oldname to $newname\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to get the commit name where the introduction of PATTERN was made?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30476936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git bisect\n▲ git log --follow  <file>\n▲ git log -- file1 file2 ...\ngit log --stat --decorate --graph -- file1 file2 ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to make Git understand that moved file and edited file is the same file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47779054",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow folder/index.html\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: SVN-to-git: How can I preserve history for files moved in SVN repo when migrating to git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23966618",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow -- NewParent/FolderA/FileA.ext\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit log -M --summary -- NewParent/FolderA/FileA.ext \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v('20. Usage scenario: Inconsistency between "git show" and "git log --" when tracking changes in a subdirectory')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42036775",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("C:\\Users\\vonc\\prog\\git\\accumulo>git show --name-only 31ee26b8a\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 31ee26b8ac41844f2a647a5d1484f47da731872a")]),s._v("\nAuthor: Eric C. Newton <eric.newton@gmail.com>\nDate:   Wed Mar 11 14:37:39 2015 -0400\n\n    ACCUMULO-3423 fixed replication bugs with recent refactorings in StatusUtil\n\ncore/src/main/java/org/apache/accumulo/core/replication/StatusUtil.java\nserver/tserver/src/main/java/org/apache/accumulo/tserver/log/TabletServerLogger.java\n\nC:\\Users\\vonc\\prog\\git\\accumulo>git log --graph --all --oneline --decorate  --follow -- core\\src\\main |grep 31ee26\n| * | | | | | | | | | | | | | | | | | 31ee26b8a ACCUMULO-3423 fixed replication bugs with recent refactorings in StatusUtil\n\nC:\\Users\\vonc\\prog\\git\\accumulo>git log --follow -- core\\src\\main|grep 31ee26\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 31ee26b8ac41844f2a647a5d1484f47da731872a")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How do I find the git revision where certain files were added?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18233650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow --oneline <filename> | tail -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Listing full commit history of a particular file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29718053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --simplify")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" -- baz")]),s._v("\na022556 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baz'")]),s._v("\nfdc3e37 Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" file (pull-request-bar-branch)\n3e87596 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n09e7a1b Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file (pull-request-foo-branch)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How do I merge changes of one file into another across different repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32461403",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd source_repository/\ngit log --reverse --follow -p --format=email   filename  > patch\n\ncd other_repository/\ngit am --whitespace=nowarn source_repository/patch\n\nrm source_repository/patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to maintain Git's change history of file content which is extracted to another file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19901372",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow -L1,1:B.java\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"decorate"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decorate"}},[s._v("#")]),s._v(" 🔹 --decorate")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I show the name of branches in "),e("code",[s._v("git log")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 344    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1841429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to copy commits from one Git repo to another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the old repo as a remote repository ")]),s._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the old repo commits")]),s._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# examine the whole tree")]),s._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),s._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check your local repo is correct")]),s._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# send your new tree (repo state) to github")]),s._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the now-unneeded reference to oldrepo")]),s._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#create LICENSE file, edit, add content, save")]),s._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit'")]),s._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure there are no unsaved changes")]),s._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pull the latest version from github")]),s._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move their master branch pointer to the one you published to github.")]),s._v("\ngit reset --hard origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How do I remove the old history from a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 128    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4909248",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ echo 4a46bc886318679d8b15e05aea40b83ff6c3bd47 > .git/info/grafts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" | tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --lines")]),s._v("=11")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit cb3da2d4d8c3378919844b29e815bfd5fdc0210c")]),s._v("\nAuthor: Your Name <your.email@example.com>\nDate:   Fri May 24 14:04:10 2013 +0200\n\n    Another message\n \ncommit 4a46bc886318679d8b15e05aea40b83ff6c3bd47 (grafted)\nAuthor: Your Name <your.email@example.com>\nDate:   Thu May 23 22:27:48 2013 +0200\n\n    Some message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('5. Usage scenario: How can I tell which remote "parent" branch my branch is based on?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33144334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to know if latest commit to master has been pushed to the remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 48    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21989798",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Do\n> git status\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\nnothing to commit, working directory clean\n\n▲ If the output instead begins with \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch is ahead of 'origin/master' by 1 commit.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git push" to publish your local commits)')]),s._v("\n\n▲ If the commit you are interested in is not the latest, then you can do\n> git log --decorate --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: list tags contained by a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 45    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2383739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --simplify-by-decoration --decorate --pretty=oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag: '")]),s._v("\n\ngit describe --tags --abbrev=0 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Git changelog: how to get all changes up to a specific tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 44    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7387677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate v0.1.0\n\ngit log --oneline --decorate v0.0.9..v0.1.0\n\ngit shortlog v0.1.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Git find out the last commit i pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15552121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you mean the last commit you pushed to the master branch then, assuming your remote is origin:\ngit rev-parse origin/master\n\n▲ This will show you the commit ID of the tip of the master branch of the origin origin, as your local repository is currently aware.  This may mean that the commit is someone else's commit, if someone else pushed commits after you did and you have since fetched that branch.\ngit show -p origin/master\n\ngit log --pretty=oneline --abbrev-commit --graph --decorate --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to stop merging in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28416721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge --abort\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit reset --merge\n\ngit reset --hard @{1}\n\ngit log --graph --decorate --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How do I determine the source branch of a particular branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6427205",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream <branch> [<start-point>]\n\ngit diff <mybranch>..master # commits in master that are not in mybranch\ngit diff <mybranch>..2.2 # commits in 2.2 that are not in mybranch\n\ngitk --all\ngit log --graph --color --decorate --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to merge git commits in the develop branch to a feature branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17860574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to get birds eye view of git tree with just branch names, not individual commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8137582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --all --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to find git commits in the repository by commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13955279",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate | less\n/ message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Able to recover a deleted branch using git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18465321",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How can I get/list/see all the descendants of a commit with git (or gitk)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23546539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all BRANCH~1..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n* 20db61f 2\n* 3923af1 1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n* 65b716e (c) c-5\n* ebe2a0e c-4\n* 2ed9abe (b) b-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-1'")]),s._v("\n[z (root-commit) bc0c0bb] z-1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-2'")]),s._v("\n[z 1183713] z-2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* 1183713 (HEAD -> z) z-2\n* bc0c0bb z-1\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master~1..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n* 338432a (c) c-5\n* 2115318 c-4\n* 43a34dc (b) b-4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Getting a list of all children of a given commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24231679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --graph --decorate --oneline ^A \\\n   --all $(git fsck --unreachable --no-reflogs | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2==\"commit\" {print $3}'")]),s._v(")\n\ngit for-each-ref --contains A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How can I limit the log to all the descendants of a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31266614",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How to limit the log to all the descendants of a given revision\ngit log --all --ancestry-path ^<rev>\n\ngit log --all --ancestry-path ^D\n\ngit log --all --ancestry-path ^X\n\n▲ What's wrong with git log --all --ancestry-path D^!?\ngit log --all --ancestry-path D^!\n\ngit log --all --ancestry-path D^!\n\ngit log --ancestry-path D ^C feature master\n\ngit log --ancestry-path ^C feature master\n\ngit log --ancestry-path ^D feature master\n\ngit log --all --ancestry-path ^D\n\n▲ Test\n$ mkdir gittest\n$ cd gittest/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A\\n"')]),s._v(" > README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch feature")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout feature")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* e234427 (HEAD -> feature) Y\n* cf98c6b X\n| * b3d493a (master) E\n| * e2bb266 D\n|/  \n* dfe0267 C\n* 0be7d42 B\n* 674356e A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ = D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" master~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" feature~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ == D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^master~")]),s._v("\nb3d493a E\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^feature~")]),s._v("\ne234427 Y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to reproduce the format of git log --oneline --decorate?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39887897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   git log --graph --decorate --date=short --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(bold blue)%h%C %C(bold green)%ad %C(auto)%d  %C(white)%s%C(reset)'")]),s._v(" -10   \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: git-log missing merge commit that undid a change")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56556222",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\n▲ Long\n▲ git log without History Simplification\ngit log --all --decorate --oneline --graph\n\n*   cc7285d (HEAD -> master, branch) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into branch\n|\\  \n| * ad686b0 changed x to x2, z to z2\n* | dcaa916 changed y to y2, z to z3\n|/  \n* a222cef initial commit\n\ngit log dcaa916\n\n▲ git log with History Simplification\n...--F--G--H--...\n\n...--K\n      \\\n       M\n      /\n...--L\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^1 cc7285d")]),s._v("\nM       z\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^2 cc7285d")]),s._v("\nM       x\nM       y\nM       z\n\n▲ Caveats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to get 'git diff' to only show commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33641558",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -n 10\n\ngit log --oneline --graph --decorate -n 10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Visualize git branch topology only, with no commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51838603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --oneline --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Git: find all tags, reachable from a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33275980",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --simplify-by-decoration --pretty=oneline HEAD | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^[^\\(]*\\(([^\\)]*)\\).*$#\\1#'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-e 's#,#\\n#g' | \\")]),s._v("\ngrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag:'")]),s._v(" | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#[[:space:]]*tag:[[:space:]]*##'")]),s._v("\n\ngit log \n\n// Print out the full ref name \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--decorate=full ")]),s._v("\n\n// Select all the commits that are referred by some branch or tag\n// \n// Basically its the data you are looking for\n//\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--simplify-by-decoration")]),s._v("\n\n// print each commit as single line\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=oneline")]),s._v("\n\n// start from the current commit\nHEAD\n\n// The rest of the script are unix command to print the results in a nice   \n// way, extracting the tag from the output line generated by the \n// --decorate=full flag.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to fix a wrong merge in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44285140",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master  // switch to master\ngit checkout -b fix_it  // create a fix_it branch, and switch to it\ngit rebase -i <hash_right_before_bad_commit> // cherry-pick all the good commits - leave out the bad one\n\ngit checkout master\ngit branch old_master // create an old_master branch in case you want to rollback\ngit reset fix_it  // now master has the new fixed history (without the bad commit)\n\n// double-check your branches and make sure everything looks ok (and the bad commit is gone from your history)\ngit log --graph --all --oneline --decorate-short\n\n// if everything looks good, push the changes to your remote repository\ngit push origin master --force // you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ll need to force it since you'")]),s._v("ve re-written history\n\n// clean up the tmp branches\ngit branch -D fix_it, old_master\n\n// inform your team members to force get master (or just to be safe, just re-clone repository).\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: git: finding which merge brough commit into the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11376837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --ancestry-path --merges <commit-of-interest>..C\n\ngit log --oneline --graph --color --decorate \\\n    --ancestry-path <commit-of-interest>..C\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Show specific commits in git log, in context of other commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61511914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate=no --graph | less -p $(git log --pretty=%h -- Makefile | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(')\n\n[alias] hl-graph = !git log --oneline --graph --color | less -R -p $(git log --pretty=%h \\"$@\\" | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(") && :\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Commit on new branch isn't visualized")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15014114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: Github showing an incorrect diff between main branch and PR branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63604391",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/pmacaluso3/merge_conflicts")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'merge_conflicts'")]),s._v("...\nremote: Enumerating objects: 18, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (15/15), done.\nremote: Total 18 (delta 1), reused 13 (delta 0), pack-reused 0\nUnpacking objects: 100% (18/18), done.\n$ cd merge_conficts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/head:pr2")]),s._v("\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/head -> pr2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   7b4d901 (HEAD -> main, origin/main, origin/HEAD) Merge pull request #3 from pmacaluso3/testing-merge-conflicts\n|\\  \n| *   8941f5a (origin/testing-merge-conflicts) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" into testing-merge-conflicts\n| |\\  \n| |/  \n|/|   \n* |   5f144f2 Merge pull request #1 from pmacaluso3/pete/addition\n|\\ \\  \n| * | bffd4d1 addition!\n|/ /  \n| * 660b014 testing\n|/  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show 0283a25 | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@/ /'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa")]),s._v("\nAuthor: famousPete <pete.macaluso generalassemb.ly>\nDate:   Wed Aug 26 13:37:10 2020 -0400\n\n    initial\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..45b983b\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/README.md")]),s._v("\n @ -0,0 +1 @@\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+hi")]),s._v("\ndiff --git a/main.js b/main.js\nnew file mode 100644\nindex 0000000..e69de29\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/merge:temp")]),s._v("\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/merge -> temp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v(" temp")]),s._v("\n*   00e1eb0 (temp) Merge 0bb0d7f5b28f8817564f3acff0ca95a1622ea27d into 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa\n|\\  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Git: How to forget very old commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35921186",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env perl")]),s._v("\n\nuse strict;\nuse warnings;\n\nmy $MAX_AGE = 30;\nmy $BRANCH  = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(";\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\nmy($new_start,$rebase) = `git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to determine new root commit"')]),s._v("\n  unless defined($new_start) && $? == 0;\n\nchomp $new_start;\n\nmy $new_base = `echo Forget old commits | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to orphan $new_start"')]),s._v(" unless $? == 0;\nchomp $new_base;\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\nif (defined $rebase) {\n  system("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --onto $new_base $new_start HEAD"')]),s._v(") == 0\n    or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git rebase failed"')]),s._v(";\n}\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git branch -f $BRANCH HEAD"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to move $BRANCH"')]),s._v(";\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reflog expire --expire=now --all && git gc --prune=now"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: cleanup failed"')]),s._v(";\n\ngit log --graph --decorate --pretty=oneline --abbrev-commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash -xe")]),s._v("\n\nMAX_AGE=${MAX_AGE:-30}\nBRANCH=${BRANCH:-master}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\n{\n  read new_start\n  read rebase\n} < <(git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H)\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start"')]),s._v(" ]  # assertion\n\nread new_base < <(\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Forget old commits"')]),s._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$rebase"')]),s._v(" ] && git rebase --onto $new_base $new_start HEAD\n\ngit branch -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v(" HEAD\n\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v("  # avoid ending on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no branch"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How i can filter git log on multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67239138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags  --pretty=%H\\ %d --decorate-refs=refs/tags/*-signoff \\\n| grep integrationtest-signoff | grep -m1 unittest-signoff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How to get the commit name where the introduction of PATTERN was made?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30476936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git bisect\n▲ git log --follow  <file>\n▲ git log -- file1 file2 ...\ngit log --stat --decorate --graph -- file1 file2 ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: How to see a user's check-in history in TFS w/ Git repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50284134",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Option1: Filter in TFS web page\n▲ Option 2: View from local git repo\ngit log --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                              #Show commits made by the user for all branches\ngit log --all --oneline --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                    #Show each commit for one line\ngit log --oneline --decorate --graph --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" #Keep branch structure\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: View git log (with merges) for only certain branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22824736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You're not seeing "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra"')]),s._v(" branches\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -14")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt   <===== Here is master\n*   03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n|\\\n| * a765ecc (bar) Add quack.txt         <===== Here is bar\n| * 80efc7c Add moo.txt\n* | b1bc4f1 Add junk\n|/\n| * acb480b (temp) Add stuff after merge commit <===== Here is temp\n| *   1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| |\\\n| | * 06c40a1 (foo) Add even more junk          <===== Here is foo\n| | * ea3ea46 Add foo.txt\n| |/\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ You probably don't want to use --no-merges for this...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merges master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -11")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* a765ecc (bar) Add quack.txt          <===== Here is bar\n* 80efc7c Add moo.txt\n| * b1bc4f1 Add junk                   <===== Which branch does this belong to?\n|/\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 06c40a1 (foo) Add even more junk             <===== Here is foo\n| * ea3ea46 Add foo.txt\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ Prefer --first-parent instead\ngit log --oneline --graph --decorate --first-parent origin/master origin/topic1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -9")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* 03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n* b1bc4f1 Add junk\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Print git log without commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24431045",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate -10 --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cred%h%Creset%C(yellow)%d%Creset"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Merging two git repositories from some specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31133575",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir a\ncd a\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v(" > asdf.txt\ngit init\ngit add asdf.txt \ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v("\necho asdf2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a2"')]),s._v("\ncd ..\ncp -a a b\ncd b\nrm -rf .git\ngit init\ngit add asdf.txt \necho b1 >> asdf.txt \ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b1"')]),s._v("\necho b2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b2"')]),s._v("\ngit log --graph --all --oneline --decorate\ncd ../a\ngit log --graph --all --oneline --decorate\ngit fetch ../b master:b_branch\ngit log --graph --all --oneline --decorate\n\ngit checkout b_branch\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: from which branch the remote branch is created")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40859988",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v("   ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: can we squash the latest commit to a specific previous commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37732935",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\nddd4444 (HEAD, my-feature-branch) A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --fixup")]),s._v(" aaa1111")]),s._v("\n[my-feature-branch eee5555] fixup! A first commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\neee5555 (HEAD, my-feature-branch) fixup! A first commit\nddd4444 A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How to reverse a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43162502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --mirror [git-clone-url]\ncd [repo.git]\n./git-reverse.sh\ngit log --all --date-order --graph --decorate\n\n$ ./git-reverse.sh \nbe0923ece8f73281e5e54906c29debb852894b92 - Reversed 1 of 360 (0%)\n061bca59b29e75becbde66d2e510fc2b4059ccb2 - Reversed 2 of 360 (0%)\n6a19039e05e3a0186187d0a6943634e8499b5a65 - Reversed 3 of 360 (0%)\n7afe25e8caf93eb7107471a1bd078d4adc3f6999 - Reversed 4 of 360 (1%)\n8b556f6fe97c5357c2328467a5ba01b77931ff82 - Reversed 5 of 360 (1%)\n71fd0883975154f48059ca929db8ccb659c5049a - Reversed 6 of 360 (1%)\n[etc...]\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" have diverged,\nand have 199 and 159 different commits each, respectively.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to merge the remote branch into yours)\n\n*********************************************\n| Git repo successfully reversed!!! :-) (-: |\n*********************************************\nTo push the reversed repo:\n  rm .git/packed-refs\n  rm -rf .git/refs/remotes\n  git push --mirror [new-git-clone-url]  \n\nWARNING:\n========\nPushing a reversed git repo is a profoundly destructive and confusing operation.\n\nYou have a full "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git clone --mirror'")]),s._v(" backup stored somewhere safe, right?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How to add author name to a custom git alias?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53251152",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%an%x09%s"')]),s._v("\n\ngit log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%C(blue)%an%C(reset)%x09%s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How do you find who merged a git commit into a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44306587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log <commit-id>..<branch> --ancestry-path --merges --reverse\n\ngit log --oneline --graph --decorate --ancestry-path --boundary <commit-id>..<branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: How to find commit by tag name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6197544",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How do I get hashes of newer commits than the current one in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34908694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If so, git log --all will show this commit in the log.  Adding the --oneline and/or --decorate flags might make this output easier to search through if all you're looking for is the commit message:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n\nhash HEAD@{n}: command: message\n\n▲ Because of this very well structured format, we can use grep to make the output easier to read through. For example, if you know that you've recently checked out the commit in question you can run:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep checkout")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"phrase in commit message"')]),s._v(" --ignore-case\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"individual\\|words\\|in\\|message"')]),s._v(" --ignore-case\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How do I display all commits I've made on all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24773429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("gitk --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n\ngit log --oneline --decorate --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: How to view all tags in a git repository (more than 29)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34901984",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to change the git log committed log date format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57620021",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y%m%d%H%M%S'")]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --decorate=full\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: how can I use git log to use parent #1 to generate the patch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61844194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --pretty=oneline --first-parent --decorate=no -G keyword origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: How to display relative commit number in git log graph?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65374605",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nfp="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--first-parent"')]),s._v("\nif [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$*"')]),s._v(" =~ --graph ]]; then\n    unset fp  # if --graph is among parameters "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'${fp:+$fp}'")]),s._v(" below yields nothing (no --first-parent to git log)\nfi\n\nn=0\ngit log --decorate=short --color=always ${fp:+$fp} "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(" |\nwhile IFS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(" read line; do\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v(" =~ ^(\\*.+)?.\\[33m(commit|[0-9a-f]{7}) ]]; then\n        line="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line HEAD~$n"')]),s._v("  # append relative number at the end of line\n        ((n+=1))              # increment number by 1\n    fi\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v("   # print (either modified or untouched) line from git log to the output       \ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: Show only tagged commits in git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56939983",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -3\n\n4c37e97 fixed a bug in sub-feature F1\nd9c4599 added sub-feature F1\n06014cb changed part XYZ\n\ngit log --oneline --decorate -3\n\n4c37e97 (HEAD -> feature/abc) fixed a bug in sub-feature F1\nd9c4599 added sub-feature F1\n06014cb (tag: release/1.22) changed part XYZ\n\ngit log --oneline --decorate --simplify-by-decoration -3\n\n4c37e97 (HEAD -> feature/abc) fixed a bug in sub-feature F1\n06014cb (tag: release/1.22) changed part XYZ\neec8aad (master) some older change\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: Delete a range of commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28566891",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("> git log --online --decorate\n\nf85179d (HEAD, master) ten\n7de4071 nine\n5c7a482 eight\n9585035 seven\nb41bffc six\nd102f05 five\n5a28cb9 four\n6fc27c9 three\n524b0c7 two\nbb7e6ae one\n\n> git rebase -i --root\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this is notepad")]),s._v("\n\npick bb7e6ae one\ns 524b0c7 two\ns 6fc27c9 three\ns 5a28cb9 four\ns d102f05 five\npick b41bffc six\npick 9585035 seven\npick 5c7a482 eight\npick 7de4071 nine\npick f85179d ten\n\n> git log --oneline --decorate\n\n6c63e02 (HEAD, master) ten\n276cc7c nine\n5248b0b eight\n251f87a seven\na70d035 six\n3529f1a Squash the five initial commits into one.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: Strategies of merging master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44146810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --all --decorate=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: How to print initial letter of committer in git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41081122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h %Cgreen%ai %C(reset)%C(auto)(%<(3,trunc)%cN) %s %d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: How can I use the command line to see which commit was pushed last")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32650070",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --branches")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oneline"')]),s._v(" --abbrev-commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: git log -- show which branches a commit applies to")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31677254",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --source --all --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit#"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"decorate-refs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#decorate-refs"}},[s._v("#")]),s._v(" 🔹 --decorate-refs")]),s._v(" "),e("p",[e("strong",[s._v('1. Usage scenario: Get "git log --tags" of temporarily added remote')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66220970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" does not do what you think : it does as if you listed all tags on the command line ; so :\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log last-stable my/tag v1.0.1 v1.0.2  # whatever tags you have on your repo\n\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" tmp/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log tmp/master last-stable my/tag v1.0.1 v1.0.2\n\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can also filter tags using patterns :")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# will list tags "v1.0.1" and "v2.0.3", but not "testing"')]),s._v("\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags/v*"')]),s._v(" --simplify-by-decoration\n\n▲ If you have tags on forked branches, --simplify-by-decoration will also keep the merge commits in the list of commits ; if you are looking for tags only on the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),s._v(" branch, add --first-parent :\ngit log --first-parent --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# this will give you "the last tag on the branch" (for some definition of "last tag")')]),s._v("\ngit describe --tags --abbrev=0 tmp/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can combine it with 'git log' :")]),s._v("\ngit log -1 $(git describe --tags --abbrev=0 tmp/master)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: How to list all branches that were created from a specific branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56370858",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path  --branches --not $(git merge-base --all master develop) \\\n        --pretty=%D  --simplify-by-decoration --decorate-refs=refs/heads\n\ngit log --graph --decorate-refs=refs/heads --oneline \\\n         --branches --simplify-by-decoration \\\n         --ancestry-path --boundary --not `git merge-base master develop`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How i can filter git log on multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67239138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags  --pretty=%H\\ %d --decorate-refs=refs/tags/*-signoff \\\n| grep integrationtest-signoff | grep -m1 unittest-signoff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"source"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#source"}},[s._v("#")]),s._v(" 🔹 --source")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find the Git commit that introduced a string in any branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 802    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5816177",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S <whatever> --source --all\n\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v(" --source --all\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dude, where\'s my car?"')]),s._v(" --source --all\n\ngit log -G "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^(\\s)*function foo[(][)](\\s)*{$"')]),s._v(" --source --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('2. Usage scenario: How to know which branch a "git log" commit belongs to?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7131735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --source")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Forgot branch name where code was committed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24829245",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"class Edge"')]),s._v(" --source --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git log -- show which branches a commit applies to")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31677254",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --source --all --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit#"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Finding merge commits from tag across branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45136163",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --source --ancestry-path  master idea-2017 idea-2016.3 --not 1.6.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"full-diff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-diff"}},[s._v("#")]),s._v(" 🔹 --full-diff")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I view previous diff commits using Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 71    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5901385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --full-diff -p your_file_path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to view complete commits when tracking history of a single file in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1974385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p --full-diff file.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: gitk "),e("path",[s._v(" showing other changes in different directories in commits")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37853336",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --full-diff -p src/moduleA\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"l"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[s._v("#")]),s._v(" 🔹 -L")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Retrieve the commit log for a specific line in a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 741    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19757493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git blame"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -L")]),s._v(" 150,+11 -- git-web--browse.sh")]),s._v('\na180055a git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:36 +0100 150)            die "The browser $browser is not\na180055a git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:36 +0100 151)    fi\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 152) fi\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 153) \n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 154) case '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$browser"')]),s._v(" in\n81f42f11 git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:38 +0100 155) firefox|iceweasel|seamonkey|iceape)\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 156)    # Check version because firefox < 2.0 do\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 157)    vers=$(expr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$($browser_path -version)"')]),s._v(" \n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 158)    NEWTAB="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-new-tab'")]),s._v("\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 159)    test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$vers"')]),s._v(" -lt 2 && NEWTAB="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\na0685a4f git-web--browse.sh (Dmitry Potapov   2008-02-09 23:22:22 -0800 160)    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$browser_path"')]),s._v(" $NEWTAB "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(" &\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=short"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -L")]),s._v(" 155,155:git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 81f42f11496b9117273939c98d270af273c8a463")]),s._v("\nAuthor: Giuseppe Bilotta <giuseppe.bilotta@gmail.com>\n\n    web--browse: support opera, seamonkey and elinks\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -143,1 +143,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-firefox|iceweasel)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+firefox|iceweasel|seamonkey|iceape)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit a180055a47c6793eaaba6289f623cff32644215b")]),s._v("\nAuthor: Giuseppe Bilotta <giuseppe.bilotta@gmail.com>\n\n    web--browse: coding style\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -142,1 +142,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-    firefox|iceweasel)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+firefox|iceweasel)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 5884f1fe96b33d9666a78e660042b1e3e5f9f4d9")]),s._v("\nAuthor: Christian Couder <chriscool@tuxfamily.org>\n\n    Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git-help--browse.sh'")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git-web--browse.sh'")]),s._v(".\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -0,0 +127,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+    firefox|iceweasel)")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: View git history of specific line")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 59    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50473741",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -L "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/the line from your file/,+1:path/to/your/file.txt'")]),s._v("\n\ngit log -L15,+1:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'path/to/your/file.txt'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I calculate the number of commits that changed a line in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59394118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -L 71,71:package.json | grep diff | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Know when a line of code was added to a GitHub repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34452013",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git log --pretty=short -u -L 6,6:afile.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git log for a single line -L without showing diff or patch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59325856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -s -L <start>,<end>:file\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and ")]),s._v("\ngit log -s -L :<funcname>:file\n\ngit log --oneline -L 10,11:example.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to find the diff history of specific line in a file using git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34280320",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -L 1,1:something.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[s._v("#")]),s._v(" 🔹 -n")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Print commit message of a given commit in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 400    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3357357",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%B"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1 <commit>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%B"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --max")]),s._v("-count=1 <commit>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I find the most recent git commit that modified a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 284    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4784629",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log my/file.c\n\ngit log -n 1 --pretty=format:%H -- my/file.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to get the last commit ID of a remote repo using curl-like command?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 132    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19176626",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Browse and display files in a git repo without cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 76    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1178586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("ssh me@otherhost "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cd repo && git log -n 10"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to find the current git branch in detached HEAD state")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6064223",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=%d HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or equivalently:")]),s._v("\ngit show -s --pretty=%d HEAD\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname) %(refname:short)'")]),s._v(" refs/heads | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/^$(git rev-parse HEAD)/ {print \\$2}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Checking out old files WITH original create/modified timestamps")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2179876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('IFS="\n"\nfor FILE in $(git ls-files)\ndo\n    TIME=$(git log --pretty=format:%cd -n 1 --date=iso --date-order -- '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(")\n\n    # Choose 1 version.\n    # This is for BSD date (macOS, FreeBSD, etc)\n    #TIME=$(date -j -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M:%S %z'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    # And this is the equivalent for GNU coreutils date (Linux)\n    TIME=$(date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    touch -m -t "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to get the parent of a specific commit in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 43    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44112699",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=%P -n 1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commit_from"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Recover deleted branch in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 38    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16813291",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fsck --full --no-reflogs --unreachable --lost-found\n\nls -1 .git/lost-found/commit/ | xargs -n 1 git log -n 1 --pretty=oneline\n\ngit checkout -b branch-name SHA\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: how do i identify files/directories that were added or removed in a git commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-whatchanged.html"}},[s._v("git whatchanged")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2557655",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=oneline --name-status\n\ngit diff --name-status HEAD^ HEAD\n\ngit whatchanged -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: GIT Log show only recent entries")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44524327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n <number-of-commits> --pretty=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: git: How to rebase all commits by one certain author into a separate branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5741191",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b other_work <sha1_of_where_to_rebase>\ngit log --reverse --author=others --format=%H <sha1_range> | xargs -n 1 git cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Merging without changing the working directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3409382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nbranch=master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or take an argument:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ $@ eq 1 ];")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#      branch="$1";')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure the branch exists")]),s._v("\nif ! git rev-parse --verify --quiet --heads "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" > /dev/null; then\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error: branch $branch does not exist"')]),s._v("\n     exit 1\nfi\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure this could be a fast-forward   ")]),s._v("\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git merge-base HEAD $branch)"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-parse $branch)"')]),s._v(" ]; then\n    # find the branch name associated with HEAD\n    currentbranch=$(git symbolic-ref HEAD | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s@.*/@@'")]),s._v(")\n    # make the commit\n    newcommit=$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Merge branch '$currentbranch'\"")]),s._v(" | git commit-tree $(git log -n 1 --pretty=%T HEAD) -p $branch -p HEAD)\n    # move the branch to point to the new commit\n    git update-ref -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge $currentbranch: Merge made by simulated no-ff"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/$branch"')]),s._v(" $newcommit\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error: merging $currentbranch into $branch would not be a fast-forward"')]),s._v("\n    exit 1\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git: How to get the latest commit on a specific file, regardless of branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15810516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --date-order --all -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Count all the revisions for all files in a git project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49340076",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" --name-only | sort | uniq -c | sort -n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Latest commit hash of subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12671468",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %aN %s %ad"')]),s._v(" -- $directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to get 'git diff' to only show commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33641558",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -n 10\n\ngit log --oneline --graph --decorate -n 10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: See latest diff for a file, without specifying a commit signature")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25441782",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 -p -- hello.js\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to find the last few commits to a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15516647",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 20")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log HEAD~20..HEAD")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log HEAD~20..")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Find out which branch has the most recent version of a certain file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51796025",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --format=format:%H -n 1 -- path/to/file\n\ngit branch --all --contains commitID\n\ngit branch --all --contains "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --all --format=format:%H -n 1 -- path/to/file)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How can I search though all deletions in a commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67050713",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ This part is easy enough: git log"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s main function is to walk (backwards, as Git always does) through commits, one by one, starting from some particular commit.  The default is to start from the HEAD commit, if you don'")]),s._v("t specify which commit to start from, and to keep going forever.  But if you do specify one particular commit, it will start from there—and, using -n, you can tell it how many commits to walk through, so if you set this to 1, it will "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"walk backwards"')]),s._v(" zero more times after walking through the one commit you specify:\ngit log -n 1 -p -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v(" <hash-id>\n\n▲ You can also use --no-walk to the same effect.  This is more useful if you want to examine two or three specific commits:\ngit log --no-walk -p -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v(" <hash1> <hash2> <hash3>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to retrieve the last modification date of all files with specific extension in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55918312",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("find . -name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.config"')]),s._v(" -exec sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'echo "{} - $(git log -n 1 --pretty="format:%ad" {})"\'')]),s._v(" \\;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to get a particular line from git log --merges -n 1")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63699584",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges -n 1 --format=%B | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^Merge '")]),s._v("\n\ngit log --merges -n 1 --format=%B | sed -n -e 3p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to discover last related commit based on blob/tree hash?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11098711",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-tree --name-only HEAD | while read file; do git log -n 1 --date=short --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$file, author: %an, commit: %h, date: %ad, msg: '%s'\"")]),s._v(" -- $file; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How can I guess the last time a repository was fetched/pulled from a remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25208870",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("getref="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --format=\"%H\" -n 1'")]),s._v("\nif [ `$getref remotename/branchname` != `$getref branchname` ] ; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the local branch and the remote branch diverged! Please pull!"')]),s._v("\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How do I get the output from a call to GIT into a variable in a batch script?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37004298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FOR /F %i IN (`git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%%H"')]),s._v(" -n 1`) DO SET CURRENT_SHA=%i\n\nSETLOCAL ENABLEDELAYEDEXPANSION\nfor /f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tokens=* USEBACKQ"')]),s._v(" %%a in (`git log --pretty^=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%%H"')]),s._v(" -n 1`) do (SET CURRENT_SHA=%%a)\nECHO Current Sha: %CURRENT_SHA%\n\n$CURRENT_SHA=git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Find parent commit of GitHub pull request")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25225298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=%P -n 1 <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: Get latest commit of list of files with Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44610462",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=format:%H -- components/Foobar/index.jsx components/Foobar/index.sss | cat\necho # output of previous command doesn't have a trailing newline\n\nfiles="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"components/Foobar/index.jsx components/Foobar/index.sss"')]),s._v("\ngit log -n 1 --pretty=format:%H -- $files | cat\necho # output of previous command doesn't have a trailing newline\n\ngit log -n 1 --pretty=format:%H -- $files | cat\necho # output of previous command doesn't have a trailing newline\n\ncommit=`git log -n 1 --pretty=format:%H -- $files | cat`\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commit"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: GitHub: How to show commits for all files in folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52761250",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for file in *; do \n  log=$(git log -n 1 --pretty=format:%H -- $file)\n  echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file\\t$log"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How to suppress blank lines with git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52635761",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-n 10")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" -n 10 |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How do I find the git revision where certain files were added?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18233650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow --oneline <filename> | tail -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Change author name and email of Git/GitHub repository keeping timestamps for all commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65578292",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FIRST_NAME LAST_NAME"')]),s._v("\ngit config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MY_EMAIL@SOME_DOMAIN.com"')]),s._v("\n\ngit rebase -i --rebase-merges --root --exec "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'GIT_COMMITTER_DATE="$(git log -n 1 --format=%aD)" git commit --amend --reset-author --no-edit --date="$(git log -n 1 --format=%aD)"\'')]),s._v("\n\ngit push -f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How to filter git log by tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62683508",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("tagRegex="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v("; # fill in your tag pattern here\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %D'")]),s._v(" | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ tag: .*$tagRegex/ {s/ .*//; p;q;}"')]),s._v(";\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: How to configure Jenkins to display the name and commit of the merged branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27122411",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("build = Thread.currentThread().executable\nworkDir = new File(build.getWorkspace().getRemote())\n\ngitlogProcess = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -n 2 --format=\\"%H %h %d\\""')]),s._v(".execute(null,workDir)\nlog = gitlogProcess?.text // Get the result\nitems = log?.readLines()?.getAt(1)?.split() // Second line is the commit that was merged onto master\n// Parse it\ncommit = items?.getAt(0)\nshortCommit = items?.getAt(1) \nmergeBranch = items?.getAt(2)?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"("')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin/"')]),s._v(")\n// Update build name and description\n//buildNumber = build.getEnvironment(listener)?.get("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BUILD_NUMBER"')]),s._v(") <-- This does not work, presumably because the environment is not yet created - if you need this, execute this script as a build step\ndisplayName = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${mergeBranch}-${shortCommit}"')]),s._v("\nbuild.setDisplayName(displayName)\n\ngithuburl = build.getParent()?.getProperty("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.coravy.hudson.plugins.github.GithubProjectProperty"')]),s._v(")?.getProjectUrl()?.commitId(commit)\ndescription = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"<a href='${githuburl}'>${shortCommit}-${mergeBranch}</a>\"")]),s._v("\nbuild.setDescription(description)\n\n\n// Return a map - this will be added to the environment variables\nreturn [\n  MERGE_BRANCH:mergeBranch,\n  MERGE_COMMIT:commit,\n  MERGE_COMMIT_SHORT:shortCommit\n]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to merge a branch into master without changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49420970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reset "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git commit-tree -p "')]),s._v("$BRANCH_NO_CONTENT_CHANGE"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -p "')]),s._v("$BRANCH_PRETENDING_TO_MERGE_FROM"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -m "')]),s._v("Administrative (no-change) merge of $BRANCH_PRETENDING_TO_MERGE_FROM"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("$(git log -n 1 --pretty=format:%T "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH_NO_CONTENT_CHANGE"')]),s._v(")"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Get github URL for most recent pushed commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53546118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ echo https://github.com/user/project/commit/$(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1)\nhttps://github.com/user/project/commit/7e30ecbffa4ce37d0cb9e2d10682ce8fa0b24e4b\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"max-count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-count"}},[s._v("#")]),s._v(" 🔹 --max-count")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get the nth commit since the first commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24239999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$git log --skip=N --max-count=1\n\n$git log --skip=7 --max-count=1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"skip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skip"}},[s._v("#")]),s._v(" 🔹 --skip")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get the nth commit since the first commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24239999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$git log --skip=N --max-count=1\n\n$git log --skip=7 --max-count=1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"since"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#since"}},[s._v("#")]),s._v(" 🔹 --since")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How does git log --since count?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 159    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21743961",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month ago"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks 3 days 2 hours 30 minutes 59 seconds ago"')]),s._v("\n\ngit log --date=local\n\ngit log --date=local --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit config log.date local\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I generate a git commit log for the last month, and export it as CSV?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 124    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10418356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last month"')]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%ar,%s'")]),s._v(" > log.csv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git show files that were changed in the last 2 days")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 101    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7500276",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format: --name-only --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 days ago"')]),s._v("\n\ngit log --pretty=format: --name-only --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 days ago"')]),s._v(" | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to make Git log show all of today's commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 98    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5178739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"6am"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How do I search git history for a disappeared line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 98    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2700156",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -Sfoobar --since=2008.1.1 --until=2009.1.1 -- path_containing_change\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: List git commits to master branch between two dates")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 75    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27313444",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --since")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEC 1 2014"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEC 5 2014"')]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %ad"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git log: only show yesterday's commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40788515",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since=yesterday.0:00am\n\ngit log --since=yesterday.midnight\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Revert all commits by a specific author since specific time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17935901",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for sha in `git log --pretty=format:%H --author=Mohsen --since=4.days`; do\n  git revert --no-edit $sha\ndone\n\nfor sha in `git log --pretty=format:%H`; do sharange="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$sharange $sha"')]),s._v("; done\ngit revert $sharange --no-commit\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reverted commits $sharange"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: get commit id from commit message git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25236402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-parse :/65243\n\ngit show :/65243\n\ngit log --since=... --before=... --author=... --grep=65243 branch~30..branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Creating a 'git log' alias with formatting")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18875386",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("glog ()\n{\n        git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n}\n\nglog ()\n{\n    if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" ]; then\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n    else\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\n    fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to generate changelog: git log since last Hudson build?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2798966",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`date -r ./../lastSuccessful/build.xml "')]),s._v("+%F %T"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to find all my commits made in last few days?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16278179",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chakra"')]),s._v(" --since=4.days --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Finding files older than certain dates in Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42033552",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files\n\ngit log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<some date>"')]),s._v(" -- somefile.cpp\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\ndate=$1\ngit ls-files | while read path\ndo\n  if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --since \\"$date\\" -- $path)"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]\n  then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$path $(git log -1 --pretty='%h %ad' -- $path)\"")]),s._v("\n  fi\ndone\n\ngit ls-files | while read path; do if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --since \\"$1\\" -- $path)"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$path $(git log -1 --pretty='%h %ad' -- $path)\"")]),s._v("; fi done\n\ngit ls-files | grep -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".cpp$"')]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".h$"')]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".c$"')]),s._v(" | while read path; ...\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\ndate=$1\ngrepargs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\nshift\nwhile [ $? -eq 0 ]\ndo\n  grepargs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$grepargs -e \\"$1\\""')]),s._v("\n  shift\ndone\ngit ls-files | grep $grepargs | while read path\ndo\n  if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --since \\"$date\\" -- $path)"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]\n  then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$path $(git log -1 --pretty='%h %ad' -- $path)\"")]),s._v("\n  fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: repo/git revert to state as one month ago")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19032540",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2013-08-26"')]),s._v("\n\ngit reset --hard 0845f5de..... // this need to be the hash you got previously\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git: getting the ref of a commit by day?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2572860",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2010-03-25"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2010-03-26"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to get ONLY filename with path using git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33080946",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 January 2015'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2 January 2015'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit diff hash1..hash2 --name-only\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: git log commit count for every file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11729072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline ${filename} | wc -l\n\ngit log --pretty=format:%ae ${filename} | sort -u | wc -l\n\ngit log --since=${date1} --until=${date2} --pretty=format:%ae ${filename} \\\n    | sort -u | wc -l\n\nfind | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\./\\.git'")]),s._v(" | while read filename\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename} has $(git log --oneline ${filename} | wc -l) commits"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to list tags matching pattern since X date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50563708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --tags=linux* --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month"')]),s._v(" --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Git, how to find out the number of commits made in a specific month")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61447409",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"APR 1 2020"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MAY 1 2020"')]),s._v("\n\n git log --pretty=oneline\n\n git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"APR 1 2020"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MAY 1 2020"')]),s._v(" --pretty=oneline | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How can I get the total lines committed today in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18328020",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("> first_commit=`git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date +%Y-%m%-d):00:00"')]),s._v("\n\n> first_commit=`git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date +%Y-%m%-d):00:00"')]),s._v(" | tail -n1`; gitstats -c commit_begin=$first_commit . target/gitstats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to fetch no of commits made by developer for a day in Git repository for a particular branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43852953",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("the_date=$( date +%F )\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae"')]),s._v(" --since=yesterday the-branch | sort | uniq | while read author; do\n    git log --author=$author --since-yesterday the-branch > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$the_date"')]),s._v("_"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$author"')]),s._v(".txt\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Find out previously pushed diff and logs in git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53830530",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since=2018-12-17\n\ngit log --since=`date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 day ago"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+%Y-%m-%d'")]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to get all commit ID's after certain date and display only the files that were changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68933379",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" --name-only --since=<date>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How do I list the time stamp and commit message for git comits made this year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55427111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v(" --author-date-order --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%at %s'")]),s._v(" > year.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Importing GitHub commit data into spreadsheet file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46210480",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'last month'")]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h;%an;%ad;%s'")]),s._v(" --numstat > summary.csv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How can I list all branches that contain commits newer than a specific date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28239160",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --since=<date> <branch>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git-greenbranch.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# List the local branches that contain commits newer than a specific date")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Usage: git greenbranch <date>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To make a Git alias called 'greenbranch' out of this script,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# put the latter on your search path, and run")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   git config --global alias.greenbranch '!sh git-greenbranch.sh'")]),s._v("\n\nif [ $# -ne 1 ]\nthen\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"usage: git greenbranch <date>\\n\\n"')]),s._v("\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"For more details on the allowed formats for <date>, see the\\n"')]),s._v("\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'git-log' man page.\\n\"")]),s._v("\n    exit 1\nfi\n\ntestdate=$1\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads/ \\\n    | while read ref; do\n          if [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-list --max-count=1 --since="')]),s._v("$testdate"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" $ref)"')]),s._v(" ]\n          then\n              printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s\\n"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$ref"')]),s._v("\n          fi\n      done\n\nexit $?\n\ngit config --global alias.greenbranch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!sh git-greenbranch.sh'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/git/git/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# go grab a cup o' coffee...")]),s._v("\n\n$ cd git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check all remote branches out (for testing purposes)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" maint origin/maint")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" next origin/next")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" pu origin/pu")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" todo origin/todo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git greenbranch ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yesterday"')]),s._v("\nmaint\nmaster\nnext\npu\ntodo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git greenbranch ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"today"')]),s._v("\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Git: How to list all my TODO messages in the last week?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37510872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -S")]),s._v(" TODO"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Doe"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 week ago"')]),s._v(" |grep TODO\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('28. Usage scenario: git: how to show commits since "the last time it was 5AM"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43335982",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"5am$(if test $(date +%k) -lt 5; then echo ' yesterday'; fi)\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: Extract all files changed in repo since a certain date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69842430",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-10-21"')]),s._v(" --name-only --pretty=format: | \\\nsort -u | \\\ngrep -ve "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^$'")]),s._v(" | \\\nxargs -I{} cp -v -u {} /destination/path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: How to see summary of feature changes since last pull?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48963945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use --merges Flag\ngit log --merges\n\ngit log --merges <committish>..HEAD\ngit log --merges --since=<date>\n\n▲ Caveats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How to aggregate code changes between commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27602105",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --shortstat  | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{files+=$1; inserted+=$4; deleted+=$6} END {print "files changed", files, "lines inserted:", inserted, "lines deleted:", deleted}\'')]),s._v("\n\ngit log --shortstat  | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | \\\ngawk '{files+=$1; inserted+=$4; deleted+=$6} END \\ \n{print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(", files, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines inserted:"')]),s._v(", inserted, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines deleted:"')]),s._v(", deleted}'\n\nc:\\prgs\\vonc\\git\\git>\ngit log --oneline --shortstat --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{files+=$1; inserted+=$4; deleted+=$6} END {print "files changed", files, "lines inserted:", inserted, "lines deleted:", deleted}\'')]),s._v("\nfiles changed 47 lines inserted: 397 lines deleted: 30\n\ngit log --pretty=format:%an | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ ++c[$0]; } END { for(cc in c) printf \"%5d %s\\n\",c[cc],cc; }'")]),s._v("| gsort -r\n\ngit log --pretty=format:%an | \\\ngawk '{ ++c[$0]; } END \\\n{ for(cc in c) printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%5d %s\\n"')]),s._v(",c[cc],cc; }'| gsort\n\nc:\\prgs\\vonc\\git\\git>\ngit log --pretty=format:%an --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ ++c[$0]; } END { for(cc in c) printf \"%5d %s\\n\",c[cc],cc; }'")]),s._v("| gsort\n   23 Junio C Hamano\n     8 Jeff King\n     3 Johannes Schindelin\n\nc:\\prgs\\vonc\\git\\git>\ngit shortlog -sn --no-merges --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v("\n     8  Jeff King\n     6  Junio C Hamano\n     3  Johannes Schindelin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How can I get the Git commits done in the last 3 months counted from the last commit on a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69288645",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date --date "')]),s._v("$(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai'")]),s._v(" <branch> -n1) - 3 months"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(" <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"after"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#after"}},[s._v("#")]),s._v(" 🔹 --after")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How does git log --since count?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 159    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21743961",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month ago"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks 3 days 2 hours 30 minutes 59 seconds ago"')]),s._v("\n\ngit log --date=local\n\ngit log --date=local --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit config log.date local\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: get number of changed lines per day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8154710",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --shortstat")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@{1 month ago}"')]),s._v(" \n 7 files changed, 29 insertions(+), 6 deletions(-)\n\ngit log --after=2011-01-01 --before=2011-01-31 --format=format: --shortstat master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: get commits since a particular date in git based on commit date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31046467",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2015-06-22T10:36:00-07:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2015-06-22T16:50:00-07:00"')]),s._v(" --pretty=format:%ci\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to view commits from one day only in a pretty format in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30377636",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 13"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 15"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %aN> %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to get commit from git given unix timestamp of commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69714213",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=unix --before=1635020939 --after=1635020939 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to get Git Merged Date Revision Log history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30520588",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2015-5-23"')]),s._v(" --merges\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit ca82a6dff817ec66f44342007202690a93763949")]),s._v("\nAuthor: Hatjhie <hatjihie@gmail.com>\nDate:   Fri May 29 21:52:11 2008 -0700\n\n    Added new UI feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How can I output an entire git repo to a single file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25589488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %an, %ad : %s"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your name>"')]),s._v(" --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-05-19 00:00:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-08-18 00:00:00"')]),s._v(" -p --no-merges > ~/<path to some folder>/myrepo.patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"until"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#until"}},[s._v("#")]),s._v(" 🔹 --until")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I search git history for a disappeared line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 98    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2700156",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -Sfoobar --since=2008.1.1 --until=2009.1.1 -- path_containing_change\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: List git commits to master branch between two dates")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 75    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27313444",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --since")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEC 1 2014"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEC 5 2014"')]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %ad"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git: changelog day by day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2979587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generates changelog day by day")]),s._v("\nNEXT=$(date +%F)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CHANGELOG"')]),s._v("\necho ----------------------\ngit log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --date=short | sort -u -r | while read DATE ; do\n    echo\n    echo [$DATE]\n    GIT_PAGER=cat git log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" * %s"')]),s._v(" --since=$DATE --until=$NEXT\n    NEXT=$DATE\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to get ONLY filename with path using git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33080946",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 January 2015'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2 January 2015'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit diff hash1..hash2 --name-only\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git log commit count for every file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11729072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline ${filename} | wc -l\n\ngit log --pretty=format:%ae ${filename} | sort -u | wc -l\n\ngit log --since=${date1} --until=${date2} --pretty=format:%ae ${filename} \\\n    | sort -u | wc -l\n\nfind | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\./\\.git'")]),s._v(" | while read filename\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename} has $(git log --oneline ${filename} | wc -l) commits"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to get changes from another branch limiting by date on git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64541918",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --until=2020-07-01 hugefeature\n\ngit checkout -b hugefeature2 <commitID>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fork from master :")]),s._v("\ngit checkout -b hugefeature2 master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge commits up to july :")]),s._v("\ngit merge <commitID>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git, how to find out the number of commits made in a specific month")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61447409",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"APR 1 2020"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MAY 1 2020"')]),s._v("\n\n git log --pretty=oneline\n\n git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"APR 1 2020"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MAY 1 2020"')]),s._v(" --pretty=oneline | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Merge branch DEVELOP into branch master, by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63960612",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge E\n\ngit log --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sept 15, 2020 at 4pm"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Get lines of code with git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29829410",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --shortstat --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Aviv Ben-Yosef"')]),s._v(" --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks ago"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 week ago"')]),s._v(" \n    | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files\\? changed"')]),s._v(" \n    | awk '{files+=$1; inserted+=$4; deleted+=$6} END \n           {print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(", files, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines inserted:"')]),s._v(", inserted, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines deleted:"')]),s._v(", deleted}'\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --oneline --shortstat\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: With GIT show commits older than a specific date with specific format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31164947",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges --format=format:%cd -10 --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date -d "')]),s._v("$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"201506301524"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/....$/ &/'")]),s._v(")"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"before"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#before"}},[s._v("#")]),s._v(" 🔹 --before")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How does git log --since count?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 159    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21743961",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month ago"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks 3 days 2 hours 30 minutes 59 seconds ago"')]),s._v("\n\ngit log --date=local\n\ngit log --date=local --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit config log.date local\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: getting the ref of a commit by day?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2572860",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2010-03-25"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2010-03-26"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to view commits from one day only in a pretty format in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30377636",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 13"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 15"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %aN> %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to count how many times each file was modified in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43898506",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor file in *.php;\ndo\necho $file\ngit log --oneline -- $file | wc -l\ndone\n\ngit log \n\ngit log --oneline \n\ngit log -- filename\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-09T16:36:00-07:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-10T08:00:00-07:00"')]),s._v(" -- myfile\n\ngit log --pretty=format\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to get commit from git given unix timestamp of commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69714213",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=unix --before=1635020939 --after=1635020939 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How can I output an entire git repo to a single file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25589488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %an, %ad : %s"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your name>"')]),s._v(" --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-05-19 00:00:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-08-18 00:00:00"')]),s._v(" -p --no-merges > ~/<path to some folder>/myrepo.patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"author"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#author"}},[s._v("#")]),s._v(" 🔹 --author")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I view a git log of just one user's commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1960    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4262780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jon"')]),s._v("\n\ngit log --author=Jon\n\ngit log --author=Smith\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\(Adam\\)\\|\\(Jon\\)"')]),s._v("\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!Adam|Jon).*$'")]),s._v(" --perl-regexp\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %an'")]),s._v(" | \n  grep -v Adam | \n  cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f1 | \n  xargs -n1 git log -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I calculate the number of lines changed between two commits in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1343    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2528129",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git diff --stat <commit-ish> <commit-ish>\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your name"')]),s._v(" --stat <commit1>..<commit2>\n\ngit log --numstat --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Name"')]),s._v(" commit1..commit2 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NF==3 {plus+=$1; minus+=$2} END {printf(\"+%d, -%d\\n\", plus, minus)}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to count total lines changed by a specific author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 356    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1265229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --oneline --shortstat\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: GitHub - List commits by author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 205    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12174360",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=[your git name]\n\ngit log --author=Prem\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Filter git log to show only my changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 121    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8634379",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourName"')]),s._v("\n\n git log --committer="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourName"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to find commits by a specific user in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 91    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2954495",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=<name or email>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to get total additions and deletions on a given branch for an given author in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13056003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=$USER --shortstat $BRANCH | \\\nawk '/^ [0-9]/ { f += $1; i += $4; d += $6 } \\\nEND { printf("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d files changed, %d insertions(+), %d deletions(-)"')]),s._v(", f, i, d) }'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: count line changes with git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6241539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git log --stat --author $(git config --get user.email) --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last year"')]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last month"')]),s._v(" | awk -F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" '/files? changed/ {\n    files += $1\n    insertions += $2\n    deletions += $3\n    print\n}\nEND {\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Files Changed: "')]),s._v(" files\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Insertions: "')]),s._v(" insertions\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deletions: "')]),s._v(" deletions\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Lines changed: "')]),s._v(" insertions + deletions\n\n}'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to count number of commits per file pathname by author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28647880",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Just realized that if you use --name-only to print the filenames, pretty format as empty string, and use this method to sort, uniq, and sort by top number of commits, in *nix/OS X, you could use:\ngit log --name-only --author=John --pretty=format: | sort | uniq -c | sort -nr\n\n▲ E.g. if we were trying to find DHH's authors in Rails, we might do:\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%aN <%aE>'")]),s._v(" | LC_ALL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),s._v(" sort -u | grep avid\n\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --pretty=format: | sort | uniq -c | sort -nr\n\n3624 \n 611 actionpack/CHANGELOG\n 432 activerecord/CHANGELOG\n 329 railties/CHANGELOG\n 206 activerecord/lib/active_record/base.rb\n 195 activesupport/CHANGELOG\n 157 actionpack/lib/action_controller/base.rb\n 153 railties/Rakefile\n 108 activerecord/lib/active_record/associations.rb\n  79 actionpack/lib/action_view/helpers/javascript_helper.rb\n  75 activerecord/lib/active_record/validations.rb\n  74 activerecord/test/base_test.rb\n  69 actionmailer/CHANGELOG\n  66 railties/lib/rails_generator/generators/applications/app/app_generator.rb\n  66 activerecord/Rakefile\n  66 actionpack/lib/action_controller/caching.rb\n  60 actionpack/lib/action_controller/routing.rb\n  59 railties/lib/initializer.rb\n  59 actionpack/Rakefile\n  57 actionpack/lib/action_controller/request.rb\n  ...\n\n▲ If you want to exclude the number of files not touched from the counts, use --format= instead of --pretty=format:, e.g.:\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --format: | sort | uniq -c | sort -nr\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Finding all files touched by a particular author in git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18784316",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"authorname"')]),s._v(" | while read commit_hash; do git show --oneline --name-only $commit_hash | tail -n+2; done | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Revert all commits by a specific author since specific time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17935901",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for sha in `git log --pretty=format:%H --author=Mohsen --since=4.days`; do\n  git revert --no-edit $sha\ndone\n\nfor sha in `git log --pretty=format:%H`; do sharange="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$sharange $sha"')]),s._v("; done\ngit revert $sharange --no-commit\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reverted commits $sharange"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to get all commit messages in a repo by one author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27324312",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --author <author regex>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Remove all commits by author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39235609",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b <branch-name> <base-commit>\n\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<name>"')]),s._v(" --invert-grep --reverse --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%H"')]),s._v(" HEAD..master | xargs git cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: get commit id from commit message git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25236402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-parse :/65243\n\ngit show :/65243\n\ngit log --since=... --before=... --author=... --grep=65243 branch~30..branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Creating a 'git log' alias with formatting")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18875386",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("glog ()\n{\n        git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n}\n\nglog ()\n{\n    if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" ]; then\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n    else\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\n    fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to generate a github-like Impact Graph?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2673262",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to get commits by multiple authors?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67704934",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -i <branch_1>..<branch_2> --author=john --author=mike\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\(John\\)\\|\\(Mike\\)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: find all my changes in gerrit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19733341",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=<your username>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to print all TODO comments I ever added or edited during any git commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25034728",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p --author=you -S TODO | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\+.*TODO"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to get all the user commits from a Bitbucket repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56520989",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git shortlog --summary --numbered --email\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to search for a code pattern in a repository written by a given author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57505053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p --author=pasanw -Sdynamic_cast\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: git list all authors last commit date in a project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48652888",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nSAVEIFS=$IFS\nIFS=$(echo -en "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\b"')]),s._v(")\nfor a in `git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an"')]),s._v(" | sort | uniq`; do git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$a"')]),s._v(" --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author: %an Last commit: %ai"')]),s._v(" | head -n1; done\nIFS=$SAVEIFS\n\n`git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an"')]),s._v(" | sort | uniq`\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$a"')]),s._v(" --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author: %an Last commit: %ai"')]),s._v(" | head -n1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to invert git log --author=me? (Without using Perl)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29118788",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --perl-regexp --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^((?!excluded-author-regex).*)$'")]),s._v("\n\ngit log --oneline --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %s"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: git log, show files for specific username and branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47657899",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=my_username\n\ngit log --author=my_username my_branch\n\ngit log --author=my_username master..my_branch\n\ngit log -p --author=my_username master..my_branch\n\ngit log --name-only --author=my_username master..my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Get list of commits where a specific user has modified a specific file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23832835",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My Name"')]),s._v(" -- <this_file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to fetch no of commits made by developer for a day in Git repository for a particular branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43852953",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("the_date=$( date +%F )\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae"')]),s._v(" --since=yesterday the-branch | sort | uniq | while read author; do\n    git log --author=$author --since-yesterday the-branch > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$the_date"')]),s._v("_"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$author"')]),s._v(".txt\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Getting a commit count for each file in a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51902309",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only")]),s._v("\nbenchmark/README.md\n\nbenchmark/README.md\nbenchmark/app_erb.rb\nbenchmark/app_erb.yml\nbenchmark/erb_render.rb\nbenchmark/erb_render.yml\n\nbenchmark/README.md\n\nbenchmark/README.md\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("-date-order"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=iso"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%ad somefile")]),s._v("\n2018-08-16 03:12:27 +0800\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("-date-order"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=iso"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%ad"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only")]),s._v("\n2018-07-10 16:03:51 +0000\nbenchmark/README.md\n\n2018-07-10 15:58:52 +0000\nbenchmark/README.md\nbenchmark/app_erb.rb\nbenchmark/app_erb.yml\nbenchmark/erb_render.rb\nbenchmark/erb_render.yml\n\n2018-07-10 15:51:29 +0000\nbenchmark/README.md\n\n2018-07-10 15:49:42 +0000\nbenchmark/README.md\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to see a user's check-in history in TFS w/ Git repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50284134",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Option1: Filter in TFS web page\n▲ Option 2: View from local git repo\ngit log --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                              #Show commits made by the user for all branches\ngit log --all --oneline --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                    #Show each commit for one line\ngit log --oneline --decorate --graph --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" #Keep branch structure\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Git get history of branches that i was in")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64521799",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"3 days ago"')]),s._v(" --author=<HERE_COMES_YOUR_NAME_IN_GIT> --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Search all branches for a string but limit commits to a specific author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33152278",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --author=name_of_author\n\ngit log --all --author=name_of_author | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'stuff'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Get lines of code with git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29829410",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --shortstat --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Aviv Ben-Yosef"')]),s._v(" --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks ago"')]),s._v(" --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 week ago"')]),s._v(" \n    | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files\\? changed"')]),s._v(" \n    | awk '{files+=$1; inserted+=$4; deleted+=$6} END \n           {print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(", files, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines inserted:"')]),s._v(", inserted, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines deleted:"')]),s._v(", deleted}'\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --oneline --shortstat\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: How to cherry pick range of commits from specific author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68574702",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry-pick $(git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v(" commit1~..commit7)\n\ngit cherry-pick $(git rev-list --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v(" commit1~..commit7)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How do I list the time stamp and commit message for git comits made this year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55427111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v(" --author-date-order --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%at %s'")]),s._v(" > year.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: GIT - How to see Commits that I've made")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25044463",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'your name registered with git within quotes'")]),s._v("\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Some Name'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Git: How to list all my TODO messages in the last week?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37510872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -S")]),s._v(" TODO"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"John Doe"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 week ago"')]),s._v(" |grep TODO\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: How do I display all commits I've made on all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24773429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("gitk --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n\ngit log --oneline --decorate --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: how to get file names and line numbers of file that I have modified in the past")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29808074",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ I think using git log with the -p parameter will do what you want:\ngit log -p app/styles/\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 3101fd9a2862de007f6b47b58adab2d1e29a722b")]),s._v("\nAuthor: David Zych <email>\nDate:   Wed Apr 22 10:03:06 2015 -0700\n\n    (Some commit message)\n\ndiff --git a/app/styles/site.css b/app/styles/site.css\nindex a2b5d32..3df6ed1 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/app/styles/site.css")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/app/styles/site.css")]),s._v("\n@@ -142,6 +142,11 @@ html {\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+    color: red;")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+    margin: 0;")]),s._v("\n}\n\n▲ If you want to limit the author to yourself, you can add the --author flag.\ngit log -p --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Zych"')]),s._v(" app/styles/\n\n▲ If you want to limit it to the most recent X changes, use the -X flag, where X is the number of changes you want to see. To see the most recent change:\ngit log -p -1 app/styles/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Get all the files changed by me in one branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-help.html"}},[s._v("git help")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68803544",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bento"')]),s._v(" --no-merges\n\ngit help log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: Exclude specific files by extension from git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44539064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"author.name"')]),s._v(" --pretty=tformat: --numstat | grep -v -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*\\.(klr|db_diagram)$'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How to show only filenames by commiter with git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37233755",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=%an | sort -u | while read line; do echo $line;git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v(" --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ %h'")]),s._v(" --name-only | grep -v ^/ | grep -v ^$ | sort -u;echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: How can I list all modified files by an author between a commit range but only with the last thing that happened to the file in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34666108",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --name-status --author=$AUTHOR $COMMIT_RANGE | \\\n grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a-fA-F0-9]{5}'")]),s._v(" | cat -n | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/     / /g'")]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^  *//g'")]),s._v(" | \\\n sort -k 3,3 -k 1n,1n | uniq -f 2 | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^[0-9]\\{1,\\} //'")]),s._v(" | cat -n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How to run command on each file modified in the local commits after git push?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46282546",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-only --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" --author xxxx origin/master..HEAD | sort | uniq | xargs readlink -f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How can I output an entire git repo to a single file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25589488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %an, %ad : %s"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your name>"')]),s._v(" --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-05-19 00:00:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-08-18 00:00:00"')]),s._v(" -p --no-merges > ~/<path to some folder>/myrepo.patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"committer"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#committer"}},[s._v("#")]),s._v(" 🔹 --committer")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Filter git log to show only my changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 121    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8634379",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourName"')]),s._v("\n\n git log --committer="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YourName"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: List all files changed by a specific user in a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53927502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty= --committer=<username> --name-only | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to find the first git commit that's not my commit going back in time?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23684766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git shortlog\n\ngit log --committer "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!YOURAUTHORNAME).*$'")]),s._v(" --perl-regexp\n\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!YOURAUTHORNAME).*$'")]),s._v(" --perl-regexp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"grep-reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grep-reflog"}},[s._v("#")]),s._v(" 🔹 --grep-reflog")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to sort the output of git branch by most recent checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52143385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --grep-reflog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkout:"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%gs"')]),s._v(" | cat -n | sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g"')]),s._v(" | tac\n\ngit checkout @{-nnn}\n\ngit checkout -\n\ngit config --global alias.lb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log -g --grep-reflog "checkout:" --format="%gs" | cat -n | sed -E "s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g" | tac; read -p "Aussuchen: " i; git checkout @{-$i}\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"grep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#grep"}},[s._v("#")]),s._v(" 🔹 --grep")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep Git commit diffs or contents for a certain word")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1040    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1340245",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to find all commits where the commit message contains a given word, use\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=word")]),s._v("\n\n▲ If you want to find all commits where "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"word"')]),s._v(" was added or removed in the file contents (to be more exact: where the number of occurrences of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"word"')]),s._v(" changed), i.e., search the commit contents, use a so-called "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pickaxe'")]),s._v(" search with\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -Sword")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -Gword")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+    return !regexec(regexp, two->ptr, 1, &regmatch, 0);")]),s._v("\n...\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-    hit = !regexec(regexp, mf2.ptr, 1, &regmatch, 0);")]),s._v("\n\n...\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-    hit = frotz(nitfol, mf2.ptr, 1, 0);")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to search in commit messages using command line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 529    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3826800",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep=<pattern>\n    Limit the commits output to ones with log message that matches the \n    specified pattern (regular expression).\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git search all diffs")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 48    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11069489",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("C:\\src\\msysgit\\src>git log --oneline --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8\\.5\\.8"')]),s._v("\nd938476 Make `NO_SFX=1 portable-release.sh` work\nef1dc94 Update tk to version 8.5.8\na910049 Update tcl to version 8.5.8\na702d7f tcltk: update to 8.5.8 and exclude release.sh from the cleanup list\n\nC:\\src\\msysgit\\src>git log --oneline -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version=8.5.8"')]),s._v("\n7be8622 tcltk: update release.sh script for tcl/tk 8.5.9\na702d7f tcltk: update to 8.5.8 and exclude release.sh from the cleanup list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Search git Commits Using Regex")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15120469",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# case insensitive")]),s._v("\ngit log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v(" -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to invert "),e("code",[s._v("git log --grep=<pattern>")]),s._v(" or How to show git logs that don't match a pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\n\nif (( $# < 1 )); then\n  echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: $0 pattern [<since>..<until>]"')]),s._v("\n  exit 1\nfi\n\npattern=$1\nshift\n\ngit log --format=%H $@ |\n  grep -v -f <(git log --format=%H "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--grep=$pattern"')]),s._v(" $@) |\n  git log --pretty --stat --stdin --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep A tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep C tmp~2..tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stdin")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-walk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline </dev/null")]),s._v("\n83052e62f0dc1c6ddfc1aff3463504a4bf23e3c4 Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to find git commits in the repository by commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13955279",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate | less\n/ message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Get Git commit hash from commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35840049",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".. any text you need to find ..."')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: git list changed files in several commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9315138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep=pattern --name-only --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How can I make git list all changed files of a certain type in a specific path for a specific bug?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15836745",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep=xyz -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.php'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(328)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\nf687708 bar x, y, not a\ndfb4b96 foo d, e, f\ndf18118 foo a, b, c\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(329)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=a")]),s._v("\nf687708 bar x, y, not a\ndf18118 foo a, b, c\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(330)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=a -- ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.*'")]),s._v("\ndf18118 foo a, b, c\n\ngit log --oneline --grep=a -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*/a.*'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How can I write a git alias that takes a string as an argument")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49043250",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("search = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { str="')]),s._v("$*"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; echo "')]),s._v("$str"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; git log --all --grep=\\"$str\\"; }; f"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Git: get all blobs with pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37199329",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("{\n    git rev-list --objects --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v("\n    git rev-list --objects -g --no-walk --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v("\n    git rev-list --objects --no-walk --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" \\\n        $(git fsck --unreachable |\n          grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^unreachable commit'")]),s._v(" |\n          cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f3)\n} | sort | uniq\n\ngit log --reflog -Stext\n\ngit log --reflog --grep=pattern\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How do I query the git commit history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49392530",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep=xyz\n\ngit log --author=person@company.com\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to find out if a Git commit is included in a release?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32852489",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pull/122/commits'")]),s._v("\n\ngit log --oneline --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'version'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to sort the output of git branch by most recent checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52143385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --grep-reflog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkout:"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%gs"')]),s._v(" | cat -n | sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g"')]),s._v(" | tac\n\ngit checkout @{-nnn}\n\ngit checkout -\n\ngit config --global alias.lb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log -g --grep-reflog "checkout:" --format="%gs" | cat -n | sed -E "s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g" | tac; read -p "Aussuchen: " i; git checkout @{-$i}\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Finding commits that were reverted by an author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48269695",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep reverts\n\ngit log --grep reverts | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/This reverts commit/ {print $4}'")]),s._v(" | cut -f1 -d.\n\ngit log --grep reverts | \n  awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/This reverts commit/ {print $4}'")]),s._v(" | cut -f1 -d. |\n  xargs -iCID git show --quiet --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ae'")]),s._v(" CID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: find last merged git branch in master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59823418",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges origin/master --oneline --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^Merge pull request #\\([0-9]\\+\\) in \\(.\\+\\) from \\(.\\+\\) to master'")]),s._v(" -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Filter by merge commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57478067",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --oneline\n\ngit log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How do I configure a parameterized git alias?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44548013",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config alias.agrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!f() { git log -10 --author="$1" --grep="$2"; }; f\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to retrieve a branch after finishing a branch in gitflow")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12029007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you just did that, the feature would be second parent of the current commit (the merge commit). You can recreate the branch with\n git branch my-feature HEAD^2\n\n git checkout -b my-feature HEAD^2\n\n▲ If it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s been a while, it'")]),s._v("s probably not the second parent of the current commit. Use\n gitk \n\ngit log --graph --oneline\n\n▲ to find where that branch finished and use the HASH or tree-ish to recreat it. If you guarantee that the merge message is the default one, you can\ngit branch my-feature $(git log -1 --format=%H --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"merge branch 'my-feature'\"")]),s._v(")^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Return the Number of the Last Merged Pull Request Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55040791",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge pull request #[0-9]\\+"')]),s._v(" --pretty=oneline -1\n    | sed -En "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*#([[:digit:]]\\+).*/\\1/p"')]),s._v(";\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to search for a phrase into all git commits ?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32401692",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ I don't know if this was what you meant, but if you want to find all commits where commit message contains given word, use\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=word")]),s._v("\n\n▲ If you want to find all commits where "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"word"')]),s._v(" was added or removed in the file contents (to be more exact: where number of occurences of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"word"')]),s._v(" changed), i.e. search the commit contents, use so called "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pickaxe'")]),s._v(" search with\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -Sword")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Identify all commits made in a push")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33001099",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-status -p -1\n\nresult: \n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit d1bc9d55024e4e3e6acc087ba223bd7951b555fa")]),s._v("\n            Author: unknown <johndoe>\n            Date:   Wed Oct 7 16:20:27 2015 -0300\n\n                           task1000 commit message here...\n\n            M           file1.c\n            M           file2.c\n\ngit log --name-status --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"task1000"')]),s._v("\n\nresult:\n            commit d1bc9d55024e4e3e6acc087ba223bd7951b555fa\n            Author: unknown <johndoe>\n            Date:   Wed Oct 7 16:20:27 2015 -0300\n\n                           task1000 commit message here...\n\n            M           file1.c\n            M           file2.c\n\n            commit 998a74eaa752f6c98c32ec9a412b219afb7cc891\n            Author: unknown <johndoe>\n            Date:   Wed Oct 7 16:19:56 2015 -0300\n\n                           task1000 more one commit for this task..\n\n            M           file1.c\n            M           fileX.c\n            M           fileY.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Git get working copy SHA")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27196436",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ There are a number of ways to achieve what you are looking to do. Probably the most "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gitish"')]),s._v(" would be to use tags, and it makes sense to do this. From your description, different clients are running different "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"releases"')]),s._v(" of the software (each release identified by a SHA).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ALPHA_BETA_TRIAL_1"')]),s._v(" ALPHA_BETA_TRIAL_1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tags")])]),s._v("\n\n▲ If you really need the SHA, then \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-ref ALPHA_BETA_TRIAL_1")]),s._v("\n\n▲ If, instead, you record the revision information in the commit messages, you can use\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Revision\\:"')]),s._v(" --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to find merge commits from topic branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47147003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --first-parent --grep feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: GIT how to create patch from non consecutive commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26153117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nif [[ $# -lt 1 ]]; then\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Ilegal number of parameters."')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage $0 PartialCommitMessage [file.patch]."')]),s._v("\n  exit 1;\nfi\nif [[ $# -eq 1 ]]; then\n  FILE_NAME=$1.patch\nelse\n  FILE_NAME=$2\nfi\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#First line needed in patch files.")]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"From: sgroh@somedomain.com"')]),s._v(" > $FILE_NAME\nfor rev in `git log --reverse --pretty=format:%H --grep=$1`\ndo\n   cmd="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git diff $rev^ $rev >> $FILE_NAME"')]),s._v("\n   echo $cmd\n   eval $cmd\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: how to DIFF all commits returned by git log --grep='1234567'? How to see all changes made in the source code for some task?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49179631",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1111'")]),s._v(" -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Get remote git-svn branch for current local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13787014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep git-svn-id: --first-parent -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"all-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all-match"}},[s._v("#")]),s._v(" 🔹 --all-match")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do you search for multiple words in commit messages?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52065732",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v("\n\ngit log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v(" --all-match\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"invert-grep"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#invert-grep"}},[s._v("#")]),s._v(" 🔹 --invert-grep")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Remove all commits by author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39235609",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b <branch-name> <base-commit>\n\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<name>"')]),s._v(" --invert-grep --reverse --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%H"')]),s._v(" HEAD..master | xargs git cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: how to search git log without a certain commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40545068",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep t123 --invert-grep\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[s._v("#")]),s._v(" 🔹 -i")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Search git Commits Using Regex")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15120469",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# case insensitive")]),s._v("\ngit log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v(" -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to get commits by multiple authors?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67704934",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -i <branch_1>..<branch_2> --author=john --author=mike\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\(John\\)\\|\\(Mike\\)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Search for a text accross all revision of a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54254297",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ngit log -i -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ngit log --all -i -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -S")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ncommit 53106e9cd319a2d8f960a3bbf2731acd0699a54f (feature/x)\nAuthor: name <email>\nDate:   Fri Jan 18 13:59:32 2019 +0100\n\n    Added word\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I find the most recent tag across all branches in a git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47506393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#list all the tags ")]),s._v("\ngit for-each-ref --shell refs/tags |\n  awk '{\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#transform the object name into the commit date as a Unix epoch timestamp ")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -1 --pretty=%cd --date=unix "')]),s._v("$1 | getline $1;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if the tag does not refer to a commit, ignore it")]),s._v("\n    if($0 ~ /^[0-9a-f]/) print;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sort by the timestamp reversely, from the youngest to the oldest")]),s._v("\n  }' | sort -r |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get the first youngest tag")]),s._v("\n  head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get all the tags that point at this tag in case there are multiple youngest tags, ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#with a side effect to remove "refs/tags/"')]),s._v("\n  xargs -i git tag --points-at {}\n\ngit for-each-ref --shell refs/tags | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{\"git log -1 --pretty=%cd --date=unix \"$1 | getline $1;if($0 ~ /^[0-9a-f]/) print;}'")]),s._v(" | sort -r |head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" | xargs -i git tag --points-at {}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("h2",{attrs:{id:"e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#e"}},[s._v("#")]),s._v(" 🔹 -E")]),s._v(" "),e("p",[e("strong",[s._v('1. Usage scenario: Include submodule commit messages with "git log"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26640048",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline -U0 --submodule Tag1..Tag2 | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[*| /\\\\]+([0-9a-f]{7} |Submodule |> |$)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Using git to identify all modified functions in a revision")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5721667",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(commit|@@)'")]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@@.*@@//'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to get ONLY filename with path using git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33080946",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'..'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit log --name-status --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'1 January 2015'")]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2 January 2015'")]),s._v(" | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[A-Z]\\b'")]),s._v(" | sort | uniq | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\w\\t*\\ *//'")]),s._v("\n\ngit diff hash1..hash2 --name-only\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Find commit to find a very old deleted file in Azure Devops")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65691277",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --diff-filter=D --summary | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete|^commit\\s+\\S+'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to sort the output of git branch by most recent checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52143385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --grep-reflog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkout:"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%gs"')]),s._v(" | cat -n | sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g"')]),s._v(" | tac\n\ngit checkout @{-nnn}\n\ngit checkout -\n\ngit config --global alias.lb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log -g --grep-reflog "checkout:" --format="%gs" | cat -n | sed -E "s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g" | tac; read -p "Aussuchen: " i; git checkout @{-$i}\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Exclude specific files by extension from git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44539064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"author.name"')]),s._v(" --pretty=tformat: --numstat | grep -v -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*\\.(klr|db_diagram)$'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[s._v("#")]),s._v(" 🔹 -F")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: count line changes with git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6241539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git log --stat --author $(git config --get user.email) --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last year"')]),s._v(" --until="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last month"')]),s._v(" | awk -F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v(" '/files? changed/ {\n    files += $1\n    insertions += $2\n    deletions += $3\n    print\n}\nEND {\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Files Changed: "')]),s._v(" files\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Insertions: "')]),s._v(" insertions\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deletions: "')]),s._v(" deletions\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Lines changed: "')]),s._v(" insertions + deletions\n\n}'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Search git log using a comment")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39870538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline | grep -F "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'message text'")]),s._v("\n\ngit log | less\n/message text\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to list files by when it was first added to a Git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65433831",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%H | awk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -F")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == \"A\" {print}'")]),s._v("\nA       changelogs/fragments/70887_galaxy_token.yml\nA       test/integration/targets/unsafe_writes/aliases\nA       test/integration/targets/unsafe_writes/basic.yml\n[...]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"perl-regexp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#perl-regexp"}},[s._v("#")]),s._v(" 🔹 --perl-regexp")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I view a git log of just one user's commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1960    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4262780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jon"')]),s._v("\n\ngit log --author=Jon\n\ngit log --author=Smith\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\(Adam\\)\\|\\(Jon\\)"')]),s._v("\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!Adam|Jon).*$'")]),s._v(" --perl-regexp\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %an'")]),s._v(" | \n  grep -v Adam | \n  cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f1 | \n  xargs -n1 git log -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Get the commits made by specific authors (more than one)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32567909",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Try it with the same argument multiple times:\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alice'")]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bob'")]),s._v("\n\n▲ edit: \nIf Git is compiled with the right flags (USE_LIBPCRE) you can pass the option --perl-regexp so the pattern for search is interpreted as a regular expression:\ngit log --perl-regexp --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alice|bob'")]),s._v(" \n\n▲ ...Found more:\nGit interprets all patterns in the options as regex. Only if you want to use Perl compatible regex you need the option --perl-regexp. \nBut if you want to use normal regex, you have to escape the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"or"')]),s._v(":\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'alice\\|bob'")]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to invert git log --author=me? (Without using Perl)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29118788",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --perl-regexp --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^((?!excluded-author-regex).*)$'")]),s._v("\n\ngit log --oneline --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %s"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to find the first git commit that's not my commit going back in time?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23684766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git shortlog\n\ngit log --committer "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!YOURAUTHORNAME).*$'")]),s._v(" --perl-regexp\n\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!YOURAUTHORNAME).*$'")]),s._v(" --perl-regexp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"merges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merges"}},[s._v("#")]),s._v(" 🔹 --merges")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to see commits that were merged in to a merge commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6191836",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to see every commits merged in the last merge you can try that :\ngit log $(git merge-base --octopus \\\n$(git log -1 --merges --pretty=format:%P)).. --boundary\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \n* 8fae178 pif2\n* 20f8ba6 init\n\n▲ If I only want commits related to the last merge I have to use git log -1 --merges --pretty=format:%P which gives me the parents of the first merge available :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%P")]),s._v("\n69f431cec7859b61d33c7503c9431ceea2aaf3e0 3db39ca3ab1e8f70462db23d94590628b5e7ad7b\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=format:%P)")]),s._v("\n8fae178666e34a480b22e40f858efd9e7c66c3ca\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log $(git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges --pretty=format:%P)).. \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n\n▲ If you're a bit perfectionist you can also do this :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log ")]),s._v("\n$(git merge-base --octopus \\\n$(git log -1 \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--merges --pretty=format:%P))..$(git log -1 --merges --pretty=format:%H) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to see a merge history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33803229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: List merge commits affecting a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10181681",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -U -m --simplify-merges --merges -- a.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Show only history of one branch in a Git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4629437",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges\n\ngit log --merges --first-parent\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to determine last merged branch in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32323149",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent --merges -1 --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: git: finding which merge brough commit into the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11376837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --ancestry-path --merges <commit-of-interest>..C\n\ngit log --oneline --graph --color --decorate \\\n    --ancestry-path <commit-of-interest>..C\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to know whether a commit merged from another branch with gitlab api?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46689658",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("    git log --merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Check history of the git pulls made on a local repository from a remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17365532",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to get Git Merged Date Revision Log history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30520588",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2015-5-23"')]),s._v(" --merges\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit ca82a6dff817ec66f44342007202690a93763949")]),s._v("\nAuthor: Hatjhie <hatjihie@gmail.com>\nDate:   Fri May 29 21:52:11 2008 -0700\n\n    Added new UI feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get a particular line from git log --merges -n 1")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63699584",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges -n 1 --format=%B | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^Merge '")]),s._v("\n\ngit log --merges -n 1 --format=%B | sed -n -e 3p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Filter by merge commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57478067",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --oneline\n\ngit log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Can I get a list of all pull requests related to a specific file/directory path in GitHub?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42498685",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --first-parent -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Find merge commit for release branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18895170",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("g=ad198bc\nfor i in $(git log --merges --reverse --format=%H); do\n    revlist=$(git rev-list -1 $g --not $i)\n    if [ $? -eq 0 ]; then\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$revlist"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge commit $i has $g merged."')]),s._v("\n            exit\n        fi\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to find merge commits from topic branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47147003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --first-parent --grep feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Using Git, how can I log all commits that are merge commits between two specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21602041",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("bash$ for commit in \\\n        $(git log --format=%h --merges --max-parents=2 master ^topic); do \\\n          [[ $(git branch --contains ${commit}^2) =~ topic ]] && \\\n          echo $commit; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Finding the conflicting upstream merge in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17111679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --merges integration -- foobar.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to see summary of feature changes since last pull?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48963945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use --merges Flag\ngit log --merges\n\ngit log --merges <committish>..HEAD\ngit log --merges --since=<date>\n\n▲ Caveats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Git: Trying to track which remote branches introduced files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24065777",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate --oneline \\2\n        --branches \\\n        --simplify-by-decoration -- path/to/file\n git blame file\n git log --ancestry-path --merges --oneline commit..@\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# eliminate single-tag-commit clutter from the above output:")]),s._v("\n\ngit log --color=always --rest-of-args \\\n| grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'([^:,]*tag:[^,]*)'")]),s._v(" \\\n| less -r\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to find all commits associated with a merge commit in GIT?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32087718",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --merges <commit_hash_to> <commit_hash_from>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: git commits on a specific branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39719604",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git log --merges -1 --oneline\ne8928b9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'X'")]),s._v("\n\n% git log e8928\\^..X --oneline\n92a1f58 Updates x 10\nf56306d Updates x 9\n54d2253 Updates x 8\na8ba58b Updates x 7\n10d08c5 Updates x 6\n625d267 Updates x 5\n96671d4 Updates x 4\n5031498 Updates x 3\n41770ea Updates x 2\n442033b Updates x 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"no-merges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-merges"}},[s._v("#")]),s._v(" 🔹 --no-merges")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: View git log without merge commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 175    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35946023",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=<name> --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Using Git, show all commits that exist "),e("em",[s._v("only")]),s._v(" on one specific branch, and not "),e("em",[s._v("any")]),s._v(" others")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 32    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5720575",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges origin/merge-only \\\n    --not $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin |\n    grep -Fv refs/remotes/origin/merge-only)\n\ngit log --no-merges merge-only \\\n    --not $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/heads |\n    grep -Fv refs/heads/merge-only)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git: changelog day by day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2979587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generates changelog day by day")]),s._v("\nNEXT=$(date +%F)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CHANGELOG"')]),s._v("\necho ----------------------\ngit log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --date=short | sort -u -r | while read DATE ; do\n    echo\n    echo [$DATE]\n    GIT_PAGER=cat git log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" * %s"')]),s._v(" --since=$DATE --until=$NEXT\n    NEXT=$DATE\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Automatically rewrite full git history to get rid of simple merge commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1635991",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git log - How to list all commits that don't start with a specific word")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10335141",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Show all commits in a git branch since original branching point from master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20016493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log  --boundary master..\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit log  --boundary --no-merges master..\n\ngit log --boundary --no-merges --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%d %Creset%an %Cgreen%ar:%Creset %s'")]),s._v(" --graph master..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git log, only commits that happened on branch pre-merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37607288",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges --first-parent topic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('8. Usage scenario: Ignore meaningless "Merge branch" commits in Git history?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25079487",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Determine commits on a branch not on another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13548468",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges HEAD..my_topic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Git log: list all parents commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19441669",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'re not doing your merges and pulls with --no-ff having actual merge commits at a branch tip is going to be an unreliable indicator, so if you just don'")]),s._v("t want to see the merge commits,\ngit log --no-merges --oneline -n 10   # or --since, or something, might do \n\n▲ If you want to decide how far back to list based on commit attributes rev-list doesn"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t have as a built-in cutoff criterion it'")]),s._v("s just a matter of filtering on  those attributes in the output of rev-list or more generally some log --pretty=format: selection, here"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s one that lists only the tips from merged branches leading to the selected branch, getting  C1-C2-C4 -- since I can'")]),s._v("t figure out how you decided to bypass C4 ...\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\ngit rev-list --parents "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${@-HEAD}"')]),s._v(" \\\n| sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^[^ ]* [^ ]* /!q;s///;s/[^ ]*/&^!/gp'")]),s._v(" \\\n| xargs git log --oneline\n\n/^[^ ]* [^ ]* /!q      # quit at first rev with less than two parents\ns///                   # strip rev and its first parent\ns/[^ ]*/&^!/gp         # append ^! to all other (merged) revs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: View git log (with merges) for only certain branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22824736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You're not seeing "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra"')]),s._v(" branches\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -14")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt   <===== Here is master\n*   03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n|\\\n| * a765ecc (bar) Add quack.txt         <===== Here is bar\n| * 80efc7c Add moo.txt\n* | b1bc4f1 Add junk\n|/\n| * acb480b (temp) Add stuff after merge commit <===== Here is temp\n| *   1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| |\\\n| | * 06c40a1 (foo) Add even more junk          <===== Here is foo\n| | * ea3ea46 Add foo.txt\n| |/\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ You probably don't want to use --no-merges for this...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merges master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -11")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* a765ecc (bar) Add quack.txt          <===== Here is bar\n* 80efc7c Add moo.txt\n| * b1bc4f1 Add junk                   <===== Which branch does this belong to?\n|/\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 06c40a1 (foo) Add even more junk             <===== Here is foo\n| * ea3ea46 Add foo.txt\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ Prefer --first-parent instead\ngit log --oneline --graph --decorate --first-parent origin/master origin/topic1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -9")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* 03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n* b1bc4f1 Add junk\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to list the most recent commits from every author, across all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58949676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --bare <url_to_repo> -- foo\ncd foo\ngit log --branches --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ad %an"')]),s._v(" --date=iso --no-merges | sort -k4,4 -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Can git filter repo create a monorepo from many repos interweaving commits by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62375689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --date-order\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --reverse   : 'rebase -i' asks for entries starting from the oldest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# --no-merges : do not mention the "merge" commits')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 's/^/pick /' : use any way you see fit to prefix each line with 'pick '")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (another valid way is to copy paste the list of commits in an editor,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         and add 'pick ' to each line ...)")]),s._v("\ngit log --reverse --no-merges --oneline --date-order |\\\n  sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/pick /'")]),s._v(" > /tmp/rebase-apply.txt\n\ngit rebase -i --root\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to include current folder name in Git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41630784",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches=master --no-merges --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H;%an;%ad;%s;$(pwd)"')]),s._v(" --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M'")]),s._v("\n\ndir=$(pwd | sed s/%/%%/g)\ngit log --branches=master --no-merges --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H;%an;%ad;%s;$dir"')]),s._v(" --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to get changes statistics per day in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27491329",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --shortstat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ci"')]),s._v(" --no-merges\n2012-09-25 10:32:03 -0700\n2012-09-25 10:55:39 -0700\n\n 33 files changed, 3759 insertions(+)\n2012-09-26 13:13:29 -0700\n\n 1 file changed, 60 insertions(+), 22 deletions(-)\n2012-10-05 14:31:02 -0700\n\n 2 files changed, 23 insertions(+), 35 deletions(-)\n2012-10-08 17:15:34 -0700\n\n 1 file changed, 27 insertions(+), 20 deletions(-)\n2012-10-11 17:08:52 -0700\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Create a patch with every commit in log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36427545",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NUM=1\nfor commit in $(git log --cherry-pick --no-merges --left-only branchB...branchA --reverse --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ndo\n  git format-patch -1 $commit --start-number $NUM\n  ((NUM++))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: git show last commits pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57886449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'- %B'")]),s._v(" --no-merges --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# First let's make sure the remote ref is up-to-date")]),s._v("\ngit fetch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then the logging itself")]),s._v("\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'- %B'")]),s._v(" --no-merges origin/feature-1..feature-1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Get all the files changed by me in one branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-help.html"}},[s._v("git help")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68803544",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bento"')]),s._v(" --no-merges\n\ngit help log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Find commits of a git branch, which were not cherry picked into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67029088",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release \n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release |\nwhile read cmt_log \ndo\n    cmt_msg=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_log}"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ $1=\"\"; print }'")]),s._v("`\n    git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" %s"')]),s._v(" master..release | grep --fixed-string -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_msg}"')]),s._v(" > /dev/null || echo ${cmt_log}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How can I see what physical hunks are not in one branch from another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38832449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick --right-only master...topic1\n\ngit log --no-merges --cherry-pick --right-only master...topic1\n\ngit log --patch --no-merges --cherry-pick --right-only master...topic1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How can I output an entire git repo to a single file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25589488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %an, %ad : %s"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your name>"')]),s._v(" --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-05-19 00:00:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-08-18 00:00:00"')]),s._v(" -p --no-merges > ~/<path to some folder>/myrepo.patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: how to show the full commit message on the merged branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21644859",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --abbrev-commit mergedBranch ^mainBranch --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: With GIT show commits older than a specific date with specific format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31164947",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges --format=format:%cd -10 --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date -d "')]),s._v("$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"201506301524"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/....$/ &/'")]),s._v(")"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: git: how to review changes done in branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27422585",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent --no-merges $(git reflog feature1|tail -1|cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f1)..feature1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Retrieve list of features from develop(s) concerned by a build on release branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65882537",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --no-merges build1..build2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"min-parents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#min-parents"}},[s._v("#")]),s._v(" 🔹 --min-parents")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to check if a merge commit contains manual changes (e.g. resolved conflicts)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45253620",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show <merge_commit_sha1>\n\ngit log -p --cc --min-parents=2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: how do I determine whether git history is linear?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41545950",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for esthetics : --oneline will output one single line per filtered commit")]),s._v("\ngit log --oneline --min-parents=2 A..G\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if output is empty : linear history")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and :")]),s._v("\ngit log --oneline --min-parents=2 A..G | wc -l\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should give you the number of merge commits between A and G")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"max-parents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#max-parents"}},[s._v("#")]),s._v(" 🔹 --max-parents")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Using Git, how can I log all commits that are merge commits between two specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21602041",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("bash$ for commit in \\\n        $(git log --format=%h --merges --max-parents=2 master ^topic); do \\\n          [[ $(git branch --contains ${commit}^2) =~ topic ]] && \\\n          echo $commit; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can i find the commit that created the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66817118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --max-parents=0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"first-parent"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#first-parent"}},[s._v("#")]),s._v(" 🔹 --first-parent")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git log to return only the commits made to the master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 75    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15878350",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Show only history of one branch in a Git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4629437",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges\n\ngit log --merges --first-parent\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I prevent foxtrot merges in my 'master' branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35962849",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copyright (c) 2016 G. Sylvie Davies. http://bit-booster.com/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copyright (c) 2016 torek. http://stackoverflow.com/users/1256452/torek")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# License: MIT license. https://opensource.org/licenses/MIT")]),s._v("\nwhile read oldrev newrev refname\ndo\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$refname"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/master"')]),s._v(" ]; then\n   MATCH=`git log --first-parent --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %P'")]),s._v(" $oldrev..$newrev |\n     grep $oldrev |\n     awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print \\$2 }'")]),s._v("`\n\n   if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$oldrev"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MATCH"')]),s._v(" ]; then\n     exit 0\n   else\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*** PUSH REJECTED! FOXTROT MERGE BLOCKED!!! ***"')]),s._v("\n     exit 1\n   fi\nfi\ndone\n\n$ ​git pull\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n\nremote: *** PUSH REJECTED BY Protect-First-Parent HOOK ***\nremote: \nremote: Merge [1f70043b34d3] is not allowed. *Current* master must appear\nremote: in the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first-parent'")]),s._v(" position of the subsequent commit. To see how\nremote: master is merging into the wrong side (not as 1st parent), try this:\nremote: \nremote:   git show --graph -s --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %d%n'")]),s._v(" \\\nremote:      1f70043b34d3 1f70043b34d3~1 origin/master\nremote: \nremote: To fix, there are two traditional solutions:\nremote: \nremote:   1. (Preferred) rebase your branch:\nremote: \nremote:       git rebase origin/master\nremote:       git push origin master\nremote: \nremote:   2. Redo the merge in the correct direction:\nremote: \nremote:       git checkout master \nremote:       git reset --hard origin/master \nremote:       git merge --no-ff 1f70043b34d3eaedb750~1\nremote:       git push origin master\nremote: \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git: Merge in branch without polluting the Master history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19122081",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph\n\ngit log --oneline --first-parent\n\neaaec50 Merge git://github.com/git-l10n/git-po\n2809258 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sb/mailmap-updates'")]),s._v("\n8ed205a git-remote-mediawiki: ignore generated git-mw\n96cb27a Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'maint'")]),s._v("\n\ngit config --global alias.l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'log --oneline --graph'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to determine last merged branch in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32323149",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent --merges -1 --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Ignoring Merged Commits when displaying git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44059105",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ you can use \ngit log origin/master.. --no-merges\n\n*   a953ca2 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/WildBranch'")]),s._v("\n|\\\n| * b5399f7 Commit to WildBranch: 1483140838\n| * 30f181d Commit to WildBranch: 1483140837\n| * 5f18ce9 NEW BRANCH: WildBranch\n* | 42554e5 Commit to master: 1483140840\n* | d512b35 Commit to master: 1483140839\n|/\n* 5f2e69e Commit to master: 1483140836  \n\n▲ so if i'm standing in a953ca2, the merge commit, the first parent is the last commit done in master (^1 means the first parent of this commit):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2^1 -1\n42554e5 \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2^2 -1\nb5399f7\n\n▲ if you are standing in master and use the --first-parent option it will follow only those commits in the revision:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2 -4\na953ca2\n42554e5\nd512b35\n5f2e69e\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v('7. Usage scenario: Get "git log --tags" of temporarily added remote')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66220970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" does not do what you think : it does as if you listed all tags on the command line ; so :\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log last-stable my/tag v1.0.1 v1.0.2  # whatever tags you have on your repo\n\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" tmp/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log tmp/master last-stable my/tag v1.0.1 v1.0.2\n\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can also filter tags using patterns :")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# will list tags "v1.0.1" and "v2.0.3", but not "testing"')]),s._v("\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags/v*"')]),s._v(" --simplify-by-decoration\n\n▲ If you have tags on forked branches, --simplify-by-decoration will also keep the merge commits in the list of commits ; if you are looking for tags only on the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),s._v(" branch, add --first-parent :\ngit log --first-parent --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# this will give you "the last tag on the branch" (for some definition of "last tag")')]),s._v("\ngit describe --tags --abbrev=0 tmp/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can combine it with 'git log' :")]),s._v("\ngit log -1 $(git describe --tags --abbrev=0 tmp/master)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to understand git log --graph")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20200566",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('   git log -p -m --first-parent\n       Shows the history including change diffs, but only from the "main \n       branch"   perspective, skipping commits that come from merged\n       branches, and showing full diffs of changes introduced by the merges. \n       This makes sense only when following a strict policy of merging\n       all topic branches when staying on a single integration branch.\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: List commits BEFORE the given Commit ID")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55549255",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --first-parent cda8 -- dir1/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get a merge log for a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1420332",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ With modern git (if you have version 1.6.4 or newer you have this) you can use simply\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")])]),s._v("\n\n▲ If you want to see only merges into current branch, you can add --first-parent option:\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: git log, only commits that happened on branch pre-merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37607288",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges --first-parent topic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to get git logs of only current branch and just a merged commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50840786",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --first-parent 8e146445d19b.. --reverse -M --numstat --summary --pretty=format:commitId:%H%ndate:%cd%nsubject:%s%nauthor:%an%n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Isolate commit history to specific branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41421793",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Lots of background (sorry, it's kind of long)\nA--C--E   <-- master\n \\\n  B--D    <-- develop\n\n     tag: T\n        |\n        v\n        F--G   <-- tempbranch\n       /\nA--C--E   <-- master\n \\\n  B--D    <-- develop\n\n     tag: T\n        |\n        v\n        F--G\n       /\nA--C--E   <-- master\n \\\n  B--D    <-- develop\n\nA--C--E--F   <-- master\n \\      /\n  B--D-´   <-- develop\n\nA--C--E--F   <-- master\n \\      /\n  B--D-´--G   <-- develop\n\n▲ Squash "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merges"')]),s._v(" (end of background)\nA--C--E--F   <-- master\n \\\n  B--D   <-- develop\n\nA--C--E--F   <-- master\n \\\n  B--D----G--H--I   <-- develop\n\n▲ What to do instead, maybe\ngit log master\n\ngit log --first-parent master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Show commits on a specific feature branch after branch is merged and deleted")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55106493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent  $merge^2\n\nredmerge=`git rev-parse :/Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'red'")]),s._v('"`\ngit log --first-parent  $redmerge^2\n\ngit log --first-parent  $(git rev-parse '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\":/'red'\"")]),s._v(")^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: View git log (with merges) for only certain branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22824736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You're not seeing "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra"')]),s._v(" branches\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -14")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt   <===== Here is master\n*   03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n|\\\n| * a765ecc (bar) Add quack.txt         <===== Here is bar\n| * 80efc7c Add moo.txt\n* | b1bc4f1 Add junk\n|/\n| * acb480b (temp) Add stuff after merge commit <===== Here is temp\n| *   1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| |\\\n| | * 06c40a1 (foo) Add even more junk          <===== Here is foo\n| | * ea3ea46 Add foo.txt\n| |/\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ You probably don't want to use --no-merges for this...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merges master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -11")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* a765ecc (bar) Add quack.txt          <===== Here is bar\n* 80efc7c Add moo.txt\n| * b1bc4f1 Add junk                   <===== Which branch does this belong to?\n|/\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 06c40a1 (foo) Add even more junk             <===== Here is foo\n| * ea3ea46 Add foo.txt\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ Prefer --first-parent instead\ngit log --oneline --graph --decorate --first-parent origin/master origin/topic1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -9")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* 03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n* b1bc4f1 Add junk\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to say HEAD~20 if exists, else first commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52741118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout $( git log -n 20 --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --first-parent | tail -n 1 )\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Can I get a list of all pull requests related to a specific file/directory path in GitHub?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42498685",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --first-parent -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How can I merge a branch from another repo without adding the branch's full commit history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55925810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to find merge commits from topic branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47147003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --first-parent --grep feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Identifying actual branch names of git commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52009689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --first-parent master\n\ngit log master..yourbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Version Control For One File Across Multiple Directories, Avoiding Conflict With Existing Git Repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50428214",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add acstyle u://r/l\ngit fetch acstyle\n\ngit checkout acstyle/payload -- .\n\ngit merge acstyle/payload    # initially with `--allow-unrelated-histories`\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from any clean checkout")]),s._v("\ngit checkout --orphan payload\ngit reset --hard\ngit checkout master -- acstyle.sty\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"acstyle-payload-v1.0"')]),s._v("\n\ngit checkout payload\ngit merge -s ours --no-commit master    # add `--allow-unrelated-histories` the first time\ngit checkout master -- acstyle.sty      \ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"acstyle-payload-v1.1"')]),s._v("\n\ngit checkout :/^acstyle-payload-v0.9a -- acstyle.sty\n\ngit log --oneline ---first-parent acstyle/payload\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Push repository to new remote, one commit at the time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53419840",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do \n    git push origin $c:master\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* d2d3264 (HEAD -> master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc (origin/master) initial commit\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master\n6765170\nca354e5\nf3c54df\n9171144\nd2d3264\n\n\ntobi@TOBIAS-PC:/mnt/d/test/git/r$ for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do git push origin $c:master; done\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 235 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   c1873cc..6765170  6765170 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   6765170..ca354e5  ca354e5 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   ca354e5..f3c54df  f3c54df -> master\nCounting objects: 8, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (6/6), done.\nWriting objects: 100% (8/8), 762 bytes | 0 bytes/s, done.\nTotal 8 (delta 0), reused 0 (delta 0)\nTo ../b\n   f3c54df..9171144  9171144 -> master\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 274 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   9171144..d2d3264  d2d3264 -> master\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* d2d3264 (HEAD -> master, origin/master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: git: How to get more information (when, sha) about a branch merging into another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67406532",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent master..develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: how can I use git log to use parent #1 to generate the patch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61844194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --pretty=oneline --first-parent --decorate=no -G keyword origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Show time of merge for a file in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40588999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --first-parent --merges -1 -- path/to/it\n\ngit rev-list --first-parent --merges -1 @ -- path/to/it \\\n| git show -m --name-only --stdin\n\ngit show -m --name-only $(git rev-list --first-parent --merges -1 @ -- path/to/it)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('26. Usage scenario: How to make "git merge --log" stop flattening merge commits')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52669170",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD  # with e.g. `-10` to limit to 10\n\n:/^\\*/+,+!git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  \\%s'")]),s._v(" --first-parent ..MERGE_HEAD\n\ncase $2 in\nmerge)\n        git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD >${tempfile=`mktemp`}\n        sed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\*/,/^$/ { //!d }; /^\\*/ r '")]),s._v("$tempfile  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n        rm $tempfile\n        ;;\nesac\n\ncase $2 in\nmerge)\n        git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD \\\n        | sed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\*/,/^$/ { //!d }; /^\\*/ r /dev/stdin'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n        ;;\nesac\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Get remote git-svn branch for current local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13787014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep git-svn-id: --first-parent -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"not"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#not"}},[s._v("#")]),s._v(" 🔹 --not")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to see all local commits which are not pushed to the remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 151    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30601779",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit log origin/main..main\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: How to list all branches that were created from a specific branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56370858",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path  --branches --not $(git merge-base --all master develop) \\\n        --pretty=%D  --simplify-by-decoration --decorate-refs=refs/heads\n\ngit log --graph --decorate-refs=refs/heads --oneline \\\n         --branches --simplify-by-decoration \\\n         --ancestry-path --boundary --not `git merge-base master develop`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Github- How can I find unpublished branches on my local machine?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27105594",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit branch --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: List all changes on file on all remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70150913",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --not develop -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/path/to/file'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Php get Commit list of specfic Git Branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44219193",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("x--x--x--X           (master)\n          \\\n           --o--o--O (anotherBranch)\n\ngit log anotherBranch = O-o-o-X-x-x-x\n\ngit checkout mybranch\ngit log --all --not $(git rev-list --no-walk \\\n    --exclude=refs/heads/mybranch \\\n    --exclude=HEAD \\\n    --all)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Finding merge commits from tag across branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45136163",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --source --ancestry-path  master idea-2017 idea-2016.3 --not 1.6.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[s._v("#")]),s._v(" 🔹 --all")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find a deleted file in the project commit history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1917    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7203551",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you do not know the exact path you may use\ngit log --all --full-history -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/thefile.*"')]),s._v("\n\n▲ If you know the path the file was at, you can do this:\ngit log --all --full-history -- <path-to-file>\n\ngit show <SHA> -- <path-to-file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to find the Git commit that introduced a string in any branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 802    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5816177",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S <whatever> --source --all\n\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello world'")]),s._v(" --source --all\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dude, where\'s my car?"')]),s._v(" --source --all\n\ngit log -G "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^(\\s)*function foo[(][)](\\s)*{$"')]),s._v(" --source --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I show the name of branches in "),e("code",[s._v("git log")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 344    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1841429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to copy commits from one Git repo to another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the old repo as a remote repository ")]),s._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the old repo commits")]),s._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# examine the whole tree")]),s._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),s._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check your local repo is correct")]),s._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# send your new tree (repo state) to github")]),s._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the now-unneeded reference to oldrepo")]),s._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#create LICENSE file, edit, add content, save")]),s._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit'")]),s._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure there are no unsaved changes")]),s._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pull the latest version from github")]),s._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move their master branch pointer to the one you published to github.")]),s._v("\ngit reset --hard origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: List all commits (across all branches) for a given file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 136    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7466798",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all -- path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to find the latest commits in one git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9679564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -10 --all --date-order\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Git find out the last commit i pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15552121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you mean the last commit you pushed to the master branch then, assuming your remote is origin:\ngit rev-parse origin/master\n\n▲ This will show you the commit ID of the tip of the master branch of the origin origin, as your local repository is currently aware.  This may mean that the commit is someone else's commit, if someone else pushed commits after you did and you have since fetched that branch.\ngit show -p origin/master\n\ngit log --pretty=oneline --abbrev-commit --graph --decorate --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Searching for a file in all Git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8392232",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --name-only --pretty=format: | sort -u | grep _robot.php\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How do I determine the source branch of a particular branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6427205",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream <branch> [<start-point>]\n\ngit diff <mybranch>..master # commits in master that are not in mybranch\ngit diff <mybranch>..2.2 # commits in 2.2 that are not in mybranch\n\ngitk --all\ngit log --graph --color --decorate --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to merge git commits in the develop branch to a feature branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17860574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Search git Commits Using Regex")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15120469",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# case insensitive")]),s._v("\ngit log --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Build 0051'")]),s._v(" -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Git log: log of future revisions")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9361863",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all\n\ngit log ..@{1}      # assuming you just switched from the future master\ngit log ..abcdef    # assuming abcdef is the newest future commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v('14. Usage scenario: How to know which branch a "git log" commit belongs to?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7131735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --source")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to get birds eye view of git tree with just branch names, not individual commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8137582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --all --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to find 'lost' code with a constant in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4247614",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all -p -SFOOBAR\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How do you search for multiple words in commit messages?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52065732",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v("\n\ngit log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v(" --all-match\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to show local branch history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14889649",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Git find all binary files in history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42705051",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --numstat \\\n    | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^-'")]),s._v(" \\\n    | cut -f3 \\\n    | gsed -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|(.*)\\{(.*) => (.*)\\}(.*)|\\1\\2\\4\\n\\1\\3\\4|g'")]),s._v(" \\\n    | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to find a specific change in a specific file in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14258484",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all -S oldvalue filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Able to recover a deleted branch using git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18465321",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Git command to find what branches were merged into current branch and when")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14205847",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --full-history --all --color \\ \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"')]),s._v("\n\ngit log --graph --full-history --all --color \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s \\')]),s._v("\n%Cgreen(%cr) %C(bold blue)<%an>%Creset'\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('23. Usage scenario: How to "git log" the entire repository and not just the branch you are on?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7758413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --decorate --pretty=oneline --abbrev-commit\n\n[alias]\n  history = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log --all --graph --decorate --pretty=oneline --abbrev-commit"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to combine two unrelated git repositories, preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34861819",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git init\n\ngit remote add -f oldRepoA ../oldRepoA\ngit remote add -f oldRepoB ../oldRepoB\n\ngit log --all --oneline --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%at %H"')]),s._v(" | sort | cut -c12- | \n    xargs -I {} sh -c \n        'git format-patch -1 {} --stdout | \n         git am --committer-date-is-author-date'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to get all commit messages in a repo by one author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27324312",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --author <author regex>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How can I get/list/see all the descendants of a commit with git (or gitk)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23546539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all BRANCH~1..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n* 20db61f 2\n* 3923af1 1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n* 65b716e (c) c-5\n* ebe2a0e c-4\n* 2ed9abe (b) b-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-1'")]),s._v("\n[z (root-commit) bc0c0bb] z-1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-2'")]),s._v("\n[z 1183713] z-2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* 1183713 (HEAD -> z) z-2\n* bc0c0bb z-1\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master~1..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n* 338432a (c) c-5\n* 2115318 c-4\n* 43a34dc (b) b-4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Creating a 'git log' alias with formatting")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18875386",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("glog ()\n{\n        git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n}\n\nglog ()\n{\n    if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" ]; then\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n    else\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\n    fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Git: how to get a list of all revisions since some commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4340736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list ^bbbbbbb branches...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("chris@zack:~/git-test$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n* 8daff2c f      <-- test\n* 5f57b15 d\n| * 764a725 e    <-- master\n| * 5889800 c\n|/\n* 294908b b\n* 975d652 a\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("chris@zack:~/git-test$ git rev-list ^294908b master test")]),s._v("\n8daff2c59d8cb966bf399de5027fae85ee016081\n5f57b1524afeafbf37984f84fa5fe24ee0ac8501\n764a7256d40dbefdb6278443fb80266f00358a37\n58898005214607e5c53b45954a98891ea599c037\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to find all my commits made in last few days?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16278179",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"chakra"')]),s._v(" --since=4.days --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: git: How to get the latest commit on a specific file, regardless of branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15810516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --date-order --all -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How can I limit the log to all the descendants of a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31266614",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How to limit the log to all the descendants of a given revision\ngit log --all --ancestry-path ^<rev>\n\ngit log --all --ancestry-path ^D\n\ngit log --all --ancestry-path ^X\n\n▲ What's wrong with git log --all --ancestry-path D^!?\ngit log --all --ancestry-path D^!\n\ngit log --all --ancestry-path D^!\n\ngit log --ancestry-path D ^C feature master\n\ngit log --ancestry-path ^C feature master\n\ngit log --ancestry-path ^D feature master\n\ngit log --all --ancestry-path ^D\n\n▲ Test\n$ mkdir gittest\n$ cd gittest/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A\\n"')]),s._v(" > README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch feature")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout feature")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* e234427 (HEAD -> feature) Y\n* cf98c6b X\n| * b3d493a (master) E\n| * e2bb266 D\n|/  \n* dfe0267 C\n* 0be7d42 B\n* 674356e A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ = D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" master~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" feature~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ == D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^master~")]),s._v("\nb3d493a E\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^feature~")]),s._v("\ne234427 Y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: git-log missing merge commit that undid a change")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56556222",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\n▲ Long\n▲ git log without History Simplification\ngit log --all --decorate --oneline --graph\n\n*   cc7285d (HEAD -> master, branch) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into branch\n|\\  \n| * ad686b0 changed x to x2, z to z2\n* | dcaa916 changed y to y2, z to z3\n|/  \n* a222cef initial commit\n\ngit log dcaa916\n\n▲ git log with History Simplification\n...--F--G--H--...\n\n...--K\n      \\\n       M\n      /\n...--L\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^1 cc7285d")]),s._v("\nM       z\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^2 cc7285d")]),s._v("\nM       x\nM       y\nM       z\n\n▲ Caveats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Visualize git branch topology only, with no commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51838603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --oneline --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: How can I search my ENTIRE git repo's commit history for a string change?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54567708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"theirwebsite"')]),s._v("\n\ngit log --all -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"theirwebsite"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: git rebase branch with all subbranches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3053488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %ae:%ci"')]),s._v("\n* 53ca31a robert.meerman@gmail.com:2010-06-16 13:50:12 +0100\n* 03dda75 robert.meerman@gmail.com:2010-06-16 13:50:11 +0100\n| * a8bb03a robert.meerman@gmail.com:2010-06-16 13:49:46 +0100\n| * b93e59d robert.meerman@gmail.com:2010-06-16 13:49:44 +0100\n|/\n* d4214a2 robert.meerman@gmail.com:2010-06-16 13:49:41 +0100\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" 03dda75")]),s._v("\n* testbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: How do I reconnect a Git branch that has separated from master? (And duplicated its parents?)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9565850",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: How can I write a git alias that takes a string as an argument")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49043250",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("search = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { str="')]),s._v("$*"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; echo "')]),s._v("$str"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"; git log --all --grep=\\"$str\\"; }; f"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How to fix a wrong merge in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44285140",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master  // switch to master\ngit checkout -b fix_it  // create a fix_it branch, and switch to it\ngit rebase -i <hash_right_before_bad_commit> // cherry-pick all the good commits - leave out the bad one\n\ngit checkout master\ngit branch old_master // create an old_master branch in case you want to rollback\ngit reset fix_it  // now master has the new fixed history (without the bad commit)\n\n// double-check your branches and make sure everything looks ok (and the bad commit is gone from your history)\ngit log --graph --all --oneline --decorate-short\n\n// if everything looks good, push the changes to your remote repository\ngit push origin master --force // you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ll need to force it since you'")]),s._v("ve re-written history\n\n// clean up the tmp branches\ngit branch -D fix_it, old_master\n\n// inform your team members to force get master (or just to be safe, just re-clone repository).\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How to hide remote branches without deleting them from remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68573305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --exclude=refs/remotes/* --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: Restore files in git repo without commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22273445",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Anyway, if you committed your files at some point, then they are probably not lost. Are you sure you don't have them on any branch? Check this first:\ngit log --graph --decorate --all --oneline\n\n▲ If you don't see your commits, then you can try to recover deleted files with:\ngit fsck --lost-found\n\nChecking object directories: 100% (256/256), done.\nChecking objects: 100% (3/3), done.\ndangling blob 058a46ad6fec7b6ee95710eb06daa0b8169a5da0\ndangling blob f1d509348c7689f0f127d9eba5324db8221d5603\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: How to find the git object id of an object with a known hash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44858055",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('git log --all --pretty=format:%H -- <path> | \\\n xargs -n1 -I% sh -c "git ls-tree % <path> | \\\n grep -q <hash> && echo %"\n\nvonc@bvonc MINGW64 ~/data/git/seec (master)\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%H -- seec.go | xargs"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -I")]),s._v("% sh"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -c")]),s._v(' "git ls-tree % seec.go|\\')]),s._v('\ngrep -q a7320d8 && echo %"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: Search for a text accross all revision of a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54254297",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ngit log -i -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ngit log --all -i -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -S")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" -- foo.rb\n\ncommit 53106e9cd319a2d8f960a3bbf2731acd0699a54f (feature/x)\nAuthor: name <email>\nDate:   Fri Jan 18 13:59:32 2019 +0100\n\n    Added word\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: GITLens switch to commit made my newer commits disappear")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[s._v("git switch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68666522",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches\n\ngit log --all\n\ngit switch main\n\ngit branch develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Forgot branch name where code was committed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24829245",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"class Edge"')]),s._v(" --source --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: Git search repo for the names of all files that have ever contained a string")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17346602",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p -Sstring --all | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^---\\|^+++'")]),s._v(" | grep -v /dev/null \\\n                          | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s%^\\(---\\|+++\\) [ab]/%%'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: How to split a git repository into recent and older commits at a specific commit point, preserving branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48396032",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First create a branch for the historical commits\ngit branch history $TRUNCPOINT\ngit push project-history history:master\ngit push project-history A\n\ngit log --graph --oneline --decorate --all\n* fdc8f84 (A) branchA a1\n| * 7237a3e (HEAD -> master) fourth\n| * 55be55d third\n|/  \n* 26555d8 second\n* 5a68ca2 first\n\n▲ Create a base commit to serve as the parent for the recent commits\nMESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository"')]),s._v("\nBASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n▲ Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\ngit filter-branch -- --all\ngit push project-recent master\ngit push project-recent B\n\ngit log --graph --oneline --decorate --all\n* 2335aeb (B) branchB b2\n* 2bb7ea3 branchB b1\n| * 83c3ae9 (HEAD -> master) sixth\n|/  \n* 25931c5 fifth\n* 1e1e201 fourth\n* a7f3373 Get history from historical repository\n\n▲ Fully reproduced example bash script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nWORKDIR=${PWD}\n\ncreate_repos () {\n    rm -rf repo-split-example repo-split-recent repo-split-history\n    # Create the repo to be split\n    example_repo\n\n    # Create the repo to contain the historical commits\n    HISTREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-history"')]),s._v("\n    mkdir ../repo-split-history\n    cd ../repo-split-history/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-history $HISTREPO\n\n    # Create the repo to contain the recent commits\n    RECEREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-recent"')]),s._v("\n    mkdir ../repo-split-recent\n    cd ../repo-split-recent/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-recent $RECEREPO\n}\n\nexample_repo () {\n    # Part I: set up a test repo with our example commits\n    mkdir repo-split-example\n    cd repo-split-example/\n    git init\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We want to split the repository into project-recent and project-history portions, following the instructions at https://git-scm.com/book/en/v2/Git-Tools-Replace., but also including branches."')]),s._v(" > README.md\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n\n    git checkout -b A HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch A change."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchA a1"')]),s._v("\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Third commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"third"')]),s._v("\n    TRUNCPARENT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fourth commit."')]),s._v(" >> README.md \n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fourth"')]),s._v("\n    TRUNCPOINT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fifth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fifth"')]),s._v("\n    FIFTH=`git rev-parse HEAD`\n\n    git checkout -b B HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b1"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b1"')]),s._v("\n    B1=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b2"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b2"')]),s._v("\n    B2=`git rev-parse HEAD`\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sixth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sixth"')]),s._v("\n\n    # Now we have a repo with the requisite structure, ready to be split\n    git log --graph --all --oneline --decorate\n}\n\n\nsplit_repo () {\n    # Part II: Split the git repo into historical and current halves at $TRUNCPOINT\n    # Following guidelines at https://git-scm.com/book/en/v2/Git-Tools-Replace\n\n    # First create a branch for the historical commits\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Branching history at $TRUNCPOINT"')]),s._v("\n    git branch history $TRUNCPOINT\n    git log --graph --oneline --decorate history A\n\n    # Now copy the history repo to the remote HISTREPO repository\n    git push project-history history:master\n    git push project-history A\n\n    # Now to split the repo to get the recent history from TRUNCPOINT to HEAD of master\n    # Create a base commit for the new new recent history\n    MESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository at $HISTREPO"')]),s._v("\n    BASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n    # Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\n    git filter-branch -- --all\n\n    # Finally, push the current rewritten master and associated branches to a new repository\n    git push project-recent master\n    git push project-recent B\n}\n\ncreate_repos\nsplit_repo \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: Count how many commits have modified a file extension")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51381828",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log :/*.txt :/**/*.txt\n\ngit log --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --full-history --format=%H :/*.txt :/**/*.txt |wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How to find and restore one single file from git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24981768",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all -- folder/other-folder/file_name.txt\n\ngit log --all -- */file_name.txt\n\ngit checkout (commit hash)^ -- folder/other-folder/file_name.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: Getting the last commit date from a remote repo without cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67720640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("ssh remote.server /bin/bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cd /path/to/remote/repo && git log --all -1 --format=%cd'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: Git command to get list of all committers to files containing specific text")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-grep.html"}},[s._v("git grep")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54790538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("files=`git grep -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"searh string"')]),s._v("`\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an <%ae>'")]),s._v(" -- $files | sort -u\n\ngit log --all --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an <%ae>'")]),s._v(" -- `git grep -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"search string"')]),s._v("` | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: How to override a git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42931868",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto,yellow)commit %H%C(auto,green bold)%d%Creset%nAuthor: %an%nDate: %ad%n%n%s%n'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: Git branches cannot see changes after rebase of master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25786196",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: Commit on new branch isn't visualized")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15014114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: Github showing an incorrect diff between main branch and PR branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63604391",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/pmacaluso3/merge_conflicts")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'merge_conflicts'")]),s._v("...\nremote: Enumerating objects: 18, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (15/15), done.\nremote: Total 18 (delta 1), reused 13 (delta 0), pack-reused 0\nUnpacking objects: 100% (18/18), done.\n$ cd merge_conficts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/head:pr2")]),s._v("\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/head -> pr2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   7b4d901 (HEAD -> main, origin/main, origin/HEAD) Merge pull request #3 from pmacaluso3/testing-merge-conflicts\n|\\  \n| *   8941f5a (origin/testing-merge-conflicts) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" into testing-merge-conflicts\n| |\\  \n| |/  \n|/|   \n* |   5f144f2 Merge pull request #1 from pmacaluso3/pete/addition\n|\\ \\  \n| * | bffd4d1 addition!\n|/ /  \n| * 660b014 testing\n|/  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show 0283a25 | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@/ /'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa")]),s._v("\nAuthor: famousPete <pete.macaluso generalassemb.ly>\nDate:   Wed Aug 26 13:37:10 2020 -0400\n\n    initial\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..45b983b\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/README.md")]),s._v("\n @ -0,0 +1 @@\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+hi")]),s._v("\ndiff --git a/main.js b/main.js\nnew file mode 100644\nindex 0000000..e69de29\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/merge:temp")]),s._v("\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/merge -> temp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v(" temp")]),s._v("\n*   00e1eb0 (temp) Merge 0bb0d7f5b28f8817564f3acff0ca95a1622ea27d into 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa\n|\\  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: Git: How to checkout all deleted files through whole history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55322389",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --diff-filter=D --name-only --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" | sort | uniq\n\ngit log --all --diff-filter=D --name-only --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" master..super-feature | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: Search all branches for a string but limit commits to a specific author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33152278",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --author=name_of_author\n\ngit log --all --author=name_of_author | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'stuff'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: Print git log without commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24431045",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate -10 --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cred%h%Creset%C(yellow)%d%Creset"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: Git branching previous commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19335565",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard master\ngit push -f -u origin master\ngit checkout backupRestore\ngit push -f -u origin backupRestore\n\ngit log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'")]),s._v(" --abbrev-commit --date=relative --branches --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: Removing all deleted files from git repo history w search command")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37759578",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --pretty=format: --name-only --diff-filter=D | sort -u | while read -r line; do git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf { $line }"')]),s._v(" HEAD; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: How to reverse a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43162502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --mirror [git-clone-url]\ncd [repo.git]\n./git-reverse.sh\ngit log --all --date-order --graph --decorate\n\n$ ./git-reverse.sh \nbe0923ece8f73281e5e54906c29debb852894b92 - Reversed 1 of 360 (0%)\n061bca59b29e75becbde66d2e510fc2b4059ccb2 - Reversed 2 of 360 (0%)\n6a19039e05e3a0186187d0a6943634e8499b5a65 - Reversed 3 of 360 (0%)\n7afe25e8caf93eb7107471a1bd078d4adc3f6999 - Reversed 4 of 360 (1%)\n8b556f6fe97c5357c2328467a5ba01b77931ff82 - Reversed 5 of 360 (1%)\n71fd0883975154f48059ca929db8ccb659c5049a - Reversed 6 of 360 (1%)\n[etc...]\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" have diverged,\nand have 199 and 159 different commits each, respectively.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to merge the remote branch into yours)\n\n*********************************************\n| Git repo successfully reversed!!! :-) (-: |\n*********************************************\nTo push the reversed repo:\n  rm .git/packed-refs\n  rm -rf .git/refs/remotes\n  git push --mirror [new-git-clone-url]  \n\nWARNING:\n========\nPushing a reversed git repo is a profoundly destructive and confusing operation.\n\nYou have a full "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git clone --mirror'")]),s._v(" backup stored somewhere safe, right?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: how to check nesting structure of local git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51158688",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --simplify-by-decoration --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%d'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: How do I display all commits I've made on all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24773429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("gitk --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n\ngit log --oneline --decorate --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: Git: Creating branch out another branch showing on main level")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44981092",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-branch\ngit log --all --decorate --graph\ngitk --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: Checking which file in two branches has a later commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56516519",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --all --branches -- yourFile\n\ngit log -1 branch1...branch2 -- yourFile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: How to delete old commits without affecting history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56873396",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all <sensitive-file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: How to see a user's check-in history in TFS w/ Git repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50284134",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Option1: Filter in TFS web page\n▲ Option 2: View from local git repo\ngit log --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                              #Show commits made by the user for all branches\ngit log --all --oneline --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                    #Show each commit for one line\ngit log --oneline --decorate --graph --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" #Keep branch structure\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: Effects of Git Push")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18049668",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Now, if you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ve done a push you should not have—let'")]),s._v("s say you meant to push commit C8, but not C9—then it is possible to convince the remote to change his version of the label.  Let's say you have updated master, and remote.origin.url is something like ssh://barehost/dir/with/repo.git.  Assume you can ssh barehost to log in on the host with the --bare repo:\nedithost$ ssh barehost\nbarehost$ cd /dir/with/repo.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -2")]),s._v(" master")]),s._v("\n5e01371 (HEAD, master) commit-C9's one line description\n309b36c commit-C8's one line desc.\nbarehost$ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" master master^")]),s._v("\n\n▲ You get the same effect if you just create your own branch on edithost and force-push it, though:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("edithost$ git branch rewinder master^")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("edithost$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin rewinder:master")]),s._v("\n\nedithost (to barehost): branch label for you, master should go to 309b36c\nbarehost (to edithost): I got 309b36c but are you sure? force push?\nedithost: yep, he's sure...\nbarehost: OK, I set master to 309b36c!\n\nbarehost\nA0 -- A1 -- A2                     <-- master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone ssh://[redacted]/repo.git")]),s._v("\n$ cd repo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master old_master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --remove")]),s._v("-section branch.old_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rm somefile                 # or ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rm -rf ."')]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'somefile'")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.o'")]),s._v(" > .gitignore\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .gitignore && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C0")]),s._v("\n[master (root-commit) f09f66f] C0\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore\n\nA0 -- A1 -- A2                     <-- origin/master, old_master\nC0                                 <-- master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config branch.master.remote origin")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config branch.master.merge refs/heads/master")]),s._v("\n\nA0 -- A1 -- A2                     <-- origin/master, old_master\nC0 -- ... -- C5 -- C6              <-- master\n                     \\\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin feep:feep")]),s._v("\nCounting objects: 25, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (21/21), done.\nWriting objects: 100% (25/25), 2.27 KiB | 0 bytes/s, done.\nTotal 25 (delta 6), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n * [new branch]      feep -> feep\n\n▲ If I attempt to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git push origin master:master"')]),s._v(" I get an error,\nof course, but I can push anyway with -f:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master:master")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + dce5ffc...ae235f9 master -> master (forced update)\n\nA0 -- A1 -- A2                     <-- old_master\nC0 -- ... -- C5 -- C6              <-- origin/master, master\n                     \\\n                       C7          <-- origin/feep, feep\n\nA0 -- A1 -- A2                     [no label]\nC0 -- ... -- C5 -- C6              <-- master\n                     \\\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse old_master")]),s._v("\ndce5ffcfcee7c5c66275189c75ea68219e8f26f5\n\n$ cd ..\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone ssh://[redacted]/repo.git altrepo")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'altrepo'")]),s._v("...\nremote: Counting objects: 25, done.\nremote: Compressing objects: 100% (21/21), done.\nremote: Total 25 (delta 6), reused 0 (delta 0)\nReceiving objects: 100% (25/25), done.\nResolving deltas: 100% (6/6), done.\nChecking connectivity... done\n$ cd altrepo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")])]),s._v("\nae235f9 C6\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Some important documentation blah blah blah'")]),s._v(" > doc.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add doc.txt && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C10")]),s._v("\n[master a22a608] C10\n 1 file changed, 1 insertion(+)\n create mode 100644 doc.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master:master")]),s._v("\nCounting objects: 4, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 368 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n   ae235f9..a22a608  master -> master\n$\n\nA0 -- A1 -- A2                     [no label]\nC0 -- ... -- C5 -- C6 -- C10       <-- master\n                     \\\n                       C7          <-- feep\n\n$ cd ../repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-ff feep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C8")]),s._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n silly.c | 19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n$ echo experiment > experimental.file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add experimental.file && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C9")]),s._v("\n\nA0 -- A1 -- A2                     <-- old_master\nC0 -- ... -- C5 -- C6 _            <-- origin/master\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- origin/feep, feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git status")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch is ahead of 'origin/master' by 3 commits.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git push" to publish your local commits)')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnothing to commit, working directory clean\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master:master")]),s._v("\nTo ssh://[redacted]/repo.git\n ! [rejected]        master -> master (fetch first)\nerror: failed to push some refs to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ssh://[redacted]/repo.git'")]),s._v("\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first merge the remote changes (e.g.,\nhint: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git pull'")]),s._v(") before pushing again.\nhint: See the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Note about fast-forwards'")]),s._v(" in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git push --help'")]),s._v(" for details.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\nremote: Counting objects: 4, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom ssh://[redacted]/repo\n   ae235f9..a22a608  master     -> origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git status")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch and 'origin/master' have diverged,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and have 3 and 1 different commit each, respectively.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git pull" to merge the remote branch into yours)')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnothing to commit, working directory clean\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (HEAD, master) C9\n*   1933a04 C8\n|\\\n| * c4c3302 (origin/feep, feep) C7\n|/\n| * a22a608 (origin/master, origin/HEAD) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (old_master) A2\n* ad84d73 A1\n* cee030f initial commit\n\nA0 -- A1 -- A2                     <-- old_master\n\n                      C10          <-- origin/master\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- origin/feep, feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master:master")]),s._v("\nCounting objects: 6, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 529 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + a22a608...525b6fa master -> master (forced update)\n\nA0 -- A1 -- A2                     [no label]\n\n                      C10          [no label]\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch rewinder master^")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin rewinder:master")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + 525b6fa...1933a04 rewinder -> master (forced update)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   1933a04 C8\n|\\\n| * c4c3302 C7\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n\nA0 -- A1 -- A2                     [no label]\n\n                      C10          [no label]\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8       <-- master\n                     \\   /  \\_ C9  [no label]\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ barehost$ git branch resurrected_master dce5ffc")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch recovered_c10 a22a608")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch recovered_c9 525b6fa")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (recovered_c9) C9\n*   1933a04 (HEAD, master) C8\n|\\\n| * c4c3302 (feep) C7\n|/\n| * a22a608 (recovered_c10) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (resurrected_master) A2\n* ad84d73 A1\n* cee030f initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\nFrom ssh://[redacted]/repo\n * [new branch]      recovered_c10 -> origin/recovered_c10\n * [new branch]      recovered_c9 -> origin/recovered_c9\n * [new branch]      resurrected_master -> origin/resurrected_master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (HEAD, origin/recovered_c9, master) C9\n*   1933a04 (origin/master, origin/HEAD, rewinder) C8\n|\\\n| * c4c3302 (origin/feep, feep) C7\n|/\n| * a22a608 (origin/recovered_c10) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (origin/resurrected_master, old_master) A2\n* ad84d73 A1\n* cee030f initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: How do I list the time stamp and commit message for git comits made this year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55427111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v(" --author-date-order --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%at %s'")]),s._v(" > year.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: Merging two git repositories from some specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31133575",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir a\ncd a\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v(" > asdf.txt\ngit init\ngit add asdf.txt \ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v("\necho asdf2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a2"')]),s._v("\ncd ..\ncp -a a b\ncd b\nrm -rf .git\ngit init\ngit add asdf.txt \necho b1 >> asdf.txt \ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b1"')]),s._v("\necho b2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b2"')]),s._v("\ngit log --graph --all --oneline --decorate\ncd ../a\ngit log --graph --all --oneline --decorate\ngit fetch ../b master:b_branch\ngit log --graph --all --oneline --decorate\n\ngit checkout b_branch\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: How to add author name to a custom git alias?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53251152",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%an%x09%s"')]),s._v("\n\ngit log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%C(blue)%an%C(reset)%x09%s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: How do I get hashes of newer commits than the current one in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34908694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If so, git log --all will show this commit in the log.  Adding the --oneline and/or --decorate flags might make this output easier to search through if all you're looking for is the commit message:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n\nhash HEAD@{n}: command: message\n\n▲ Because of this very well structured format, we can use grep to make the output easier to read through. For example, if you know that you've recently checked out the commit in question you can run:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep checkout")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"phrase in commit message"')]),s._v(" --ignore-case\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"individual\\|words\\|in\\|message"')]),s._v(" --ignore-case\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: Push only part of git repository to second remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69319967",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir subtree-split\ncd subtree-split/\ngit init\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Init."')]),s._v(" --allow-empty\n\nmkdir A\ntouch A/README.txt\ngit add A/\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Readme for A."')]),s._v("\n\nmkdir B\ntouch B/README.txt\ngit add B/\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Readme for B."')]),s._v("\n\ncd ..\nmkdir subtree-B\ncd subtree-B\ngit init\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Init subtree-B."')]),s._v(" --allow-empty\n\ncd ../subtree-B\ngit log --all  --pretty=oneline --abbrev-commit\na26e5de (HEAD -> master) Init subtree-B.\n0523c62 (HEAD) Readme for B.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: How to get the latest version of code from GitHub?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65420883",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If what you are looking for is to know the latest commits that have been done on that repo you should go for\ngit log --all --oneline\n\n▲ This will list in chronological order all the commits of the repo starting from the most recent one. Instead if you want to look for a stable version of the code you should probably do\ngit pull origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: Finding the conflicting upstream merge in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17111679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --merges integration -- foobar.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: How can I find pending commits between two branches excluding already cherry-pick/merged changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44512546",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h%C(auto)%d %s %C(dim white)(%aN, %ar)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: List all changes on file on all remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70150913",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --not develop -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/path/to/file'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: How can you change the branch on a PR?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44665230",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Situation\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -5")])]),s._v("\n\n* abcd123 (HEAD -> master, origin/master, origin/HEAD) Your commit two\n* abcd123 Your commit one\n* abcd123 Some jQuery commit\n* abcd123 Some jQuery commit      \n* abcd123 Some jQuery commit                                      \n\n▲ Response\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" my-topic-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --set")]),s._v("-upstream origin my-topic-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add upstream git@github.com:jquery/jquery.git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" upstream/master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),s._v("-with-lease")]),s._v("\n\n▲ Result\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -5")])]),s._v("\n\n* abcd123 (origin/my-topic-branch, my-topic-branch) Your commit two\n* abcd123 Your commit one\n* abcd123 (HEAD -> master, upstream/master, origin/master, origin/HEAD) Some jQuery commit\n* abcd123 Some jQuery commit\n* abcd123 Some jQuery commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: how to create multiple initial commits in the master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68887007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ orphan branch merging\ngit init\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A.txt"')]),s._v("\ngit add -A;git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v("\ngit checkout --orphan "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B.txt"')]),s._v("\ngit add -A;git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),s._v("\ngit checkout master\ngit merge --no-ff --allow-unrelated-histories "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\ngit log --all --decorate --oneline --graph\n\n*   3805411 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\n|\\\n| * b2af1fd (new_branch) B\n* 70e2a07 A\n\n▲ subtree add\ngit reset 70e2a07 --hard\n\ngit subtree add -P "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B_repo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch^{}'")]),s._v("\n\nPS>git log --all --decorate --oneline --graph\n*   50f7c25 (HEAD -> master) Add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B_repo/'")]),s._v(" from commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'47b72dbdebd593bde75a80df7ff28544b2982ff1'")]),s._v("\n|\\\n| * 47b72db (new_branch) B\n* fd9bb52 A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: git log not showing latest commits in cloned repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70131517",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%Creset %Cgreen(%cd) %C(bold blue)<%an>%Creset %C(red)%d%Creset %s'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: Strategies of merging master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44146810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --all --decorate=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("83. Usage scenario: How to print initial letter of committer in git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41081122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h %Cgreen%ai %C(reset)%C(auto)(%<(3,trunc)%cN) %s %d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("84. Usage scenario: git log -- show which branches a commit applies to")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31677254",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --source --all --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit#"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("85. Usage scenario: Php get Commit list of specfic Git Branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44219193",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("x--x--x--X           (master)\n          \\\n           --o--o--O (anotherBranch)\n\ngit log anotherBranch = O-o-o-X-x-x-x\n\ngit checkout mybranch\ngit log --all --not $(git rev-list --no-walk \\\n    --exclude=refs/heads/mybranch \\\n    --exclude=HEAD \\\n    --all)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("86. Usage scenario: How to view all tags in a git repository (more than 29)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34901984",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("87. Usage scenario: Finding the branch a given branch branched from")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24770374",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global color.ui auto\ngit log --graph --oneline --all\n\ngit merge-base \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("88. Usage scenario: Git log all, display current commit differently")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38100216",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(green)%h%Creset %C(cyan)%d%Creset %s'")]),s._v("\n\ngit config --global alias.lg \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"log --all --graph --pretty='%C(green)%h%Creset %C(cyan)%d%Creset %s'\"")]),s._v("\n\ngit config --global format.pretty "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(green)%h%Creset %C(cyan)%d%Creset %s'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("*"),e("em",[s._v("89. Usage scenario: Show history of changes to files based on a wildcard e.g. "),e("em",[s._v(".vcxproj")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69175611",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- *.sln *.vcxproj\n\ngit log --reverse --oneline --all -- *.sln *.vcxproj\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("90. Usage scenario: combining unrelated git repositories retaining history/branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7576875",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b newbranch --root\ngit log --all --format=%ad%H | sort | cut -c10- | xargs -n 1 git cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("91. Usage scenario: How can I have merge conflicts between 2 branches with common ancestor?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-annotate.html"}},[s._v("git annotate")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48435060",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ 1.   List the commits which modified the conflict file in branch A and branch B separately:\ngit annotate filename A\ngit annotate filename B\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git annotate filename A")]),s._v("\ncommit A1\ncommit A2\ncommit common\ncommit A3\ncommit A4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git annotate filename B")]),s._v("\ncommit B1\ncommit B2\ncommit B3\ncommit common\ncommit B4\n\n▲ 2.   Show the git log as graph for the commits which changed the conflict file in all branches\ngit log --oneline --decorate --graph --all -- filename\n\n* commit A4 (branch A)\n* commit A3\n|   * commit B4 (branch B)\n*   | commit Common\n|  \\\n*   | commit A2\n*   | commit A1\n|   * commit B3\n|   * commit B2\n|   * commit B1\n|   |\n…   …\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("92. Usage scenario: How to check what I fetched?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56637339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch --all --dry-run\n\ngit log --oneline --graph --decorate --simplify-by-decoration --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("93. Usage scenario: How can I see commit pushed in different branches together?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60590236",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --decorate --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"branches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#branches"}},[s._v("#")]),s._v(" 🔹 --branches")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to see all local commits which are not pushed to the remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 151    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30601779",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit log origin/main..main\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Search for a code change in all branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8440215",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Rental"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: All the commits done by me in all the branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8617135",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --since=2.days --author=Johnny\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to get git to display the most recent n commits from all local branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24533044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --branches\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads\n\ngit for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads | \\\n    while read branch; do git log -1 $branch; done\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log -1 %(refname:short)'")]),s._v(" refs/heads | sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git: How to list all branches that were created from a specific branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56370858",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path  --branches --not $(git merge-base --all master develop) \\\n        --pretty=%D  --simplify-by-decoration --decorate-refs=refs/heads\n\ngit log --graph --decorate-refs=refs/heads --oneline \\\n         --branches --simplify-by-decoration \\\n         --ancestry-path --boundary --not `git merge-base master develop`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: GITLens switch to commit made my newer commits disappear")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[s._v("git switch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68666522",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches\n\ngit log --all\n\ngit switch main\n\ngit branch develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to «git log --branches» except some specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58561987",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --oneline --exclude=master --branches\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Git branching previous commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19335565",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard master\ngit push -f -u origin master\ngit checkout backupRestore\ngit push -f -u origin backupRestore\n\ngit log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset'")]),s._v(" --abbrev-commit --date=relative --branches --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to get a list of commits for specific user in any branch for several projects in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11203768",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[DEFAULT]\ngit_daylog = git log --branches --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$* 00:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$* 24:00"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git config user.email)"')]),s._v("\n\n[gitrepos/my_blog_app]\n\n[path_to_another_project_from_home]\n\n...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to include current folder name in Git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41630784",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches=master --no-merges --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H;%an;%ad;%s;$(pwd)"')]),s._v(" --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M'")]),s._v("\n\ndir=$(pwd | sed s/%/%%/g)\ngit log --branches=master --no-merges --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H;%an;%ad;%s;$dir"')]),s._v(" --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Exclude remotes in git log --all?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19442763",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches=*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Checking which file in two branches has a later commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56516519",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --all --branches -- yourFile\n\ngit log -1 branch1...branch2 -- yourFile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Git: How to retrieve all commits from all branches without notes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12844147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As you said, --all overrides --no-notes. So you may want to split --all to include only refs you want. If you just want to show all the branches:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches\n\n▲ or if you want more:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches --tags --remote \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Finding an old patch in one of many git topic branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25144313",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches ^origin/master -- $file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How can I use the command line to see which commit was pushed last")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32650070",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --branches")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oneline"')]),s._v(" --abbrev-commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Merge HEAD to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64981991",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate --online --graph --all --branches\n\ngit log --decorate --online --graph HEAD master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Github- How can I find unpublished branches on my local machine?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27105594",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit branch --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[s._v("#")]),s._v(" 🔹 --tags")]),s._v(" "),e("p",[e("strong",[s._v('1. Usage scenario: Get "git log --tags" of temporarily added remote')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66220970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" does not do what you think : it does as if you listed all tags on the command line ; so :\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log last-stable my/tag v1.0.1 v1.0.2  # whatever tags you have on your repo\n\ngit log --tags="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" tmp/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# is roughly equivalent to")]),s._v("\ngit log tmp/master last-stable my/tag v1.0.1 v1.0.2\n\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can also filter tags using patterns :")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# will list tags "v1.0.1" and "v2.0.3", but not "testing"')]),s._v("\ngit log --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags/v*"')]),s._v(" --simplify-by-decoration\n\n▲ If you have tags on forked branches, --simplify-by-decoration will also keep the merge commits in the list of commits ; if you are looking for tags only on the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"main"')]),s._v(" branch, add --first-parent :\ngit log --first-parent --decorate-refs="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/tags"')]),s._v(" --simplify-by-decoration\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# this will give you "the last tag on the branch" (for some definition of "last tag")')]),s._v("\ngit describe --tags --abbrev=0 tmp/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can combine it with 'git log' :")]),s._v("\ngit log -1 $(git describe --tags --abbrev=0 tmp/master)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How i can filter git log on multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67239138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags  --pretty=%H\\ %d --decorate-refs=refs/tags/*-signoff \\\n| grep integrationtest-signoff | grep -m1 unittest-signoff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to list tags matching pattern since X date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50563708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --tags=linux* --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month"')]),s._v(" --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Jenkins git tag as parameter sorted by date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34037930",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("def cloneDirName = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c:\\\\temp\\\\${repoName}"')]),s._v("\n\ndef gitClone = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git clone --bare ${gitURL} ${cloneDirName}"')]),s._v("\ndef gitPull = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git fetch origin +refs/heads/*:refs/heads/* --prune"')]),s._v("\ndef gitLogTags = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git log --date-order --tags --simplify-by-decoration --pretty=format:%D"')]),s._v("\n\ndef folder = new File( cloneDirName )\n\ndef proc\ndef action\ndef text\ndef list = []\n\n\nif( !folder.exists() ) {\n    folder.mkdirs()\n    proc = gitClone.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cloning"')]),s._v("\n} else {\n    // Just update the repo\n    proc = gitPull.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pulling"')]),s._v("\n}\n\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${action}..."')]),s._v("\n\nproc.waitFor()\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n}\n\naction = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getting tags"')]),s._v("\nproc = gitLogTags.execute()\nproc.waitFor()\n\ntext = proc.in.text\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${text}"')]),s._v("\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n    list.add(text)\n} else {\n    text = text.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(")\n    def m = text =~ /tag: [^,]+/\n    m.each {\n        // For debug - uncomment and run\n        // println it\n        list.add(it.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag:"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("))\n    }\n}\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\nlist.each { println it }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to find out in which tag a file change is included")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24904591",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FILEPATH=/the/path/I/want/to/Observe\ngit log --name-only --oneline --tags --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),s._v("|egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILEPATH|^ \\("')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: How to retrieve all commits from all branches without notes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12844147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As you said, --all overrides --no-notes. So you may want to split --all to include only refs you want. If you just want to show all the branches:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches\n\n▲ or if you want more:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches --tags --remote \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Display current branch name on every "),e("code",[s._v("git log")]),s._v(" line")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32468415",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -200 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%Cgreen[BRANCHNAME %h]%Creset %s"')]),s._v(" | (sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/BRANCHNAME/$(git symbolic-ref -q --short HEAD || git describe --tags --exact-match)/"')]),s._v(")\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"remotes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remotes"}},[s._v("#")]),s._v(" 🔹 --remotes")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to see all local commits which are not pushed to the remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 151    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30601779",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit log origin/main..main\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Show git commit logs only for a specific remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29990916",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   git log --remotes=myremote\n\n   git log <hash1> <hash2> <hash3> ... <hashN>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Github- How can I find unpublished branches on my local machine?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27105594",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --branches --not --remotes\n\ngit branch --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"exclude"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exclude"}},[s._v("#")]),s._v(" 🔹 --exclude")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to hide remote branches without deleting them from remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68573305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --exclude=refs/remotes/* --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to «git log --branches» except some specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58561987",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --oneline --exclude=master --branches\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Flake8 linter check through Bitbucket pipeline only on pushed files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61861339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show --name-only --pretty=format:\n\nflake8 $(git show --name-only --pretty=format:) --max-line-length=180 --ignore=E203,W503\n\nflake8 $(git log --name-only --pretty=oneline --full-index HEAD^^^..HEAD | grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[0-9a-f]{40} '")]),s._v(" | sort | uniq) --exclude=*.yml,*.yaml,*.js,*.css,*.json,*.xml,*.md --max-line-length=180 --ignore=E203,W503\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"reflog"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reflog"}},[s._v("#")]),s._v(" 🔹 --reflog")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git: get all blobs with pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37199329",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("{\n    git rev-list --objects --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v("\n    git rev-list --objects -g --no-walk --all --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v("\n    git rev-list --objects --no-walk --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"text"')]),s._v(" \\\n        $(git fsck --unreachable |\n          grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^unreachable commit'")]),s._v(" |\n          cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f3)\n} | sort | uniq\n\ngit log --reflog -Stext\n\ngit log --reflog --grep=pattern\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can "),e("code",[s._v("git log --all")]),s._v(" miss a commit point?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44639922",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reflog\n\ngit log --reflog\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Finding change on unknown commit in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48715754",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -SINSTALLED --reflog\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"stdin"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stdin"}},[s._v("#")]),s._v(" 🔹 --stdin")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to invert "),e("code",[s._v("git log --grep=<pattern>")]),s._v(" or How to show git logs that don't match a pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\n\nif (( $# < 1 )); then\n  echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: $0 pattern [<since>..<until>]"')]),s._v("\n  exit 1\nfi\n\npattern=$1\nshift\n\ngit log --format=%H $@ |\n  grep -v -f <(git log --format=%H "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--grep=$pattern"')]),s._v(" $@) |\n  git log --pretty --stat --stdin --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep A tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep C tmp~2..tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stdin")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-walk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline </dev/null")]),s._v("\n83052e62f0dc1c6ddfc1aff3463504a4bf23e3c4 Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to find git log messages with more than one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11829856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H<msgst>%b<msge>'")]),s._v(" \\\n| fgrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst><msge>'")]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst>'")]),s._v(" | cut -b1-40 \\\n| git log --stdin --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Filter git log by author or branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53683157",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("(git rev-list --branches=staging*;git rev-list --all --author=my_name) \\\n| git log --stdin --no-walk --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do I pass a range of commits to git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37330563",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15"\'')]),s._v(" | \\\n    cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 4 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15" && !a[$4]++ { print $4 }\'')]),s._v(" | \\\n    git log --no-walk --stdin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git - Get merged timestamp based on commit id")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37820913",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.merge-commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f(){ for r in $(git rev-list ${2:-HEAD} --first-parent); do ! git merge-base --is-ancestor $1 $r && git rev-list --first-parent $r..${2:-HEAD} --reverse | head -1 | git log --stdin -1 ${*:3} && break; done; }; f'")]),s._v("\n\ngit merge-commit commit\ngit merge-commit commit another-branch\ngit merge-commit commit another-branch --format=fuller\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"cherry-pick"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cherry-pick"}},[s._v("#")]),s._v(" 🔹 --cherry-pick")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git compare two branches which contains some common commit with different hash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54082277",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick develop...origin/release\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: GIT show all commits from branch missing in master using git cherry and format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39025861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simplifying: --no-walk and sed tricks\ngit cherry master branch_name | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^+"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //'")]),s._v(" | xargs -I {} \\\n    git --no-pager log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short -1 {}\n\ngit log --no-walk --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short \\\n    $(git cherry master branch_name | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //p'")]),s._v(")\n\n▲ But in fact, it's all built in\ngit log --right-only --cherry-pick --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$format"')]),s._v(" master...branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Create a patch with every commit in log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36427545",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NUM=1\nfor commit in $(git log --cherry-pick --no-merges --left-only branchB...branchA --reverse --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ndo\n  git format-patch -1 $commit --start-number $NUM\n  ((NUM++))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I see what physical hunks are not in one branch from another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38832449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick --right-only master...topic1\n\ngit log --no-merges --cherry-pick --right-only master...topic1\n\ngit log --patch --no-merges --cherry-pick --right-only master...topic1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Find commits of a git branch, which were not cherry picked into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67029088",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release \n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release |\nwhile read cmt_log \ndo\n    cmt_msg=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_log}"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ $1=\"\"; print }'")]),s._v("`\n    git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" %s"')]),s._v(" master..release | grep --fixed-string -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_msg}"')]),s._v(" > /dev/null || echo ${cmt_log}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"left-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#left-only"}},[s._v("#")]),s._v(" 🔹 --left-only")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Create a patch with every commit in log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36427545",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NUM=1\nfor commit in $(git log --cherry-pick --no-merges --left-only branchB...branchA --reverse --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ndo\n  git format-patch -1 $commit --start-number $NUM\n  ((NUM++))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Find commits of a git branch, which were not cherry picked into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67029088",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release \n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release |\nwhile read cmt_log \ndo\n    cmt_msg=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_log}"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ $1=\"\"; print }'")]),s._v("`\n    git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" %s"')]),s._v(" master..release | grep --fixed-string -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_msg}"')]),s._v(" > /dev/null || echo ${cmt_log}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"right-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#right-only"}},[s._v("#")]),s._v(" 🔹 --right-only")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: GIT show all commits from branch missing in master using git cherry and format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39025861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simplifying: --no-walk and sed tricks\ngit cherry master branch_name | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^+"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //'")]),s._v(" | xargs -I {} \\\n    git --no-pager log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short -1 {}\n\ngit log --no-walk --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short \\\n    $(git cherry master branch_name | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //p'")]),s._v(")\n\n▲ But in fact, it's all built in\ngit log --right-only --cherry-pick --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$format"')]),s._v(" master...branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I see what physical hunks are not in one branch from another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38832449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick --right-only master...topic1\n\ngit log --no-merges --cherry-pick --right-only master...topic1\n\ngit log --patch --no-merges --cherry-pick --right-only master...topic1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git log to show commits different between two branches, including common ancestor")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59273667",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --boundary --right-only --oneline master...HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"cherry"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cherry"}},[s._v("#")]),s._v(" 🔹 --cherry")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I know in git if a branch has been already rebased onto master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34337939",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --cherry master...some-branch\n\ngit checkout master~0\ngit merge some-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Check if all commits to one GIT branch have been cherry picked to another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42320306",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry otherbranch...develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git compare two branches which contains some common commit with different hash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54082277",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick develop...origin/release\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: GIT show all commits from branch missing in master using git cherry and format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39025861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simplifying: --no-walk and sed tricks\ngit cherry master branch_name | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^+"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //'")]),s._v(" | xargs -I {} \\\n    git --no-pager log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short -1 {}\n\ngit log --no-walk --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short \\\n    $(git cherry master branch_name | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //p'")]),s._v(")\n\n▲ But in fact, it's all built in\ngit log --right-only --cherry-pick --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$format"')]),s._v(" master...branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to see if changes from a branch are already done in another one?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53818182",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains BranchA\n\ngit branch --contains BranchA | grep BranchB\n\ngit log --cherry BranchB..BranchA\n\ngit log -p --cherry BranchB..BranchA > output.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Create a patch with every commit in log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36427545",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NUM=1\nfor commit in $(git log --cherry-pick --no-merges --left-only branchB...branchA --reverse --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ndo\n  git format-patch -1 $commit --start-number $NUM\n  ((NUM++))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How can I see what physical hunks are not in one branch from another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38832449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --cherry-pick --right-only master...topic1\n\ngit log --no-merges --cherry-pick --right-only master...topic1\n\ngit log --patch --no-merges --cherry-pick --right-only master...topic1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"g"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#g"}},[s._v("#")]),s._v(" 🔹 -g")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Lost my commit in GIT. Can you accidentally delete commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2496001",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g\n\ngit reflog\n\ngit branch foundit HEAD@{n}  # replace n with the correct number\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Get git stash parent commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16071758",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 commitish^\n\ngit log -1 stash@{0}^\n\ngit log -g --no-walk --parents refs/stash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How do I pass a range of commits to git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37330563",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15"\'')]),s._v(" | \\\n    cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 4 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15" && !a[$4]++ { print $4 }\'')]),s._v(" | \\\n    git log --no-walk --stdin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to sort the output of git branch by most recent checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52143385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --grep-reflog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkout:"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%gs"')]),s._v(" | cat -n | sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g"')]),s._v(" | tac\n\ngit checkout @{-nnn}\n\ngit checkout -\n\ngit config --global alias.lb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log -g --grep-reflog "checkout:" --format="%gs" | cat -n | sed -E "s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g" | tac; read -p "Aussuchen: " i; git checkout @{-$i}\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: In Git, can you retrieve the date when you pulled a certain commit from the repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23480677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -g")]),s._v(" master@{now}")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 779792a5f24bb4e8049c4f88ad752e70d4a8a080")]),s._v("\nReflog: master@{Tue Apr 22 13:34:07 2014 -0600} (me...)\nReflog message: merge origin/master: Fast-forward\nAuthor: Junio C Hamano <gitster@pobox.com>\nDate:   Mon Apr 21 11:54:29 2014 -0700\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to show log with HEAD index")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24817136",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit %H %gd"')]),s._v("\n\ngit log -g --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit %H %gd"')]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@{/~/g'")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/}//g'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to delete stash by commit sha")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39421193",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %gd'")]),s._v(" stash | \\\n    awk -v h=$hash "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == h { print $2 }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v('8. Usage scenario: Search file contents in all commits, including "abandoned" commits that aren\'t on a branch/stash')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66141014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g -S <string>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: would deleting commit delete the changes in the object repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47064566",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reset HEAD~1\n\ngit reset --hard\n\ngit log -g \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Git Squash by author - All author commits into a single commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30950421",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("SORTED_GIT_LOGS=$(git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%an %H"')]),s._v(" master..feature_a | sort -g | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f2); \\\nIFS=$(echo -en "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\b"')]),s._v("); for LOG in $SORTED_GIT_LOGS; do \\\n    git cherry-pick $LOG; \\\ndone | less\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"boundary"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#boundary"}},[s._v("#")]),s._v(" 🔹 --boundary")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to see commits that were merged in to a merge commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6191836",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to see every commits merged in the last merge you can try that :\ngit log $(git merge-base --octopus \\\n$(git log -1 --merges --pretty=format:%P)).. --boundary\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \n* 8fae178 pif2\n* 20f8ba6 init\n\n▲ If I only want commits related to the last merge I have to use git log -1 --merges --pretty=format:%P which gives me the parents of the first merge available :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%P")]),s._v("\n69f431cec7859b61d33c7503c9431ceea2aaf3e0 3db39ca3ab1e8f70462db23d94590628b5e7ad7b\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=format:%P)")]),s._v("\n8fae178666e34a480b22e40f858efd9e7c66c3ca\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log $(git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges --pretty=format:%P)).. \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n\n▲ If you're a bit perfectionist you can also do this :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log ")]),s._v("\n$(git merge-base --octopus \\\n$(git log -1 \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--merges --pretty=format:%P))..$(git log -1 --merges --pretty=format:%H) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Show all commits in a git branch since original branching point from master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20016493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log  --boundary master..\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit log  --boundary --no-merges master..\n\ngit log --boundary --no-merges --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%d %Creset%an %Cgreen%ar:%Creset %s'")]),s._v(" --graph master..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How do you find who merged a git commit into a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44306587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log <commit-id>..<branch> --ancestry-path --merges --reverse\n\ngit log --oneline --graph --decorate --ancestry-path --boundary <commit-id>..<branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git log to show commits different between two branches, including common ancestor")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59273667",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --boundary --right-only --oneline master...HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"simplify-by-decoration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simplify-by-decoration"}},[s._v("#")]),s._v(" 🔹 --simplify-by-decoration")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: list tags contained by a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 45    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2383739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --simplify-by-decoration --decorate --pretty=oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag: '")]),s._v("\n\ngit describe --tags --abbrev=0 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to get birds eye view of git tree with just branch names, not individual commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8137582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --all --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to view the number of DAGs in a Git Repository and the branches associated with each DAG?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62251393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --all --max-parents=0\n\ngit log --all --ancestry-path ^$root --pretty=%D --simplify-by-decoration\n\nroots=`git rev-list --all --max-parents=0`\nfor root in $roots; do\n        git log --all --ancestry-path ^$root --pretty=%D \\\n        | awk 1 RS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n+|, | -> '")]),s._v(" >tips-$root\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Visualize git branch topology only, with no commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51838603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --oneline --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git: find all tags, reachable from a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33275980",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --simplify-by-decoration --pretty=oneline HEAD | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^[^\\(]*\\(([^\\)]*)\\).*$#\\1#'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-e 's#,#\\n#g' | \\")]),s._v("\ngrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag:'")]),s._v(" | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#[[:space:]]*tag:[[:space:]]*##'")]),s._v("\n\ngit log \n\n// Print out the full ref name \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--decorate=full ")]),s._v("\n\n// Select all the commits that are referred by some branch or tag\n// \n// Basically its the data you are looking for\n//\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--simplify-by-decoration")]),s._v("\n\n// print each commit as single line\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=oneline")]),s._v("\n\n// start from the current commit\nHEAD\n\n// The rest of the script are unix command to print the results in a nice   \n// way, extracting the tag from the output line generated by the \n// --decorate=full flag.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Jenkins git tag as parameter sorted by date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34037930",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("def cloneDirName = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c:\\\\temp\\\\${repoName}"')]),s._v("\n\ndef gitClone = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git clone --bare ${gitURL} ${cloneDirName}"')]),s._v("\ndef gitPull = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git fetch origin +refs/heads/*:refs/heads/* --prune"')]),s._v("\ndef gitLogTags = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git log --date-order --tags --simplify-by-decoration --pretty=format:%D"')]),s._v("\n\ndef folder = new File( cloneDirName )\n\ndef proc\ndef action\ndef text\ndef list = []\n\n\nif( !folder.exists() ) {\n    folder.mkdirs()\n    proc = gitClone.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cloning"')]),s._v("\n} else {\n    // Just update the repo\n    proc = gitPull.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pulling"')]),s._v("\n}\n\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${action}..."')]),s._v("\n\nproc.waitFor()\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n}\n\naction = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getting tags"')]),s._v("\nproc = gitLogTags.execute()\nproc.waitFor()\n\ntext = proc.in.text\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${text}"')]),s._v("\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n    list.add(text)\n} else {\n    text = text.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(")\n    def m = text =~ /tag: [^,]+/\n    m.each {\n        // For debug - uncomment and run\n        // println it\n        list.add(it.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag:"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("))\n    }\n}\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\nlist.each { println it }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: how to check nesting structure of local git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51158688",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --simplify-by-decoration --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%d'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to check what I fetched?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56637339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch --all --dry-run\n\ngit log --oneline --graph --decorate --simplify-by-decoration --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Show only tagged commits in git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56939983",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -3\n\n4c37e97 fixed a bug in sub-feature F1\nd9c4599 added sub-feature F1\n06014cb changed part XYZ\n\ngit log --oneline --decorate -3\n\n4c37e97 (HEAD -> feature/abc) fixed a bug in sub-feature F1\nd9c4599 added sub-feature F1\n06014cb (tag: release/1.22) changed part XYZ\n\ngit log --oneline --decorate --simplify-by-decoration -3\n\n4c37e97 (HEAD -> feature/abc) fixed a bug in sub-feature F1\n06014cb (tag: release/1.22) changed part XYZ\neec8aad (master) some older change\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h2",{attrs:{id:"full-history"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-history"}},[s._v("#")]),s._v(" 🔹 --full-history")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find a deleted file in the project commit history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1917    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7203551",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you do not know the exact path you may use\ngit log --all --full-history -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"**/thefile.*"')]),s._v("\n\n▲ If you know the path the file was at, you can do this:\ngit log --all --full-history -- <path-to-file>\n\ngit show <SHA> -- <path-to-file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git command to find what branches were merged into current branch and when")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14205847",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --full-history --all --color \\ \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"')]),s._v("\n\ngit log --graph --full-history --all --color \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s \\')]),s._v("\n%Cgreen(%cr) %C(bold blue)<%an>%Creset'\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to repair a git history and correctly merge unrelated histories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58022936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How git log works when there is more than one commit to show\n... <-F <-G <-H ...\n\ngit log master develop origin/feature\n\n▲ Think about how the rename-detection interacts with the priority queue\nM     (merge commit)\n|\\\n| B   (parent #2)\nA     (parent #1)\n\n*   f11ea2a (HEAD -> master) merge A and B to final\n|\\  \n| * 811819b (B) B\n* 50d92c7 A\n\ngit log --name-status --oneline --follow --full-history -m -- final\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-history"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" -- final")]),s._v("\nf11ea2a (from 50d92c7) (HEAD -> master) merge A and B to final\nR100    A       final\n50d92c7 A\nA       A\n\n▲ Conclusion\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Count how many commits have modified a file extension")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51381828",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log :/*.txt :/**/*.txt\n\ngit log --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --full-history --format=%H :/*.txt :/**/*.txt |wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: GIT push not pushing commits to remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21484546",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-history // is your commit really there?")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog // operation history")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" // what are your remotes? ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote show DESIRED_REPO // do you have the remote repo you wanted to push to configured? the DESIRED_REPO?")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git how to view the change history/deletion of a function?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44033100",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S findMe --full-history -- index.php\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"simplify-merges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#simplify-merges"}},[s._v("#")]),s._v(" 🔹 --simplify-merges")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: List merge commits affecting a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10181681",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -U -m --simplify-merges --merges -- a.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: how to find shortest path between commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53545311",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log commitA..commitB\n\ngit log --simplify-merges --graph --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tformat:%C(yellow)%h%Creset\\\\ %Cgreen(%ar)%Creset\\\\ %C(blue)<%an>%Creset\\\\ %C(red)%d%Creset\\\\ %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Listing full commit history of a particular file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29718053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --simplify")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" -- baz")]),s._v("\na022556 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baz'")]),s._v("\nfdc3e37 Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" file (pull-request-bar-branch)\n3e87596 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n09e7a1b Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file (pull-request-foo-branch)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"ancestry-path"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ancestry-path"}},[s._v("#")]),s._v(" 🔹 --ancestry-path")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I find the next commit in Git? (child/children of ref)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 205    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9870218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse --ancestry-path 894e8b4e93d8f3^..master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I get/list/see all the descendants of a commit with git (or gitk)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23546539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all BRANCH~1..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n* 20db61f 2\n* 3923af1 1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n* 65b716e (c) c-5\n* ebe2a0e c-4\n* 2ed9abe (b) b-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-1'")]),s._v("\n[z (root-commit) bc0c0bb] z-1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-2'")]),s._v("\n[z 1183713] z-2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* 1183713 (HEAD -> z) z-2\n* bc0c0bb z-1\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master~1..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n* 338432a (c) c-5\n* 2115318 c-4\n* 43a34dc (b) b-4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Getting a list of all children of a given commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24231679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --graph --decorate --oneline ^A \\\n   --all $(git fsck --unreachable --no-reflogs | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2==\"commit\" {print $3}'")]),s._v(")\n\ngit for-each-ref --contains A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git: finding which merge brough commit into the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11376837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --ancestry-path --merges <commit-of-interest>..C\n\ngit log --oneline --graph --color --decorate \\\n    --ancestry-path <commit-of-interest>..C\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Find a commit merging two ancestors")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52480919",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --oneline A..D > /tmp/logA\ngit log --ancestry-path --oneline B..D > /tmp/logB\ncomm -12 /tmp/logA /tmp/logB | tail -1\n\ncomm -12 <(git log --ancestry-path --oneline A..D) <(git log --ancestry-path --oneline B..D) | tail -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do you find who merged a git commit into a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44306587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log <commit-id>..<branch> --ancestry-path --merges --reverse\n\ngit log --oneline --graph --decorate --ancestry-path --boundary <commit-id>..<branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Finding merge commits from tag across branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45136163",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --source --ancestry-path  master idea-2017 idea-2016.3 --not 1.6.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"date-order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#date-order"}},[s._v("#")]),s._v(" 🔹 --date-order")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Checking out old files WITH original create/modified timestamps")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2179876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('IFS="\n"\nfor FILE in $(git ls-files)\ndo\n    TIME=$(git log --pretty=format:%cd -n 1 --date=iso --date-order -- '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(")\n\n    # Choose 1 version.\n    # This is for BSD date (macOS, FreeBSD, etc)\n    #TIME=$(date -j -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M:%S %z'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    # And this is the equivalent for GNU coreutils date (Linux)\n    TIME=$(date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    touch -m -t "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to find the latest commits in one git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9679564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -10 --all --date-order\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git: How to get the latest commit on a specific file, regardless of branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15810516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --date-order --all -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to reverse a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43162502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --mirror [git-clone-url]\ncd [repo.git]\n./git-reverse.sh\ngit log --all --date-order --graph --decorate\n\n$ ./git-reverse.sh \nbe0923ece8f73281e5e54906c29debb852894b92 - Reversed 1 of 360 (0%)\n061bca59b29e75becbde66d2e510fc2b4059ccb2 - Reversed 2 of 360 (0%)\n6a19039e05e3a0186187d0a6943634e8499b5a65 - Reversed 3 of 360 (0%)\n7afe25e8caf93eb7107471a1bd078d4adc3f6999 - Reversed 4 of 360 (1%)\n8b556f6fe97c5357c2328467a5ba01b77931ff82 - Reversed 5 of 360 (1%)\n71fd0883975154f48059ca929db8ccb659c5049a - Reversed 6 of 360 (1%)\n[etc...]\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" have diverged,\nand have 199 and 159 different commits each, respectively.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to merge the remote branch into yours)\n\n*********************************************\n| Git repo successfully reversed!!! :-) (-: |\n*********************************************\nTo push the reversed repo:\n  rm .git/packed-refs\n  rm -rf .git/refs/remotes\n  git push --mirror [new-git-clone-url]  \n\nWARNING:\n========\nPushing a reversed git repo is a profoundly destructive and confusing operation.\n\nYou have a full "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git clone --mirror'")]),s._v(" backup stored somewhere safe, right?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"author-date-order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#author-date-order"}},[s._v("#")]),s._v(" 🔹 --author-date-order")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Getting a commit count for each file in a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51902309",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only")]),s._v("\nbenchmark/README.md\n\nbenchmark/README.md\nbenchmark/app_erb.rb\nbenchmark/app_erb.yml\nbenchmark/erb_render.rb\nbenchmark/erb_render.yml\n\nbenchmark/README.md\n\nbenchmark/README.md\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("-date-order"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=iso"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%ad somefile")]),s._v("\n2018-08-16 03:12:27 +0800\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --author")]),s._v("-date-order"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=iso"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%ad"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only")]),s._v("\n2018-07-10 16:03:51 +0000\nbenchmark/README.md\n\n2018-07-10 15:58:52 +0000\nbenchmark/README.md\nbenchmark/app_erb.rb\nbenchmark/app_erb.yml\nbenchmark/erb_render.rb\nbenchmark/erb_render.yml\n\n2018-07-10 15:51:29 +0000\nbenchmark/README.md\n\n2018-07-10 15:49:42 +0000\nbenchmark/README.md\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I list the time stamp and commit message for git comits made this year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55427111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v(" --author-date-order --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%at %s'")]),s._v(" > year.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"topo-order"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#topo-order"}},[s._v("#")]),s._v(" 🔹 --topo-order")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I fast-forward a single git commit, programmatically?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2932985",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Convert reference names to commit IDs")]),s._v("\ncurrent_commit=$(git rev-parse HEAD)\nremote_commit=$(git rev-parse remote_name/remote_branch_name)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Call git log so that it prints only commit IDs")]),s._v("\nlog=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" $remote_commit | grep $current_commit)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check the existence of the current commit in the log")]),s._v("\nif [ ! -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$log"')]),s._v(" ]\n  then echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Remote branch can be fast-forwarded!'")]),s._v("\nfi\n\nif [ ! -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$log"')]),s._v(" ]\nthen\n  # print the number of commits ahead of the current commit\n  ff_commits=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" \\\n    $current_commit..$remote_commit | wc -l)\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Number of fast-forwarding commits: $ff_commits"')]),s._v("\n\n  # fast-forward only one commit\n  if [ $ff_commits -gt 1 ]\n  then\n    next_commit=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" \\\n      $current_commit..$remote_commit | tail -1)\n    git reset --hard $next_commit\n  fi\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I merge git repositories with related branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16843402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit clone --mirror path/repo0 repo0\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj0 ; find * -maxdepth 0 ! -iname proj0 -exec mv {} proj0/ \\;)"')]),s._v(" -- --all\n\ngit clone --mirror path/repo1 repo1\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj1 ; find * -maxdepth 0 ! -iname proj1 -exec mv {} proj1/ \\;)"')]),s._v(" -- --all\n\n\ngit init new\ngit remote add proj0 path/repo0\ngit remote add proj1 path/repo1\n\ngit fetch --all\n\n\ngit checkout -b dummy remotes/proj0/BranchE\ngit checkout -b start `git log --topo-order --reverse | head -n 1 | sed s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit \\(.*\\)"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/`\ngit checkout -b merge start\n\ngit merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge"')]),s._v(" remotes/proj1/BranchE\ngit rebase --onto start start merge\n\ngit branch -D start\ngit branch -D dummy\ngit branch -m merge BranchE\n\n\ngit checkout BranchE\ngit rebase `git log --oneline | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit comment of last common commit B\'"')]),s._v(" | sed -r s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^[a-f0-9]+) .*"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/` BranchH\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git merge master into branch commit ordering")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40140366",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --topo-order\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git: how to list all files under version control along with their author date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff-tree.html"}},[s._v("git diff-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19194141",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\ntemp="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TMPDIR:-/tmp}/@@@commit-at@@@$$"')]),s._v("\ntrap "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"rm '$temp'\"")]),s._v(" 0 1 2 3 15\ngit log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H%x09%at"')]),s._v(" --topo-order --reverse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(" >"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\ncut -f1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v(" \\\n| git diff-tree -r --root --name-status --stdin \\\n| awk '\n        BEGIN {FS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),s._v("; OFS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),s._v("}\n        FNR==1{++f}\n        f==1  {at[$1]=$2; next}\n        NF==1 {commit=$1; next}\n        $1=="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D"')]),s._v("{$1="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("; delete last[$0]; next} # comment to also show deleted files\n              {did=$1;$1="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("; last[$0]=at[commit]"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),s._v("did}\n        END   {for (f in last) print last[f]f}\n ' "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v(" - \\\n| sort -t"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"`printf '\\t'`\"")]),s._v(" -k3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h2",{attrs:{id:"reverse"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[s._v("#")]),s._v(" 🔹 --reverse")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to git log in reverse order?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 392    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2798833",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I find the next commit in Git? (child/children of ref)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 205    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9870218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse --ancestry-path 894e8b4e93d8f3^..master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Remove all commits by author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39235609",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b <branch-name> <base-commit>\n\ngit log --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<name>"')]),s._v(" --invert-grep --reverse --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%H"')]),s._v(" HEAD..master | xargs git cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Get all revisions of a file in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8269815",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ni=0\ngit log --reverse --format=%H\\ %at $file |\nwhile read hash date; do\n  git show $hash:$file > $(dirname $file)/$i-$hash-$date-$(basename $file)\n  : $((i += 1))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to get git logs of only current branch and just a merged commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50840786",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --first-parent 8e146445d19b.. --reverse -M --numstat --summary --pretty=format:commitId:%H%ndate:%cd%nsubject:%s%nauthor:%an%n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: How to forget very old commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35921186",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env perl")]),s._v("\n\nuse strict;\nuse warnings;\n\nmy $MAX_AGE = 30;\nmy $BRANCH  = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(";\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\nmy($new_start,$rebase) = `git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to determine new root commit"')]),s._v("\n  unless defined($new_start) && $? == 0;\n\nchomp $new_start;\n\nmy $new_base = `echo Forget old commits | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to orphan $new_start"')]),s._v(" unless $? == 0;\nchomp $new_base;\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\nif (defined $rebase) {\n  system("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --onto $new_base $new_start HEAD"')]),s._v(") == 0\n    or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git rebase failed"')]),s._v(";\n}\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git branch -f $BRANCH HEAD"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to move $BRANCH"')]),s._v(";\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reflog expire --expire=now --all && git gc --prune=now"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: cleanup failed"')]),s._v(";\n\ngit log --graph --decorate --pretty=oneline --abbrev-commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash -xe")]),s._v("\n\nMAX_AGE=${MAX_AGE:-30}\nBRANCH=${BRANCH:-master}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\n{\n  read new_start\n  read rebase\n} < <(git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H)\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start"')]),s._v(" ]  # assertion\n\nread new_base < <(\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Forget old commits"')]),s._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$rebase"')]),s._v(" ] && git rebase --onto $new_base $new_start HEAD\n\ngit branch -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v(" HEAD\n\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v("  # avoid ending on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no branch"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: how to get git project information")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12299206",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd project1.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=medium | head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -3")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 3fdc617258b295f3fc1cdd6d6d7f9d98bd294513")]),s._v("\nAuthor: John Doe <john@microsoft.com>\nDate:   Thu Sep 6 11:34:35 2012 +0200\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Merge commits filtering by author - Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18198078",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry-pick $(git log --pretty=%H --reverse --author some_author some_commit..)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to show git log history from a given commit backwards")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18511045",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse <REV> -- <PATH/TO/FILES>\n\ngit log --reverse <c0>...<c100>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get commit after N commits from tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57910056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse -n5 2.0.0 --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" | head -n1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to list all new files added or deleted in git repo from last one week commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48471404",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git diff --name-only --diff-filter=AD  <commit sha>\n\ngit log --reverse --since=7.days --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" | head -1 \n\ngit diff --name-only --diff-filter=AD $(git log --reverse --since=7.days --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" | head -1)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Can git filter repo create a monorepo from many repos interweaving commits by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62375689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --date-order\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --reverse   : 'rebase -i' asks for entries starting from the oldest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# --no-merges : do not mention the "merge" commits')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 's/^/pick /' : use any way you see fit to prefix each line with 'pick '")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (another valid way is to copy paste the list of commits in an editor,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         and add 'pick ' to each line ...)")]),s._v("\ngit log --reverse --no-merges --oneline --date-order |\\\n  sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/pick /'")]),s._v(" > /tmp/rebase-apply.txt\n\ngit rebase -i --root\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to get changes statistics per day in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27491329",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --shortstat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ci"')]),s._v(" --no-merges\n2012-09-25 10:32:03 -0700\n2012-09-25 10:55:39 -0700\n\n 33 files changed, 3759 insertions(+)\n2012-09-26 13:13:29 -0700\n\n 1 file changed, 60 insertions(+), 22 deletions(-)\n2012-10-05 14:31:02 -0700\n\n 2 files changed, 23 insertions(+), 35 deletions(-)\n2012-10-08 17:15:34 -0700\n\n 1 file changed, 27 insertions(+), 20 deletions(-)\n2012-10-11 17:08:52 -0700\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to find the date of introduction of a given folder to the master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27755710",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse arch/alpha\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git cherry pick those commits that contain a keyword (tracking id)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28736802",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline | tac\ngit log --oneline --reverse\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("*"),e("em",[s._v("16. Usage scenario: Show history of changes to files based on a wildcard e.g. "),e("em",[s._v(".vcxproj")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69175611",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- *.sln *.vcxproj\n\ngit log --reverse --oneline --all -- *.sln *.vcxproj\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"no-walk"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-walk"}},[s._v("#")]),s._v(" 🔹 --no-walk")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to invert "),e("code",[s._v("git log --grep=<pattern>")]),s._v(" or How to show git logs that don't match a pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\n\nif (( $# < 1 )); then\n  echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: $0 pattern [<since>..<until>]"')]),s._v("\n  exit 1\nfi\n\npattern=$1\nshift\n\ngit log --format=%H $@ |\n  grep -v -f <(git log --format=%H "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--grep=$pattern"')]),s._v(" $@) |\n  git log --pretty --stat --stdin --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep A tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep C tmp~2..tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stdin")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-walk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline </dev/null")]),s._v("\n83052e62f0dc1c6ddfc1aff3463504a4bf23e3c4 Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to find git log messages with more than one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11829856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H<msgst>%b<msge>'")]),s._v(" \\\n| fgrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst><msge>'")]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst>'")]),s._v(" | cut -b1-40 \\\n| git log --stdin --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Filter git log by author or branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53683157",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("(git rev-list --branches=staging*;git rev-list --all --author=my_name) \\\n| git log --stdin --no-walk --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to get git to display the most recent n commits from all local branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24533044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --branches\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads\n\ngit for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads | \\\n    while read branch; do git log -1 $branch; done\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log -1 %(refname:short)'")]),s._v(" refs/heads | sh\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Get git stash parent commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16071758",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 commitish^\n\ngit log -1 stash@{0}^\n\ngit log -g --no-walk --parents refs/stash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Change the author for commits with specific message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39584196",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("if git log --no-walk --pretty=format:%b $GIT_COMMIT |\n    grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\[maven-plugin] '")]),s._v(" >/dev/null\nthen\n    export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new author name"')]),s._v(" ... # set exports here\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How i can filter git log on multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67239138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags  --pretty=%H\\ %d --decorate-refs=refs/tags/*-signoff \\\n| grep integrationtest-signoff | grep -m1 unittest-signoff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: GIT show all commits from branch missing in master using git cherry and format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39025861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simplifying: --no-walk and sed tricks\ngit cherry master branch_name | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^+"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //'")]),s._v(" | xargs -I {} \\\n    git --no-pager log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short -1 {}\n\ngit log --no-walk --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short \\\n    $(git cherry master branch_name | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //p'")]),s._v(")\n\n▲ But in fact, it's all built in\ngit log --right-only --cherry-pick --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$format"')]),s._v(" master...branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How do I pass a range of commits to git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37330563",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15"\'')]),s._v(" | \\\n    cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 4 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15" && !a[$4]++ { print $4 }\'')]),s._v(" | \\\n    git log --no-walk --stdin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to list tags matching pattern since X date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50563708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --tags=linux* --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month"')]),s._v(" --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to «git log --branches» except some specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58561987",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --oneline --exclude=master --branches\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How can I search though all deletions in a commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67050713",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ This part is easy enough: git log"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s main function is to walk (backwards, as Git always does) through commits, one by one, starting from some particular commit.  The default is to start from the HEAD commit, if you don'")]),s._v("t specify which commit to start from, and to keep going forever.  But if you do specify one particular commit, it will start from there—and, using -n, you can tell it how many commits to walk through, so if you set this to 1, it will "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"walk backwards"')]),s._v(" zero more times after walking through the one commit you specify:\ngit log -n 1 -p -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v(" <hash-id>\n\n▲ You can also use --no-walk to the same effect.  This is more useful if you want to examine two or three specific commits:\ngit log --no-walk -p -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'string'")]),s._v(" <hash1> <hash2> <hash3>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How do I determine whether or not a file was last changed by one of a finite set of git commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22074413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk commit1 commit2 ... commitN -- file1 file2 ... fileN\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Rewrite a git repository to change the date range of commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25200034",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--env-filter 'at=$(git log --no-walk --pretty=format:%ai $GIT_COMMIT) \\")]),s._v("\n    ct=$(git log --no-walk --pretty=format:%ci $GIT_COMMIT); \\\n    export GIT_AUTHOR_DATE=$($HOME/scripts/massage-time $at) \\\n    GIT_COMMITTER_DATE=$($HOME/scripts/massage-time $ct)'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: git log --name-status show new name of single file on rename")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63767043",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("oldsetup=`git log -1 --pretty=%h --diff-filter=D -- setup.py`\n\ngit log $oldsetup --oneline --name-status --follow -- setup.py\n\nthreads=`git log --diff-filter=ADRC --pretty=%h -- path` \n\ngit log --no-walk --name-status --oneline $threads\n\ngit log --name-status -m --oneline \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^[A-Z]/{/\\tsetup\\.py/!d;H;$!d};x;/\\tsetup\\.py/!d'")]),s._v("\n\ngit log \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^commit /!{H;$!d};x;/pattern/!d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: git show last commits pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57886449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'- %B'")]),s._v(" --no-merges --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# First let's make sure the remote ref is up-to-date")]),s._v("\ngit fetch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then the logging itself")]),s._v("\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'- %B'")]),s._v(" --no-merges origin/feature-1..feature-1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How can I use "),e("code",[s._v("git tag --list")]),s._v(" with information from "),e("code",[s._v("git log --tags")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36737928",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Php get Commit list of specfic Git Branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44219193",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("x--x--x--X           (master)\n          \\\n           --o--o--O (anotherBranch)\n\ngit log anotherBranch = O-o-o-X-x-x-x\n\ngit checkout mybranch\ngit log --all --not $(git rev-list --no-walk \\\n    --exclude=refs/heads/mybranch \\\n    --exclude=HEAD \\\n    --all)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"pretty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pretty"}},[s._v("#")]),s._v(" 🔹 --pretty")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I calculate the number of lines changed between two commits in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1343    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2528129",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git diff --stat <commit-ish> <commit-ish>\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your name"')]),s._v(" --stat <commit1>..<commit2>\n\ngit log --numstat --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Name"')]),s._v(" commit1..commit2 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NF==3 {plus+=$1; minus+=$2} END {printf(\"+%d, -%d\\n\", plus, minus)}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I make git show a list of the files that are being tracked?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 757    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15606995",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to list all the files currently being tracked under the branch master, you could use this command:\ngit ls-tree -r master --name-only\n\n▲ If you want a list of files that ever existed (i.e. including deleted files):\ngit log --pretty=format: --name-only --diff-filter=A | sort - | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Retrieve the commit log for a specific line in a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 741    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19757493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git blame"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -L")]),s._v(" 150,+11 -- git-web--browse.sh")]),s._v('\na180055a git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:36 +0100 150)            die "The browser $browser is not\na180055a git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:36 +0100 151)    fi\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 152) fi\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 153) \n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 154) case '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$browser"')]),s._v(" in\n81f42f11 git-web--browse.sh (Giuseppe Bilotta 2010-12-03 17:47:38 +0100 155) firefox|iceweasel|seamonkey|iceape)\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 156)    # Check version because firefox < 2.0 do\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 157)    vers=$(expr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$($browser_path -version)"')]),s._v(" \n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 158)    NEWTAB="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-new-tab'")]),s._v("\n5d6491c7 git-browse-help.sh (Christian Couder 2007-12-02 06:07:55 +0100 159)    test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$vers"')]),s._v(" -lt 2 && NEWTAB="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\na0685a4f git-web--browse.sh (Dmitry Potapov   2008-02-09 23:22:22 -0800 160)    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$browser_path"')]),s._v(" $NEWTAB "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(" &\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=short"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -L")]),s._v(" 155,155:git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 81f42f11496b9117273939c98d270af273c8a463")]),s._v("\nAuthor: Giuseppe Bilotta <giuseppe.bilotta@gmail.com>\n\n    web--browse: support opera, seamonkey and elinks\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -143,1 +143,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-firefox|iceweasel)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+firefox|iceweasel|seamonkey|iceape)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit a180055a47c6793eaaba6289f623cff32644215b")]),s._v("\nAuthor: Giuseppe Bilotta <giuseppe.bilotta@gmail.com>\n\n    web--browse: coding style\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -142,1 +142,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-    firefox|iceweasel)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+firefox|iceweasel)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 5884f1fe96b33d9666a78e660042b1e3e5f9f4d9")]),s._v("\nAuthor: Christian Couder <chriscool@tuxfamily.org>\n\n    Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git-help--browse.sh'")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git-web--browse.sh'")]),s._v(".\n\ndiff --git a/git-web--browse.sh b/git-web--browse.sh\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/git-web--browse.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -0,0 +127,1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+    firefox|iceweasel)")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do I see the commit differences between branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 382    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13965459",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'")]),s._v(" --abbrev-commit --date=relative master..branch-X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to count total lines changed by a specific author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 356    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1265229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --oneline --shortstat\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do I find the most recent git commit that modified a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 284    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4784629",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log my/file.c\n\ngit log -n 1 --pretty=format:%H -- my/file.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: List all the files that ever existed in a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 147    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/543426",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format: --name-status | cut -f2- | sort -u\n\ngit log --pretty=format: --name-only --diff-filter=A | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How do I generate a git commit log for the last month, and export it as CSV?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 124    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10418356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last month"')]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%ar,%s'")]),s._v(" > log.csv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get the author of the last commit in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 94    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41548774",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: List all modified files in git merge commit - even the fast forwarded")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 83    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14717197",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --name-only\n\ngit log -m -1 --name-only --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:"')]),s._v(" <Merge SHA>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: git: show all files changed between two commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 83    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3144810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-only --pretty=oneline --full-index HEAD^^..HEAD | grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[0-9a-f]{40} '")]),s._v(" | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Getting a list of commits along with the commit message and hash in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 55    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6703259",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline commit1...commit2 > file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Export GIT LOG into an Excel file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-help.html"}},[s._v("git help")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39269572",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:%h,%an,%ae,%s\n\ngit help log\n\ngit log --pretty=format:%h,%an,%ae,%s > /path/to/file.csv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to find the current git branch in detached HEAD state")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6064223",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=%d HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or equivalently:")]),s._v("\ngit show -s --pretty=%d HEAD\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname) %(refname:short)'")]),s._v(" refs/heads | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/^$(git rev-parse HEAD)/ {print \\$2}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Checking out old files WITH original create/modified timestamps")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2179876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('IFS="\n"\nfor FILE in $(git ls-files)\ndo\n    TIME=$(git log --pretty=format:%cd -n 1 --date=iso --date-order -- '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(")\n\n    # Choose 1 version.\n    # This is for BSD date (macOS, FreeBSD, etc)\n    #TIME=$(date -j -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M:%S %z'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    # And this is the equivalent for GNU coreutils date (Linux)\n    TIME=$(date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    touch -m -t "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to see commits that were merged in to a merge commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6191836",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to see every commits merged in the last merge you can try that :\ngit log $(git merge-base --octopus \\\n$(git log -1 --merges --pretty=format:%P)).. --boundary\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \n* 8fae178 pif2\n* 20f8ba6 init\n\n▲ If I only want commits related to the last merge I have to use git log -1 --merges --pretty=format:%P which gives me the parents of the first merge available :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%P")]),s._v("\n69f431cec7859b61d33c7503c9431ceea2aaf3e0 3db39ca3ab1e8f70462db23d94590628b5e7ad7b\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=format:%P)")]),s._v("\n8fae178666e34a480b22e40f858efd9e7c66c3ca\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log $(git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges --pretty=format:%P)).. \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n\n▲ If you're a bit perfectionist you can also do this :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log ")]),s._v("\n$(git merge-base --octopus \\\n$(git log -1 \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--merges --pretty=format:%P))..$(git log -1 --merges --pretty=format:%H) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: list tags contained by a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 45    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2383739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --simplify-by-decoration --decorate --pretty=oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag: '")]),s._v("\n\ngit describe --tags --abbrev=0 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$committish"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Recover deleted branch in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 38    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16813291",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fsck --full --no-reflogs --unreachable --lost-found\n\nls -1 .git/lost-found/commit/ | xargs -n 1 git log -n 1 --pretty=oneline\n\ngit checkout -b branch-name SHA\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: how do i identify files/directories that were added or removed in a git commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-whatchanged.html"}},[s._v("git whatchanged")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2557655",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=oneline --name-status\n\ngit diff --name-status HEAD^ HEAD\n\ngit whatchanged -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Searching for a file in all Git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8392232",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --name-only --pretty=format: | sort -u | grep _robot.php\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('22. Usage scenario: How to know which branch a "git log" commit belongs to?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7131735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --source")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How do we verify commit messages for a push?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2524125",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Using the update hook\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nlong_subject=$(git log --pretty=%s $2..$3 | egrep -m 1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.{81}'")]),s._v(")\nif [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$long_subject"')]),s._v(" ]; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error: commit subject over 80 characters:"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    $long_subject"')]),s._v("\n    exit 1\nfi\n\n▲ Why you want the update hook\no - o - o (origin/master) - o - X - o - o (master)\n \\\n  o - o (origin/experimental) - o - o (experimental)\n\no - o - o (origin/master) - o - X - o - o (master)\n \\\n  o - o - o - o (origin/experimental, experimental)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Show number of changed lines per author in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53296520",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since=4.weeks --numstat --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae %H"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@.*//g'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{ if (NF == 1){ name = $1}; if(NF == 3) {plus[name] += $1; minus[name] += $2}} END { for (name in plus) {print name": +"plus[name]" -"minus[name]}}\'')]),s._v(" | sort -k2 -gr\n\ngit log --since=4.weeks --numstat --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae %H"')]),s._v(" \\\n    | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@.*//g'")]),s._v("  \\\n    | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{ if (NF == 1){ name = $1}; if(NF == 3) {plus[name] += $1; minus[name] += $2}} END { for (name in plus) {print name": +"plus[name]" -"minus[name]}}\'')]),s._v(" \\\n    | sort -k2 -gr\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# query log by time range")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get author email prefix")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# count plus / minus lines")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sort result")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: how to get git log without the commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40837352",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h $ad- %s [%an]"')]),s._v("\n\nHere:\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %ad = author date")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %an = author name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %h = commit hash (short)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %H = commit hash (full)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %s = subject")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %d = ref names")]),s._v("\n \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Git log before some commit date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19110603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2011-12-01"')]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to list branches that contain an equivalent commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-patch-id.html"}},[s._v("git patch-id")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26090892",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("origCommitPatchId=$(git diff ORIG_COMMIT^! | git patch-id | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(")\n\nfor rev in $(git rev-list --all)\ndo\n   testPatchId=$(git diff ${rev}^1..${rev} | git patch-id | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(")\n   if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${origCommitPatchId}"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${testPatchId}"')]),s._v(" ]; then\n      echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${rev}"')]),s._v("\n   fi\ndone\n\ngit log -1 --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an %ae %ad"')]),s._v(" ORIG_COMMIT\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to count number of commits per file pathname by author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28647880",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Just realized that if you use --name-only to print the filenames, pretty format as empty string, and use this method to sort, uniq, and sort by top number of commits, in *nix/OS X, you could use:\ngit log --name-only --author=John --pretty=format: | sort | uniq -c | sort -nr\n\n▲ E.g. if we were trying to find DHH's authors in Rails, we might do:\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%aN <%aE>'")]),s._v(" | LC_ALL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),s._v(" sort -u | grep avid\n\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --pretty=format: | sort | uniq -c | sort -nr\n\n3624 \n 611 actionpack/CHANGELOG\n 432 activerecord/CHANGELOG\n 329 railties/CHANGELOG\n 206 activerecord/lib/active_record/base.rb\n 195 activesupport/CHANGELOG\n 157 actionpack/lib/action_controller/base.rb\n 153 railties/Rakefile\n 108 activerecord/lib/active_record/associations.rb\n  79 actionpack/lib/action_view/helpers/javascript_helper.rb\n  75 activerecord/lib/active_record/validations.rb\n  74 activerecord/test/base_test.rb\n  69 actionmailer/CHANGELOG\n  66 railties/lib/rails_generator/generators/applications/app/app_generator.rb\n  66 activerecord/Rakefile\n  66 actionpack/lib/action_controller/caching.rb\n  60 actionpack/lib/action_controller/routing.rb\n  59 railties/lib/initializer.rb\n  59 actionpack/Rakefile\n  57 actionpack/lib/action_controller/request.rb\n  ...\n\n▲ If you want to exclude the number of files not touched from the counts, use --format= instead of --pretty=format:, e.g.:\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --format: | sort | uniq -c | sort -nr\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How can I prevent foxtrot merges in my 'master' branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35962849",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copyright (c) 2016 G. Sylvie Davies. http://bit-booster.com/")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Copyright (c) 2016 torek. http://stackoverflow.com/users/1256452/torek")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# License: MIT license. https://opensource.org/licenses/MIT")]),s._v("\nwhile read oldrev newrev refname\ndo\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$refname"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/master"')]),s._v(" ]; then\n   MATCH=`git log --first-parent --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %P'")]),s._v(" $oldrev..$newrev |\n     grep $oldrev |\n     awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print \\$2 }'")]),s._v("`\n\n   if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$oldrev"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MATCH"')]),s._v(" ]; then\n     exit 0\n   else\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*** PUSH REJECTED! FOXTROT MERGE BLOCKED!!! ***"')]),s._v("\n     exit 1\n   fi\nfi\ndone\n\n$ ​git pull\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n\nremote: *** PUSH REJECTED BY Protect-First-Parent HOOK ***\nremote: \nremote: Merge [1f70043b34d3] is not allowed. *Current* master must appear\nremote: in the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first-parent'")]),s._v(" position of the subsequent commit. To see how\nremote: master is merging into the wrong side (not as 1st parent), try this:\nremote: \nremote:   git show --graph -s --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %d%n'")]),s._v(" \\\nremote:      1f70043b34d3 1f70043b34d3~1 origin/master\nremote: \nremote: To fix, there are two traditional solutions:\nremote: \nremote:   1. (Preferred) rebase your branch:\nremote: \nremote:       git rebase origin/master\nremote:       git push origin master\nremote: \nremote:   2. Redo the merge in the correct direction:\nremote: \nremote:       git checkout master \nremote:       git reset --hard origin/master \nremote:       git merge --no-ff 1f70043b34d3eaedb750~1\nremote:       git push origin master\nremote: \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Generate changelog from commit and tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46033999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\nprevious_tag=0\nfor current_tag in $(git tag --sort=-creatordate)\ndo\n\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$previous_tag"')]),s._v(" != 0 ];then\n    tag_date=$(git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ad'")]),s._v(" --date=short ${previous_tag})\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"## ${previous_tag} (${tag_date})\\n\\n"')]),s._v("\n    git log ${current_tag}...${previous_tag} --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*  %s [View](https://bitbucket.org/projects/test/repos/my-project/commits/%H)'")]),s._v(" --reverse | grep -v Merge\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n"')]),s._v("\nfi\nprevious_tag=${current_tag}\ndone\n\nsh change-log-builder.sh > changelog.md\n\n▲ v1.1.0 (2017-08-29)\n▲ v1.0.9 (2017-08-22)\n▲ v1.0.8 (2017-08-22)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Finding all files touched by a particular author in git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18784316",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"authorname"')]),s._v(" | while read commit_hash; do git show --oneline --name-only $commit_hash | tail -n+2; done | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How can I get git log to print the full hash and short stats of each commit on one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29050898",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --shortstat | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'ORS=NR%3?" ":"\\n"\'')]),s._v("\n\ngit log --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --shortstat | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'N;N;y/\\n/ /'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=tformat:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --shortstat | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'ORS=NR%3?" ":"\\n"\'')]),s._v("\n4da27ca5dc8469f19b1524a5dd381aad76f96c69   4 files changed, 26 insertions(+)\n60c1e011aadc1bdbf38dde989d0f0497925678d9   4 files changed, 34 insertions(+)\nf0e6da70616337f135190dc7f68e22678a7af2ff   4 files changed, 34 insertions(+)\n95ea8a002f66a249946a78deb362a2e697dfb80a   4 files changed, 44 insertions(+)\n9854efba2301d520bc4fe1a102e102f299ae127d   1 file changed, 2 insertions(+), 2 deletions(-)\nc8ee6b36a545c67b2443eea499bf046dd1e2233d   4 files changed, 29 insertions(+)\n2d4374edd2d2820f05853b4add9fc5ddba1506ac   4 files changed, 42 insertions(+)\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: How to invert "),e("code",[s._v("git log --grep=<pattern>")]),s._v(" or How to show git logs that don't match a pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\n\nif (( $# < 1 )); then\n  echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: $0 pattern [<since>..<until>]"')]),s._v("\n  exit 1\nfi\n\npattern=$1\nshift\n\ngit log --format=%H $@ |\n  grep -v -f <(git log --format=%H "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--grep=$pattern"')]),s._v(" $@) |\n  git log --pretty --stat --stdin --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep A tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep C tmp~2..tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stdin")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-walk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline </dev/null")]),s._v("\n83052e62f0dc1c6ddfc1aff3463504a4bf23e3c4 Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: GIT Log show only recent entries")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44524327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n <number-of-commits> --pretty=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Revert all commits by a specific author since specific time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17935901",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for sha in `git log --pretty=format:%H --author=Mohsen --since=4.days`; do\n  git revert --no-edit $sha\ndone\n\nfor sha in `git log --pretty=format:%H`; do sharange="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$sharange $sha"')]),s._v("; done\ngit revert $sharange --no-commit\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"reverted commits $sharange"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v('36. Usage scenario: How to "git log" the entire repository and not just the branch you are on?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7758413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --decorate --pretty=oneline --abbrev-commit\n\n[alias]\n  history = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log --all --graph --decorate --pretty=oneline --abbrev-commit"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Git/gitosis: How to check validity of user name and email?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/825119",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\nwhile read old new name; do\n    email=$(git log -1 --pretty=format:%ae $new)\n    # check email\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: Merging without changing the working directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3409382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nbranch=master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or take an argument:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if [ $@ eq 1 ];")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#      branch="$1";')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure the branch exists")]),s._v("\nif ! git rev-parse --verify --quiet --heads "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" > /dev/null; then\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error: branch $branch does not exist"')]),s._v("\n     exit 1\nfi\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure this could be a fast-forward   ")]),s._v("\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git merge-base HEAD $branch)"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-parse $branch)"')]),s._v(" ]; then\n    # find the branch name associated with HEAD\n    currentbranch=$(git symbolic-ref HEAD | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s@.*/@@'")]),s._v(")\n    # make the commit\n    newcommit=$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Merge branch '$currentbranch'\"")]),s._v(" | git commit-tree $(git log -n 1 --pretty=%T HEAD) -p $branch -p HEAD)\n    # move the branch to point to the new commit\n    git update-ref -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge $currentbranch: Merge made by simulated no-ff"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/$branch"')]),s._v(" $newcommit\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"error: merging $currentbranch into $branch would not be a fast-forward"')]),s._v("\n    exit 1\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Creating a 'git log' alias with formatting")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18875386",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("glog ()\n{\n        git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n}\n\nglog ()\n{\n    if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" ]; then\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n    else\n       git log --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %cd %s (%an)'")]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\n    fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How to generate a github-like Impact Graph?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2673262",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How to generate changelog: git log since last Hudson build?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2798966",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v(" --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`date -r ./../lastSuccessful/build.xml "')]),s._v("+%F %T"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: How to retrieve the commit message of the checked out code with Ansible?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39775520",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- name: get latest commit message")]),s._v("\n  shell: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log --pretty="')]),s._v("%s"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -n1"')]),s._v("\n  args:\n    chdir: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{{ path }}"')]),s._v("\n  register: latest_commit_message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How to view the number of DAGs in a Git Repository and the branches associated with each DAG?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62251393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --all --max-parents=0\n\ngit log --all --ancestry-path ^$root --pretty=%D --simplify-by-decoration\n\nroots=`git rev-list --all --max-parents=0`\nfor root in $roots; do\n        git log --all --ancestry-path ^$root --pretty=%D \\\n        | awk 1 RS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n+|, | -> '")]),s._v(" >tips-$root\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How to find word count in each git commit in a repository's history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-archive.html"}},[s._v("git archive")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9247215",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you wanted something easier to implement, and don't mind being a little suboptimal and kludgy, you could do this:\nfor commit in `git rev-list --all`; do\n    git log -n 1 --pretty=%ad $commit\n    git archive $commit | tar -x -O | wc -w\ndone\n\n▲ Of course, if you really really care about performance, probably the absolute fastest method would be to, for each commit, walk the tree, summing word counts over blobs, and storing word counts for each blob so that you don't have to recount them. This is a heck of a lot more work to implement, though. Pseudocode might look like this:\nword_counts(range)\n    for (commit in `git rev-list <range>`)\n        sum = 0\n        for (blob in second_field_of(`git ls-tree -r commit`))\n            if (!counts[blob])\n                counts[blob] = word_count(`git cat-file blob`)\n             total_count += counts[blob]\n         print pretty_format(commit), total_count\n\n pretty_format(commit)\n     return `git log -n 1 --pretty=... commit`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Count all the revisions for all files in a git project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49340076",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" --name-only | sort | uniq -c | sort -n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Ignoring Merged Commits when displaying git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44059105",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ you can use \ngit log origin/master.. --no-merges\n\n*   a953ca2 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/WildBranch'")]),s._v("\n|\\\n| * b5399f7 Commit to WildBranch: 1483140838\n| * 30f181d Commit to WildBranch: 1483140837\n| * 5f18ce9 NEW BRANCH: WildBranch\n* | 42554e5 Commit to master: 1483140840\n* | d512b35 Commit to master: 1483140839\n|/\n* 5f2e69e Commit to master: 1483140836  \n\n▲ so if i'm standing in a953ca2, the merge commit, the first parent is the last commit done in master (^1 means the first parent of this commit):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2^1 -1\n42554e5 \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2^2 -1\nb5399f7\n\n▲ if you are standing in master and use the --first-parent option it will follow only those commits in the revision:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" a953ca2 -4\na953ca2\n42554e5\nd512b35\n5f2e69e\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: How to make git log output that just shows date and hash on one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32274739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=iso --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"date={%ad}, commit={%H}"')]),s._v("\n\n ​git log --date=short --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ad %H"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How to find git log messages with more than one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11829856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H<msgst>%b<msge>'")]),s._v(" \\\n| fgrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst><msge>'")]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<msgst>'")]),s._v(" | cut -b1-40 \\\n| git log --stdin --no-walk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: GIT Split Repository directory preserving "),e("em",[s._v("move / renames")]),s._v(" history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59832729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This script should run in the same folder as the project folder is.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This script uses git-filter-repo (https://github.com/newren/git-filter-repo).")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The list of files and folders that you want to keep should be named <your_repo_folder_name>_KEEP.txt. I should contain a line end in the last line, otherwise the last file/folder will be skipped.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# The result will be the folder called <your_repo_folder_name>_REWRITE_CLONE. Your original repo won't be changed.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Tags are not preserved, see line below to preserve tags.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Running subsequent times will backup the last run in <your_repo_folder_name>_REWRITE_CLONE_BKP.")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Define here the name of the folder containing the repo: ")]),s._v("\nGIT_REPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git-test-orig"')]),s._v("\n\nclone="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v("_REWRITE_CLONE\ntemp=/tmp/git_rewrite_temp\nrm -Rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("_BKP\nmv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("_BKP\nrm -Rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\nmkdir "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\ngit clone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$clone"')]),s._v("\ngit remote remove origin\nopen .\nopen "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Comment line below to preserve tags")]),s._v("\ngit tag | xargs git tag -d\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Start logging file history...'")]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"# git log results:\\n"')]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n\nwhile read p\ndo\n    shopt -s dotglob\n    find "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$p"')]),s._v(" -type f > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/temp\n    while read f\n    do\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"## "')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v(" >> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n        # print every file and follow to get any previous renames\n        # Then remove blank lines.  Then remove every other line to end up with the list of filenames       \n        git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" --name-only --follow -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NF > 0'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'NR%2==0'")]),s._v(" | tee -a "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n        \n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n"')]),s._v(" >> "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/log.txt\n    done < "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/temp\ndone < ../"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_REPO"')]),s._v("_KEEP.txt > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\nmv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE_full\nawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE_full > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\nsort -o "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Starting filter-branch --------------------------'")]),s._v("\ngit filter-repo --paths-from-file "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v("/PRESERVE --force --replace-refs delete-no-add\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Finished filter-branch --------------------------'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: repo/git revert to state as one month ago")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19032540",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2013-08-26"')]),s._v("\n\ngit reset --hard 0845f5de..... // this need to be the hash you got previously\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: git rebase branch with all subbranches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3053488",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %ae:%ci"')]),s._v("\n* 53ca31a robert.meerman@gmail.com:2010-06-16 13:50:12 +0100\n* 03dda75 robert.meerman@gmail.com:2010-06-16 13:50:11 +0100\n| * a8bb03a robert.meerman@gmail.com:2010-06-16 13:49:46 +0100\n| * b93e59d robert.meerman@gmail.com:2010-06-16 13:49:44 +0100\n|/\n* d4214a2 robert.meerman@gmail.com:2010-06-16 13:49:41 +0100\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" 03dda75")]),s._v("\n* testbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: how to git log with date-time and file names in one line")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32894198",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=%x0a%ci --name-only \\\n| awk '\n     /^$/        { dateline=!dateline; next }\n     dateline    { date=$0; next }\n     !seen[$0]++ { print date,$0 }\n'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: Git: find all tags, reachable from a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33275980",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --decorate=full --simplify-by-decoration --pretty=oneline HEAD | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^[^\\(]*\\(([^\\)]*)\\).*$#\\1#'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-e 's#,#\\n#g' | \\")]),s._v("\ngrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag:'")]),s._v(" | \\\nsed -r -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#[[:space:]]*tag:[[:space:]]*##'")]),s._v("\n\ngit log \n\n// Print out the full ref name \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--decorate=full ")]),s._v("\n\n// Select all the commits that are referred by some branch or tag\n// \n// Basically its the data you are looking for\n//\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--simplify-by-decoration")]),s._v("\n\n// print each commit as single line\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=oneline")]),s._v("\n\n// start from the current commit\nHEAD\n\n// The rest of the script are unix command to print the results in a nice   \n// way, extracting the tag from the output line generated by the \n// --decorate=full flag.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: In a Makefile, how can I fetch and assign a git commit hash to a variable?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34735562",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("all: download getver\n\ngetver: VER=$(shell cd buildarea/project && git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ngetver:\n        @echo GIT_COMMIT=$(VER)\n\ndownload:\n        mkdir -p buildarea && cd buildarea && git@github.com:proj/project.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: How to add a git repository as a shared dependency of another git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3350472",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\ngit --git-dir=~/eagle/.git log -1 --pretty=format:%H >.eagle_rev\ngit add .eagle_rev\n\ngit config alias.update-eagle "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!git --git-dir=~/eagle/.git --work-tree=~/eagle checkout -q $(<.eagle_rev)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: Show all commits in a git branch since original branching point from master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20016493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log  --boundary master..\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit log  --boundary --no-merges master..\n\ngit log --boundary --no-merges --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%d %Creset%an %Cgreen%ar:%Creset %s'")]),s._v(" --graph master..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: git: How do you check out the initial version of a file in a git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3450825",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout $(git log --follow --pretty=%H path/to/file | tail -n 1) path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: Git - poor merge permanently ignores files changes in sub branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35511043",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" isChangeInBaseChanges() {\n  for element in ${baseChanges[@]}; do \n    if [ $element == $change ]\n then \n return 1\nfi \n  done\n  return 0\n} \n\nrevopts=`git rev-parse --revs-only $*`\n\nif ! [[ $revopts ]] \nthen\n  revopts="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--all"')]),s._v("\nfi\n\nexitCode=0\n\nfor merge in `git rev-list --min-parents=2 $revopts`; do\n  mergeChanges=`git log -m -1 --name-only --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:"')]),s._v(" $merge | sort -u`\n  mergeBase=`git merge-base $merge^ $merge^2`  \n  baseChanges=`git diff --name-only $merge $mergeBase`\n\n  lostFiles=()\n  for change in ${mergeChanges[@]}; do\n     isChangeInBaseChanges\nif [ $? -ne 1 ]\nthen\n  lostFiles+=($change)\nfi \n  done\n\n  if [ ${#lostFiles[@]} -ne 0 ]\n  then\n    exitCode=1\n    echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Possible botched merge at "')]),s._v("\necho  $merge\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files with lost changes are: "')]),s._v("\nfor lostFile in ${lostFiles[@]}; do\n echo $lostFile\ndone\necho --------------------------------------------\n  fi\n\ndone\n\nexit $exitCode\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: Export specific Git commits as patches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10735877",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ncommits=`git log --no-color --pretty=oneline | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"#1234"')]),s._v(" | cut -f1 -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: How to get commit from git given unix timestamp of commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69714213",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=unix --before=1635020939 --after=1635020939 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: How to print all the git commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22095024",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ci %an %s"')]),s._v(" branch-name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: How to view git log using column unit separators?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23645518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%x1F%an%x1F%s'")]),s._v(" | \ncolumn -t -s $"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\x1F'")]),s._v(" |more\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: How to count how many times each file was modified in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43898506",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor file in *.php;\ndo\necho $file\ngit log --oneline -- $file | wc -l\ndone\n\ngit log \n\ngit log --oneline \n\ngit log -- filename\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-09T16:36:00-07:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-10T08:00:00-07:00"')]),s._v(" -- myfile\n\ngit log --pretty=format\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: Show specific commits in git log, in context of other commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61511914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate=no --graph | less -p $(git log --pretty=%h -- Makefile | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(')\n\n[alias] hl-graph = !git log --oneline --graph --color | less -R -p $(git log --pretty=%h \\"$@\\" | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(") && :\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: Git - how to get all messages from commits in given range?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13180137",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%B 35548842b09..HEAD")]),s._v("\n\nChanges quoting to fix transcoding on windows\n\nRemoves an unneeded puts statement\n\nUpdates the readme\n\nUpdates streamroller.bat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: how to get the list of files from a merge commit id")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24102326",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m -1 --name-only --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:"')]),s._v("  COMMITID\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: git log commit count for every file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11729072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline ${filename} | wc -l\n\ngit log --pretty=format:%ae ${filename} | sort -u | wc -l\n\ngit log --since=${date1} --until=${date2} --pretty=format:%ae ${filename} \\\n    | sort -u | wc -l\n\nfind | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\./\\.git'")]),s._v(" | while read filename\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename} has $(git log --oneline ${filename} | wc -l) commits"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: exploring a git repository to find changes affecting specific area")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5080153",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" -p Makefile\nbd45eb7\ndiff --git a/Makefile b/Makefile\nindex 58395fa..8bd4e94 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/Makefile")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/Makefile")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1,4 +1,2 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-12")]),s._v("\n 22\n 32\n\n91f610d\ndiff --git a/Makefile b/Makefile\nindex d00491f..58395fa 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/Makefile")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/Makefile")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1 +1,4 @@")]),s._v("\n 1\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+12")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+22")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+32")]),s._v("\n\n15a8456\ndiff --git a/Makefile b/Makefile\nnew file mode 100644\nindex 0000000..d00491f\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/Makefile")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -0,0 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+1")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: Know when a line of code was added to a GitHub repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34452013",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git log --pretty=short -u -L 6,6:afile.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: How to find number of commits done to a file across a repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29865680",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-only --pretty=format: | sort | uniq -c | sort\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: How to find all commits with a specific string on the insertions and deletions?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18749408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"string"')]),s._v(" -p --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: How to get all equivalent branches on git working copy?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52726334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --pretty=%D\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: How to replace a string in a whole Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47158332",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ censorStringsInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#arguments are strings to censore")]),s._v("\n\nfor string in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v("\ndo\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"================ Censoring string "')]),s._v("$string"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('": ================"')]),s._v("\n  ~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$string"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\ndone\n\n~/censorStringsInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some_f_word"')]),s._v("\n\n▲ replaceStringInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to replace with")]),s._v("\n\nfor branch in $(git branch | cut -c 3-); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('">>> Replacing strings in branch $branch:"')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  ~/replaceStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\ndone\n\n~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ replaceStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace with")]),s._v("\n\ngit checkout $1\nfor file in $(~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"          Filtering file $file:"')]),s._v("\n  ~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$3"')]),s._v("\ndone\n\n~/replaceStringInBranch.sh master "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ findFilesContainingStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - branch name or nothing (current branch in that case)")]),s._v("\n\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" $2 --name-only --pretty=format: -- | sort -u\n\n~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" master\n\n▲ changeStringsInFileInCurrentBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - file name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace")]),s._v("\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"if [ -f $1 ];then sed -i s/$2/$3/g $1;fi"')]),s._v("\n\n~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc.txt"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\ngit push <remote> -f --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: How to invert git log --author=me? (Without using Perl)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29118788",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --perl-regexp --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^((?!excluded-author-regex).*)$'")]),s._v("\n\ngit log --oneline --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %s"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to override a git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42931868",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto,yellow)commit %H%C(auto,green bold)%d%Creset%nAuthor: %an%nDate: %ad%n%n%s%n'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: Use git command to get the hash of the commit that changed a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35572848",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" -1 myservice.java\n\ngit log -1 myservice.java\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: clean git history of deleted files, keeping renamed files history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33865903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --raw")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --diff")]),s._v("-filter=R"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%H builtin/var.c")]),s._v("\n81b50f3ce40bfdd66e5d967bf82be001039a9a98\n:100644 100644 2280518... 2280518... R100       builtin-var.c   builtin/var.c\n\n55b6745d633b9501576eb02183da0b0fb1cee964\n:100644 100644 d9892f8... 2280518... R096       var.c   builtin-var.c\n\ngit log --follow --raw --diff-filter=R --pretty=format:%H builtin/var.c |\nwhile true; do\n    if ! read hash; then break; fi\n    IFS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" read mode_etc oldname newname\n    read blankline\n    echo in $hash, rename $oldname to $newname\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: List of all files in a commit for every commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68590771",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-status --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" <start>^..<end>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: How i can filter git log on multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67239138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --tags  --pretty=%H\\ %d --decorate-refs=refs/tags/*-signoff \\\n| grep integrationtest-signoff | grep -m1 unittest-signoff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: Display all first-level descendant branches using Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2210786",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sub refs {\n  open my $fh, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-|"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"for-each-ref"')]),s._v(",\n                            "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--format=%(objectname)\\t%(refname:short)"')]),s._v("\n    or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to run git for-each-ref"')]),s._v(";\n\n  my %ref2sha;\n  while (<$fh>) {\n    chomp;\n    my($sha,$ref) = split /\\t/;\n    $ref2sha{$ref} = $sha;\n  }\n\n  \\%ref2sha;\n}\n\nsub is_child {\n  my($ref) = @_;\n\n  # git rev-list ^dev master\n  my $refs = `git rev-list ^$ref HEAD -- 2>&1`;\n  die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git rev-list-failed.\\n$refs"')]),s._v(" if $?;\n\n  $refs !~ /\\S/;\n}\n\nchomp(my $head = `git rev-parse HEAD 2>&1`);\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git rev-parse failed.\\n$head"')]),s._v(" if $?;\n\nmy $ref2sha = refs;\nmy %headsha = reverse %$ref2sha;\n\nREF:\nforeach my $ref (keys %$ref2sha) {\n  my $refsha = $ref2sha->{$ref};\n\n  next if $refsha eq $head || !is_child $ref;\n\n  my @log = `git log --pretty=format:%H ..$ref 2>&1`;\n  die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git log failed.\\n@log"')]),s._v(" if $?;\n  for (@log) {\n    chomp;\n    next if $_ eq $refsha;\n    next REF if exists $headsha{$_};\n  }\n\n  print $ref, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(";\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: How to fetch no of commits made by developer for a day in Git repository for a particular branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43852953",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("the_date=$( date +%F )\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae"')]),s._v(" --since=yesterday the-branch | sort | uniq | while read author; do\n    git log --author=$author --since-yesterday the-branch > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$the_date"')]),s._v("_"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$author"')]),s._v(".txt\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("83. Usage scenario: How do I pass a range of commits to git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37330563",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15"\'')]),s._v(" | \\\n    cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 4 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!a[$0]++'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit log -g --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai %H'")]),s._v(" | \\\n    awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$0 >= "2016-04-13" && $0 <= "2016-04-15" && !a[$4]++ { print $4 }\'')]),s._v(" | \\\n    git log --no-walk --stdin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("84. Usage scenario: can git find out all authors that have ever changed a line of code?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11091350",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -Sfoo")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %an -- %s -- %ad'")]),s._v("\nbc34134 Sally Developer -- Fixed all bugs and made all clients happy forever -- Tue Jan 31 17:41:17 2025 -0500\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("85. Usage scenario: How do I get the output from a call to GIT into a variable in a batch script?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37004298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FOR /F %i IN (`git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%%H"')]),s._v(" -n 1`) DO SET CURRENT_SHA=%i\n\nSETLOCAL ENABLEDELAYEDEXPANSION\nfor /f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tokens=* USEBACKQ"')]),s._v(" %%a in (`git log --pretty^=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%%H"')]),s._v(" -n 1`) do (SET CURRENT_SHA=%%a)\nECHO Current Sha: %CURRENT_SHA%\n\n$CURRENT_SHA=git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("86. Usage scenario: How do I view the latest commits of a remote Git repository without making a clone first?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4070501",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<commit><author>%ae</author><subject>%s</subject></commit>'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("87. Usage scenario: How to retrieve the last modification date of all files with specific extension in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55918312",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("find . -name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.config"')]),s._v(" -exec sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'echo "{} - $(git log -n 1 --pretty="format:%ad" {})"\'')]),s._v(" \\;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("88. Usage scenario: save a modified log right before a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-whatchanged.html"}},[s._v("git whatchanged")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9361595",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git whatchanged -n 1\n\ngit whatchanged <since>..<until>\n\ngit log --name-status <options>\n\ngit log --name-status --pretty=format: -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("89. Usage scenario: Git: How to checkout all deleted files through whole history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55322389",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --diff-filter=D --name-only --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" | sort | uniq\n\ngit log --all --diff-filter=D --name-only --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" master..super-feature | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("90. Usage scenario: Color merge commits differently in Git log output?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54342565",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[alias]\n    logo = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!logo(){ git log --pretty='format:<<%p>>%H %s %D' $@ | sed -e 's/<<[^ ]* [^ ]*\\\\( [^ ]*\\\\)*>>/\\\\x1B[36m/' -e 's/<<[^ ]*>>//' -e 's/$/\\\\x1B[0m/' | less -FRSX;  }; logo\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("91. Usage scenario: Git: Automatically commit submodule with the same message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64110853",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("COMMIT_MSG=$(git log -1 --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%B'")]),s._v(" HEAD)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# I use zsh so $0 works for me. In bash BASH_SOURCE is correct")]),s._v("\nTOP=$(realpath $(dirname $0)/../../../..)\n\nGIT_INDEX_FILE_SAV=$GIT_INDEX_FILE\nunset GIT_INDEX_FILE\ngit --git-dir .git --work-tree . -C ${TOP} commit sub -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${COMMIT_MSG}"')]),s._v("\nGIT_INDEX_FILE=$GIT_INDEX_FILE_SAV\n\nTOP=$(git rev-parse --show-superproject-working-tree)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("92. Usage scenario: How to find out in which tag a file change is included")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24904591",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FILEPATH=/the/path/I/want/to/Observe\ngit log --name-only --oneline --tags --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),s._v("|egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILEPATH|^ \\("')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("93. Usage scenario: Git: How to retrieve all commits from all branches without notes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12844147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As you said, --all overrides --no-notes. So you may want to split --all to include only refs you want. If you just want to show all the branches:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches\n\n▲ or if you want more:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches --tags --remote \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("94. Usage scenario: Git: should merged branch be always deleted?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15762383",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --abbrev-commit --graph --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("95. Usage scenario: Rewrite a git repository to change the date range of commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25200034",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--env-filter 'at=$(git log --no-walk --pretty=format:%ai $GIT_COMMIT) \\")]),s._v("\n    ct=$(git log --no-walk --pretty=format:%ci $GIT_COMMIT); \\\n    export GIT_AUTHOR_DATE=$($HOME/scripts/massage-time $at) \\\n    GIT_COMMITTER_DATE=$($HOME/scripts/massage-time $ct)'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("96. Usage scenario: Return the Number of the Last Merged Pull Request Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55040791",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge pull request #[0-9]\\+"')]),s._v(" --pretty=oneline -1\n    | sed -En "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*#([[:digit:]]\\+).*/\\1/p"')]),s._v(";\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("97. Usage scenario: Removing all deleted files from git repo history w search command")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37759578",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --pretty=format: --name-only --diff-filter=D | sort -u | while read -r line; do git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf { $line }"')]),s._v(" HEAD; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("98. Usage scenario: how to check nesting structure of local git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51158688",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --simplify-by-decoration --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%d'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("99. Usage scenario: replace second field in a file from git log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62020686",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'s|(.*): .*|echo \\x27\\1\\x27: $(git log -1 --pretty="format:%ct" "\\1")|e\'')]),s._v(" files.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("100. Usage scenario: Git: how to find shortest path between commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53545311",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log commitA..commitB\n\ngit log --simplify-merges --graph --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tformat:%C(yellow)%h%Creset\\\\ %Cgreen(%ar)%Creset\\\\ %C(blue)<%an>%Creset\\\\ %C(red)%d%Creset\\\\ %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("101. Usage scenario: How to list the most recent commits from every author, across all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58949676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --bare <url_to_repo> -- foo\ncd foo\ngit log --branches --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ad %an"')]),s._v(" --date=iso --no-merges | sort -k4,4 -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("102. Usage scenario: How to get all commit ID's after certain date and display only the files that were changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68933379",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" --name-only --since=<date>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("103. Usage scenario: Merge commits filtering by author - Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18198078",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry-pick $(git log --pretty=%H --reverse --author some_author some_commit..)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("104. Usage scenario: How to get commit after N commits from tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57910056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --reverse -n5 2.0.0 --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" | head -n1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("105. Usage scenario: How to show log with HEAD index")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24817136",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit %H %gd"')]),s._v("\n\ngit log -g --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit %H %gd"')]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@{/~/g'")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/}//g'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("106. Usage scenario: How to cherry pick range of commits from specific author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68574702",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry-pick $(git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v(" commit1~..commit7)\n\ngit cherry-pick $(git rev-list --author "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1"')]),s._v(" commit1~..commit7)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("107. Usage scenario: Create a patch with every commit in log output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36427545",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NUM=1\nfor commit in $(git log --cherry-pick --no-merges --left-only branchB...branchA --reverse --pretty=tformat:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(")\ndo\n  git format-patch -1 $commit --start-number $NUM\n  ((NUM++))\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("108. Usage scenario: How can I list contributors in a Git repo with dates active?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41745479",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ae %ai"')]),s._v(" | sort | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'contributor == $1 { lastContribution = $0 } contributor != $1 { contributor = $1; if (lastContribution) print lastContribution; print } END { print lastContribution }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("109. Usage scenario: How do I list all files in a github repo with last editor and date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37224382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("function report(){\n  file=$1\n  #commit=$(git log -1 --pretty=%H -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  #Edit: use the following command instead, in order to deal with file paths with a space.\n  commit=$(git log -1 --pretty=%H -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  #if you want to ignore the files unchanged since the root commit, you could use:\n  #commit=$(git log -1 --pretty=%H --min-parents=1 -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  authorname=$(git log -1 $commit --pretty=%an)\n  commitdate=$(git log -1 $commit --pretty=%cd --date=short)\n  commitcomment=$(git log --format=%b -n 1 $commit)\n  status=$(git show $commit --pretty=%h --name-status | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(")\n  case $status in\n    A ) status=Added;;\n    C ) status=Copied;;\n    D ) status=Deleted;;\n    M ) status=Modified;;\n    R ) status=Renamed;;\n    T ) status=Changed;;\n    U ) status=Unmerged;;\n    B ) status=Broken;;\n    * ) status=Unknown;;\n  esac\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commit|$file|$authorname|$commitdate|$status|$commitcomment"')]),s._v("\n}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git ls-files | while read line; do report $line; done > report.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Edit:use the following command instead, in order to get all files, including deleted files.")]),s._v("\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ %h"')]),s._v(" --name-only | grep -v ^$ | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ "')]),s._v(" | sort -u | while read line;do report "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v("; done; > report.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[e("strong",[s._v("110. Usage scenario: List all subfolders of a folder that existed at some point in a branch of a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56567295",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" --name-only -- path/to/folder/ | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("111. Usage scenario: GitHub: How to show commits for all files in folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52761250",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for file in *; do \n  log=$(git log -n 1 --pretty=format:%H -- $file)\n  echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file\\t$log"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("112. Usage scenario: How can I display the committer using git diff")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26361824",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 origin/master\n\ngit log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an (%ae)"')]),s._v(" origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("113. Usage scenario: How do I list the time stamp and commit message for git comits made this year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55427111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v(" --author-date-order --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%at %s'")]),s._v(" > year.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("114. Usage scenario: Jenkins git tag as parameter sorted by date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34037930",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("def cloneDirName = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c:\\\\temp\\\\${repoName}"')]),s._v("\n\ndef gitClone = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git clone --bare ${gitURL} ${cloneDirName}"')]),s._v("\ndef gitPull = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git fetch origin +refs/heads/*:refs/heads/* --prune"')]),s._v("\ndef gitLogTags = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cmd.exe /c cd ${cloneDirName} & git log --date-order --tags --simplify-by-decoration --pretty=format:%D"')]),s._v("\n\ndef folder = new File( cloneDirName )\n\ndef proc\ndef action\ndef text\ndef list = []\n\n\nif( !folder.exists() ) {\n    folder.mkdirs()\n    proc = gitClone.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cloning"')]),s._v("\n} else {\n    // Just update the repo\n    proc = gitPull.execute()\n    action = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pulling"')]),s._v("\n}\n\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${action}..."')]),s._v("\n\nproc.waitFor()\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n}\n\naction = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"getting tags"')]),s._v("\nproc = gitLogTags.execute()\nproc.waitFor()\n\ntext = proc.in.text\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${text}"')]),s._v("\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\n\nif ( proc.exitValue() != 0 ) {\n    text = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR {$action}"')]),s._v("\n    list.add(text)\n} else {\n    text = text.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('","')]),s._v(")\n    def m = text =~ /tag: [^,]+/\n    m.each {\n        // For debug - uncomment and run\n        // println it\n        list.add(it.replace("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag:"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("))\n    }\n}\n\n// For debug - uncomment and run\n//println "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n***\\n\\n"')]),s._v("\nlist.each { println it }\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("115. Usage scenario: Importing GitHub commit data into spreadsheet file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46210480",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'last month'")]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h;%an;%ad;%s'")]),s._v(" --numstat > summary.csv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("116. Usage scenario: How to sort git log --graph by timestamp")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52849402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$> git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%at %C(yellow)commit %H%Creset\\nAuthor: %an <%ae>\\nDate: %aD\\n\\n %s\\n"')]),s._v(" | sort -r | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(" -f2- | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"s/\\\\\\n/\\\\`echo -e '\\n\\r'`/g\"")]),s._v(" | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\15\\32'")]),s._v(" | less -R\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("117. Usage scenario: How to suppress blank lines with git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52635761",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-n 10")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" -n 10 |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("118. Usage scenario: get the git commit hash of the last commit which affected files not listed in a .gitignore-like file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57006620",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for commit in $(git log --pretty=%H)\ndo\n  # Get the changed file names for the commit. \n  # Use `sed 1d` to remove the first line, which is the commit description\n  files=$(git show $commit --oneline --name-only | sed 1d)\n  if docker-check-ignore $files\n  then\n     echo $commit\n     exit 0\n  fi\ndone\nexit 1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nDIR=$(mktemp -d)\npushd $DIR\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set up a temporary git repository so we can use ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git check-ignore with .dockerignore")]),s._v("\ngit init\npopd\ncp .dockerignore $DIR/.gitignore\npushd $DIR\ngit check-ignore $@\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Store the error code")]),s._v("\nERROR=$? \npopd\nrm -rf $DIR\nexit $ERROR\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[e("strong",[s._v("119. Usage scenario: How to show date's day part with a leading zero in Git log with --date=local?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15903338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Had a quick look at the sourcecode and what you desire is not possible. You only get that one format if you want timezone-adjusted times. If it’s important to you, you could pass the output through sed:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%ad %Cgreen%h%Cred%d %Creset%s'")]),s._v(" --date=local | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\(.\\{7\\}\\) \\([0-9]\\) /\\1 0\\2 /'")]),s._v("\n\n▲ If you want to set this up as an alias mylog, run this command:\ngit config --global alias.mylog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!'")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --pretty='format:%ad %Cgreen%h%Cred%d %Creset%s' --date=local | sed 's/^\\(.\\{7\\}\\) \\([0-9]\\) /\\1 0\\2 /'\"")]),s._v("\n\n[alias]\n        mylog = !git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%ad %Cgreen%h%Cred%d %Creset%s'")]),s._v(" --date=local | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\\\(.\\\\{7\\\\}\\\\) \\\\([0-9]\\\\) /\\\\1 0\\\\2 /'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("120. Usage scenario: C++ How to parse the output of a structured git log into an object")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43263535",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<your formatting>"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("121. Usage scenario: Get list of changes in branch since certain datetime")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22514555",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s %ad"')]),s._v(" da47211..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("122. Usage scenario: Push only part of git repository to second remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69319967",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir subtree-split\ncd subtree-split/\ngit init\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Init."')]),s._v(" --allow-empty\n\nmkdir A\ntouch A/README.txt\ngit add A/\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Readme for A."')]),s._v("\n\nmkdir B\ntouch B/README.txt\ngit add B/\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Readme for B."')]),s._v("\n\ncd ..\nmkdir subtree-B\ncd subtree-B\ngit init\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Init subtree-B."')]),s._v(" --allow-empty\n\ncd ../subtree-B\ngit log --all  --pretty=oneline --abbrev-commit\na26e5de (HEAD -> master) Init subtree-B.\n0523c62 (HEAD) Readme for B.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("123. Usage scenario: Find parent commit of GitHub pull request")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25225298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=%P -n 1 <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("124. Usage scenario: Find the direct ancestors (parents?) of a git commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42537500",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=%p <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("125. Usage scenario: git: get "),e("em",[s._v("new")]),s._v(" contributors (authors) list in release/tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65847454",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("declare -A OLD_AUTHORS\nwhile read -r OLD_AUTHOR; do\n    OLD_AUTHORS["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_AUTHOR"')]),s._v("]=1\ndone < <(git log --pretty=format:%aN "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_COMMIT"')]),s._v(")\n\ndeclare -A NEW_AUTHORS\nwhile read -r NEW_AUTHOR; do\n    if test -z ${OLD_AUTHORS["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_AUTHOR"')]),s._v("]}; then\n        NEW_AUTHORS["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_AUTHOR"')]),s._v("]=1\n    fi\ndone < <(git log --pretty=format:%aN "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_COMMIT"')]),s._v("~1.."),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_COMMIT"')]),s._v(")\n\nfor NEW_AUTHOR in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${!NEW_AUTHORS[@]}"')]),s._v("; do\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_AUTHOR"')]),s._v("\ndone | sort\n\ndiff \\\n    <(git log --pretty=format:%aN "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_COMMIT"')]),s._v(" | sort | uniq) \\\n    <(git log --pretty=format:%aN "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_COMMIT"')]),s._v("~1.."),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_COMMIT"')]),s._v(" | sort | uniq) \\\n    | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^> '")]),s._v(" \\\n    | cut -c 3-\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("126. Usage scenario: How to aggregate code changes between commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27602105",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --shortstat  | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{files+=$1; inserted+=$4; deleted+=$6} END {print "files changed", files, "lines inserted:", inserted, "lines deleted:", deleted}\'')]),s._v("\n\ngit log --shortstat  | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | \\\ngawk '{files+=$1; inserted+=$4; deleted+=$6} END \\ \n{print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(", files, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines inserted:"')]),s._v(", inserted, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lines deleted:"')]),s._v(", deleted}'\n\nc:\\prgs\\vonc\\git\\git>\ngit log --oneline --shortstat --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"files changed"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{files+=$1; inserted+=$4; deleted+=$6} END {print "files changed", files, "lines inserted:", inserted, "lines deleted:", deleted}\'')]),s._v("\nfiles changed 47 lines inserted: 397 lines deleted: 30\n\ngit log --pretty=format:%an | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ ++c[$0]; } END { for(cc in c) printf \"%5d %s\\n\",c[cc],cc; }'")]),s._v("| gsort -r\n\ngit log --pretty=format:%an | \\\ngawk '{ ++c[$0]; } END \\\n{ for(cc in c) printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%5d %s\\n"')]),s._v(",c[cc],cc; }'| gsort\n\nc:\\prgs\\vonc\\git\\git>\ngit log --pretty=format:%an --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v(" | gawk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ ++c[$0]; } END { for(cc in c) printf \"%5d %s\\n\",c[cc],cc; }'")]),s._v("| gsort\n   23 Junio C Hamano\n     8 Jeff King\n     3 Johannes Schindelin\n\nc:\\prgs\\vonc\\git\\git>\ngit shortlog -sn --no-merges --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 days ago"')]),s._v("\n     8  Jeff King\n     6  Junio C Hamano\n     3  Johannes Schindelin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("127. Usage scenario: How can I find pending commits between two branches excluding already cherry-pick/merged changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44512546",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h%C(auto)%d %s %C(dim white)(%aN, %ar)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("128. Usage scenario: how to add author info onto git log --oneline --graph")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51625625",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h%x09%an%x09%d%x09%s"')]),s._v(" --graph\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("129. Usage scenario: git log --name-status show new name of single file on rename")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63767043",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("oldsetup=`git log -1 --pretty=%h --diff-filter=D -- setup.py`\n\ngit log $oldsetup --oneline --name-status --follow -- setup.py\n\nthreads=`git log --diff-filter=ADRC --pretty=%h -- path` \n\ngit log --no-walk --name-status --oneline $threads\n\ngit log --name-status -m --oneline \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^[A-Z]/{/\\tsetup\\.py/!d;H;$!d};x;/\\tsetup\\.py/!d'")]),s._v("\n\ngit log \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^commit /!{H;$!d};x;/pattern/!d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("130. Usage scenario: Exporting Git repo from many timestamps to new timestamp dirs?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-bisect.html"}},[s._v("git bisect")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21333772",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git bisect start HEAD HEAD~10 --   # culprit is among the last 10")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git bisect run ~/test.sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git bisect reset                   # quit the bisect session")]),s._v("\n\ngit log --pretty=format:%H  HEAD~10..HEAD | while read i; do git checkout $i; ./test.sh; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("131. Usage scenario: How can I find the most recent tag across all branches in a git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47506393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#list all the tags ")]),s._v("\ngit for-each-ref --shell refs/tags |\n  awk '{\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#transform the object name into the commit date as a Unix epoch timestamp ")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -1 --pretty=%cd --date=unix "')]),s._v("$1 | getline $1;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if the tag does not refer to a commit, ignore it")]),s._v("\n    if($0 ~ /^[0-9a-f]/) print;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sort by the timestamp reversely, from the youngest to the oldest")]),s._v("\n  }' | sort -r |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get the first youngest tag")]),s._v("\n  head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get all the tags that point at this tag in case there are multiple youngest tags, ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#with a side effect to remove "refs/tags/"')]),s._v("\n  xargs -i git tag --points-at {}\n\ngit for-each-ref --shell refs/tags | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{\"git log -1 --pretty=%cd --date=unix \"$1 | getline $1;if($0 ~ /^[0-9a-f]/) print;}'")]),s._v(" | sort -r |head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" | xargs -i git tag --points-at {}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("132. Usage scenario: GIT file author metadata for deleted and re-added file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58263649",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an %ad -- %cn %cd'")]),s._v(" -- aRe-AddedFile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("133. Usage scenario: how can I use git log to use parent #1 to generate the patch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61844194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m --pretty=oneline --first-parent --decorate=no -G keyword origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("134. Usage scenario: In Git, find merged branches which changed same object")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40395056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h: %s'")]),s._v("\ncca9cf0: Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Branch1'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("135. Usage scenario: Exclude specific files by extension from git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44539064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"author.name"')]),s._v(" --pretty=tformat: --numstat | grep -v -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*\\.(klr|db_diagram)$'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("136. Usage scenario: how can jenkins get push commit when polling on a git project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44247650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --pretty=%B\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("137. Usage scenario: Jenkins Git, Get all commits in the last Push in Pull Requests")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62927054",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get the past SHA1 of the current commit")]),s._v("\ngit log -1 --pretty=%T\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Get the list of commits in range (in this sample its the last 3 commits)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In your case it will be the HEAD...<SHA1>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log HEAD...HEAD~3"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%T"')]),s._v("\n06ae26a709d5b955adc0d760dd9faafcf9905820\nda3e68ae566bba72748843167844d5ffb72d8163\n270d08cd9867423987e1fa28e5b3658394cbe792\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("138. Usage scenario: Moving changes between commits, to get a clean branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36482274",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --graph\n* 43e94d8 fourth commit\n* 8bfc119 third commit\n* d5c9a25 second commit\n* e17b227 first commit\n\ngit branch feature-to-change d5c9a25\ngit checkout feature-to-change\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create and commit fifth commit")]),s._v("\ngit log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --grap\n* 86660c9 fifth commit\n* d5c9a25 second commit\n* e17b227 first commit\n\ngit rebase feature-to-change feature\n\ngit log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --graph\n* ee0a502 fourth commit\n* 2e0e2c6 third commit\n* 86660c9 fifth commit\n* d5c9a25 second commit\n* e17b227 first commit\n\ngit rebase -i HEAD~4\n\n  pick d5c9a25 second commit\n  squash 86660c9 fifth commit\n  pick 2e0e2c6 third commit\n  pick ee0a502 fourth commit\n\ngit log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --graph\n* 758d85c fourth commit\n* 3761310 third commit\n* ee739dd second commit\n* e17b227 first commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[e("strong",[s._v("139. Usage scenario: git log not showing latest commits in cloned repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70131517",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%Creset %Cgreen(%cd) %C(bold blue)<%an>%Creset %C(red)%d%Creset %s'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("140. Usage scenario: How to print initial letter of committer in git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41081122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h %Cgreen%ai %C(reset)%C(auto)(%<(3,trunc)%cN) %s %d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("141. Usage scenario: How can I use the command line to see which commit was pushed last")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32650070",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --branches")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oneline"')]),s._v(" --abbrev-commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("142. Usage scenario: Mirror git branch to svn repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29284599",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-ref trunk")]),s._v("\n741ab63aea786882eafd38dc74369e651f554c9c refs/remotes/trunk\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline master | tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n1")])]),s._v("\n88464cfdf549a82b30ee7c52e53e2b310f0d9ec4 Initial version\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"88464cfdf549a82b30ee7c52e53e2b310f0d9ec4 741ab63aea786882eafd38dc74369e651f554c9c"')]),s._v(" >> .git/info/grafts\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("143. Usage scenario: How to prepend a character to every line of the body of a git commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60100339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'`%h` - %s%n%w(80,8,2)%b'")]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^        /> /'")]),s._v(" | sed -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\n\\n>/\\n>\\n>/g'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("144. Usage scenario: Extract all files changed in repo since a certain date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69842430",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-10-21"')]),s._v(" --name-only --pretty=format: | \\\nsort -u | \\\ngrep -ve "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^$'")]),s._v(" | \\\nxargs -I{} cp -v -u {} /destination/path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("145. Usage scenario: How can I find unsigned additions to a git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40608699",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Validate signatures on each and every commit within the given range")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("##")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if a ref is provided, append range spec to include all children")]),s._v("\nchkafter="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1+$1..}"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# note: bash users may instead use $'\\t'; the echo statement below is a more")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# portable option")]),s._v("\nt=$( echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" )\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check every commit after chkafter (or all commits if chkafter was not")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# provided) for a trusted signature, listing invalid commits. %G? will output")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# "G" if the signature is trusted.')]),s._v("\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"format:%H$t%aN$t%s$t%G?"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${chkafter:-HEAD}"')]),s._v(" \\\n  | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${t}G$"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# grep will exit with a non-zero status if no matches are found, which we")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# consider a success, so invert it")]),s._v("\n[ $? -gt 0 ]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("146. Usage scenario: Git show only the message for the latest commit of a specific file in a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54915128",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%b'")]),s._v(" <branch> -- path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("147. Usage scenario: How to get list of added and updated line numbers from a range of git commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39495976",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for COMMIT in $(git log --pretty=format:%h master...feature); do\n  for FILE in $(git ls-tree -r feature --name-only); do\n    for NUMBER in $(git blame --line-porcelain "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(" | egrep ^$COMMIT | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f3); do\n      echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(":$NUMBER\n    done\n  done\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("148. Usage scenario: How to merge a branch into master without changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49420970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reset "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git commit-tree -p "')]),s._v("$BRANCH_NO_CONTENT_CHANGE"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -p "')]),s._v("$BRANCH_PRETENDING_TO_MERGE_FROM"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -m "')]),s._v("Administrative (no-change) merge of $BRANCH_PRETENDING_TO_MERGE_FROM"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("$(git log -n 1 --pretty=format:%T "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH_NO_CONTENT_CHANGE"')]),s._v(")"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("149. Usage scenario: Push repository to new remote, one commit at the time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53419840",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do \n    git push origin $c:master\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* d2d3264 (HEAD -> master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc (origin/master) initial commit\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master\n6765170\nca354e5\nf3c54df\n9171144\nd2d3264\n\n\ntobi@TOBIAS-PC:/mnt/d/test/git/r$ for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do git push origin $c:master; done\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 235 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   c1873cc..6765170  6765170 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   6765170..ca354e5  ca354e5 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   ca354e5..f3c54df  f3c54df -> master\nCounting objects: 8, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (6/6), done.\nWriting objects: 100% (8/8), 762 bytes | 0 bytes/s, done.\nTotal 8 (delta 0), reused 0 (delta 0)\nTo ../b\n   f3c54df..9171144  9171144 -> master\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 274 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   9171144..d2d3264  d2d3264 -> master\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* d2d3264 (HEAD -> master, origin/master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("150. Usage scenario: How would I grep my git log to just show the commit messages, comma separated?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31684805",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" <range> | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("','")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('151. Usage scenario: How to make "git merge --log" stop flattening merge commits')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52669170",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD  # with e.g. `-10` to limit to 10\n\n:/^\\*/+,+!git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  \\%s'")]),s._v(" --first-parent ..MERGE_HEAD\n\ncase $2 in\nmerge)\n        git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD >${tempfile=`mktemp`}\n        sed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\*/,/^$/ { //!d }; /^\\*/ r '")]),s._v("$tempfile  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n        rm $tempfile\n        ;;\nesac\n\ncase $2 in\nmerge)\n        git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'  %s'")]),s._v(" --first-parent ..MERGE_HEAD \\\n        | sed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\*/,/^$/ { //!d }; /^\\*/ r /dev/stdin'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n        ;;\nesac\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("h2",{attrs:{id:"format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[s._v("#")]),s._v(" 🔹 --format")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I view a git log of just one user's commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1960    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4262780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jon"')]),s._v("\n\ngit log --author=Jon\n\ngit log --author=Smith\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\(Adam\\)\\|\\(Jon\\)"')]),s._v("\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^(?!Adam|Jon).*$'")]),s._v(" --perl-regexp\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %an'")]),s._v(" | \n  grep -v Adam | \n  cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f1 | \n  xargs -n1 git log -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Print commit message of a given commit in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 400    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3357357",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%B"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1 <commit>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%B"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --max")]),s._v("-count=1 <commit>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to get the last commit ID of a remote repo using curl-like command?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 132    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19176626",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do I get last commit date from git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 126    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25564443",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --format=%cd \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git: get number of changed lines per day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8154710",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --shortstat")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@{1 month ago}"')]),s._v(" \n 7 files changed, 29 insertions(+), 6 deletions(-)\n\ngit log --after=2011-01-01 --before=2011-01-31 --format=format: --shortstat master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do I log unique authors in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12768586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%an"')]),s._v(" | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git: changelog day by day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2979587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generates changelog day by day")]),s._v("\nNEXT=$(date +%F)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CHANGELOG"')]),s._v("\necho ----------------------\ngit log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --date=short | sort -u -r | while read DATE ; do\n    echo\n    echo [$DATE]\n    GIT_PAGER=cat git log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" * %s"')]),s._v(" --since=$DATE --until=$NEXT\n    NEXT=$DATE\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How move all commits from specific user to a new branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5469802",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=<author> --format=%H > /tmp/commit-by-x\n\ngit checkout --orphan commits-by-x\n\ntac /tmp/commit-by-x | while read sha; do git cherry-pick ${sha}; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: how to get git log without the commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40837352",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h $ad- %s [%an]"')]),s._v("\n\nHere:\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %ad = author date")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %an = author name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %h = commit hash (short)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %H = commit hash (full)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %s = subject")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- %d = ref names")]),s._v("\n \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Git clone changes file modification time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55609950",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-tree -r --name-only HEAD | while read filename; do\n  unixtime=$(git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%at"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename}"')]),s._v(")\n  touchtime=$(date -d @$unixtime +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y%m%d%H%M.%S'")]),s._v(")\n  touch -t ${touchtime} "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename}"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: nicely display file rename history in git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13620202",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" --name-only --follow -- README.md\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H%%'")]),s._v(" --name-only --follow -- README.md | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':a;N;$!ba;s/%\\n\\n/ /g'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to count number of commits per file pathname by author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28647880",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Just realized that if you use --name-only to print the filenames, pretty format as empty string, and use this method to sort, uniq, and sort by top number of commits, in *nix/OS X, you could use:\ngit log --name-only --author=John --pretty=format: | sort | uniq -c | sort -nr\n\n▲ E.g. if we were trying to find DHH's authors in Rails, we might do:\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%aN <%aE>'")]),s._v(" | LC_ALL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'C'")]),s._v(" sort -u | grep avid\n\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --pretty=format: | sort | uniq -c | sort -nr\n\n3624 \n 611 actionpack/CHANGELOG\n 432 activerecord/CHANGELOG\n 329 railties/CHANGELOG\n 206 activerecord/lib/active_record/base.rb\n 195 activesupport/CHANGELOG\n 157 actionpack/lib/action_controller/base.rb\n 153 railties/Rakefile\n 108 activerecord/lib/active_record/associations.rb\n  79 actionpack/lib/action_view/helpers/javascript_helper.rb\n  75 activerecord/lib/active_record/validations.rb\n  74 activerecord/test/base_test.rb\n  69 actionmailer/CHANGELOG\n  66 railties/lib/rails_generator/generators/applications/app/app_generator.rb\n  66 activerecord/Rakefile\n  66 actionpack/lib/action_controller/caching.rb\n  60 actionpack/lib/action_controller/routing.rb\n  59 railties/lib/initializer.rb\n  59 actionpack/Rakefile\n  57 actionpack/lib/action_controller/request.rb\n  ...\n\n▲ If you want to exclude the number of files not touched from the counts, use --format= instead of --pretty=format:, e.g.:\ngit log --name-only --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"David Heinemeier Hansson"')]),s._v(" --format: | sort | uniq -c | sort -nr\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: find out if a git commit was checked in before or after another commit given the hashes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14233620",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ci'")]),s._v(" <commit>\n\ngit rev-list <commitA> | grep $(git rev-parse <commitB>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to invert "),e("code",[s._v("git log --grep=<pattern>")]),s._v(" or How to show git logs that don't match a pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\n\nif (( $# < 1 )); then\n  echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage: $0 pattern [<since>..<until>]"')]),s._v("\n  exit 1\nfi\n\npattern=$1\nshift\n\ngit log --format=%H $@ |\n  grep -v -f <(git log --format=%H "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--grep=$pattern"')]),s._v(" $@) |\n  git log --pretty --stat --stdin --no-walk\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep A tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log-vgrep C tmp~2..tmp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stdin")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-walk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline </dev/null")]),s._v("\n83052e62f0dc1c6ddfc1aff3463504a4bf23e3c4 Z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git log: filter by commit's author date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21159158",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ai %aE %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: how can I customize git's merge commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51937574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git mergelogmsg branch-name")]),s._v("\n\n[alias]\n    mergelogmsg = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!f() { var=$(git symbolic-ref --short HEAD) && printf 'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n' $1 $var $1 > temp_merge_msg && git log --format=format:'%s' $var..$1 >> temp_merge_msg && printf '\\n\\nBranch %s commits:\\n' $var >> temp_merge_msg && git log --format=format:'%s' $1..$var >> temp_merge_msg && printf '\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n' >> temp_merge_msg && git log --left-right $var...$1 >> temp_merge_msg && git merge --no-ff --no-commit $1 && git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f\"")]),s._v(' \n\n[alias]\n1   mergelogmsg = "!f() { var=$(git symbolic-ref --short HEAD) && \n2        printf '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n'")]),s._v(" $1 $var $1 > temp_merge_msg && \n3        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" $var..$1 >> temp_merge_msg && \n4        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\nBranch %s commits:\\n'")]),s._v(" $var >> temp_merge_msg && \n5        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" $1..$var >> temp_merge_msg && \n6        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n'")]),s._v(' >> temp_merge_msg && \n7        git log --left-right $var...$1 >> temp_merge_msg && \n8        git merge --no-ff --no-commit $1 && \n9        git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to combine two unrelated git repositories, preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34861819",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git init\n\ngit remote add -f oldRepoA ../oldRepoA\ngit remote add -f oldRepoB ../oldRepoB\n\ngit log --all --oneline --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%at %H"')]),s._v(" | sort | cut -c12- | \n    xargs -I {} sh -c \n        'git format-patch -1 {} --stdout | \n         git am --committer-date-is-author-date'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Find Last 10 authors for a certain file in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7584017",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=%an foo.txt |awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' !x[$0]++'")]),s._v(" |head -10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How can I fast-forward a single git commit, programmatically?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2932985",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Convert reference names to commit IDs")]),s._v("\ncurrent_commit=$(git rev-parse HEAD)\nremote_commit=$(git rev-parse remote_name/remote_branch_name)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Call git log so that it prints only commit IDs")]),s._v("\nlog=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" $remote_commit | grep $current_commit)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Check the existence of the current commit in the log")]),s._v("\nif [ ! -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$log"')]),s._v(" ]\n  then echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Remote branch can be fast-forwarded!'")]),s._v("\nfi\n\nif [ ! -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$log"')]),s._v(" ]\nthen\n  # print the number of commits ahead of the current commit\n  ff_commits=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" \\\n    $current_commit..$remote_commit | wc -l)\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Number of fast-forwarding commits: $ff_commits"')]),s._v("\n\n  # fast-forward only one commit\n  if [ $ff_commits -gt 1 ]\n  then\n    next_commit=$(git log --topo-order --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" \\\n      $current_commit..$remote_commit | tail -1)\n    git reset --hard $next_commit\n  fi\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How do I make git post-receive emails be sent from the commit author?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2444096",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use the email address of the author of the last commit.")]),s._v("\nexport USER_EMAIL=$(git log -1 --format=format:%ae HEAD)\n$(dirname $0)/post-receive-email\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use the mapped email address (specified in .mailmap) of the author of the last commit.")]),s._v("\nexport USER_EMAIL=$(git log -1 --format=format:%aE HEAD)\n$(dirname $0)/post-receive-email\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How do you pull git committer information for Jenkins pipeline")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37755897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --format=\"%ae\" | head -1 > commit-author.txt'")]),s._v("                 \nreadFile("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'commit-author.txt'")]),s._v(").trim()                               \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Latest commit hash of subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12671468",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %aN %s %ad"')]),s._v(" -- $directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to reproduce the format of git log --oneline --decorate?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39887897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   git log --graph --decorate --date=short --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(bold blue)%h%C %C(bold green)%ad %C(auto)%d  %C(white)%s%C(reset)'")]),s._v(" -10   \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Git view latest log message for specific file in remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1913911",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cr %s"')]),s._v(" -- test.docbook\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to use GitHub commit message and commit id inside Jenkins pipeline?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50856646",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -1 ${GIT_COMMIT} # prints SHA and title line\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),s._v(" -1 ${GIT_COMMIT} # print commit, author, date, title & commit message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How do you find out which commit a file mode change came from?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45858813",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --summary")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%h | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mode change'")]),s._v(" -m1 -B2 | head -1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --summary")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%h <FILE> | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mode change'")]),s._v(" -m1 -B2 | head -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to view commits from one day only in a pretty format in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30377636",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 13"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"May 15"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %aN> %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Retrieve branch name inside iOS project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47798282",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit_version=$(git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(")\ngit_branch=$(git symbolic-ref --short -q HEAD)\ngit_tag=$(git describe --tags --exact-match 2>/dev/null)\n\nbuild_time=$(date)\ngit_branch_or_tag="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${git_branch:-${git_tag}}"')]),s._v("\n\ninfo_plist="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${BUILT_PRODUCTS_DIR}/${EXECUTABLE_FOLDER_PATH}/Info.plist"')]),s._v("\n/usr/libexec/PlistBuddy -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Set :CFBundleVersion '${git_branch_or_tag}-${git_version}'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${info_plist}"')]),s._v("\n/usr/libexec/PlistBuddy -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Set :BuildTime '${build_time}'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${info_plist}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to find which tag in a git repository contains a specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13850659",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git tag --contains <sha1>\n\ngit tag --contains $(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -1 -Sfoo) | head -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Find out which branch has the most recent version of a certain file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51796025",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --format=format:%H -n 1 -- path/to/file\n\ngit branch --all --contains commitID\n\ngit branch --all --contains "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --all --format=format:%H -n 1 -- path/to/file)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How to sort the output of git branch by most recent checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52143385",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --grep-reflog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"checkout:"')]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%gs"')]),s._v(" | cat -n | sed -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g"')]),s._v(" | tac\n\ngit checkout @{-nnn}\n\ngit checkout -\n\ngit config --global alias.lb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log -g --grep-reflog "checkout:" --format="%gs" | cat -n | sed -E "s/^\\s+([0-9]+).*from (.*) to .*/\\1 \\2/g" | tac; read -p "Aussuchen: " i; git checkout @{-$i}\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Count how many commits have modified a file extension")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51381828",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log :/*.txt :/**/*.txt\n\ngit log --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --format=%H :/*.txt :/**/*.txt |wc -l\n\ngit log --all --full-history --format=%H :/*.txt :/**/*.txt |wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: How to show log with filtering by author date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12901607",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %at'")]),s._v(" |\nperl -ane '\nBEGIN {\nuse DateTime::Format::Natural;\n$max_age = DateTime::Format::Natural->new->parse_datetime(\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last friday"')]),s._v("\n)->epoch;\n}\nprint $F[0], "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n"')]),s._v(" if $F[1] < $max_age;\n'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: git: get the list of files that have been modified along one specific file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42527934",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" <file-name> | xargs git show --name-only\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Getting the last commit date from a remote repo without cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67720640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("ssh remote.server /bin/bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cd /path/to/remote/repo && git log --all -1 --format=%cd'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Git command to get list of all committers to files containing specific text")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-grep.html"}},[s._v("git grep")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54790538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("files=`git grep -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"searh string"')]),s._v("`\n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an <%ae>'")]),s._v(" -- $files | sort -u\n\ngit log --all --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%an <%ae>'")]),s._v(" -- `git grep -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"search string"')]),s._v("` | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Find when a branch was merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21032447",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Update 2015-05-15\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%p <branch_name> | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" commit |")]),s._v("\n  xargs -I {} sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rev-list -1 --format=\"%h %ct\" {}'")]),s._v(" | grep -v commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" master | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" master | ")]),s._v("\n  xargs -I {} sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rev-list -1 --format=%p {}'")]),s._v(" | grep -v commit |\n  xargs -I {} sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rev-list -1 --format=\"%h %ct\" {}'")]),s._v(" | grep -v commit\n\n▲ Original\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%H <branch_name>..master | tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" master | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" master |")]),s._v("\n  xargs -I {} sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --ancestry-path --format=%H --merges {}..master | tail -1'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: How to get a particular line from git log --merges -n 1")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63699584",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges -n 1 --format=%B | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^Merge '")]),s._v("\n\ngit log --merges -n 1 --format=%B | sed -n -e 3p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How can I guess the last time a repository was fetched/pulled from a remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25208870",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("getref="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --format=\"%H\" -n 1'")]),s._v("\nif [ `$getref remotename/branchname` != `$getref branchname` ] ; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the local branch and the remote branch diverged! Please pull!"')]),s._v("\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How to query git log for Co-Authored-By")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61264586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s %(trailers:key=Co-authored-by)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: With Git, how to find who modified directory contents?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29630055",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for i in $(ls -1); do git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h  %<(28)%ai %<(30)%an $i"')]),s._v(" -n1 $i; done\n\n find . -maxdepth 1 -exec git log -n1 --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h  %<(28)%ai %<(30)%an {}"')]),s._v(" {} \\;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: GIT show all commits from branch missing in master using git cherry and format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39025861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simplifying: --no-walk and sed tricks\ngit cherry master branch_name | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^+"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //'")]),s._v(" | xargs -I {} \\\n    git --no-pager log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short -1 {}\n\ngit log --no-walk --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h,%an,%d,%ae,%ad,%s'")]),s._v(" --date=short \\\n    $(git cherry master branch_name | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^+ //p'")]),s._v(")\n\n▲ But in fact, it's all built in\ngit log --right-only --cherry-pick --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$format"')]),s._v(" master...branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: Git: How to list specific trailers (footers) in git-log format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60423945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s %(trailers:key=Issue,valueonly)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How to create tag automatically in SourceTree")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33890643",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\nversion=`git diff HEAD^..HEAD -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-parse --show-toplevel)"')]),s._v("/package.json | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\+.*version'")]),s._v(" | sed -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/[^0-9\\.]//g'")]),s._v("`\n\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$version"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n    git tag -a "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v$version"')]),s._v(" -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`git log -1 --format=%s`"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Created a new tag, v$version"')]),s._v("\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: How to programmatically determine whether a commit is in the current checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45608959",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=format:%H | grep -q <sha1 here>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How can I see more log lines in the git-rebase TODO editor session?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65983306",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config rebase.instructionFormat "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"..."')]),s._v("\n\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xargs echo"')]),s._v("\n\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cat | $(pwd)/script.sh"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor commit in $(git rev-list $1..HEAD | tac)\ndo\n    git log -n 1 $commit --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pick %h %B"')]),s._v(" | xargs echo\ndone;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Mass deleting local branches that has been rebased and merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24801581",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("last_commit_msg="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --oneline --format=%f -1 $branch)"')]),s._v("\nif [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --oneline --format=%f | grep $last_commit_msg | wc -l)"')]),s._v(" -eq 1 ]]; then\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: Find all dangling commits with a given ancestor - Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8499958",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("particular_ancestor_hash=<40 character hash>\nfor commit in `git fsck --unreachable|grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'unreachable commit'")]),s._v("|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3}'")]),s._v("`; do\n    if git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H'")]),s._v(" $commit|grep -q $particular_ancestor_hash; then\n        echo $commit\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How to get changes statistics per day in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27491329",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --shortstat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ci"')]),s._v(" --no-merges\n2012-09-25 10:32:03 -0700\n2012-09-25 10:55:39 -0700\n\n 33 files changed, 3759 insertions(+)\n2012-09-26 13:13:29 -0700\n\n 1 file changed, 60 insertions(+), 22 deletions(-)\n2012-10-05 14:31:02 -0700\n\n 2 files changed, 23 insertions(+), 35 deletions(-)\n2012-10-08 17:15:34 -0700\n\n 1 file changed, 27 insertions(+), 20 deletions(-)\n2012-10-11 17:08:52 -0700\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: How can I generate a Composer author list from Git's commit history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40297023",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"name": "%aN", "email": "%aE"},\'')]),s._v(" | sort |  uniq -c | sort -nr | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 > 5 {$1=\"\"; print $0}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: How to list only file names changed by a user between two commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56978946",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author=Tom --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" --name-only HEAD~5.. | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: how to checkout latest commit of a specific remote in bash script")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33675466",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\ngit branch --remotes                             |\\\ngrep origin/                                     |\\\ngrep -v origin/HEAD                              |\\\nxargs -n 1 git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%ct %h%n'")]),s._v(" |\\\nsort -n                                          |\\\ntail -1                                          |\\\ncut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: How to delete stash by commit sha")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39421193",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%H %gd'")]),s._v(" stash | \\\n    awk -v h=$hash "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == h { print $2 }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: How to count up the total lines of every committer in a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53625051",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%aN'")]),s._v(" | sort -u | \\\n  while read name; do\n    echo -en "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$name\\t"')]),s._v("\n    for FILE in $(git ls-files) ; do git blame $FILE | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$name"')]),s._v(" ; done | wc -l\n  done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: How do I list all files in a github repo with last editor and date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37224382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("function report(){\n  file=$1\n  #commit=$(git log -1 --pretty=%H -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  #Edit: use the following command instead, in order to deal with file paths with a space.\n  commit=$(git log -1 --pretty=%H -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  #if you want to ignore the files unchanged since the root commit, you could use:\n  #commit=$(git log -1 --pretty=%H --min-parents=1 -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(")\n  authorname=$(git log -1 $commit --pretty=%an)\n  commitdate=$(git log -1 $commit --pretty=%cd --date=short)\n  commitcomment=$(git log --format=%b -n 1 $commit)\n  status=$(git show $commit --pretty=%h --name-status | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(")\n  case $status in\n    A ) status=Added;;\n    C ) status=Copied;;\n    D ) status=Deleted;;\n    M ) status=Modified;;\n    R ) status=Renamed;;\n    T ) status=Changed;;\n    U ) status=Unmerged;;\n    B ) status=Broken;;\n    * ) status=Unknown;;\n  esac\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commit|$file|$authorname|$commitdate|$status|$commitcomment"')]),s._v("\n}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git ls-files | while read line; do report $line; done > report.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Edit:use the following command instead, in order to get all files, including deleted files.")]),s._v("\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ %h"')]),s._v(" --name-only | grep -v ^$ | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ "')]),s._v(" | sort -u | while read line;do report "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v("; done; > report.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: How to detach branch from the parent in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32596401",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# preserves branch config, remotes, reflog, merge options, what not")]),s._v("\ngit rev-parse develop >.git/info/grafts\ngit filter-branch -- develop\nrm .git/info/grafts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# preserves branch config etc")]),s._v("\ngit log -1 --format=%B develop \\ \n| git commit-tree develop: \\\n| xargs git update-ref refs/heads/develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# wipes branch config etc and you'll have to redo the commit message")]),s._v("\ngit checkout develop^0\ngit branch -D develop\ngit checkout --orphan develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# preserves branch config etc")]),s._v("\ngit checkout develop\ngit checkout --orphan junk\ngit commit -C develop\ngit checkout -B develop\ngit branch -D junk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: How to add author name to a custom git alias?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53251152",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%an%x09%s"')]),s._v("\n\ngit log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%C(blue)%an%C(reset)%x09%s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: How to reduce commit messages by count in github?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48961937",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=%s\n\ngit log -100 --format=%s | sort  | uniq -c | sort -rn\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: Filter by merge commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57478067",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --oneline\n\ngit log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: How to retrieve a branch after finishing a branch in gitflow")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12029007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you just did that, the feature would be second parent of the current commit (the merge commit). You can recreate the branch with\n git branch my-feature HEAD^2\n\n git checkout -b my-feature HEAD^2\n\n▲ If it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s been a while, it'")]),s._v("s probably not the second parent of the current commit. Use\n gitk \n\ngit log --graph --oneline\n\n▲ to find where that branch finished and use the HASH or tree-ish to recreat it. If you guarantee that the merge message is the default one, you can\ngit branch my-feature $(git log -1 --format=%H --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"merge branch 'my-feature'\"")]),s._v(")^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: How can I automatically embed commit information into a subtitles file that I'm tracking?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25466724",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# burn last commit date with subtitles in video")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exit on any errors")]),s._v("\nset -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# extract the head of test.ass and copy it to a temporary file")]),s._v("\nsed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Dialogue:/,$d'")]),s._v(" sub.ass > temp_head.ass\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# extract the tail of test.ass and copy it to a second temporary file")]),s._v("\nsed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/Dialogue:/,$p'")]),s._v(" sub.ass > temp_tail.ass\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# write the commit date to a third temporary file")]),s._v("\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dialogue: 0,0:00:00.00,0:00:10.00,Default,,0,0,0,,`git log -1 --format="')]),s._v("%cD"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\" | sed 's/ [+\\-][0-9]\\{4\\}//'`\\n\"")]),s._v(" > temp_mid.ass\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# concatenate all three temporary files into a fourth one")]),s._v("\ncat temp_head.ass temp_mid.ass temp_tail.ass > temp.ass\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clean up (delete the first three temporary files)")]),s._v("\nrm temp_head.ass temp_tail.ass temp_mid.ass\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# burn subtitles into the video")]),s._v("\nffmpeg -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../test_video.avi"')]),s._v(" -vf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"ass='temp.ass'\"")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"../test_video_out.avi"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clean up (delete the last temporary file)")]),s._v("\nrm temp.ass\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: Change author name and email of Git/GitHub repository keeping timestamps for all commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65578292",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FIRST_NAME LAST_NAME"')]),s._v("\ngit config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MY_EMAIL@SOME_DOMAIN.com"')]),s._v("\n\ngit rebase -i --rebase-merges --root --exec "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'GIT_COMMITTER_DATE="$(git log -n 1 --format=%aD)" git commit --amend --reset-author --no-edit --date="$(git log -n 1 --format=%aD)"\'')]),s._v("\n\ngit push -f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: How can I add my email/username to old commits without any email/username?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60984298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ae'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: How to show only filenames by commiter with git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37233755",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=%an | sort -u | while read line; do echo $line;git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$line"')]),s._v(" --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ %h'")]),s._v(" --name-only | grep -v ^/ | grep -v ^$ | sort -u;echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: Find commits of a git branch, which were not cherry picked into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67029088",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release \n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release |\nwhile read cmt_log \ndo\n    cmt_msg=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_log}"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ $1=\"\"; print }'")]),s._v("`\n    git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" %s"')]),s._v(" master..release | grep --fixed-string -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_msg}"')]),s._v(" > /dev/null || echo ${cmt_log}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: Finding my commits after pulling new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34056937",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate my-branch\n\ngit log --graph --decorate master my-branch\n\ngit reflog\n\ngit log --graph --decorate --format=oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: How to filter git log by tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62683508",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("tagRegex="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v("; # fill in your tag pattern here\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h %D'")]),s._v(" | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/ tag: .*$tagRegex/ {s/ .*//; p;q;}"')]),s._v(";\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: How to configure Jenkins to display the name and commit of the merged branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27122411",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("build = Thread.currentThread().executable\nworkDir = new File(build.getWorkspace().getRemote())\n\ngitlogProcess = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -n 2 --format=\\"%H %h %d\\""')]),s._v(".execute(null,workDir)\nlog = gitlogProcess?.text // Get the result\nitems = log?.readLines()?.getAt(1)?.split() // Second line is the commit that was merged onto master\n// Parse it\ncommit = items?.getAt(0)\nshortCommit = items?.getAt(1) \nmergeBranch = items?.getAt(2)?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"("')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v(")?.minus("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin/"')]),s._v(")\n// Update build name and description\n//buildNumber = build.getEnvironment(listener)?.get("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"BUILD_NUMBER"')]),s._v(") <-- This does not work, presumably because the environment is not yet created - if you need this, execute this script as a build step\ndisplayName = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${mergeBranch}-${shortCommit}"')]),s._v("\nbuild.setDisplayName(displayName)\n\ngithuburl = build.getParent()?.getProperty("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"com.coravy.hudson.plugins.github.GithubProjectProperty"')]),s._v(")?.getProjectUrl()?.commitId(commit)\ndescription = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"<a href='${githuburl}'>${shortCommit}-${mergeBranch}</a>\"")]),s._v("\nbuild.setDescription(description)\n\n\n// Return a map - this will be added to the environment variables\nreturn [\n  MERGE_BRANCH:mergeBranch,\n  MERGE_COMMIT:commit,\n  MERGE_COMMIT_SHORT:shortCommit\n]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: Get the file that modified most of times between two commits in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27922246",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --name-only --format=%n SHA1..SHA2 | Group-Object | Format-Table Count,Name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: How can I get the Git commits done in the last 3 months counted from the last commit on a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69288645",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date --date "')]),s._v("$(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai'")]),s._v(" <branch> -n1) - 3 months"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(" <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: git combine or merge two files in the same branch and same repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[s._v("git mv")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27851219",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm <good-location/file>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Removing bad file form good location'")]),s._v("\ngit mv <bad-location/file> <good-location/file>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Moving file to correct location'")]),s._v("\n\ngit log --follow -- <good-location/file>\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" master.. --name-status  -M100% --follow  -- temp3\n0d15571\n\nR100    temp10  temp3\ne55bab3\n\nM       temp10\n6f16545\n\nM       temp10\n0a849e3\n\nM       temp10\n1a06161\n\nC100    temp3   temp10\n95c8a20\n\nA       temp3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: Find the last commit ID of a File in the remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56530300",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("lastcommit=`git log --format=%h -1 <branch> -- $filename`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: How to extract columns about current commit in git local and remote repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49618817",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Name of current branch\ngit rev-parse --abbrev-ref HEAD\n\n▲ Hash of currently checked out commit (branch)\ngit rev-parse HEAD          # full hash\ngit rev-parse --short HEAD  # short hash\n\n▲ Remote tracking branch (upstream) of current branch\ngit rev-parse --abbrev-ref @{upstream}\n\n▲ Commit message subject of currently checked out commit\ngit log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: Recover files that were added to git, not committed and then accidentally deleted by git reset --hard")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41741248",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\n\nheadcommit="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --format=format:%H)"')]),s._v("\nheadcommitobject="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git/objects/${headcommit:0:2}/${headcommit:2}"')]),s._v("\nmkdir recovering_lost_files\nfind .git/objects/ -type f -newer "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$headcommitobject"')]),s._v("|while read -r path\ndo\n    obj="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${path#.git/objects/}"')]),s._v("\n    obj="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${obj/\\/}"')]),s._v("\n    git cat-file -p $obj > recovering_lost_files/$obj\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: Git: Preserving current code state and last four commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51501904",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nfunction gitConsolidation() {\n\n    # Default settings\n    numCommitsToKeep=4\n    branchName="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("\n    path="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/home/steve/test/testgit"')]),s._v("\n\n    # Set working directory\n    cd $path\n\n    # Get git repo name\n    gitRepoName=$(basename `git rev-parse --show-toplevel`)\n\n    # Print default message\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"** Prepairing to consolidate current Git Repo: $gitRepoName **"')]),s._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Branch: $branchName"')]),s._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Path: $path"')]),s._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Total past commits to keep: $numCommitsToKeep\\n"')]),s._v("\n\n    # Get required branch\n    git checkout $branchName\n\n    # Get size before consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Repo size before consolidation: $(du -hs)"')]),s._v(" \n\n    # Print current log list\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n* Git commits prior to consolidation *"')]),s._v("  \n    git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %s"')]),s._v("\n\n    # Get initial commit hash\n    initialCommitHash=$(git rev-list --max-parents=0 HEAD)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n* Found initial commit hash: $initialCommitHash *"')]),s._v("\n\n    # Get hash for commit to be consolidated with intiial commit\n    consCommitHash=$(git log --format=%H | head -$numCommitsToKeep | tail     -1)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"* Found hash for commit to consolidate with initial commit: $consCommitHash *"')]),s._v("\n\n    # Get hash for latest commit\n    latestCommitHash=$(git log --format=%H | head -1)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"* Found hash for latest commit $latestCommitHash *\\n"')]),s._v("\n\n    # Begin consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"* BEGIN: Git repo consolidation *"')]),s._v("\n\n    # Checkout commit to consolidate with initial commit\n    git checkout $consCommitHash\n\n    # Soft reset initial commit\n    git reset --soft $initialCommitHash\n\n    # Commit changes\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Consolidated commit $initialCommitHash -> $consCommitHash"')]),s._v("\n\n    # Set tag\n    git tag new_base\n\n    # Checkout\n    git checkout -b consolidated $latestCommitHash\n\n    # Rebase\n    git rebase --onto new_base $consCommitHash\n\n    # Get size after consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Repo size after consolidation: $(du -hs)"')]),s._v("\n\n    # Print current log list\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n * Git commits after consolidation *"')]),s._v("    \n    git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H - %s"')]),s._v("\n\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n* END: Git repo consolidation *"')]),s._v("\n}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Call function")]),s._v("\ngitConsolidation\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: With GIT show commits older than a specific date with specific format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31164947",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-merges --format=format:%cd -10 --until "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date -d "')]),s._v("$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"201506301524"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/....$/ &/'")]),s._v(")"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: How to list files by when it was first added to a Git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65433831",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%H | awk"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -F")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$1 == \"A\" {print}'")]),s._v("\nA       changelogs/fragments/70887_galaxy_token.yml\nA       test/integration/targets/unsafe_writes/aliases\nA       test/integration/targets/unsafe_writes/basic.yml\n[...]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: Script to remove commits older than date specified")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14921860",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=oneline HEAD@{5 years ago} | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: How do I merge changes of one file into another across different repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32461403",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd source_repository/\ngit log --reverse --follow -p --format=email   filename  > patch\n\ncd other_repository/\ngit am --whitespace=nowarn source_repository/patch\n\nrm source_repository/patch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: How to reliably determine last commit date in remote repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60281327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%cd"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=unix")]),s._v("\n1582030040\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return 'true' if $(1) does not exist or is older than branch $(2)")]),s._v("\ncheck_repo_change = $(shell if [ ! -e $(1) ] || [ $$(date +%s -r $(1)) -lt \\\n  $$(git log -1 --format=%cd --date=unix $(2)) ]; then echo true; fi)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Note that you\'ll probably need to run "git fetch" at some point')]),s._v("\nBRANCH := origin/master\n\nall: myfile\n.PHONY: all\n\nifeq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$(call check_repo_change,myfile,$(BRANCH))'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),s._v("\nmyfile:\n    set -x; echo ok >> $@\nelse\nmyfile:\n    $(info No change detected in branch $(BRANCH))\nendif\n.PHONY: myfile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: How Do I Compare 2 Git Branches By Commit Message And Not By Hash?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58212327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log develop...feature\n\ndiff -u <(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" feature..master | sort) <(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" master..feature | sort)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: Get github URL for most recent pushed commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53546118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ echo https://github.com/user/project/commit/$(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" -n 1)\nhttps://github.com/user/project/commit/7e30ecbffa4ce37d0cb9e2d10682ce8fa0b24e4b\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"abbrev-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abbrev-commit"}},[s._v("#")]),s._v(" 🔹 --abbrev-commit")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I see the commit differences between branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 382    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13965459",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'")]),s._v(" --abbrev-commit --date=relative master..branch-X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to see commits that were merged in to a merge commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6191836",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to see every commits merged in the last merge you can try that :\ngit log $(git merge-base --octopus \\\n$(git log -1 --merges --pretty=format:%P)).. --boundary\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \n* 8fae178 pif2\n* 20f8ba6 init\n\n▲ If I only want commits related to the last merge I have to use git log -1 --merges --pretty=format:%P which gives me the parents of the first merge available :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%P")]),s._v("\n69f431cec7859b61d33c7503c9431ceea2aaf3e0 3db39ca3ab1e8f70462db23d94590628b5e7ad7b\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=format:%P)")]),s._v("\n8fae178666e34a480b22e40f858efd9e7c66c3ca\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log $(git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges --pretty=format:%P)).. \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n\n▲ If you're a bit perfectionist you can also do this :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log ")]),s._v("\n$(git merge-base --octopus \\\n$(git log -1 \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--merges --pretty=format:%P))..$(git log -1 --merges --pretty=format:%H) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git find out the last commit i pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15552121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you mean the last commit you pushed to the master branch then, assuming your remote is origin:\ngit rev-parse origin/master\n\n▲ This will show you the commit ID of the tip of the master branch of the origin origin, as your local repository is currently aware.  This may mean that the commit is someone else's commit, if someone else pushed commits after you did and you have since fetched that branch.\ngit show -p origin/master\n\ngit log --pretty=oneline --abbrev-commit --graph --decorate --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git: how to see changes due to push?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 21    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2283501",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog show origin/master")]),s._v("\nca4f119 refs/remotes/origin/master@{0}: pull --rebase: fast-forward\nd303ece refs/remotes/origin/master@{1}: pull --rebase: fast-forward\nce28c26 refs/remotes/origin/master@{2}: pull --rebase: fast-forward\n0f71883 refs/remotes/origin/master@{3}: pull --rebase: fast-forward\n8c2f0dd refs/remotes/origin/master@{4}: pull --rebase: fast forward\n2958d6c refs/remotes/origin/master@{5}: update by push\n6e9558c refs/remotes/origin/master@{6}: pull --rebase: fast-forward\n8854b35 refs/remotes/origin/master@{7}: pull --rebase: fast-forward\nb96f25d refs/remotes/origin/master@{8}: pull --rebase: fast-forward\nefb0ab8 refs/remotes/origin/master@{9}: pull --rebase: fast-forward\n71c12ca refs/remotes/origin/master@{10}: pull --rebase: fast-forward\nd860e59 refs/remotes/origin/master@{11}: update by push\n6342dbb refs/remotes/origin/master@{12}: fetch: fast-forward\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline 6e9558c..2958d6c")]),s._v("\n2958d6c Commit Summary 4\n5cbe548 Commit Summary 3\n13d007c Commit Summary 2\n4f19ac3 Commit Summary 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v('6. Usage scenario: How to "git log" the entire repository and not just the branch you are on?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7758413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --decorate --pretty=oneline --abbrev-commit\n\n[alias]\n  history = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log --all --graph --decorate --pretty=oneline --abbrev-commit"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git: should merged branch be always deleted?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15762383",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --abbrev-commit --graph --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: how to show the full commit message on the merged branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21644859",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --abbrev-commit mergedBranch ^mainBranch --no-merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"oneline"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#oneline"}},[s._v("#")]),s._v(" 🔹 --oneline")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to output git log with the first line only?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 658    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4488858",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to count total lines changed by a specific author in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 356    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1265229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --oneline --shortstat\n\ngit log --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<authorname>"')]),s._v(" --pretty=tformat: --numstat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to show Git log history (i.e., all the related commits) for a sub directory of a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 310    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16343950",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("  git log -- A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show changes for src/nvfs")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" -- src/nvfs")]),s._v("\nd6f6b3b Changes for Mac OS X\n803fcc3 Initial Commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Show all changes (one additional commit besides in src/nvfs).")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\nd6f6b3b Changes for Mac OS X\n96cbb79 gitignore\n803fcc3 Initial Commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to copy commits from one Git repo to another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the old repo as a remote repository ")]),s._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the old repo commits")]),s._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# examine the whole tree")]),s._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),s._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check your local repo is correct")]),s._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# send your new tree (repo state) to github")]),s._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the now-unneeded reference to oldrepo")]),s._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#create LICENSE file, edit, add content, save")]),s._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit'")]),s._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure there are no unsaved changes")]),s._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pull the latest version from github")]),s._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move their master branch pointer to the one you published to github.")]),s._v("\ngit reset --hard origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How can I tell if one commit is an ancestor of another commit (or vice-versa)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 92    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18345268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use git merge-base --is-ancestor <commit1> <commit2>\ngit merge-base --is-ancestor <possible-ancestor-commit> <commit>\n\n▲ Other options\n▲ git log with triple dot ... notation\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --left")]),s._v("-right \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--first-parent --decorate <commit1>...<commit2>")]),s._v("\n\n▲ git branch --contains option\ngit branch --contains <commit-to-test>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: show commits since branch creation")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 81    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24769534",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("> git checkout master\nAlready on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n> git status ; git log --oneline\nOn branch master\nnothing to commit, working directory clean\nd9addce D\n110a9ab C\n5f3f8db B\n0f26e69 A\ne764ffa base\n\n> git checkout myBranch\n> git status ; git log --oneline\nOn branch myBranch\nnothing to commit, working directory clean\n3bc0d40 Z\n917ac8d Y\n3e65f72 X\n5f3f8db B\n0f26e69 A\ne764ffa base\n\n> git log --oneline master..myBranch\n3bc0d40 Z\n917ac8d Y\n3e65f72 X\n\n> git log --oneline master...myBranch\nd9addce D\n110a9ab C\n3bc0d40 Z\n917ac8d Y\n3e65f72 X\n\n> git diff master..myBranch\ndiff --git a/rev.txt b/rev.txt\nindex 1784810..e900b1c 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/rev.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/rev.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+Z")]),s._v("\n\n> git diff master...myBranch\ndiff --git a/rev.txt b/rev.txt\nindex 223b783..e900b1c 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/rev.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/rev.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-B")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+Z")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Git: created new branch from a wrong branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8430897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout new-feature2  \ngit rebase --onto develop new-feature new-feature2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the stuff from new-feature to new-feature2 onto develop branch")]),s._v("\n\ngit checkout develop\ngit log --oneline new-feature..new-feature2 \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for every commit call:")]),s._v("\ngit cherry-pick <commit-id> # note, newer versions of cherry-pick allow multiple commits at once\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to know if latest commit to master has been pushed to the remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 48    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21989798",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Do\n> git status\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\nnothing to commit, working directory clean\n\n▲ If the output instead begins with \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch is ahead of 'origin/master' by 1 commit.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git push" to publish your local commits)')]),s._v("\n\n▲ If the commit you are interested in is not the latest, then you can do\n> git log --decorate --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Git search all diffs")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 48    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11069489",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("C:\\src\\msysgit\\src>git log --oneline --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"8\\.5\\.8"')]),s._v("\nd938476 Make `NO_SFX=1 portable-release.sh` work\nef1dc94 Update tk to version 8.5.8\na910049 Update tcl to version 8.5.8\na702d7f tcltk: update to 8.5.8 and exclude release.sh from the cleanup list\n\nC:\\src\\msysgit\\src>git log --oneline -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version=8.5.8"')]),s._v("\n7be8622 tcltk: update release.sh script for tcl/tk 8.5.9\na702d7f tcltk: update to 8.5.8 and exclude release.sh from the cleanup list\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git changelog: how to get all changes up to a specific tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 44    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7387677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate v0.1.0\n\ngit log --oneline --decorate v0.0.9..v0.1.0\n\ngit shortlog v0.1.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: git: See changes to a specific file by a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44246693",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status include/svl/itemset.hxx")]),s._v("\n00aa9f622c29 Revert "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"used std::map in SfxItemSet"')]),s._v("\nM       include/svl/itemset.hxx\nafaa10da2572 make SfxItemSet with SAL_WARN_UNUSED\nM       include/svl/itemset.hxx\n[snip]\na7724966ab4f Bin comments that claim to say why some header is included\nM       include/svl/itemset.hxx\nb9337e22ce1d execute move of global headers\nR100    svl/inc/svl/itemset.hxx include/svl/itemset.hxx\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --diff")]),s._v("-filter=R"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status include/svl/itemset.hxx")]),s._v("\nb9337e22ce1d execute move of global headers\nR100    svl/inc/svl/itemset.hxx include/svl/itemset.hxx\ne6b4345c7f40 #i103496#: split svtools in two libs, depending on whether the code needs vcl or not\nR100    svtools/inc/svtools/itemset.hxx svl/inc/svl/itemset.hxx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to stop merging in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28416721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge --abort\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit reset --merge\n\ngit reset --hard @{1}\n\ngit log --graph --decorate --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How do I determine the source branch of a particular branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6427205",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream <branch> [<start-point>]\n\ngit diff <mybranch>..master # commits in master that are not in mybranch\ngit diff <mybranch>..2.2 # commits in 2.2 that are not in mybranch\n\ngitk --all\ngit log --graph --color --decorate --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to merge git commits in the develop branch to a feature branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17860574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Using git to see all logs related to a specific file extension within subdirectories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29665291",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.txt'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Squash all your commits in one, before a pull request in github")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31669260",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$> git log --oneline\naf28aeb Another test\na680317 Try something\nd93792b Edit both files\nf23cdbd Second commit add b\n6f456bc First commit add a\n\n$> git log --oneline\n5f98806 Fix bug\nd93792b Edit both files\nf23cdbd Second commit add b\n6f456bc First commit add a\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to get birds eye view of git tree with just branch names, not individual commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8137582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --all --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('20. Usage scenario: Include submodule commit messages with "git log"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26640048",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline -U0 --submodule Tag1..Tag2 | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[*| /\\\\]+([0-9a-f]{7} |Submodule |> |$)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Finding all files touched by a particular author in git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18784316",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"authorname"')]),s._v(" | while read commit_hash; do git show --oneline --name-only $commit_hash | tail -n+2; done | sort | uniq\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to show local branch history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14889649",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to find git commits in the repository by commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13955279",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate | less\n/ message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to show git log with commit numbers?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51629982",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" | nl")]),s._v("\n 1  91236f3 Message\n 2  a611069 Message\n 3  f2813e7 Message\n 4  01b59e4 Message\n 5  2343455 Message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Git: Merge in branch without polluting the Master history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19122081",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph\n\ngit log --oneline --first-parent\n\neaaec50 Merge git://github.com/git-l10n/git-po\n2809258 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sb/mailmap-updates'")]),s._v("\n8ed205a git-remote-mediawiki: ignore generated git-mw\n96cb27a Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'maint'")]),s._v("\n\ngit config --global alias.l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'log --oneline --graph'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Able to recover a deleted branch using git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18465321",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to combine two unrelated git repositories, preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34861819",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git init\n\ngit remote add -f oldRepoA ../oldRepoA\ngit remote add -f oldRepoB ../oldRepoB\n\ngit log --all --oneline --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%at %H"')]),s._v(" | sort | cut -c12- | \n    xargs -I {} sh -c \n        'git format-patch -1 {} --stdout | \n         git am --committer-date-is-author-date'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: "),e("code",[s._v("git log --follow --graph")]),s._v(" skips commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46492159",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --cc")]),s._v(" -- b.txt")]),s._v("\n*   e5a17d7 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'feature'")]),s._v("\n|\\  \n| | \n... \n* | 52e75c9 Move\n|/  \n|   diff --git a/a.txt b/b.txt\n|   similarity index 100%\n|   rename from a.txt\n|   rename to b.txt\n* 7590cfd First commit\n  diff --git a/a.txt b/a.txt\n  new file mode 100644\n  index 0000000..e965047\n  --- /dev/null\n  +++ b/a.txt\n  @@ -0,0 +1 @@\n  +Hello\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How can I make git list all changed files of a certain type in a specific path for a specific bug?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15836745",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep=xyz -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.php'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(328)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\nf687708 bar x, y, not a\ndfb4b96 foo d, e, f\ndf18118 foo a, b, c\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(329)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=a")]),s._v("\nf687708 bar x, y, not a\ndf18118 foo a, b, c\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("ebg@ebg(330)$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=a -- ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.*'")]),s._v("\ndf18118 foo a, b, c\n\ngit log --oneline --grep=a -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*/a.*'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'a.*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: How can I get/list/see all the descendants of a commit with git (or gitk)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23546539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all BRANCH~1..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n* 20db61f 2\n* 3923af1 1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n* 65b716e (c) c-5\n* ebe2a0e c-4\n* 2ed9abe (b) b-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-1'")]),s._v("\n[z (root-commit) bc0c0bb] z-1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-2'")]),s._v("\n[z 1183713] z-2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* 1183713 (HEAD -> z) z-2\n* bc0c0bb z-1\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master~1..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n* 338432a (c) c-5\n* 2115318 c-4\n* 43a34dc (b) b-4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Can I squash "),e("em",[s._v("other peoples")]),s._v(" git commits in a submitted PR?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33643502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Comments ended up turning into an answer so I'll summarize them here:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n7e8be9c Red\nb740f97 Blue\n325b375 Blue\n553d733 Red\nbb5599b Red\n\n▲ In your console, choose "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"p"')]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pick"')]),s._v(" for the first Blue commit in the list (bd63d63) and for all the others, give it "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f"')]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fixup"')]),s._v(" to discard their commit messages, or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s"')]),s._v(" or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"squash"')]),s._v(" if you want to keep the commit messages for them:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" HEAD~5")]),s._v("\npick bb5599b Red\npick 553d733 Red\npick 325b375 Blue\nfixup b740f97 Blue\npick 7e8be9c Red\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\na341d97 Red\n488c19e Blue\n553d733 Red\nbb5599b Red\n\n▲ If they haven't then your best bet is to cherry-pick the Blue commit into a separate branch (without either Red or Blue) or rebase it out, rebase the original and squash the Red commits while discarding the Blue commit, then merge the temporary branch back in, e.g.:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" tempbranch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" XXXXXXX # this is the commit BEFORE any red or blues")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick 488c19e")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" HEAD~4")]),s._v("\npick bb5599b Red\nfixup 553d733 Red\ndrop 488c19e Blue\nfixup a341d97 Red\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick 488c19e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\nfc96b04 Blue\n0280ef9 Red\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How can I limit the log to all the descendants of a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31266614",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How to limit the log to all the descendants of a given revision\ngit log --all --ancestry-path ^<rev>\n\ngit log --all --ancestry-path ^D\n\ngit log --all --ancestry-path ^X\n\n▲ What's wrong with git log --all --ancestry-path D^!?\ngit log --all --ancestry-path D^!\n\ngit log --all --ancestry-path D^!\n\ngit log --ancestry-path D ^C feature master\n\ngit log --ancestry-path ^C feature master\n\ngit log --ancestry-path ^D feature master\n\ngit log --all --ancestry-path ^D\n\n▲ Test\n$ mkdir gittest\n$ cd gittest/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A\\n"')]),s._v(" > README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch feature")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout feature")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* e234427 (HEAD -> feature) Y\n* cf98c6b X\n| * b3d493a (master) E\n| * e2bb266 D\n|/  \n* dfe0267 C\n* 0be7d42 B\n* 674356e A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ = D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" master~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" feature~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ == D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^master~")]),s._v("\nb3d493a E\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^feature~")]),s._v("\ne234427 Y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: git-log missing merge commit that undid a change")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56556222",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\n▲ Long\n▲ git log without History Simplification\ngit log --all --decorate --oneline --graph\n\n*   cc7285d (HEAD -> master, branch) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into branch\n|\\  \n| * ad686b0 changed x to x2, z to z2\n* | dcaa916 changed y to y2, z to z3\n|/  \n* a222cef initial commit\n\ngit log dcaa916\n\n▲ git log with History Simplification\n...--F--G--H--...\n\n...--K\n      \\\n       M\n      /\n...--L\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^1 cc7285d")]),s._v("\nM       z\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status cc7285d^2 cc7285d")]),s._v("\nM       x\nM       y\nM       z\n\n▲ Caveats\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: Visualize git branch topology only, with no commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51838603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --oneline --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: How can I know in git if a branch has been already rebased onto master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34337939",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --cherry master...some-branch\n\ngit checkout master~0\ngit merge some-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: How to get a commit id after a branch creation?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45461258",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Suppose you have the following situation:\nC0 --- C4 --- C5          <= master\n   \\\n    \\--- C1 --- C2 --- C3 <= B1\n\n▲ If you execute:\ngit log --oneline master..B1\n\nC3 COMMIT3-MESSAGE\nC2 COMMIT2-MESSAGE\nC1 COMMIT1-MESSAGE\n\n▲ Then if you execute:\ngit rev-parse C1^\n\nC0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: How to get 'git diff' to only show commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33641558",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -n 10\n\ngit log --oneline --graph --decorate -n 10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How to use GitHub commit message and commit id inside Jenkins pipeline?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50856646",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -1 ${GIT_COMMIT} # prints SHA and title line\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"medium"')]),s._v(" -1 ${GIT_COMMIT} # print commit, author, date, title & commit message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How can I discover the git commit hash that I stashed from?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62867395",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show stash@{0}^\ngit log -1 --oneline stash@{0}^\ngit rev-parse stash@{0}^\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How can I see the git history of a deleted branch (used git flow)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18049923",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("* | |   e553bf0 resolved merge conflicts\n|\\ \\ \\  \n| * | | 6b30050 fixed test db error\n| * | |   64909f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'develop'")]),s._v(" into feature/b\n\n6b30050 HEAD@{43}: checkout: moving from develop to feature/a\ne553bf0 HEAD@{44}: commit (merge): resolved merge conflicts\n\n▲ Looking at just the reflog\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout develop")]),s._v("\ne553bf0 HEAD@{42}: checkout: moving from feature/a to develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout branch A")]),s._v("\n6b30050 HEAD@{43}: checkout: moving from develop to feature/a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge branch A? Resolve conflicts and commit")]),s._v("\ne553bf0 HEAD@{44}: commit (merge): resolved merge conflicts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout develop")]),s._v("\n7a0ad6b HEAD@{45}: checkout: moving from feature/a to develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout branch A")]),s._v("\n6b30050 HEAD@{46}: checkout: moving from develop to feature/a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge branch B into develop")]),s._v("\n7a0ad6b HEAD@{47}: merge feature/b: Merge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Move from branch B to develop (i.e. checkout commit 921ae46)")]),s._v('\n921ae46 HEAD@{48}: checkout: moving from feature/b to develop\n\n▲ Viewing the history of the merged branch\ngit log --oneline --graph <sha of merge into develop>^2\n\n[alias]\n    datelog = log --format=\\"%C(yellow)%h%C(reset) %C(cyan dim)%ad %C(red bold)%cd %C(reset)%s\\" --graph\n\n▲ Favor rebase over merge (usually)\n'),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# From feature branch X, sync with develop")]),s._v("\ngit rebase develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Switch to develop and merge")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (either fast-forward or merge commit, your choice)")]),s._v("\ngit checkout develop\ngit merge --no-ff X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: Filter git log by author or branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53683157",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("(git rev-list --branches=staging*;git rev-list --all --author=my_name) \\\n| git log --stdin --no-walk --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: List commits BEFORE the given Commit ID")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55549255",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --first-parent cda8 -- dir1/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How do I reconnect a Git branch that has separated from master? (And duplicated its parents?)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9565850",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: git: finding which merge brough commit into the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11376837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --ancestry-path --merges <commit-of-interest>..C\n\ngit log --oneline --graph --color --decorate \\\n    --ancestry-path <commit-of-interest>..C\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to rename a git folder to a previously existing folder name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23862160",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --name-status\n* 44fb01b Rename skadoosh to foo # <== Rename skadoosh to foo\n| A     foo/derp.txt\n| D     skadoosh/derp.txt\n* c7af83c Add derp               # <== Create skadoosh\n| A     skadoosh/derp.txt\n* 344e215 Remove foo             # <== Delete foo\n| D     foo/hello.txt\n* cff7b45 Say goodbye\n| M     foo/hello.txt\n* 7fc9da5 Add hello.txt          # <== Create foo\n  A     foo/hello.txt\n\ngit log --oneline --graph --name-status -- foo\n* 44fb01b Rename skadoosh to foo   # Add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" (was skadoosh)\n| A     foo/derp.txt\n* 344e215 Remove foo               # Delete foo\n| D     foo/hello.txt\n* cff7b45 Say goodbye\n| M     foo/hello.txt\n* 7fc9da5 Add hello.txt\n  A     foo/hello.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Find the latest file(s) added to a git repository with name(s) matching a given wildcard pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25457637",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" -- ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*/test*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: How to fix a wrong merge in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44285140",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master  // switch to master\ngit checkout -b fix_it  // create a fix_it branch, and switch to it\ngit rebase -i <hash_right_before_bad_commit> // cherry-pick all the good commits - leave out the bad one\n\ngit checkout master\ngit branch old_master // create an old_master branch in case you want to rollback\ngit reset fix_it  // now master has the new fixed history (without the bad commit)\n\n// double-check your branches and make sure everything looks ok (and the bad commit is gone from your history)\ngit log --graph --all --oneline --decorate-short\n\n// if everything looks good, push the changes to your remote repository\ngit push origin master --force // you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ll need to force it since you'")]),s._v("ve re-written history\n\n// clean up the tmp branches\ngit branch -D fix_it, old_master\n\n// inform your team members to force get master (or just to be safe, just re-clone repository).\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How to hide remote branches without deleting them from remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68573305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --exclude=refs/remotes/* --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: How can I calculate the number of commits that changed a line in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59394118",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -L 71,71:package.json | grep diff | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: Restore files in git repo without commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22273445",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Anyway, if you committed your files at some point, then they are probably not lost. Are you sure you don't have them on any branch? Check this first:\ngit log --graph --decorate --all --oneline\n\n▲ If you don't see your commits, then you can try to recover deleted files with:\ngit fsck --lost-found\n\nChecking object directories: 100% (256/256), done.\nChecking objects: 100% (3/3), done.\ndangling blob 058a46ad6fec7b6ee95710eb06daa0b8169a5da0\ndangling blob f1d509348c7689f0f127d9eba5324db8221d5603\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: How to repair a git history and correctly merge unrelated histories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58022936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How git log works when there is more than one commit to show\n... <-F <-G <-H ...\n\ngit log master develop origin/feature\n\n▲ Think about how the rename-detection interacts with the priority queue\nM     (merge commit)\n|\\\n| B   (parent #2)\nA     (parent #1)\n\n*   f11ea2a (HEAD -> master) merge A and B to final\n|\\  \n| * 811819b (B) B\n* 50d92c7 A\n\ngit log --name-status --oneline --follow --full-history -m -- final\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-history"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" -- final")]),s._v("\nf11ea2a (from 50d92c7) (HEAD -> master) merge A and B to final\nR100    A       final\n50d92c7 A\nA       A\n\n▲ Conclusion\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: Forgot branch name where code was committed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24829245",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"class Edge"')]),s._v(" --source --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: Does git have an option to show the commits to be merged before performing the merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18579731",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph <branch-to-merge-into>..<branch-to-be-merged>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: Same code different git files, merging with keeping history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[s._v("git am")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19182931",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone A C")]),s._v("\n\n$ cd B\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v("|tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")])]),s._v("\n1234beef Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git format-patch 1234beef..HEAD")]),s._v("\n\n$ cd C\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git am ../B/*.patch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: How to count how many times each file was modified in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43898506",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor file in *.php;\ndo\necho $file\ngit log --oneline -- $file | wc -l\ndone\n\ngit log \n\ngit log --oneline \n\ngit log -- filename\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-09T16:36:00-07:00"')]),s._v(" --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2017-05-10T08:00:00-07:00"')]),s._v(" -- myfile\n\ngit log --pretty=format\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: Show specific commits in git log, in context of other commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61511914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate=no --graph | less -p $(git log --pretty=%h -- Makefile | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(')\n\n[alias] hl-graph = !git log --oneline --graph --color | less -R -p $(git log --pretty=%h \\"$@\\" | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(") && :\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: How to know how many commits between two specified commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22367422",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline A..B | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: Git: How to list all branches that were created from a specific branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56370858",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path  --branches --not $(git merge-base --all master develop) \\\n        --pretty=%D  --simplify-by-decoration --decorate-refs=refs/heads\n\ngit log --graph --decorate-refs=refs/heads --oneline \\\n         --branches --simplify-by-decoration \\\n         --ancestry-path --boundary --not `git merge-base master develop`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: git log commit count for every file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11729072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline ${filename} | wc -l\n\ngit log --pretty=format:%ae ${filename} | sort -u | wc -l\n\ngit log --since=${date1} --until=${date2} --pretty=format:%ae ${filename} \\\n    | sort -u | wc -l\n\nfind | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\./\\.git'")]),s._v(" | while read filename\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${filename} has $(git log --oneline ${filename} | wc -l) commits"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: How to find out if a Git commit is included in a release?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32852489",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pull/122/commits'")]),s._v("\n\ngit log --oneline --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'version'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: How to split a git repository into recent and older commits at a specific commit point, preserving branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48396032",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First create a branch for the historical commits\ngit branch history $TRUNCPOINT\ngit push project-history history:master\ngit push project-history A\n\ngit log --graph --oneline --decorate --all\n* fdc8f84 (A) branchA a1\n| * 7237a3e (HEAD -> master) fourth\n| * 55be55d third\n|/  \n* 26555d8 second\n* 5a68ca2 first\n\n▲ Create a base commit to serve as the parent for the recent commits\nMESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository"')]),s._v("\nBASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n▲ Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\ngit filter-branch -- --all\ngit push project-recent master\ngit push project-recent B\n\ngit log --graph --oneline --decorate --all\n* 2335aeb (B) branchB b2\n* 2bb7ea3 branchB b1\n| * 83c3ae9 (HEAD -> master) sixth\n|/  \n* 25931c5 fifth\n* 1e1e201 fourth\n* a7f3373 Get history from historical repository\n\n▲ Fully reproduced example bash script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nWORKDIR=${PWD}\n\ncreate_repos () {\n    rm -rf repo-split-example repo-split-recent repo-split-history\n    # Create the repo to be split\n    example_repo\n\n    # Create the repo to contain the historical commits\n    HISTREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-history"')]),s._v("\n    mkdir ../repo-split-history\n    cd ../repo-split-history/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-history $HISTREPO\n\n    # Create the repo to contain the recent commits\n    RECEREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-recent"')]),s._v("\n    mkdir ../repo-split-recent\n    cd ../repo-split-recent/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-recent $RECEREPO\n}\n\nexample_repo () {\n    # Part I: set up a test repo with our example commits\n    mkdir repo-split-example\n    cd repo-split-example/\n    git init\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We want to split the repository into project-recent and project-history portions, following the instructions at https://git-scm.com/book/en/v2/Git-Tools-Replace., but also including branches."')]),s._v(" > README.md\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n\n    git checkout -b A HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch A change."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchA a1"')]),s._v("\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Third commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"third"')]),s._v("\n    TRUNCPARENT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fourth commit."')]),s._v(" >> README.md \n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fourth"')]),s._v("\n    TRUNCPOINT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fifth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fifth"')]),s._v("\n    FIFTH=`git rev-parse HEAD`\n\n    git checkout -b B HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b1"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b1"')]),s._v("\n    B1=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b2"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b2"')]),s._v("\n    B2=`git rev-parse HEAD`\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sixth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sixth"')]),s._v("\n\n    # Now we have a repo with the requisite structure, ready to be split\n    git log --graph --all --oneline --decorate\n}\n\n\nsplit_repo () {\n    # Part II: Split the git repo into historical and current halves at $TRUNCPOINT\n    # Following guidelines at https://git-scm.com/book/en/v2/Git-Tools-Replace\n\n    # First create a branch for the historical commits\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Branching history at $TRUNCPOINT"')]),s._v("\n    git branch history $TRUNCPOINT\n    git log --graph --oneline --decorate history A\n\n    # Now copy the history repo to the remote HISTREPO repository\n    git push project-history history:master\n    git push project-history A\n\n    # Now to split the repo to get the recent history from TRUNCPOINT to HEAD of master\n    # Create a base commit for the new new recent history\n    MESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository at $HISTREPO"')]),s._v("\n    BASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n    # Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\n    git filter-branch -- --all\n\n    # Finally, push the current rewritten master and associated branches to a new repository\n    git push project-recent master\n    git push project-recent B\n}\n\ncreate_repos\nsplit_repo \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: Retrieve commits containing a given blobID")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67714496",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --find")]),s._v("-object 8b01793845ff65b7e3244259842af3d3de63e0a1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --find")]),s._v("-object 8b01793845ff65b7e3244259842af3d3de63e0a1")]),s._v("\n6aae0e2ad2 (from 6aac70a870) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'jh/simple-ipc-sans-pthread'")]),s._v("\n36a255acd1 (from 1e1c4c5eac) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zh/ref-filter-push-remote-fix'")]),s._v("\ne004fd6b69 (from e6f68f62e0) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ls/typofix'")]),s._v("\n52371bf449 (from 3a7f0908b6) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mt/clean-clean'")]),s._v("\n    [many more output lines snipped]\n27d7c8599b (from 8b70966aa9) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'js/default-branch-name-tests-final-stretch'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: Git - transferring all commits to another branch and creating a new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12077848",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --move master develop\ngit checkout --orphan master\ngit rm -rf . ;# abandon the staged, orphaned changes\necho README > README ;# put something in this working directory\ngit add README && git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit of <my_project>"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout develop && git checkout master")]),s._v("\nerror: pathspec "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" did not match any file(s) known to git.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nfatal: Non-fast-forward commit does not make sense into an empty head\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n README | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 README\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n*   867a1f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'develop'")]),s._v("\n|\\  \n| * 22df145 README\n* 15ba82a Initial commit of test project\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: How to invert git log --author=me? (Without using Perl)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29118788",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --perl-regexp --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^((?!excluded-author-regex).*)$'")]),s._v("\n\ngit log --oneline --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %an %s"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: Fork remote SVN repo to git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13964150",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("nexus-Tablet8\\nexus C:\\Users\\nexus\\Development\\Misc\\alivepdf-read-only\n[master]# git log --oneline -3\nc3b93fb Add the test case reported by the user in the issue 338.\n3577380  - now set the unit to the unit of the new page in addPage.  - add *MarginPt to keep the values in pixel, the olc\n08653f Add a test case to test issue 340.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: Find a commit merging two ancestors")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52480919",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --oneline A..D > /tmp/logA\ngit log --ancestry-path --oneline B..D > /tmp/logB\ncomm -12 /tmp/logA /tmp/logB | tail -1\n\ncomm -12 <(git log --ancestry-path --oneline A..D) <(git log --ancestry-path --oneline B..D) | tail -1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: In git, how do I verify that bug fixes are in both the Release branch and in master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63169305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" <branchname> | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^Bug-'")]),s._v(" | sort\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: Git branches cannot see changes after rebase of master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25786196",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: How to graph git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38348690",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate refs/heads/\n\ngit for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads/\n\ngit branch --no-merged\n\ngit log --decorate --graph --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: How to squash merged git changeset")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33765268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph\n* d3959f3 Something\n* 9e58b42 Modify new\n*   ad1dea6 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mybranch'")]),s._v("\n|\\  \n| * e75658b somechange\n* | 1076214 New File\n* | 49fe418 Updated on master\n|/  \n* b94640d Updated\n* da15c9c Initial commit\n\ngit log --oneline --graph\n* 89fe296 Something\n* d9620cc Modify new\n* 6301614 New File - somechange\n* 49fe418 Updated on master\n* b94640d Updated\n* da15c9c Initial commit\n\ngit rebase -i ad1dea6~2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a more common form is to modify n number of commits starting at HEAD")]),s._v("\ngit rebase -i HEAD~n\n\ngit reflog\n\ngit reset --hard <SHA>\n\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: How to apply patch without knowing the original version the diff file comes from?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53136774",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse 91919ad")]),s._v("\n91919adb4a289234062a27bed0276cb098d1e5d5\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --find")]),s._v("-object=91919adb4a289234062a27bed0276cb098d1e5d5")]),s._v("\ne0597baed57 Remove Carve boolean\ne8daf2e3ea1 CMake: cleanup\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --find")]),s._v("-object=91919ad")]),s._v("\ne0597baed57 Remove Carve boolean\ne8daf2e3ea1 CMake: cleanup\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --count")]),s._v(" e8daf2e3ea1..e0597baed57")]),s._v("\n752\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show e8daf2e3ea1 -- extern/CMakeLists.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit e8daf2e3ea17c2e9569e6fc9b49879c74d9a8c22")]),s._v("\nAuthor: Campbell Barton [snip]\n\ndiff --git a/extern/CMakeLists.txt b/extern/CMakeLists.txt\nindex f7e98525b8b..91919adb4a2 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/extern/CMakeLists.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/extern/CMakeLists.txt")]),s._v("\n[snip]\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show e0597baed57 -- extern/CMakeLists.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit e0597baed57fa7a9dfaf6dff6d0fa120784d21ea")]),s._v("\nAuthor: Sergey Sharybin [snip]\n\ndiff --git a/extern/CMakeLists.txt b/extern/CMakeLists.txt\nindex 91919adb4a2..2e8589ffd17 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/extern/CMakeLists.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/extern/CMakeLists.txt")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: How to «git log --branches» except some specific branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58561987",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --no-walk --oneline --exclude=master --branches\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: how do I determine whether git history is linear?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41545950",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for esthetics : --oneline will output one single line per filtered commit")]),s._v("\ngit log --oneline --min-parents=2 A..G\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if output is empty : linear history")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and :")]),s._v("\ngit log --oneline --min-parents=2 A..G | wc -l\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# should give you the number of merge commits between A and G")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: Commit on new branch isn't visualized")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15014114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to check what git rebase had changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62303137",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline origin/master master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: Github showing an incorrect diff between main branch and PR branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63604391",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/pmacaluso3/merge_conflicts")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'merge_conflicts'")]),s._v("...\nremote: Enumerating objects: 18, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (15/15), done.\nremote: Total 18 (delta 1), reused 13 (delta 0), pack-reused 0\nUnpacking objects: 100% (18/18), done.\n$ cd merge_conficts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/head:pr2")]),s._v("\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/head -> pr2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   7b4d901 (HEAD -> main, origin/main, origin/HEAD) Merge pull request #3 from pmacaluso3/testing-merge-conflicts\n|\\  \n| *   8941f5a (origin/testing-merge-conflicts) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" into testing-merge-conflicts\n| |\\  \n| |/  \n|/|   \n* |   5f144f2 Merge pull request #1 from pmacaluso3/pete/addition\n|\\ \\  \n| * | bffd4d1 addition!\n|/ /  \n| * 660b014 testing\n|/  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show 0283a25 | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@/ /'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa")]),s._v("\nAuthor: famousPete <pete.macaluso generalassemb.ly>\nDate:   Wed Aug 26 13:37:10 2020 -0400\n\n    initial\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..45b983b\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/README.md")]),s._v("\n @ -0,0 +1 @@\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+hi")]),s._v("\ndiff --git a/main.js b/main.js\nnew file mode 100644\nindex 0000000..e69de29\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/merge:temp")]),s._v("\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/merge -> temp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v(" temp")]),s._v("\n*   00e1eb0 (temp) Merge 0bb0d7f5b28f8817564f3acff0ca95a1622ea27d into 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa\n|\\  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: Git - Keep commits done by a specific author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54719704",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in case you're not presently on your branch")]),s._v("\ngit checkout your-branch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# now we need to spot the merge commit where things went awry,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it's probably not too far in your history, so spot its commit hash in the log")]),s._v("\ngit log --oneline\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Rewind history to the point just BEFORE the bad merge, so mind the caret")]),s._v("\ngit reset --hard <bad-commit>^\n\ngit push --force origin HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: Mass deleting local branches that has been rebased and merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24801581",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("last_commit_msg="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --oneline --format=%f -1 $branch)"')]),s._v("\nif [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git log --oneline --format=%f | grep $last_commit_msg | wc -l)"')]),s._v(" -eq 1 ]]; then\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: How to find out in which tag a file change is included")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24904591",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FILEPATH=/the/path/I/want/to/Observe\ngit log --name-only --oneline --tags --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d"')]),s._v("|egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILEPATH|^ \\("')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: How do I merge git repositories with related branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16843402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit clone --mirror path/repo0 repo0\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj0 ; find * -maxdepth 0 ! -iname proj0 -exec mv {} proj0/ \\;)"')]),s._v(" -- --all\n\ngit clone --mirror path/repo1 repo1\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj1 ; find * -maxdepth 0 ! -iname proj1 -exec mv {} proj1/ \\;)"')]),s._v(" -- --all\n\n\ngit init new\ngit remote add proj0 path/repo0\ngit remote add proj1 path/repo1\n\ngit fetch --all\n\n\ngit checkout -b dummy remotes/proj0/BranchE\ngit checkout -b start `git log --topo-order --reverse | head -n 1 | sed s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit \\(.*\\)"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/`\ngit checkout -b merge start\n\ngit merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge"')]),s._v(" remotes/proj1/BranchE\ngit rebase --onto start start merge\n\ngit branch -D start\ngit branch -D dummy\ngit branch -m merge BranchE\n\n\ngit checkout BranchE\ngit rebase `git log --oneline | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit comment of last common commit B\'"')]),s._v(" | sed -r s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^[a-f0-9]+) .*"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/` BranchH\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: Search git log using a comment")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39870538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline | grep -F "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'message text'")]),s._v("\n\ngit log | less\n/message text\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("83. Usage scenario: How do I display all commits I've made on all branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24773429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("gitk --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n\ngit log --oneline --decorate --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("84. Usage scenario: How to get the latest version of code from GitHub?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65420883",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If what you are looking for is to know the latest commits that have been done on that repo you should go for\ngit log --all --oneline\n\n▲ This will list in chronological order all the commits of the repo starting from the most recent one. Instead if you want to look for a stable version of the code you should probably do\ngit pull origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("85. Usage scenario: View git log (with merges) for only certain branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22824736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You're not seeing "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra"')]),s._v(" branches\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -14")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt   <===== Here is master\n*   03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n|\\\n| * a765ecc (bar) Add quack.txt         <===== Here is bar\n| * 80efc7c Add moo.txt\n* | b1bc4f1 Add junk\n|/\n| * acb480b (temp) Add stuff after merge commit <===== Here is temp\n| *   1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| |\\\n| | * 06c40a1 (foo) Add even more junk          <===== Here is foo\n| | * ea3ea46 Add foo.txt\n| |/\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ You probably don't want to use --no-merges for this...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merges master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -11")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* a765ecc (bar) Add quack.txt          <===== Here is bar\n* 80efc7c Add moo.txt\n| * b1bc4f1 Add junk                   <===== Which branch does this belong to?\n|/\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 06c40a1 (foo) Add even more junk             <===== Here is foo\n| * ea3ea46 Add foo.txt\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ Prefer --first-parent instead\ngit log --oneline --graph --decorate --first-parent origin/master origin/topic1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -9")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* 03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n* b1bc4f1 Add junk\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("86. Usage scenario: Can I check changes already merged in to other branch before merge in master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56888312",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains feature\n\ngit log --oneline QA..feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("87. Usage scenario: Identify merge into master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39151692",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --merges -1  [<rev range>]\n\ngit merge-base --is-ancestor <commit> <commit>\n\nfor merge in $(git rev-list --reverse --first-parent --merges "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${commit}"')]),s._v("..master)\ndo if git merge-base --is-ancestor "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${commit}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${merge}"')]),s._v("\n   then git show -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${merge}"')]),s._v("\n        break\n   fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("88. Usage scenario: How does one Move Commits from the Head of a Branch into a New Branch and not have them be Discarded when Merged back in?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57391517",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b sprint\ntouch c1 c2 c3 c4\ngit add c1\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit 1"')]),s._v("\ngit add c2\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit 2"')]),s._v("\ngit add c3\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit 3"')]),s._v("\ngit add c4\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit 4"')]),s._v("\ngit push origin sprint\n\ngit checkout -b fix\ngit push origin fix\n\ngit checkout sprint\ngit log --oneline # copy the hash of the first commit, say f58f8d8\ngit reset --hard f58f8d8\ngit push -f origin sprint # -f (force option) is needed because of the hard reset\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("89. Usage scenario: How to list all files and their commit SHAs in a repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16674944",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for i in `git ls-files`; do echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i "')]),s._v("; git log -1 --oneline $i; done | cat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("90. Usage scenario: How to see a user's check-in history in TFS w/ Git repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50284134",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Option1: Filter in TFS web page\n▲ Option 2: View from local git repo\ngit log --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                              #Show commits made by the user for all branches\ngit log --all --oneline --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                    #Show each commit for one line\ngit log --oneline --decorate --graph --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" #Keep branch structure\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("91. Usage scenario: git log for a single line -L without showing diff or patch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59325856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -s -L <start>,<end>:file\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and ")]),s._v("\ngit log -s -L :<funcname>:file\n\ngit log --oneline -L 10,11:example.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("92. Usage scenario: Effects of Git Push")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18049668",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Now, if you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ve done a push you should not have—let'")]),s._v("s say you meant to push commit C8, but not C9—then it is possible to convince the remote to change his version of the label.  Let's say you have updated master, and remote.origin.url is something like ssh://barehost/dir/with/repo.git.  Assume you can ssh barehost to log in on the host with the --bare repo:\nedithost$ ssh barehost\nbarehost$ cd /dir/with/repo.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -2")]),s._v(" master")]),s._v("\n5e01371 (HEAD, master) commit-C9's one line description\n309b36c commit-C8's one line desc.\nbarehost$ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" master master^")]),s._v("\n\n▲ You get the same effect if you just create your own branch on edithost and force-push it, though:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("edithost$ git branch rewinder master^")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("edithost$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin rewinder:master")]),s._v("\n\nedithost (to barehost): branch label for you, master should go to 309b36c\nbarehost (to edithost): I got 309b36c but are you sure? force push?\nedithost: yep, he's sure...\nbarehost: OK, I set master to 309b36c!\n\nbarehost\nA0 -- A1 -- A2                     <-- master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone ssh://[redacted]/repo.git")]),s._v("\n$ cd repo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master old_master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --remove")]),s._v("-section branch.old_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rm somefile                 # or ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rm -rf ."')]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'somefile'")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.o'")]),s._v(" > .gitignore\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .gitignore && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C0")]),s._v("\n[master (root-commit) f09f66f] C0\n 1 file changed, 1 insertion(+)\n create mode 100644 .gitignore\n\nA0 -- A1 -- A2                     <-- origin/master, old_master\nC0                                 <-- master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config branch.master.remote origin")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config branch.master.merge refs/heads/master")]),s._v("\n\nA0 -- A1 -- A2                     <-- origin/master, old_master\nC0 -- ... -- C5 -- C6              <-- master\n                     \\\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin feep:feep")]),s._v("\nCounting objects: 25, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (21/21), done.\nWriting objects: 100% (25/25), 2.27 KiB | 0 bytes/s, done.\nTotal 25 (delta 6), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n * [new branch]      feep -> feep\n\n▲ If I attempt to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git push origin master:master"')]),s._v(" I get an error,\nof course, but I can push anyway with -f:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master:master")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + dce5ffc...ae235f9 master -> master (forced update)\n\nA0 -- A1 -- A2                     <-- old_master\nC0 -- ... -- C5 -- C6              <-- origin/master, master\n                     \\\n                       C7          <-- origin/feep, feep\n\nA0 -- A1 -- A2                     [no label]\nC0 -- ... -- C5 -- C6              <-- master\n                     \\\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse old_master")]),s._v("\ndce5ffcfcee7c5c66275189c75ea68219e8f26f5\n\n$ cd ..\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone ssh://[redacted]/repo.git altrepo")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'altrepo'")]),s._v("...\nremote: Counting objects: 25, done.\nremote: Compressing objects: 100% (21/21), done.\nremote: Total 25 (delta 6), reused 0 (delta 0)\nReceiving objects: 100% (25/25), done.\nResolving deltas: 100% (6/6), done.\nChecking connectivity... done\n$ cd altrepo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")])]),s._v("\nae235f9 C6\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Some important documentation blah blah blah'")]),s._v(" > doc.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add doc.txt && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C10")]),s._v("\n[master a22a608] C10\n 1 file changed, 1 insertion(+)\n create mode 100644 doc.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master:master")]),s._v("\nCounting objects: 4, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 368 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n   ae235f9..a22a608  master -> master\n$\n\nA0 -- A1 -- A2                     [no label]\nC0 -- ... -- C5 -- C6 -- C10       <-- master\n                     \\\n                       C7          <-- feep\n\n$ cd ../repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-ff feep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C8")]),s._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n silly.c | 19 ++++++++++++++++++-\n 1 file changed, 18 insertions(+), 1 deletion(-)\n$ echo experiment > experimental.file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add experimental.file && git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" C9")]),s._v("\n\nA0 -- A1 -- A2                     <-- old_master\nC0 -- ... -- C5 -- C6 _            <-- origin/master\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- origin/feep, feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git status")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch is ahead of 'origin/master' by 3 commits.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git push" to publish your local commits)')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnothing to commit, working directory clean\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master:master")]),s._v("\nTo ssh://[redacted]/repo.git\n ! [rejected]        master -> master (fetch first)\nerror: failed to push some refs to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ssh://[redacted]/repo.git'")]),s._v("\nhint: Updates were rejected because the remote contains work that you do\nhint: not have locally. This is usually caused by another repository pushing\nhint: to the same ref. You may want to first merge the remote changes (e.g.,\nhint: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git pull'")]),s._v(") before pushing again.\nhint: See the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Note about fast-forwards'")]),s._v(" in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git push --help'")]),s._v(" for details.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\nremote: Counting objects: 4, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom ssh://[redacted]/repo\n   ae235f9..a22a608  master     -> origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git status")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# On branch master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Your branch and 'origin/master' have diverged,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and have 3 and 1 different commit each, respectively.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   (use "git pull" to merge the remote branch into yours)')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\nnothing to commit, working directory clean\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (HEAD, master) C9\n*   1933a04 C8\n|\\\n| * c4c3302 (origin/feep, feep) C7\n|/\n| * a22a608 (origin/master, origin/HEAD) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (old_master) A2\n* ad84d73 A1\n* cee030f initial commit\n\nA0 -- A1 -- A2                     <-- old_master\n\n                      C10          <-- origin/master\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- origin/feep, feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master:master")]),s._v("\nCounting objects: 6, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (3/3), done.\nWriting objects: 100% (4/4), 529 bytes | 0 bytes/s, done.\nTotal 4 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + a22a608...525b6fa master -> master (forced update)\n\nA0 -- A1 -- A2                     [no label]\n\n                      C10          [no label]\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8 -- C9 <-- master\n                     \\   /\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch rewinder master^")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin rewinder:master")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]/repo.git\n + 525b6fa...1933a04 rewinder -> master (forced update)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   1933a04 C8\n|\\\n| * c4c3302 C7\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n\nA0 -- A1 -- A2                     [no label]\n\n                      C10          [no label]\n                     /\nC0 -- ... -- C5 -- C6 _\n                    \\  \\_ C8       <-- master\n                     \\   /  \\_ C9  [no label]\n                       C7          <-- feep\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ barehost$ git branch resurrected_master dce5ffc")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch recovered_c10 a22a608")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git branch recovered_c9 525b6fa")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("barehost$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (recovered_c9) C9\n*   1933a04 (HEAD, master) C8\n|\\\n| * c4c3302 (feep) C7\n|/\n| * a22a608 (recovered_c10) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (resurrected_master) A2\n* ad84d73 A1\n* cee030f initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\nFrom ssh://[redacted]/repo\n * [new branch]      recovered_c10 -> origin/recovered_c10\n * [new branch]      recovered_c9 -> origin/recovered_c9\n * [new branch]      resurrected_master -> origin/resurrected_master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* 525b6fa (HEAD, origin/recovered_c9, master) C9\n*   1933a04 (origin/master, origin/HEAD, rewinder) C8\n|\\\n| * c4c3302 (origin/feep, feep) C7\n|/\n| * a22a608 (origin/recovered_c10) C10\n|/\n* ae235f9 C6\n* e026711 C5\n* f16f7cc C4\n* 00d0a69 C3\n* 45acc03 C2\n* 07a1145 C1\n* f09f66f C0\n* dce5ffc (origin/resurrected_master, old_master) A2\n* ad84d73 A1\n* cee030f initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br")])]),e("p",[e("strong",[s._v("93. Usage scenario: Merging two git repositories from some specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31133575",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir a\ncd a\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v(" > asdf.txt\ngit init\ngit add asdf.txt \ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v("\necho asdf2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a2"')]),s._v("\ncd ..\ncp -a a b\ncd b\nrm -rf .git\ngit init\ngit add asdf.txt \necho b1 >> asdf.txt \ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b1"')]),s._v("\necho b2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b2"')]),s._v("\ngit log --graph --all --oneline --decorate\ncd ../a\ngit log --graph --all --oneline --decorate\ngit fetch ../b master:b_branch\ngit log --graph --all --oneline --decorate\n\ngit checkout b_branch\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("94. Usage scenario: git create patch of only my changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10818107",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- path/to/interesting/dir\n\ngit log --author=mgilson -- path/to/interesting/dir\n\ngit log --author=mgilson --oneline -- path/to/interesting/dir | tail -n1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("95. Usage scenario: can we squash the latest commit to a specific previous commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37732935",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\nddd4444 (HEAD, my-feature-branch) A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --fixup")]),s._v(" aaa1111")]),s._v("\n[my-feature-branch eee5555] fixup! A first commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\neee5555 (HEAD, my-feature-branch) fixup! A first commit\nddd4444 A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("96. Usage scenario: How do I get hashes of newer commits than the current one in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34908694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If so, git log --all will show this commit in the log.  Adding the --oneline and/or --decorate flags might make this output easier to search through if all you're looking for is the commit message:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n\nhash HEAD@{n}: command: message\n\n▲ Because of this very well structured format, we can use grep to make the output easier to read through. For example, if you know that you've recently checked out the commit in question you can run:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep checkout")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"phrase in commit message"')]),s._v(" --ignore-case\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog | grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"individual\\|words\\|in\\|message"')]),s._v(" --ignore-case\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("97. Usage scenario: How to suppress blank lines with git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52635761",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-n 10")]),s._v("\n\ngit log --oneline --name-status --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%C(yellow)%h %C(auto)%d %s %C(red)(%cn, %cr)'")]),s._v(" -n 10 |  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("98. Usage scenario: Create a log of lines of code changes per file and commit with git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43941538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --stat --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("99. Usage scenario: Filter by merge commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57478067",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --oneline\n\ngit log --merges --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Task-152'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%h'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("100. Usage scenario: Amending commit HEAD~1 for Gerrit review which shares a file with commit HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19897455",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, master) Change 2\n* 120c061 Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git branch changeA 120c061")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git branch changeB e40f865")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, master, changeB) Change 2\n* 120c061 (changeA) Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git reset --hard HEAD~2")]),s._v("\nHEAD is now at 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git commit --amend -a")]),s._v("\n[changeA 93837a4] Change 1\n 2 files changed, 3 insertions(+), 2 deletions(-)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* 93837a4 (HEAD, changeA) Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git checkout changeB")]),s._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'changeB'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, changeB) Change 2\n* 120c061 Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git rebase 93837a4")]),s._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Change 1\nUsing index info to reconstruct a base tree...\n....\n....\nApplying: Change 2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* d3fac58 (HEAD, changeB) Change 2\n* 93837a4 (changeA) Change 1\n* 73a8f97 (master) Initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("p",[e("strong",[s._v("101. Usage scenario: How do I get the last merge from develop into master in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58389933",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --merges <destination> | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Merge branch '<source>'\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("102. Usage scenario: List commits of a specific merge-commit - children only")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64214432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph <commitId>^..<commitId>\n\ngit log --oneline --graph <commitId>^..<commitId>^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("103. Usage scenario: How to update a git checkout branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24495822",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout B\ngit log --oneline --graph\n\ngit rebase --onto A 4b84d26\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("104. Usage scenario: How to retrieve a branch after finishing a branch in gitflow")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12029007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you just did that, the feature would be second parent of the current commit (the merge commit). You can recreate the branch with\n git branch my-feature HEAD^2\n\n git checkout -b my-feature HEAD^2\n\n▲ If it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s been a while, it'")]),s._v("s probably not the second parent of the current commit. Use\n gitk \n\ngit log --graph --oneline\n\n▲ to find where that branch finished and use the HASH or tree-ish to recreat it. If you guarantee that the merge message is the default one, you can\ngit branch my-feature $(git log -1 --format=%H --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"merge branch 'my-feature'\"")]),s._v(")^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("105. Usage scenario: Can git filter repo create a monorepo from many repos interweaving commits by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62375689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --date-order\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --reverse   : 'rebase -i' asks for entries starting from the oldest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# --no-merges : do not mention the "merge" commits')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 's/^/pick /' : use any way you see fit to prefix each line with 'pick '")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (another valid way is to copy paste the list of commits in an editor,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         and add 'pick ' to each line ...)")]),s._v("\ngit log --reverse --no-merges --oneline --date-order |\\\n  sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/pick /'")]),s._v(" > /tmp/rebase-apply.txt\n\ngit rebase -i --root\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("106. Usage scenario: How do I find the git revision where certain files were added?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18233650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --follow --oneline <filename> | tail -n 1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("107. Usage scenario: Git get working copy SHA")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27196436",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ There are a number of ways to achieve what you are looking to do. Probably the most "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"gitish"')]),s._v(" would be to use tags, and it makes sense to do this. From your description, different clients are running different "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"releases"')]),s._v(" of the software (each release identified by a SHA).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ALPHA_BETA_TRIAL_1"')]),s._v(" ALPHA_BETA_TRIAL_1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tags")])]),s._v("\n\n▲ If you really need the SHA, then \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-ref ALPHA_BETA_TRIAL_1")]),s._v("\n\n▲ If, instead, you record the revision information in the commit messages, you can use\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Revision\\:"')]),s._v(" --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("108. Usage scenario: GIT rebase - multiple commits into one - still see in history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42460589",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v("  ")]),s._v("\n1a9d5e4 Another file  \n97c9d7d Add first file\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("109. Usage scenario: Resetting my last commit undoing many commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55519613",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you run:\ngit log --graph --oneline -n 14\n\n* xxxxx The top commit\n* xxxxx merge commit\n|\\\n| * aaaaa\n| * bbbbb\n| * ccccc\n| * ddddd\n| * eeeee\n| * fffff\n| * 11111\n| * 22222\n| * 33333\n| * 44444\n|/\n* yyyyyy The commit where you ended up after the 2nd `reset`\n\n▲ If it is the case, you can do:\ngit reset --hard aaaaa\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("110. Usage scenario: Version Control For One File Across Multiple Directories, Avoiding Conflict With Existing Git Repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50428214",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add acstyle u://r/l\ngit fetch acstyle\n\ngit checkout acstyle/payload -- .\n\ngit merge acstyle/payload    # initially with `--allow-unrelated-histories`\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from any clean checkout")]),s._v("\ngit checkout --orphan payload\ngit reset --hard\ngit checkout master -- acstyle.sty\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"acstyle-payload-v1.0"')]),s._v("\n\ngit checkout payload\ngit merge -s ours --no-commit master    # add `--allow-unrelated-histories` the first time\ngit checkout master -- acstyle.sty      \ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"acstyle-payload-v1.1"')]),s._v("\n\ngit checkout :/^acstyle-payload-v0.9a -- acstyle.sty\n\ngit log --oneline ---first-parent acstyle/payload\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("111. Usage scenario: How to use previous commit messages when composing new one?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35526082",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\ntemp=`cat $1`\ngit log -10 --oneline > $1\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$temp"')]),s._v(" >> $1 \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("112. Usage scenario: How can I list all modified files by an author between a commit range but only with the last thing that happened to the file in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34666108",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --name-status --author=$AUTHOR $COMMIT_RANGE | \\\n grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[a-fA-F0-9]{5}'")]),s._v(" | cat -n | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/     / /g'")]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^  *//g'")]),s._v(" | \\\n sort -k 3,3 -k 1n,1n | uniq -f 2 | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^[0-9]\\{1,\\} //'")]),s._v(" | cat -n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("113. Usage scenario: git command to get all branches I've merged into develop since a given date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41029534",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline REV... | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge branch"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("114. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("115. Usage scenario: Find commits of a git branch, which were not cherry picked into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67029088",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release \n\ngit log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %s"')]),s._v(" --cherry-pick --oneline --left-only --no-merges master...release |\nwhile read cmt_log \ndo\n    cmt_msg=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_log}"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ $1=\"\"; print }'")]),s._v("`\n    git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" %s"')]),s._v(" master..release | grep --fixed-string -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${cmt_msg}"')]),s._v(" > /dev/null || echo ${cmt_log}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("116. Usage scenario: Moved a GitHub Repository to Organization ,but with specific requirements")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59117914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone git@github.com:georgi/original_repo subfolder_one\ngit clone git@github.com:georgi/original_repo subfolder_two\ngit clone git@github.com:georgi/original_repo subfolder_three\n\ncd subfolder_one\ngit remote set-url origin git@github.com:organization/subfolder_one\n\ncd ../subfolder_two\ngit remote set-url origin git@github.com:organization/subfolder_two\n\n\ncd ../subfolder_three\ngit remote set-url origin git@github.com:organization/subfolder_three\n\ncd ../subfolder_one\ngit log --oneline | wc -l\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it print let's say, 500, so you have 500 commits in your original repo")]),s._v("\n\ngit filter-branch --prune-empty --subdirectory-filter folder_I\n\ngit log --oneline | wc -l\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# it print let's say, 100, just the commits that ever touched the subfolder")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("117. Usage scenario: git log --name-status show new name of single file on rename")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63767043",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("oldsetup=`git log -1 --pretty=%h --diff-filter=D -- setup.py`\n\ngit log $oldsetup --oneline --name-status --follow -- setup.py\n\nthreads=`git log --diff-filter=ADRC --pretty=%h -- path` \n\ngit log --no-walk --name-status --oneline $threads\n\ngit log --name-status -m --oneline \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^[A-Z]/{/\\tsetup\\.py/!d;H;$!d};x;/\\tsetup\\.py/!d'")]),s._v("\n\ngit log \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^commit /!{H;$!d};x;/pattern/!d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("118. Usage scenario: how to create multiple initial commits in the master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68887007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ orphan branch merging\ngit init\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A.txt"')]),s._v("\ngit add -A;git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v("\ngit checkout --orphan "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text'")]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B.txt"')]),s._v("\ngit add -A;git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),s._v("\ngit checkout master\ngit merge --no-ff --allow-unrelated-histories "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\ngit log --all --decorate --oneline --graph\n\n*   3805411 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch'")]),s._v("\n|\\\n| * b2af1fd (new_branch) B\n* 70e2a07 A\n\n▲ subtree add\ngit reset 70e2a07 --hard\n\ngit subtree add -P "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B_repo'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'new_branch^{}'")]),s._v("\n\nPS>git log --all --decorate --oneline --graph\n*   50f7c25 (HEAD -> master) Add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B_repo/'")]),s._v(" from commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'47b72dbdebd593bde75a80df7ff28544b2982ff1'")]),s._v("\n|\\\n| * 47b72db (new_branch) B\n* fd9bb52 A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("119. Usage scenario: git log to show commits different between two branches, including common ancestor")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59273667",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --boundary --right-only --oneline master...HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("120. Usage scenario: Git: Trying to track which remote branches introduced files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24065777",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate --oneline \\2\n        --branches \\\n        --simplify-by-decoration -- path/to/file\n git blame file\n git log --ancestry-path --merges --oneline commit..@\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# eliminate single-tag-commit clutter from the above output:")]),s._v("\n\ngit log --color=always --rest-of-args \\\n| grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'([^:,]*tag:[^,]*)'")]),s._v(" \\\n| less -r\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("121. Usage scenario: Strategies of merging master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44146810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --all --decorate=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("122. Usage scenario: How to print initial letter of committer in git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41081122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h %Cgreen%ai %C(reset)%C(auto)(%<(3,trunc)%cN) %s %d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("123. Usage scenario: Identify commit in which a particular file was deleted")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15608863",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -- myProject/generic/a.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("124. Usage scenario: Git list all files modified (not added) since a specific commit INCLUDING ones that were added and later modified")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23315752",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" 70f5c30^..HEAD"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status")]),s._v("\n7f6aafa Add poopoo\nA       poopoo.txt\n1d961ae Add hello and goodbye\nM       blar.txt\nM       rawr.txt\n0a1acf9 Add rawr\nA       rawr.txt\n70f5c30 Add blar moo and I'LL BE BACK!\nM       README.md\nA       blar.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" <commit>^..HEAD"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-status | \\")]),s._v("\n$ grep --extended-regexp "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^(A|M)"')]),s._v(" | \\\n$ ruby ~/Desktop/stackoverflow-answer.rb\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("125. Usage scenario: How to view all tags in a git repository (more than 29)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34901984",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("126. Usage scenario: Finding the branch a given branch branched from")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24770374",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global color.ui auto\ngit log --graph --oneline --all\n\ngit merge-base \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("*"),e("em",[s._v("127. Usage scenario: Show history of changes to files based on a wildcard e.g. "),e("em",[s._v(".vcxproj")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69175611",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- *.sln *.vcxproj\n\ngit log --reverse --oneline --all -- *.sln *.vcxproj\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("128. Usage scenario: Git cherry pick those commits that contain a keyword (tracking id)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28736802",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline | tac\ngit log --oneline --reverse\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("129. Usage scenario: How can I have merge conflicts between 2 branches with common ancestor?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-annotate.html"}},[s._v("git annotate")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48435060",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ 1.   List the commits which modified the conflict file in branch A and branch B separately:\ngit annotate filename A\ngit annotate filename B\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git annotate filename A")]),s._v("\ncommit A1\ncommit A2\ncommit common\ncommit A3\ncommit A4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git annotate filename B")]),s._v("\ncommit B1\ncommit B2\ncommit B3\ncommit common\ncommit B4\n\n▲ 2.   Show the git log as graph for the commits which changed the conflict file in all branches\ngit log --oneline --decorate --graph --all -- filename\n\n* commit A4 (branch A)\n* commit A3\n|   * commit B4 (branch B)\n*   | commit Common\n|  \\\n*   | commit A2\n*   | commit A1\n|   * commit B3\n|   * commit B2\n|   * commit B1\n|   |\n…   …\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("130. Usage scenario: Retrieve list of features from develop(s) concerned by a build on release branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65882537",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --no-merges build1..build2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("131. Usage scenario: How to check what I fetched?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56637339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch --all --dry-run\n\ngit log --oneline --graph --decorate --simplify-by-decoration --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("132. Usage scenario: Git merge master into branch commit ordering")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40140366",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --topo-order\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("133. Usage scenario: Listing full commit history of a particular file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29718053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --simplify")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" -- baz")]),s._v("\na022556 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'baz'")]),s._v("\nfdc3e37 Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" file (pull-request-bar-branch)\n3e87596 Rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n09e7a1b Added "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" file (pull-request-foo-branch)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("134. Usage scenario: Finding merge commits from tag across branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45136163",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --source --ancestry-path  master idea-2017 idea-2016.3 --not 1.6.0\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("135. Usage scenario: List all local commits in the current branch that have not been pushed to remote for Git tool")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25569750",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry -v origin/master master\n\ngit log --graph --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#notes"}},[s._v("#")]),s._v(" 🔹 --notes")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Using multiple branches of git notes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-notes.html"}},[s._v("git notes")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31149497",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git notes --ref refs/notes/benchmarks add [ -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'msg'")]),s._v(" ]\n\ngit log --notes=refs/notes/benchmarks\n\ngit notes --ref refs/notes/benchmarks show <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"no-notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-notes"}},[s._v("#")]),s._v(" 🔹 --no-notes")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git: How to retrieve all commits from all branches without notes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12844147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As you said, --all overrides --no-notes. So you may want to split --all to include only refs you want. If you just want to show all the branches:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches\n\n▲ or if you want more:\ngit log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %f"')]),s._v(" --no-notes --branches --tags --remote \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"show-notes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#show-notes"}},[s._v("#")]),s._v(" 🔹 --show-notes")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git: Get all notes of a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20328484",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H %N"')]),s._v(" --show-notes <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[s._v("#")]),s._v(" 🔹 --date")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I see the commit differences between branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 382    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13965459",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'")]),s._v(" --abbrev-commit --date=relative master..branch-X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How does git log --since count?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 159    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21743961",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit log --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --before="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 month ago"')]),s._v("\ngit log --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2 weeks 3 days 2 hours 30 minutes 59 seconds ago"')]),s._v("\n\ngit log --date=local\n\ngit log --date=local --after="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2014-02-12T16:36:00-07:00"')]),s._v("\n\ngit config log.date local\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Checking out old files WITH original create/modified timestamps")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2179876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('IFS="\n"\nfor FILE in $(git ls-files)\ndo\n    TIME=$(git log --pretty=format:%cd -n 1 --date=iso --date-order -- '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v(")\n\n    # Choose 1 version.\n    # This is for BSD date (macOS, FreeBSD, etc)\n    #TIME=$(date -j -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M:%S %z'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    # And this is the equivalent for GNU coreutils date (Linux)\n    TIME=$(date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" +%Y%m%d%H%M.%S)\n\n    touch -m -t "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIME"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILE"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git commit count a day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 47    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48329147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=short --pretty=format:%ad | sort | uniq -c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to find the latest commits in one git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9679564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -10 --all --date-order\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git: changelog day by day")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2979587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Generates changelog day by day")]),s._v("\nNEXT=$(date +%F)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CHANGELOG"')]),s._v("\necho ----------------------\ngit log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --date=short | sort -u -r | while read DATE ; do\n    echo\n    echo [$DATE]\n    GIT_PAGER=cat git log --no-merges --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" * %s"')]),s._v(" --since=$DATE --until=$NEXT\n    NEXT=$DATE\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Generate changelog from commit and tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46033999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\nprevious_tag=0\nfor current_tag in $(git tag --sort=-creatordate)\ndo\n\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$previous_tag"')]),s._v(" != 0 ];then\n    tag_date=$(git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ad'")]),s._v(" --date=short ${previous_tag})\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"## ${previous_tag} (${tag_date})\\n\\n"')]),s._v("\n    git log ${current_tag}...${previous_tag} --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*  %s [View](https://bitbucket.org/projects/test/repos/my-project/commits/%H)'")]),s._v(" --reverse | grep -v Merge\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\n\\n"')]),s._v("\nfi\nprevious_tag=${current_tag}\ndone\n\nsh change-log-builder.sh > changelog.md\n\n▲ v1.1.0 (2017-08-29)\n▲ v1.0.9 (2017-08-22)\n▲ v1.0.8 (2017-08-22)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: git: How to get the latest commit on a specific file, regardless of branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15810516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --date-order --all -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to reproduce the format of git log --oneline --decorate?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39887897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   git log --graph --decorate --date=short --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(bold blue)%h%C %C(bold green)%ad %C(auto)%d  %C(white)%s%C(reset)'")]),s._v(" -10   \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to make git log output that just shows date and hash on one line?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32274739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=iso --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"date={%ad}, commit={%H}"')]),s._v("\n\n ​git log --date=short --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%ad %H"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How can I show the name of branches on every commit in "),e("code",[s._v("git log")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10653383",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('git log --pretty=format:\\"%h %ad [%an] %s%d\\" --graph --date=short\n'),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--all --date-order")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to get commit from git given unix timestamp of commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69714213",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=unix --before=1635020939 --after=1635020939 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to discover last related commit based on blob/tree hash?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11098711",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-tree --name-only HEAD | while read file; do git log -n 1 --date=short --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$file, author: %an, commit: %h, date: %ad, msg: '%s'\"")]),s._v(" -- $file; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Find out previously pushed diff and logs in git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53830530",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since=2018-12-17\n\ngit log --since=`date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 day ago"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+%Y-%m-%d'")]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Can git filter repo create a monorepo from many repos interweaving commits by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62375689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --date-order\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --reverse   : 'rebase -i' asks for entries starting from the oldest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# --no-merges : do not mention the "merge" commits')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 's/^/pick /' : use any way you see fit to prefix each line with 'pick '")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (another valid way is to copy paste the list of commits in an editor,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         and add 'pick ' to each line ...)")]),s._v("\ngit log --reverse --no-merges --oneline --date-order |\\\n  sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/pick /'")]),s._v(" > /tmp/rebase-apply.txt\n\ngit rebase -i --root\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to reliably determine last commit date in remote repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60281327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=%cd"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --date")]),s._v("=unix")]),s._v("\n1582030040\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Return 'true' if $(1) does not exist or is older than branch $(2)")]),s._v("\ncheck_repo_change = $(shell if [ ! -e $(1) ] || [ $$(date +%s -r $(1)) -lt \\\n  $$(git log -1 --format=%cd --date=unix $(2)) ]; then echo true; fi)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Note that you\'ll probably need to run "git fetch" at some point')]),s._v("\nBRANCH := origin/master\n\nall: myfile\n.PHONY: all\n\nifeq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$(call check_repo_change,myfile,$(BRANCH))'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'true'")]),s._v("\nmyfile:\n    set -x; echo ok >> $@\nelse\nmyfile:\n    $(info No change detected in branch $(BRANCH))\nendif\n.PHONY: myfile\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to change the git log committed log date format")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57620021",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --date=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y%m%d%H%M%S'")]),s._v(" --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%cd"')]),s._v(" --decorate=full\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How can I get the Git commits done in the last 3 months counted from the last commit on a branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69288645",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --since "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(date --date "')]),s._v("$(git log --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%ai'")]),s._v(" <branch> -n1) - 3 months"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(" <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"parents"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parents"}},[s._v("#")]),s._v(" 🔹 --parents")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Get git stash parent commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16071758",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 commitish^\n\ngit log -1 stash@{0}^\n\ngit log -g --no-walk --parents refs/stash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"children"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#children"}},[s._v("#")]),s._v(" 🔹 --children")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I get list of branches emerging from any branch in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1843113",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch\ngit checkout <branch of interest>\ngit log --children <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"left-right"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#left-right"}},[s._v("#")]),s._v(" 🔹 --left-right")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I tell if one commit is an ancestor of another commit (or vice-versa)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 92    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18345268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use git merge-base --is-ancestor <commit1> <commit2>\ngit merge-base --is-ancestor <possible-ancestor-commit> <commit>\n\n▲ Other options\n▲ git log with triple dot ... notation\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --left")]),s._v("-right \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--first-parent --decorate <commit1>...<commit2>")]),s._v("\n\n▲ git branch --contains option\ngit branch --contains <commit-to-test>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: how can I customize git's merge commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51937574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git mergelogmsg branch-name")]),s._v("\n\n[alias]\n    mergelogmsg = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!f() { var=$(git symbolic-ref --short HEAD) && printf 'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n' $1 $var $1 > temp_merge_msg && git log --format=format:'%s' $var..$1 >> temp_merge_msg && printf '\\n\\nBranch %s commits:\\n' $var >> temp_merge_msg && git log --format=format:'%s' $1..$var >> temp_merge_msg && printf '\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n' >> temp_merge_msg && git log --left-right $var...$1 >> temp_merge_msg && git merge --no-ff --no-commit $1 && git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f\"")]),s._v(' \n\n[alias]\n1   mergelogmsg = "!f() { var=$(git symbolic-ref --short HEAD) && \n2        printf '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n'")]),s._v(" $1 $var $1 > temp_merge_msg && \n3        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" $var..$1 >> temp_merge_msg && \n4        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\nBranch %s commits:\\n'")]),s._v(" $var >> temp_merge_msg && \n5        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(" $1..$var >> temp_merge_msg && \n6        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n'")]),s._v(' >> temp_merge_msg && \n7        git log --left-right $var...$1 >> temp_merge_msg && \n8        git merge --no-ff --no-commit $1 && \n9        git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h2",{attrs:{id:"graph"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#graph"}},[s._v("#")]),s._v(" 🔹 --graph")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I see the commit differences between branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 382    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13965459",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr)%Creset'")]),s._v(" --abbrev-commit --date=relative master..branch-X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I show the name of branches in "),e("code",[s._v("git log")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 344    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1841429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git, see a list of comments of my last N commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 243    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13542327",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to use the command line you can use the --author=<your name>\ngit log -n 5 --author=Salvador\n\n▲ If you want a simpler one line solution:\ngit log --oneline -n 5 --author=Salvador\n\n▲ If you like the single line version, try creating an alias for git log like this (this is what I have for zsh)\nalias glog="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git log --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit\"")]),s._v("\n\nglog -n 5\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to copy commits from one Git repo to another?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the old repo as a remote repository ")]),s._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the old repo commits")]),s._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# examine the whole tree")]),s._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),s._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check your local repo is correct")]),s._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# send your new tree (repo state) to github")]),s._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the now-unneeded reference to oldrepo")]),s._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#create LICENSE file, edit, add content, save")]),s._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit'")]),s._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure there are no unsaved changes")]),s._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pull the latest version from github")]),s._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move their master branch pointer to the one you published to github.")]),s._v("\ngit reset --hard origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How can I tell if one commit is an ancestor of another commit (or vice-versa)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 92    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18345268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use git merge-base --is-ancestor <commit1> <commit2>\ngit merge-base --is-ancestor <possible-ancestor-commit> <commit>\n\n▲ Other options\n▲ git log with triple dot ... notation\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --left")]),s._v("-right \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--first-parent --decorate <commit1>...<commit2>")]),s._v("\n\n▲ git branch --contains option\ngit branch --contains <commit-to-test>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: git log and show on a bare repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6311945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Explanation\ngit log some_branch_that_exists\n\n▲ Fix\n▲ Visualization\ngit log --graph --oneline --date-order --decorate --color --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('7. Usage scenario: How can I tell which remote "parent" branch my branch is based on?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33144334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to see commits that were merged in to a merge commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6191836",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to see every commits merged in the last merge you can try that :\ngit log $(git merge-base --octopus \\\n$(git log -1 --merges --pretty=format:%P)).. --boundary\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abbrev")]),s._v("-commit")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \n* 8fae178 pif2\n* 20f8ba6 init\n\n▲ If I only want commits related to the last merge I have to use git log -1 --merges --pretty=format:%P which gives me the parents of the first merge available :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merges")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:%P")]),s._v("\n69f431cec7859b61d33c7503c9431ceea2aaf3e0 3db39ca3ab1e8f70462db23d94590628b5e7ad7b\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--pretty=format:%P)")]),s._v("\n8fae178666e34a480b22e40f858efd9e7c66c3ca\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log $(git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --octopus")]),s._v(" \\")]),s._v("\n$(git log -1 --merges --pretty=format:%P)).. \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n* 44899b9 pouf\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n\n▲ If you're a bit perfectionist you can also do this :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log ")]),s._v("\n$(git merge-base --octopus \\\n$(git log -1 \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--merges --pretty=format:%P))..$(git log -1 --merges --pretty=format:%H) \\")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--boundary --graph --pretty=oneline --abbrev-commit ")]),s._v("\n*   8f49f9c Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n|\\  \n| * 3db39ca test\n* | 69f431c pif\n* | df1f51c lala\n|/  \no 8fae178 pif2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Git find out the last commit i pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15552121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you mean the last commit you pushed to the master branch then, assuming your remote is origin:\ngit rev-parse origin/master\n\n▲ This will show you the commit ID of the tip of the master branch of the origin origin, as your local repository is currently aware.  This may mean that the commit is someone else's commit, if someone else pushed commits after you did and you have since fetched that branch.\ngit show -p origin/master\n\ngit log --pretty=oneline --abbrev-commit --graph --decorate --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to stop merging in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28416721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge --abort\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit reset --merge\n\ngit reset --hard @{1}\n\ngit log --graph --decorate --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How do I determine the source branch of a particular branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6427205",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream <branch> [<start-point>]\n\ngit diff <mybranch>..master # commits in master that are not in mybranch\ngit diff <mybranch>..2.2 # commits in 2.2 that are not in mybranch\n\ngitk --all\ngit log --graph --color --decorate --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to merge git commits in the develop branch to a feature branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17860574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --oneline --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('13. Usage scenario: How to know which branch a "git log" commit belongs to?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7131735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --source")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show-branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to get birds eye view of git tree with just branch names, not individual commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8137582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --all --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('15. Usage scenario: Include submodule commit messages with "git log"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26640048",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline -U0 --submodule Tag1..Tag2 | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^[*| /\\\\]+([0-9a-f]{7} |Submodule |> |$)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to show local branch history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14889649",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to find git commits in the repository by commit message?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13955279",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate --grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("\n\ngit log --all --oneline --graph --decorate | less\n/ message\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Git: Merge in branch without polluting the Master history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19122081",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph\n\ngit log --oneline --first-parent\n\neaaec50 Merge git://github.com/git-l10n/git-po\n2809258 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sb/mailmap-updates'")]),s._v("\n8ed205a git-remote-mediawiki: ignore generated git-mw\n96cb27a Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'maint'")]),s._v("\n\ngit config --global alias.l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'log --oneline --graph'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Able to recover a deleted branch using git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18465321",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Git command to find what branches were merged into current branch and when")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14205847",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --full-history --all --color \\ \n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s"')]),s._v("\n\ngit log --graph --full-history --all --color \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('--pretty=format:"%x1b[31m%h%x09%x1b[32m%d%x1b[0m%x20%s \\')]),s._v("\n%Cgreen(%cr) %C(bold blue)<%an>%Creset'\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: "),e("code",[s._v("git log --follow --graph")]),s._v(" skips commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46492159",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --follow")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --cc")]),s._v(" -- b.txt")]),s._v("\n*   e5a17d7 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'feature'")]),s._v("\n|\\  \n| | \n... \n* | 52e75c9 Move\n|/  \n|   diff --git a/a.txt b/b.txt\n|   similarity index 100%\n|   rename from a.txt\n|   rename to b.txt\n* 7590cfd First commit\n  diff --git a/a.txt b/a.txt\n  new file mode 100644\n  index 0000000..e965047\n  --- /dev/null\n  +++ b/a.txt\n  @@ -0,0 +1 @@\n  +Hello\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How can I get/list/see all the descendants of a commit with git (or gitk)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23546539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all BRANCH~1..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n* 20db61f 2\n* 3923af1 1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n* 65b716e (c) c-5\n* ebe2a0e c-4\n* 2ed9abe (b) b-4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* e3972be (HEAD, a) a-6\n* 2707d79 a-5\n* cdea9a7 a-4\n| * 65b716e (c) c-5\n| * ebe2a0e c-4\n|/  \n| * 2ed9abe (b) b-4\n|/  \n* ace558e (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-1'")]),s._v("\n[z (root-commit) bc0c0bb] z-1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z-2'")]),s._v("\n[z 1183713] z-2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" master~1..")]),s._v("\n* 1183713 (HEAD -> z) z-2\n* bc0c0bb z-1\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master~1..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n| * 338432a (c) c-5\n| * 2115318 c-4\n|/  \n| * 43a34dc (b) b-4\n|/  \n* ce05471 (master) 3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path master..")]),s._v("\n* 6069f73 (a) a-6\n* 654d106 a-5\n* a218c59 a-4\n* 338432a (c) c-5\n* 2115318 c-4\n* 43a34dc (b) b-4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to see git diff from very beginning to the HEAD?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9633913",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph -p\n\ngit diff `git rev-list HEAD | tail -n 1` HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Git: how to get a list of all revisions since some commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4340736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list ^bbbbbbb branches...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("chris@zack:~/git-test$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n* 8daff2c f      <-- test\n* 5f57b15 d\n| * 764a725 e    <-- master\n| * 5889800 c\n|/\n* 294908b b\n* 975d652 a\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("chris@zack:~/git-test$ git rev-list ^294908b master test")]),s._v("\n8daff2c59d8cb966bf399de5027fae85ee016081\n5f57b1524afeafbf37984f84fa5fe24ee0ac8501\n764a7256d40dbefdb6278443fb80266f00358a37\n58898005214607e5c53b45954a98891ea599c037\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Getting a list of all children of a given commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24231679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --graph --decorate --oneline ^A \\\n   --all $(git fsck --unreachable --no-reflogs | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2==\"commit\" {print $3}'")]),s._v(")\n\ngit for-each-ref --contains A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How can I limit the log to all the descendants of a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31266614",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How to limit the log to all the descendants of a given revision\ngit log --all --ancestry-path ^<rev>\n\ngit log --all --ancestry-path ^D\n\ngit log --all --ancestry-path ^X\n\n▲ What's wrong with git log --all --ancestry-path D^!?\ngit log --all --ancestry-path D^!\n\ngit log --all --ancestry-path D^!\n\ngit log --ancestry-path D ^C feature master\n\ngit log --ancestry-path ^C feature master\n\ngit log --ancestry-path ^D feature master\n\ngit log --all --ancestry-path ^D\n\n▲ Test\n$ mkdir gittest\n$ cd gittest/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A\\n"')]),s._v(" > README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"A"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"B"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"C"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch feature")]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"E"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout feature")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"X"')]),s._v("\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y\\n"')]),s._v(" >> README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Y"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* e234427 (HEAD -> feature) Y\n* cf98c6b X\n| * b3d493a (master) E\n| * e2bb266 D\n|/  \n* dfe0267 C\n* 0be7d42 B\n* 674356e A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ = D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" master~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" feature~^!")]),s._v("\ne234427 Y\ncf98c6b X\nb3d493a E\ne2bb266 D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# master~ == D")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^master~")]),s._v("\nb3d493a E\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# feature~ == X")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ancestry")]),s._v("-path"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),s._v(" ^feature~")]),s._v("\ne234427 Y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Visualize git branch topology only, with no commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51838603",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --oneline --graph --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to reproduce the format of git log --oneline --decorate?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39887897",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   git log --graph --decorate --date=short --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(bold blue)%h%C %C(bold green)%ad %C(auto)%d  %C(white)%s%C(reset)'")]),s._v(" -10   \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to find out parent revisions of an in-progress merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26086393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simple merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v("\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\n▲ Octopus merge\ngit log -n 1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n\ncat .git/MERGE_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test_octopuss\n$ cd test_octopuss\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create an initial commit")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'foo' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create three different commits on branches whose tips count the root commit as parent")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" another master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" yetanother master^")]),s._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar\\n"')]),s._v(" >> README.md \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"add 'bar' in README\"")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get our bearings")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* 93e4667 (HEAD, yetanother) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n| * a114920 (another) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n| * 7adc927 (master) add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v(" in README\n|/  \n* bc400cd add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" in README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge using the --no-commit flag (to pretend that the merge failed)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit master another")]),s._v("\nTrying simple merge with master\nTrying simple merge with another\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the following command fails to list all the heads being merged in")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%H"')]),s._v(" MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# list of all the heads being merged in the current branch")]),s._v("\n$ cat .git/MERGE_HEAD\n7adc927d9f7a0c8864d0ff784c0c53b0ded00616\na114920072210417a1fa6c9b2b33b5729097ee93\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: How to get 'git diff' to only show commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33641558",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline -n 10\n\ngit log --oneline --graph --decorate -n 10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How can I see the git history of a deleted branch (used git flow)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18049923",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("* | |   e553bf0 resolved merge conflicts\n|\\ \\ \\  \n| * | | 6b30050 fixed test db error\n| * | |   64909f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'develop'")]),s._v(" into feature/b\n\n6b30050 HEAD@{43}: checkout: moving from develop to feature/a\ne553bf0 HEAD@{44}: commit (merge): resolved merge conflicts\n\n▲ Looking at just the reflog\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout develop")]),s._v("\ne553bf0 HEAD@{42}: checkout: moving from feature/a to develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout branch A")]),s._v("\n6b30050 HEAD@{43}: checkout: moving from develop to feature/a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge branch A? Resolve conflicts and commit")]),s._v("\ne553bf0 HEAD@{44}: commit (merge): resolved merge conflicts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout develop")]),s._v("\n7a0ad6b HEAD@{45}: checkout: moving from feature/a to develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout branch A")]),s._v("\n6b30050 HEAD@{46}: checkout: moving from develop to feature/a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge branch B into develop")]),s._v("\n7a0ad6b HEAD@{47}: merge feature/b: Merge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Move from branch B to develop (i.e. checkout commit 921ae46)")]),s._v('\n921ae46 HEAD@{48}: checkout: moving from feature/b to develop\n\n▲ Viewing the history of the merged branch\ngit log --oneline --graph <sha of merge into develop>^2\n\n[alias]\n    datelog = log --format=\\"%C(yellow)%h%C(reset) %C(cyan dim)%ad %C(red bold)%cd %C(reset)%s\\" --graph\n\n▲ Favor rebase over merge (usually)\n'),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# From feature branch X, sync with develop")]),s._v("\ngit rebase develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Switch to develop and merge")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (either fast-forward or merge commit, your choice)")]),s._v("\ngit checkout develop\ngit merge --no-ff X\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How do I reconnect a Git branch that has separated from master? (And duplicated its parents?)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9565850",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: git: finding which merge brough commit into the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11376837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --ancestry-path --merges <commit-of-interest>..C\n\ngit log --oneline --graph --color --decorate \\\n    --ancestry-path <commit-of-interest>..C\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How to rename a git folder to a previously existing folder name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23862160",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --name-status\n* 44fb01b Rename skadoosh to foo # <== Rename skadoosh to foo\n| A     foo/derp.txt\n| D     skadoosh/derp.txt\n* c7af83c Add derp               # <== Create skadoosh\n| A     skadoosh/derp.txt\n* 344e215 Remove foo             # <== Delete foo\n| D     foo/hello.txt\n* cff7b45 Say goodbye\n| M     foo/hello.txt\n* 7fc9da5 Add hello.txt          # <== Create foo\n  A     foo/hello.txt\n\ngit log --oneline --graph --name-status -- foo\n* 44fb01b Rename skadoosh to foo   # Add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo"')]),s._v(" (was skadoosh)\n| A     foo/derp.txt\n* 344e215 Remove foo               # Delete foo\n| D     foo/hello.txt\n* cff7b45 Say goodbye\n| M     foo/hello.txt\n* 7fc9da5 Add hello.txt\n  A     foo/hello.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Show all commits in a git branch since original branching point from master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20016493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log  --boundary master..\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or")]),s._v("\ngit log  --boundary --no-merges master..\n\ngit log --boundary --no-merges --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%d %Creset%an %Cgreen%ar:%Creset %s'")]),s._v(" --graph master..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to hide remote branches without deleting them from remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68573305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --exclude=refs/remotes/* --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: How to find all commits having a particular parent?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10541529",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[Fact]\npublic void CanRetrieveChildrenOfASpecificCommit()\n{\n    TemporaryCloneOfTestRepo path = BuildTemporaryCloneOfTestRepo(StandardTestRepoPath);\n    using (var repo = new Repository(path.RepositoryPath))\n    {\n        const string parentSha = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5b5b025afb0b4c913b4c338a42934a3863bf3644"')]),s._v(";\n\n        var filter = new Filter\n                         {\n                             /* Revwalk from all the refs (git log --all) ... */\n                             Since = repo.Refs, \n\n                             /* ... and stop when the parent is reached */\n                             Until = parentSha\n                         };\n\n        var commits = repo.Commits.QueryBy(filter);\n\n        var children = from c in commits\n                    from p in c.Parents\n                    let pId = p.Id\n                    where pId.Sha == parentSha\n                    select c;\n\n        var expectedChildren = new[] { "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c47800c7266a2be04c571c04d5a6614691ea99bd"')]),s._v(", \n                                        "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4a202b346bb0fb0db7eff3cffeb3c70babbd2045"')]),s._v(" };\n\n        Assert.Equal(expectedChildren, children.Select(c => c.Id.Sha));\n    }\n}\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* commit 4c062a6361ae6959e06292c1fa5e2822d9c96345\n| Author: gor <gorbach.alexey@gmail.com>\n| Date:   Thu Apr 14 18:44:16 2011 +0300\n|\n|     directory was added\n|\n*   commit be3563ae3f795b2b4353bcce3a527ad0a4f7f644\n|\\  Merge: 9fd738e c47800c\n| | Author: Scott Chacon <schacon@gmail.com>\n| | Date:   Tue May 25 11:58:27 2010 -0700\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'br2'")]),s._v("\n| |\n| | * commit e90810b8df3e80c413d903f631643c716887138d\n| | | Author: Vicent Marti <tanoku@gmail.com>\n| | | Date:   Thu Aug 5 18:42:20 2010 +0200\n| | |\n| | |     Test commit 2\n| | |\n| | * commit 6dcf9bf7541ee10456529833502442f385010c3d\n| |   Author: Vicent Marti <tanoku@gmail.com>\n| |   Date:   Thu Aug 5 18:41:33 2010 +0200\n| |\n| |       Test commit 1\n| |\n| | *   commit a4a7dce85cf63874e984719f4fdd239f5145052f\n| | |\\  Merge: c47800c 9fd738e\n| |/ /  Author: Scott Chacon <schacon@gmail.com>\n| | /   Date:   Tue May 25 12:00:23 2010 -0700\n| |/\n|/|         Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into br2\n| |\n* | commit 9fd738e8f7967c078dceed8190330fc8648ee56a\n| | Author: Scott Chacon <schacon@gmail.com>\n| | Date:   Mon May 24 10:19:19 2010 -0700\n| |\n| |     a fourth commit\n| |\n* | commit 4a202b346bb0fb0db7eff3cffeb3c70babbd2045\n| | Author: Scott Chacon <schacon@gmail.com>\n| | Date:   Mon May 24 10:19:04 2010 -0700\n| |\n| |     a third commit\n| |\n| * commit c47800c7266a2be04c571c04d5a6614691ea99bd\n|/  Author: Scott Chacon <schacon@gmail.com>\n|   Date:   Tue May 25 11:58:14 2010 -0700\n|\n|       branch commit one\n|\n* commit 5b5b025afb0b4c913b4c338a42934a3863bf3644\n| Author: Scott Chacon <schacon@gmail.com>\n| Date:   Tue May 11 13:38:42 2010 -0700\n|\n|     another commit\n|\n* commit 8496071c1b46c854b31185ea97743be6a8774479\n  Author: Scott Chacon <schacon@gmail.com>\n  Date:   Sat May 8 16:13:06 2010 -0700\n\n      testing\n\n* commit 41bc8c69075bbdb46c5c6f0566cc8cc5b46e8bd9\n| Author: Scott Chacon <schacon@gmail.com>\n| Date:   Tue May 11 13:40:41 2010 -0700\n|\n|     packed commit two\n|\n* commit 5001298e0c09ad9c34e4249bc5801c75e9754fa5\n  Author: Scott Chacon <schacon@gmail.com>\n  Date:   Tue May 11 13:40:23 2010 -0700\n\n      packed commit one\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: How to view git log using column unit separators?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23645518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%x1F%an%x1F%s'")]),s._v(" | \ncolumn -t -s $"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\x1F'")]),s._v(" |more\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Does git have an option to show the commits to be merged before performing the merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18579731",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph <branch-to-merge-into>..<branch-to-be-merged>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: Show specific commits in git log, in context of other commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61511914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate=no --graph | less -p $(git log --pretty=%h -- Makefile | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(')\n\n[alias] hl-graph = !git log --oneline --graph --color | less -R -p $(git log --pretty=%h \\"$@\\" | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'|'")]),s._v(") && :\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How to split a git repository into recent and older commits at a specific commit point, preserving branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48396032",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First create a branch for the historical commits\ngit branch history $TRUNCPOINT\ngit push project-history history:master\ngit push project-history A\n\ngit log --graph --oneline --decorate --all\n* fdc8f84 (A) branchA a1\n| * 7237a3e (HEAD -> master) fourth\n| * 55be55d third\n|/  \n* 26555d8 second\n* 5a68ca2 first\n\n▲ Create a base commit to serve as the parent for the recent commits\nMESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository"')]),s._v("\nBASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n▲ Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\ngit filter-branch -- --all\ngit push project-recent master\ngit push project-recent B\n\ngit log --graph --oneline --decorate --all\n* 2335aeb (B) branchB b2\n* 2bb7ea3 branchB b1\n| * 83c3ae9 (HEAD -> master) sixth\n|/  \n* 25931c5 fifth\n* 1e1e201 fourth\n* a7f3373 Get history from historical repository\n\n▲ Fully reproduced example bash script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nWORKDIR=${PWD}\n\ncreate_repos () {\n    rm -rf repo-split-example repo-split-recent repo-split-history\n    # Create the repo to be split\n    example_repo\n\n    # Create the repo to contain the historical commits\n    HISTREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-history"')]),s._v("\n    mkdir ../repo-split-history\n    cd ../repo-split-history/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-history $HISTREPO\n\n    # Create the repo to contain the recent commits\n    RECEREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-recent"')]),s._v("\n    mkdir ../repo-split-recent\n    cd ../repo-split-recent/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-recent $RECEREPO\n}\n\nexample_repo () {\n    # Part I: set up a test repo with our example commits\n    mkdir repo-split-example\n    cd repo-split-example/\n    git init\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We want to split the repository into project-recent and project-history portions, following the instructions at https://git-scm.com/book/en/v2/Git-Tools-Replace., but also including branches."')]),s._v(" > README.md\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n\n    git checkout -b A HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch A change."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchA a1"')]),s._v("\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Third commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"third"')]),s._v("\n    TRUNCPARENT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fourth commit."')]),s._v(" >> README.md \n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fourth"')]),s._v("\n    TRUNCPOINT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fifth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fifth"')]),s._v("\n    FIFTH=`git rev-parse HEAD`\n\n    git checkout -b B HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b1"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b1"')]),s._v("\n    B1=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b2"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b2"')]),s._v("\n    B2=`git rev-parse HEAD`\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sixth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sixth"')]),s._v("\n\n    # Now we have a repo with the requisite structure, ready to be split\n    git log --graph --all --oneline --decorate\n}\n\n\nsplit_repo () {\n    # Part II: Split the git repo into historical and current halves at $TRUNCPOINT\n    # Following guidelines at https://git-scm.com/book/en/v2/Git-Tools-Replace\n\n    # First create a branch for the historical commits\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Branching history at $TRUNCPOINT"')]),s._v("\n    git branch history $TRUNCPOINT\n    git log --graph --oneline --decorate history A\n\n    # Now copy the history repo to the remote HISTREPO repository\n    git push project-history history:master\n    git push project-history A\n\n    # Now to split the repo to get the recent history from TRUNCPOINT to HEAD of master\n    # Create a base commit for the new new recent history\n    MESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository at $HISTREPO"')]),s._v("\n    BASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n    # Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\n    git filter-branch -- --all\n\n    # Finally, push the current rewritten master and associated branches to a new repository\n    git push project-recent master\n    git push project-recent B\n}\n\ncreate_repos\nsplit_repo \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: Git - transferring all commits to another branch and creating a new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12077848",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --move master develop\ngit checkout --orphan master\ngit rm -rf . ;# abandon the staged, orphaned changes\necho README > README ;# put something in this working directory\ngit add README && git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit of <my_project>"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout develop && git checkout master")]),s._v("\nerror: pathspec "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" did not match any file(s) known to git.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nfatal: Non-fast-forward commit does not make sense into an empty head\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n README | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 README\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n*   867a1f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'develop'")]),s._v("\n|\\  \n| * 22df145 README\n* 15ba82a Initial commit of test project\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How to override a git log pretty format?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42931868",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto,yellow)commit %H%C(auto,green bold)%d%Creset%nAuthor: %an%nDate: %ad%n%n%s%n'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How to get the commit name where the introduction of PATTERN was made?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30476936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git bisect\n▲ git log --follow  <file>\n▲ git log -- file1 file2 ...\ngit log --stat --decorate --graph -- file1 file2 ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Git branches cannot see changes after rebase of master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25786196",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to squash merged git changeset")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33765268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph\n* d3959f3 Something\n* 9e58b42 Modify new\n*   ad1dea6 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mybranch'")]),s._v("\n|\\  \n| * e75658b somechange\n* | 1076214 New File\n* | 49fe418 Updated on master\n|/  \n* b94640d Updated\n* da15c9c Initial commit\n\ngit log --oneline --graph\n* 89fe296 Something\n* d9620cc Modify new\n* 6301614 New File - somechange\n* 49fe418 Updated on master\n* b94640d Updated\n* da15c9c Initial commit\n\ngit rebase -i ad1dea6~2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# a more common form is to modify n number of commits starting at HEAD")]),s._v("\ngit rebase -i HEAD~n\n\ngit reflog\n\ngit reset --hard <SHA>\n\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Commit on new branch isn't visualized")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15014114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --all --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: How to check what git rebase had changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62303137",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline origin/master master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: Github showing an incorrect diff between main branch and PR branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63604391",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/pmacaluso3/merge_conflicts")]),s._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'merge_conflicts'")]),s._v("...\nremote: Enumerating objects: 18, done.\nremote: Counting objects: 100% (18/18), done.\nremote: Compressing objects: 100% (15/15), done.\nremote: Total 18 (delta 1), reused 13 (delta 0), pack-reused 0\nUnpacking objects: 100% (18/18), done.\n$ cd merge_conficts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/head:pr2")]),s._v("\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/head -> pr2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n*   7b4d901 (HEAD -> main, origin/main, origin/HEAD) Merge pull request #3 from pmacaluso3/testing-merge-conflicts\n|\\  \n| *   8941f5a (origin/testing-merge-conflicts) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'main'")]),s._v(" into testing-merge-conflicts\n| |\\  \n| |/  \n|/|   \n* |   5f144f2 Merge pull request #1 from pmacaluso3/pete/addition\n|\\ \\  \n| * | bffd4d1 addition!\n|/ /  \n| * 660b014 testing\n|/  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show 0283a25 | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@/ /'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa")]),s._v("\nAuthor: famousPete <pete.macaluso generalassemb.ly>\nDate:   Wed Aug 26 13:37:10 2020 -0400\n\n    initial\n\ndiff --git a/README.md b/README.md\nnew file mode 100644\nindex 0000000..45b983b\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- /dev/null")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/README.md")]),s._v("\n @ -0,0 +1 @@\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+hi")]),s._v("\ndiff --git a/main.js b/main.js\nnew file mode 100644\nindex 0000000..e69de29\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch origin refs/pull/2/merge:temp")]),s._v("\nremote: Enumerating objects: 1, done.\nremote: Counting objects: 100% (1/1), done.\nremote: Total 1 (delta 0), reused 0 (delta 0), pack-reused 0\nUnpacking objects: 100% (1/1), done.\nFrom https://github.com/pmacaluso3/merge_conflicts\n * [new ref]         refs/pull/2/merge -> temp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v(" temp")]),s._v("\n*   00e1eb0 (temp) Merge 0bb0d7f5b28f8817564f3acff0ca95a1622ea27d into 0283a257e0e1802b57dcbbaccc7860a1b2de9dfa\n|\\  \n| * 0bb0d7f (origin/j/difference, pr2) diff\n|/  \n* 0283a25 initial\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: Git: How to forget very old commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35921186",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env perl")]),s._v("\n\nuse strict;\nuse warnings;\n\nmy $MAX_AGE = 30;\nmy $BRANCH  = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(";\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\nmy($new_start,$rebase) = `git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to determine new root commit"')]),s._v("\n  unless defined($new_start) && $? == 0;\n\nchomp $new_start;\n\nmy $new_base = `echo Forget old commits | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("`;\ndie "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to orphan $new_start"')]),s._v(" unless $? == 0;\nchomp $new_base;\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\nif (defined $rebase) {\n  system("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rebase --onto $new_base $new_start HEAD"')]),s._v(") == 0\n    or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: git rebase failed"')]),s._v(";\n}\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git branch -f $BRANCH HEAD"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: failed to move $BRANCH"')]),s._v(";\n\nsystem("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reflog expire --expire=now --all && git gc --prune=now"')]),s._v(") == 0\n  or die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0: cleanup failed"')]),s._v(";\n\ngit log --graph --decorate --pretty=oneline --abbrev-commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash -xe")]),s._v("\n\nMAX_AGE=${MAX_AGE:-30}\nBRANCH=${BRANCH:-master}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# assumes linear history")]),s._v("\n{\n  read new_start\n  read rebase\n} < <(git log --reverse --since="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MAX_AGE days ago"')]),s._v(" --format=%H)\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start"')]),s._v(" ]  # assertion\n\nread new_base < <(\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Forget old commits"')]),s._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_start^{tree}"')]),s._v("\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# don't assume multiple commits more recent than $MAX_AGE")]),s._v("\n[ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$rebase"')]),s._v(" ] && git rebase --onto $new_base $new_start HEAD\n\ngit branch -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v(" HEAD\n\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH"')]),s._v("  # avoid ending on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"no branch"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: Git: should merged branch be always deleted?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15762383",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=oneline --abbrev-commit --graph --decorate\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: Print git log without commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24431045",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate -10 --all --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cred%h%Creset%C(yellow)%d%Creset"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: from which branch the remote branch is created")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40859988",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),s._v("   ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: How to reverse a git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43162502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --mirror [git-clone-url]\ncd [repo.git]\n./git-reverse.sh\ngit log --all --date-order --graph --decorate\n\n$ ./git-reverse.sh \nbe0923ece8f73281e5e54906c29debb852894b92 - Reversed 1 of 360 (0%)\n061bca59b29e75becbde66d2e510fc2b4059ccb2 - Reversed 2 of 360 (0%)\n6a19039e05e3a0186187d0a6943634e8499b5a65 - Reversed 3 of 360 (0%)\n7afe25e8caf93eb7107471a1bd078d4adc3f6999 - Reversed 4 of 360 (1%)\n8b556f6fe97c5357c2328467a5ba01b77931ff82 - Reversed 5 of 360 (1%)\n71fd0883975154f48059ca929db8ccb659c5049a - Reversed 6 of 360 (1%)\n[etc...]\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" have diverged,\nand have 199 and 159 different commits each, respectively.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to merge the remote branch into yours)\n\n*********************************************\n| Git repo successfully reversed!!! :-) (-: |\n*********************************************\nTo push the reversed repo:\n  rm .git/packed-refs\n  rm -rf .git/refs/remotes\n  git push --mirror [new-git-clone-url]  \n\nWARNING:\n========\nPushing a reversed git repo is a profoundly destructive and confusing operation.\n\nYou have a full "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git clone --mirror'")]),s._v(" backup stored somewhere safe, right?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: how to check nesting structure of local git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51158688",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --simplify-by-decoration --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%d'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: View git log (with merges) for only certain branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22824736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You're not seeing "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"extra"')]),s._v(" branches\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),s._v(" master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -14")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt   <===== Here is master\n*   03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n|\\\n| * a765ecc (bar) Add quack.txt         <===== Here is bar\n| * 80efc7c Add moo.txt\n* | b1bc4f1 Add junk\n|/\n| * acb480b (temp) Add stuff after merge commit <===== Here is temp\n| *   1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| |\\\n| | * 06c40a1 (foo) Add even more junk          <===== Here is foo\n| | * ea3ea46 Add foo.txt\n| |/\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ You probably don't want to use --no-merges for this...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merges master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -11")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* a765ecc (bar) Add quack.txt          <===== Here is bar\n* 80efc7c Add moo.txt\n| * b1bc4f1 Add junk                   <===== Which branch does this belong to?\n|/\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 06c40a1 (foo) Add even more junk             <===== Here is foo\n| * ea3ea46 Add foo.txt\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n\n▲ Prefer --first-parent instead\ngit log --oneline --graph --decorate --first-parent origin/master origin/topic1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --first")]),s._v("-parent master temp"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -9")])]),s._v("\n* 458e836 (HEAD, master) Add narf.txt  <===== Here is master\n* 03bbab7 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bar'")]),s._v("\n* b1bc4f1 Add junk\n| * acb480b (temp) Add stuff after merge commit  <===== Here is temp\n| * 1e4b626 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" into temp\n| * e918c72 Add derp.txt\n| * f1a74d8 Add lol.txt\n| * c244486 Add foo.txt\n|/\n* 7c61796 Fix OS X Bash `workdir` alias for new terminal tabs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: Git: how to find shortest path between commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53545311",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log commitA..commitB\n\ngit log --simplify-merges --graph --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tformat:%C(yellow)%h%Creset\\\\ %Cgreen(%ar)%Creset\\\\ %C(blue)<%an>%Creset\\\\ %C(red)%d%Creset\\\\ %s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: Git: Creating branch out another branch showing on main level")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-branch.html"}},[s._v("git show-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44981092",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-branch\ngit log --all --decorate --graph\ngitk --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: How to see a user's check-in history in TFS w/ Git repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50284134",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Option1: Filter in TFS web page\n▲ Option 2: View from local git repo\ngit log --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                              #Show commits made by the user for all branches\ngit log --all --oneline --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v("                    #Show each commit for one line\ngit log --oneline --decorate --graph --all --author="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"username"')]),s._v(" #Keep branch structure\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: How to auto-scroll to location of git hash commit on git tree on CLI")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64542041",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("alias gitTree="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log --graph --decorate --pretty=oneline --abbrev-commit --all"')]),s._v("\n\nfunction gshow(){\n    git checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --quiet\n    git log --graph --decorate --pretty=oneline --abbrev-commit --all | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(HEAD)"')]),s._v("\n    git checkout - --quiet\n}\n\ngshow <target-hash>\n\n▲ update\nfunction gshow(){\n    ARG2=${2:-10}\n    git checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --quiet\n    git log --graph --decorate --pretty=oneline --abbrev-commit --all | grep -C $ARG2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(HEAD)"')]),s._v("\n    git checkout - --quiet\n}\n\n▲ with no context arg\n$ gshow 0bc3df2\n|\\ \\ \\\n| * | | dff86b7 Add an FAQ on why users need to resign Xcode to use Xvim2\n| | |/\n| |/|\n* | |   d267b5f Merge pull request #173 from 99arobe/task/update-README-to-remove-dead-link\n|\\ \\ \\\n| |/ /\n|/| |\n| * | 64ecb94 Remove contributing guidelines from the README\n|/ /\n* | 0bc3df2 (HEAD) add comment\n* | 2bddec1 add header update command comment\n* | e244543 update Xcode10 beta3 header\n* |   763b317 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into develop\n|\\ \\\n| |/\n| *   2e50b5a Merge pull request #154 from rick-kilgore/master\n| |\\\n| | * fc3eb9c fudge for the lines that might be only partially shown\n| | * 62efd89 move logic into switch for XVIM_SCROLL_TYPE_LINE\n| | * c4da83f allow scrolling to the first and last lines.  ensure cursor is in the right place\n\n▲ with context arg\n$ gshow 0bc3df2 20\n|\\ \\ \\\n| |/ /\n| * | ad28881 update branches and release readme\n* | | 07d6820 deployment target 10.12 -> 10.13, swift -> 4.0\n* | |   b06fbdf Merge pull request #177 from timothycosta/develop\n|\\ \\ \\\n| * | | 2c48bcf Implemented "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'source'")]),s._v(" command\n| * | | 98cf07d Source xvimrc on toggle xvim\n|/ / /\n* | |   c725592 Merge pull request #175 from 99arobe/task/update-README-to-include-reasons-for-resigning-Xcode\n|\\ \\ \\\n| * | | dff86b7 Add an FAQ on why users need to resign Xcode to use Xvim2\n| | |/\n| |/|\n* | |   d267b5f Merge pull request #173 from 99arobe/task/update-README-to-remove-dead-link\n|\\ \\ \\\n| |/ /\n|/| |\n| * | 64ecb94 Remove contributing guidelines from the README\n|/ /\n* | 0bc3df2 (HEAD) add comment\n* | 2bddec1 add header update command comment\n* | e244543 update Xcode10 beta3 header\n* |   763b317 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" into develop\n|\\ \\\n| |/\n| *   2e50b5a Merge pull request #154 from rick-kilgore/master\n| |\\\n| | * fc3eb9c fudge for the lines that might be only partially shown\n| | * 62efd89 move logic into switch for XVIM_SCROLL_TYPE_LINE\n| | * c4da83f allow scrolling to the first and last lines.  ensure cursor is in the right place\n| | * 17ab836 don't move cursor on ctrl-e, ctrl-y\n| |/\n* | 7f4943d update the mangled signature of addSelectedRange\n* | ac3faea fix #161 Xcode 10: Crash while edit in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'build phases'")]),s._v("\n* | 7dc4ea9 fix #158 not work C-f,C-b,C-u,C-d in Xcode10\n* | 6397eff improve swift source\n* | 9415303 add logger for swift\n* | dae173f change swift function pointer address for Xcode10\n* | d95e598 change from Xcode9.3 header to Xcode10\n* | da8b31d class-dump Xcode10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: Merging two git repositories from some specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31133575",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir a\ncd a\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v(" > asdf.txt\ngit init\ngit add asdf.txt \ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a1"')]),s._v("\necho asdf2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a2"')]),s._v("\ncd ..\ncp -a a b\ncd b\nrm -rf .git\ngit init\ngit add asdf.txt \necho b1 >> asdf.txt \ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b1"')]),s._v("\necho b2 >> asdf.txt\ngit commit -am"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b2"')]),s._v("\ngit log --graph --all --oneline --decorate\ncd ../a\ngit log --graph --all --oneline --decorate\ngit fetch ../b master:b_branch\ngit log --graph --all --oneline --decorate\n\ngit checkout b_branch\ngit rebase master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: How to add author name to a custom git alias?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53251152",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%an%x09%s"')]),s._v("\n\ngit log --all --decorate --graph --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%C(auto)%h%x09%d%x09%C(blue)%an%C(reset)%x09%s"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: Amending commit HEAD~1 for Gerrit review which shares a file with commit HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19897455",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, master) Change 2\n* 120c061 Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git branch changeA 120c061")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git branch changeB e40f865")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, master, changeB) Change 2\n* 120c061 (changeA) Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git reset --hard HEAD~2")]),s._v("\nHEAD is now at 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git commit --amend -a")]),s._v("\n[changeA 93837a4] Change 1\n 2 files changed, 3 insertions(+), 2 deletions(-)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* 93837a4 (HEAD, changeA) Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git checkout changeB")]),s._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'changeB'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* e40f865 (HEAD, changeB) Change 2\n* 120c061 Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git rebase 93837a4")]),s._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Change 1\nUsing index info to reconstruct a base tree...\n....\n....\nApplying: Change 2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#git log --graph --decorate --oneline -n13")]),s._v("\n* d3fac58 (HEAD, changeB) Change 2\n* 93837a4 (changeA) Change 1\n* 73a8f97 (master) Initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: How to update a git checkout branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24495822",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout B\ngit log --oneline --graph\n\ngit rebase --onto A 4b84d26\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: How to retrieve a branch after finishing a branch in gitflow")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12029007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you just did that, the feature would be second parent of the current commit (the merge commit). You can recreate the branch with\n git branch my-feature HEAD^2\n\n git checkout -b my-feature HEAD^2\n\n▲ If it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s been a while, it'")]),s._v("s probably not the second parent of the current commit. Use\n gitk \n\ngit log --graph --oneline\n\n▲ to find where that branch finished and use the HASH or tree-ish to recreat it. If you guarantee that the merge message is the default one, you can\ngit branch my-feature $(git log -1 --format=%H --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"merge branch 'my-feature'\"")]),s._v(")^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: Can git filter repo create a monorepo from many repos interweaving commits by date?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62375689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --oneline --date-order\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --reverse   : 'rebase -i' asks for entries starting from the oldest")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# --no-merges : do not mention the "merge" commits')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sed -e 's/^/pick /' : use any way you see fit to prefix each line with 'pick '")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#        (another valid way is to copy paste the list of commits in an editor,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#         and add 'pick ' to each line ...)")]),s._v("\ngit log --reverse --no-merges --oneline --date-order |\\\n  sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^/pick /'")]),s._v(" > /tmp/rebase-apply.txt\n\ngit rebase -i --root\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: Resetting my last commit undoing many commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55519613",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you run:\ngit log --graph --oneline -n 14\n\n* xxxxx The top commit\n* xxxxx merge commit\n|\\\n| * aaaaa\n| * bbbbb\n| * ccccc\n| * ddddd\n| * eeeee\n| * fffff\n| * 11111\n| * 22222\n| * 33333\n| * 44444\n|/\n* yyyyyy The commit where you ended up after the 2nd `reset`\n\n▲ If it is the case, you can do:\ngit reset --hard aaaaa\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: How to show only given commits (logically same as "),e("code",[s._v("git log --no-walk")]),s._v(")")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65939810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate-refs=refs/heads/dec --simplify-by-decoration\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: How can I find pending commits between two branches excluding already cherry-pick/merged changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44512546",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h%C(auto)%d %s %C(dim white)(%aN, %ar)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: how to add author info onto git log --oneline --graph")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51625625",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h%x09%an%x09%d%x09%s"')]),s._v(" --graph\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: How can you change the branch on a PR?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44665230",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Situation\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -5")])]),s._v("\n\n* abcd123 (HEAD -> master, origin/master, origin/HEAD) Your commit two\n* abcd123 Your commit one\n* abcd123 Some jQuery commit\n* abcd123 Some jQuery commit      \n* abcd123 Some jQuery commit                                      \n\n▲ Response\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" my-topic-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --set")]),s._v("-upstream origin my-topic-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add upstream git@github.com:jquery/jquery.git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" upstream/master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),s._v("-with-lease")]),s._v("\n\n▲ Result\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -5")])]),s._v("\n\n* abcd123 (origin/my-topic-branch, my-topic-branch) Your commit two\n* abcd123 Your commit one\n* abcd123 (HEAD -> master, upstream/master, origin/master, origin/HEAD) Some jQuery commit\n* abcd123 Some jQuery commit\n* abcd123 Some jQuery commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: Finding my commits after pulling new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34056937",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --decorate my-branch\n\ngit log --graph --decorate master my-branch\n\ngit reflog\n\ngit log --graph --decorate --format=oneline\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: git log with additional details from body of the commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6655776",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=Ticket-Refs"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DELIMITER_STRING%B'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\*.*DELIMITER_STRING\\|Ticket'")]),s._v(" | sed s/DELIMITER_STRING.*//\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --grep")]),s._v("=Ticket-Refs"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'DELIMITER_STRING%b'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\*.*DELIMITER_STRING\\|Ticket-Refs'")]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':a;N;$!ba;s/DELIMITER_STRING.*Ticket-Refs://'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: git log not showing latest commits in cloned repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70131517",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --graph --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(yellow)%h%Creset %Cgreen(%cd) %C(bold blue)<%an>%Creset %C(red)%d%Creset %s'")]),s._v(" --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: Strategies of merging master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44146810",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --graph --all --decorate=short\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to print initial letter of committer in git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41081122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --oneline --graph --decorate --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%C(auto)%h %Cgreen%ai %C(reset)%C(auto)(%<(3,trunc)%cN) %s %d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: How can I use the command line to see which commit was pushed last")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32650070",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --branches")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"oneline"')]),s._v(" --abbrev-commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: How to view all tags in a git repository (more than 29)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34901984",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline --decorate --graph --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: How to check what I fetched?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56637339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch --all --dry-run\n\ngit log --oneline --graph --decorate --simplify-by-decoration --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: Push repository to new remote, one commit at the time")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53419840",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do \n    git push origin $c:master\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")])]),s._v("\n* d2d3264 (HEAD -> master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc (origin/master) initial commit\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=format:")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master\n6765170\nca354e5\nf3c54df\n9171144\nd2d3264\n\n\ntobi@TOBIAS-PC:/mnt/d/test/git/r$ for c in $(git log --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h"')]),s._v(" --reverse --first-parent origin/master..master); do git push origin $c:master; done\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 235 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   c1873cc..6765170  6765170 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   6765170..ca354e5  ca354e5 -> master\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 244 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   ca354e5..f3c54df  f3c54df -> master\nCounting objects: 8, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (6/6), done.\nWriting objects: 100% (8/8), 762 bytes | 0 bytes/s, done.\nTotal 8 (delta 0), reused 0 (delta 0)\nTo ../b\n   f3c54df..9171144  9171144 -> master\nCounting objects: 3, done.\nDelta compression using up to 8 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 274 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo ../b\n   9171144..d2d3264  d2d3264 -> master\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("tobi@TOBIAS-PC:/mnt/d/test/git/r$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* d2d3264 (HEAD -> master, origin/master) asdaskdj\n*   9171144 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'something'")]),s._v("\n|\\\n| * f85e25e (something) opjsdfk\n| * 069b6f1 bla\n* | f3c54df kjsdaflk\n* | ca354e5 kjsdaflk\n|/\n* 6765170 asdf\n* c1873cc initial commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Viewing unpushed Git commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2090    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2016954",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin/master..HEAD\n\ngit diff origin/master..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to revert a merge commit that's already pushed to remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1654    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7100005",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log 8989ee0 \n\ngit log 7c6b236\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Search all of Git history for a string")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1501    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4472267",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S password\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('4. Usage scenario: How do I "git blame" a deleted line?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 708    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4404551",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S <string> path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How do I run git log to see changes only for a specific branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 641    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4649377",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry -v master\n\ngit log master..\n\ngit log master..branchname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do you merge two Git repositories?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 498    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14992078",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log <rev>\ngit blame <rev> -- README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# finishes with all files added at once commit")]),s._v("\ngit log rails/README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then continue from original tree")]),s._v("\ngit log <rev> -- README.md\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How can I list all the deleted files in a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 463    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6018043",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --diff-filter=D --summary\n\ngit log --diff-filter=D --summary | grep delete\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Find a commit on GitHub given the commit hash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 451    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12214817",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show 35e32b6a00dec02ae7d7c45c6b7106779a124685\ngit log -p -1 35e32b6a00dec02ae7d7c45c6b7106779a124685\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Commit history on remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 289    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13944180",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log remotename/branchname\n\ngit log HEAD..remote/branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Making 'git log' ignore changes for certain paths")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 260    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21079437",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ It is implemented now (git 1.9/2.0, Q1 2014) with the introduction pathspec magic :(exclude) and its short form :! in commit ef79b1f and commit 1649612, by\nNguyễn Thái Ngọc Duy (pclouds), documentation can be found here.\ngit log -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':(exclude)sub'")]),s._v("\ngit log -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':!sub'")]),s._v("\n\ngit log -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':(exclude,icase)SUB'")]),s._v("\n\n▲ Note: Git 2.13 (Q2 2017) will add a synonym ^to !\n▲ Note that, before Git 2.28 (Q3 2020), the use of negative pathspec, while collecting paths including untracked ones in the working tree, was broken.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to get commit history for just one branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 185    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16974215",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log master..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How can I print the log for a branch other than the current one?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 164    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31370483",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\ngit log <branch>\n\n▲ From the git-log man-page...\ngit log [<revision range>]\n\ngit log <branchname>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to squash all git commits into one?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 156    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1657287",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("rm -rf .git\ngit init\ngit add .\ngit commit\n\ngit log > original.log\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# edit original.log as desired")]),s._v("\nrm -rf .git\ngit init\ngit add .\ngit commit -F original.log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How can I make git commit messages divide into multiple lines?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 124    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29934000",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(' "1. what i changed')]),s._v('\n> 2. blank line\n> 3. why i changed"\n\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit abcde2f660c707br2d20411581c4183170c3p0c2")]),s._v("\nAuthor: Alex Pan <alexpan@stackoverflow.com>\nDate:   Tue Apr 28 20:52:44 2015 -0700\n\n    1. what i changed\n    2. blank line\n    3. why i changed\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to undo a merge on Bitbucket?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 98    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37036587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone git@bitbucket.org:my/repo.git\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-or-")]),s._v("\ngit clone https://my@bitbucket.org/my/repo.git\n\ngit checkout master\n\ngit log\n\ngit reset --hard 72ead1c4c1778c23c277c4f15bbb68f3bb205f54\n\ngit push -f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Where to find changes due to "),e("code",[s._v("git fetch")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 96    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10685691",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin/master ^master\n\ngit log master..origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Revert a merged pull request on Bitbucket")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 88    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38302342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout <branch>\ngit pull\ngit log\n\ngit revert -m 1 <SHA-1>\ngit push\n\ngit revert -m 1 <SHA-1 (from clipboard)>\ngit push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to undo git flow feature finish?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13505455",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log\n\ngit checkout develop\ngit checkout -b feature/<feature-name>\ngit reset <sha1> --hard\ngit checkout develop\ngit reset <sha2> --hard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How can I list the git subtrees on the root?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 59    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18339297",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log | grep git-subtree-dir | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" -f2 | sort | uniq\n\n git log | grep git-subtree-dir | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('":"')]),s._v(" -f2 | sort | uniq | xargs -I {} bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'if [ -d $(git rev-parse --show-toplevel)/{} ] ; then echo {}; fi'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Git - Remove commit from history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30893371",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log\n\ngit rebase -i [hash]~\n\n: for example\ngit rebase -i e8348~\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to PR and merge again after reverting PR using Github Revert Button")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55936184",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# do the needed changes in the feature branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" \"fixed issues in feature-branch'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create new branch tracking master branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" revert-the-revert-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -t")]),s._v(" master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# revert the reversion commit")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# find it from your git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in linux try: 'git log | grep revert -A 5 -B 5'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git revert <revert-commit-hash>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# checkout the original feature branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout feature-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge the revert branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge revert-the-revert-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# handle merge conflicts and commit and PR")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Commit differences between local and remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 47    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7058008",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch\ngit log master..origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Shorthand to view diff of previous version of file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 42    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14468031",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),s._v(" <filename>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),s._v(" <filename>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Using git to grep through a file's previous versions?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/89008",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -Sxyz foo.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to list local commits difference in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7602931",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin/master..master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How to discard local changes and pull latest from GitHub repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38776693",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log\n\ngit reset --hard <your commit hash key>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to remove a commit from the middle of a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42522493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                          # copy the target commit ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" <target-commit>~1  # start rebase from the previous commit of target commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --continue")]),s._v("      # repeat the command until finish rebase")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin HEAD ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Undo a merge that has been pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10181607",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Merges don"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t happen on push, they happen on git merge (well, and pull but that'")]),s._v("s really just fetch + merge, hence, merge happening on merge).\n<get copy from origin/develop>\n<wait around for remote's origin/develop to acquire new commits>\ngit checkout develop      # get onto (local) develop branch\n<edit>\ngit commit -m message     # create some new commit(s)\ngit push origin develop   # attempt to push -- but this fails!\ngit pull\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--------------------------- C*--- M")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- C4 --- C5 --- C6 --- C7 ---- /")]),s._v("\n\n▲ So, how can you do that?  Well, one way is to log in on X,2 cd into the repo (even if it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s --bare), and use git update-ref there.  Let'")]),s._v("s say the SHA1 for C7 is actually 50db850 (as shown by "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log"')]),s._v(").  Then you could do this:\nlocalhost$ ssh X\nX$ cd /path/to/repo.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("X$ git update-ref refs/heads/develop 50db850")]),s._v("\n\n▲ But if you can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t log in to X, or even just don'")]),s._v("t want to, you can do the same with git push -f.3  (This has other advantages: in particular, your git repo will know that origin/develop has been rewound, once the push -f completes successfully.)  Just make a local branch-tip pointing to the right commit:4\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("localhost$ git branch resetter 50db850")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("localhost$ git log resetter         # make sure it looks right")]),s._v("\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("localhost$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin resetter:develop")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo ssh://[redacted]\n + 21011c9...50db850 resetter -> develop (forced update)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("localhost$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" resetter   # we don't need it anymore")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How do you see which commit deleted a file from the repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9604786",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 --stat -- <path/to/file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Search git history for a change in a merge commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1655154",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -m -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some text'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Git log - How to filter (exclude) files from appearing in "),e("code",[s._v("git log")]),s._v("? (git pathspec magic)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35775022",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ pathspec magic\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Use this syntax, pay attention to all the parameters and the syntax")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Unix: ")]),s._v("\ngit log <any required flags> -p  -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':(exclude)*.generated.*'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Windows (double quote) [ Thank to @Cyril Gandon for noticing it]:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (double quote) should work on all OS as well")]),s._v("\ngit log <any required flags> -p  -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('":(exclude)*.generated.*"')]),s._v("\n\n▲ What is this weird syntax?\n▲ From the doc:\n▲ Demo:\n▲ git log --stat\n▲ git log --stat -p -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':(exclude)*dal.js*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Git log with diff for a certain file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38636291",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p path \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Get specific files from a GIT remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12041061",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ A "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote branch"')]),s._v(" is nothing more than a commit pointer and the affiliated pack data. Just git fetch <remote> and then if you want to view diffs between files on the remote and your local, you can do so with:\ngit diff <local_branch> <remote>/<remote_branch> -- <file>\n\ngit log <local_branch>..<remote>/<remote_branch> -- <file>\n\n▲ Finally if you just want to checkout a particular version of a file from the remote (this wouldn't be ideal; much better to merge the remote branch with git merge <remote>/<remote_branch> or git pull), use:\ngit checkout <remote>/<remote_branch> -- <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: Where do I merge child branch to if it is based on a parent branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49713191",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\ncommit --\x3e commit --\x3e commit --\x3e commit --\x3e commit --\x3e master\n              |\n          branchA --\x3e commit --\x3e commit --\x3e commit\n                        |\n                     branchB --\x3e commit --\x3e commit --\x3e ...\n\nA  <-B  <-C  <-D  <-E  <-F   <--master\n      \\\n       G  <-H  <-I  <-J   <--branchA\n             \\\n              K  <-L  <-M  <--N  <--O   <--branchB\n\nA--B--C--D--E--F   <-- master, branchC (HEAD)\n    \\\n     G--H--I--J   <-- branchA\n         \\\n          K--L--M--N--O   <-- branchB\n\n                 P   <-- branchC (HEAD)\n                /\nA--B--C--D--E--F   <-- master\n    \\\n     G--H--I--J   <-- branchA\n         \\\n          K--L--M--N--O   <-- branchB\n\n▲ Defining "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a branch"')]),s._v(" via reachability\nA--B--C--D--E--F   <-- master, branchC (HEAD)\n\nA--B--C--D--E--F   <-- master, branchC (HEAD)\n    \\\n     G--H--I--J   <-- branchA\n\n▲ Excluding some commits\ngit log master..branchA\n\ngit log branchA ^master\n\n▲ The merge base\nA--B--C--D--E--F   <-- master (HEAD)\n    \\\n     G--H--I--J   <-- branchA\n         \\\n          K--L--M--N--O   <-- branchB\n\n▲ Merging\nA--B--C--D--E--F--P   <-- master (HEAD)\n    \\            /\n     G--H--I----J   <-- branchA\n         \\\n          K--L--M--N--O   <-- branchB\n\n▲ The existence of a merge commit changes the graph\nA--B--C--D--E--F----------P   <-- master (HEAD)\n    \\                    /\n     G--H--I--J   <-----/----- branchA\n         \\             /\n          K--L--M--N--O   <-- branchB\n\n▲ Pull requests are not merges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Git Checkout reverted code to older commit, how to revert back?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[s._v("git stash")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7263984",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Safest thing is to create a branch at the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"lost"')]),s._v(" commit, then check if everything is dandy using gitk or git log -p\ngit branch recovery HEAD@{1} # use whatever commit you need\ngit log -p recovery\n\n▲ If you haven't done any new commits on master, you can simply merge the commit in question, which will be resolved as a fast-forward merge by git:\ngit merge HEAD@{1} # use whatever commit you need\n\n▲ If you don't care about any new commits on master and you simply want to reset master branch to that lost commit, use git reset. To not lose any changes, stash changes to your working copy first (git stash save)\ngit reset --keep HEAD@{1}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to make "),e("code",[s._v("git log --stat -- <path>")]),s._v(" show "),e("em",[s._v("all")]),s._v(" files in selected commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10713967",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   --full-diff\n       Without this flag, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -p <path>..."')]),s._v(" shows commits that touch\n       the specified paths, and diffs about the same specified paths. With\n       this, the full diff is shown for commits that touch the specified\n       paths; this means that "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<path>..."')]),s._v(" limits only commits, and doesn't\n       limit diff for those commits.\n\n       Note that this affects all diff-based output types, e.g. those\n       produced by --stat etc.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Find last commit in Git repo that contains a certain string pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10436670",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ThisClass(object):'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: Log of remote history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16315536",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How to see the commit messages that origin/master is ahead of master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14426939",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git log master..origin/master\n\ngit log origin/master ^master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: git-subtree without squash: view log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40349121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Alternatives and Workarounds\ngit log -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*filename'")]),s._v("          # from the toplevel\n\n▲ References\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: Send mail after git commit not push")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3759460",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 -p|mail -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Git commit"')]),s._v(" mail@example.com\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: Git branch from tag - internals")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19036287",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Tags Reference Commits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit e0e92bc337b246696aec5c214507321c7526c1e9")]),s._v("\nAuthor: John Doe <john.doe@example.com>\nDate:   Thu Sep 26 14:38:36 2013 -0400\n\n    Empty initial commit.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag v0.0.1")]),s._v("\n\n$ cat .git/refs/tags/v0.0.1 \ne0e92bc337b246696aec5c214507321c7526c1e9\n\n▲ Use the Tag as a Commit Identifier\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How do I view the file paths that were last modified in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6098486",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --stat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: Git history including/interleave submodule commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8850366",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 111808a2bb8c9683d3abe68df419759848ddb16e")]),s._v("\nAuthor: Simon Whitaker <simon@...>\nDate:   Fri Jan 13 10:40:41 2012 +0000\n\n    Updated ObjectiveFlickr ref\n\ndiff --git a/submodules/ObjectiveFlickr b/submodules/ObjectiveFlickr\nindex b37c053..1bede67 160000\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/submodules/ObjectiveFlickr")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/submodules/ObjectiveFlickr")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-Subproject commit b37c0539a536147957c01ad01cf2d8666bcbde9e")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+Subproject commit 1bede67b8258ed4b95b5d3d6c2175b5e64912269")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --submodule")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 111808a2bb8c9683d3abe68df419759848ddb16e")]),s._v("\nAuthor: Simon Whitaker <simon@...>\nDate:   Fri Jan 13 10:40:41 2012 +0000\n\n    Updated ObjectiveFlickr ref\n\nSubmodule submodules/ObjectiveFlickr b37c053..1bede67:\n  > Set SKIP_INSTALL to YES so that Product > Archive \n  still builds app rather than Xcode archive\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Git commits found in master, not shown when viewing log of specific file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1130868",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --stat -c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: Find the commit that changed file permissions")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33887608",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --summary {file} |grep -e ^commit -e"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=>"')]),s._v("|grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'=>'")]),s._v(" -B1 | grep ^commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Git, read latest commit message when committing")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32047552",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"# Previous commit:"')]),s._v(" >> $1\ngit log -1 -p|sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\(.\\)/# \\1/g'")]),s._v("  >> $1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: Create a pull request of a single commit on github")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41931500",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                               # copy the last-commit-hash ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" stable origin/stable  # create local/stable branch from remote/stable")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick <last-commit-hash>    # take the last-commit")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin HEAD                  # update remote/stable")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: Git search a commit where a file has been modified")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26656692",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p somefile/somefile.cpp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: Compare git branch with rebased branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9302664",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("diff <(git log master..topic -p) <(git log master..old-place-of-topic -p)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: git log with square bracket in name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47387740",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[__Odd__].txt"')]),s._v("\n\ngit log -- ./"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[__Odd__].txt"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: Gitlab - See list of files deleted in a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35441996",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --diff-filter=D --summary\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: Git rebasing to upstream")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6850362",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you have A---B---C, where upstream/master is at A and master is at C, meaning B and C are commits you don't want to send upstream, then:\ngit checkout -b to-send-upstream A\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# work, work, work")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commits")]),s._v("\ngit log A..HEAD # this will be the commits to send upstream\n\n▲ If you have commits you're not going to send back on master, it might be simpler to keep track of things if you move those into a different branch and keep your master in sync with upstream/master:\ngit branch my-stuff-not-sent-upstream\ngit reset --hard A # will wipe out local changes!\ngit push origin master -f # can lose history if a shared remote!\ngit push origin my-stuff-not-sent-upstream\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: git: Get all the committed hashes from a specific branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12561422",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log master..A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: How do I find all git revisions of a file which contains foo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17101251",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S foo bar.cpp\n\ngit log -p -S foo bar.cpp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: Pull request contains commits from master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51617891",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First, create a backup branch from your branch in case you screw things up. You can do that just by making a new branch from your current one. If you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'re in the branch you'")]),s._v("re working on, for example, you can:\ngit checkout -b my_branch_1_backup\n\ngit checkout my_branch_1\n\ngit rebase -I commit1\n\npick commit2\npick commit3\npick commit4\n\n▲ and so on. If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t want commit3 (because it'")]),s._v("s already in master), change pick commit3 to drop commit3. There will be a list of other options in a comment in your editor. Once you've fixed up your list of commits, save and exit the editor, and do a:\ngit log\n\ngit rebase origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: Stop new branch from getting old commit history in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16751824",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log develop..new_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: How to search changes with "),e("code",[s._v("git log")]),s._v(" and show the matching lines?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28814237",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -G search_term -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: Git: show full log (or diff) of commits which modified a given file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21895230",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--full-diff")]),s._v("\n           Without this flag, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -p <path>..."')]),s._v(" shows commits that touch\n           the specified paths, and diffs about the same specified paths. With\n           this, the full diff is shown for commits that touch the specified\n           paths; this means that "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<path>..."')]),s._v(" limits only commits, and doesn't\n           limit diff for those commits.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: How can I view original branch of commits (and file changes) using git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-whatchanged.html"}},[s._v("git whatchanged")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6918158",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git whatchanged\n\ngit log --stat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: How to copy two commit ID inside git log?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29339997",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log | cat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('62. Usage scenario: How can I "git log" only code published to trunk?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2607688",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: Diff last modifications to a file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45841350",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p -1 <filename>\n\ngit log -p <filename>\n\ngitk <filename>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: How do I see last commit that a line existed before it was deleted in Visual Studio Code?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60380331",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -1 -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"example-line"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: How do see find number of lines changed per file in git log")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37817757",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --stat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: Get list of all commits (summaries) with the per-file diff/patch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11253426",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('67. Usage scenario: How can I set up an alias for "git last" that accepts a number as an argument?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9561529",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("last = !sh -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log \"-${1:-1}\" HEAD'")]),s._v(" -\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: How to properly switch GIT branches and return to later work.")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53788333",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git add .\ngit commit -a -M"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'WIP: (describe where you are)'")]),s._v("\ngit checkout Y\n\ngit checkout -b pick-a-descriptive-name-for-the-branch\ngit commit ...   # commits land on this new branch\ngit checkout Y\n\ngit checkout pick-a-descriptive-name-for-the-branch\ngit log -1 # Note the SHA1 of the commit, which is your work in progress\ngit checkout X\ngit cherry-pick -n SHA1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: Determine at which commit a file entered the master branch in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11262250",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log master            \\")]),s._v("\n     --first-parent         \\  # stay on this branch\n     --diff-filter=A        \\  # only check for when the file was added\n      -m                    \\  # ...but treat merging the file as "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'adding'")]),s._v(" it\n     --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%h %cd %s"')]),s._v("   \\  # output the abbreviated hash, date, and subject\n   <file>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: Merging havoc - merging two unrelated branches, each with master changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36538099",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p origin/master..F -- path/to/unexpected_conflicting_file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: When I "),e("code",[s._v("git pull --rebase")]),s._v(" and get a conflict, how do I "),e("code",[s._v("git show")]),s._v(" the other person's commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69262396",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Rebase, part 1\n...--E--F   <-- main, origin/main\n         \\\n          G--H--I   <-- my-new-feature (HEAD)\n\n...--E--F   <-- origin/main\n         \\\n          G--H--I   <-- main (HEAD)\n\n          J--K   <-- origin/main\n         /\n...--E--F\n         \\\n          G--H--I   <-- my-new-feature (HEAD)\n\n▲ Cherry-pick vs merge\n          o--o--o--L   <-- my-branch (HEAD)\n         /\n...--o--B\n         \\\n          o--o--o--R   <-- their-branch\n\n          o--o--o--L\n         /          \\\n...--o--B            M   <-- my-branch (HEAD)\n         \\          /\n          o--o--o--R   <-- their-branch\n\n          o--...--P--C--...\n         /\n...--o--o--...--L   <-- my-branch (HEAD)\n\n▲ Rebase, part 2\n          J--K   <-- origin/main, HEAD\n         /\n...--E--F\n         \\\n          G--H--I   <-- my-new-feature\n\n               G'  <-- HEAD\n              /\n          J--K   <-- origin/main\n         /\n...--E--F\n         \\\n          G--H--I   <-- my-new-feature\n\n               G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-H'")]),s._v("  <-- HEAD\n              /\n          J--K   <-- origin/main\n         /\n...--E--F\n         \\\n          G--H--I   <-- my-new-feature\n\ngit log origin/main@{1}..origin/main\n\ngit log main..origin/main\n\n               G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-H'")]),s._v("-I'  <-- my-new-feature (HEAD)\n              /\n          J--K   <-- origin/main\n         /\n...--E--F\n         \\\n          G--H--I   ???\n\n▲ Conclusion\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: How to REALLY show logs of renamed files with git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68329198",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -M --summary | grep rename | grep BASENAME\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: Succinctly specify exact state of git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20434342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: How to copy the last commit from one branch to master branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42817934",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout new-version")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fixed bug"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                     # copy the ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'commit-hash'")]),s._v(" of last commit ("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fixed bug"')]),s._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick <commit-hash>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: how to search git history (pickaxe), but excluding renames")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18435377",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -SWater -M\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to tell git to ignore git sub modules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23363042",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd /var/www\ngit log -- extensions/Lingo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: How to transplant branch from one repository to a new one without history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42981403",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd old_repo/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout old_repo_old_branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" new-branch       # checkout a new branch (say, new-branch) cleaning all previous commit histories")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                                # see commit history is empty")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add newrepo <new-repo-url>  # add a new remote (say, newrepo) with new-repo-url")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" newrepo HEAD               # push to newrepo/new-branch ")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: How can I review manually resolved conflicts in git (github, some app, InteliJ)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14512668",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --patch -c -1 YOURMERGE\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: How to find a commit that delete a keyword")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57703038",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my expression"')]),s._v(" aBranch\n\ngit log -p -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my expression"')]),s._v(" aBranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: How can I roll back someone's entire project in github to its initial state after forking it to my local drive?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46462042",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log | tail \n\ngit checkout e73188b5512c82290a4070af4afddac20d0b981e\n\ngit clean -fd\n\ngit diff  commit-id1 commit-id2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: Get file names which modified the particular string?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11537448",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"testXYZ"')]),s._v(" --stat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: How to see git commit id")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63147125",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\ncommit ca82a6dff817ec66f44342007202690a93763949 <===\nAuthor: Scott Chacon <schacon@gee-mail.com>\nDate:   Mon Mar 17 21:52:11 2008 -0700\n\n    Change version number\n\ncommit 085bb3bcb608e1e8451d4b2432f8ecbe6306e7e7 <===\nAuthor: Scott Chacon <schacon@gee-mail.com>\nDate:   Sat Mar 15 16:40:33 2008 -0700\n\n    Remove unnecessary test\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("83. Usage scenario: How can I tell which commits are included in merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40590732",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log origin/my-feature..my-feature\n\ngit log origin/my-feature..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("84. Usage scenario: git insert historic changes of subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9706000",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone git@github.com:milovanderline/NLExtract\ngit log -- bag #Identify the first commit where "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bag"')]),s._v(" enters. It starts with 78575\ngit checkout 78575 -b bagin\ngit remote add bag git@github.com:MinIenM/BAG-Extract\ngit fetch bag\ngit checkout bagin -b baginmerge\ngit merge bag/master -s subtree #Create the new merge object. baginmerge now points to the merge object. bagin, which hasn't moved, now has two children, one is the merge object, the other is your old history.\ngit rebase --onto baginmerge bagin master -p #Calculate the diffs from bagin to master, and replay them onto baginmerge. The -p flag tells rebase to preserve merges.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("85. Usage scenario: How to merge from tracking branch without naming the branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13842632",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log ..@{u}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("86. Usage scenario: GIT: modify contents of the secondlast pushed commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42856574",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -2 // here "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2'")]),s._v(" => will display last 2 commits\n// lets say the commit you wish to change has ID "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ededeac"')]),s._v("\n\ngit rebase --interactive ededeac // where "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ededeac"')]),s._v(" is the commit to modify\n\n// delete/update files\ngit commit --all --amend //here you can change the commit message too\n// The new changes are added on to the old commit\n// You can verify that with "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git diff HEAD^'")]),s._v("\ngit rebase --continue\n\ngit push origin --force-with-lease\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("87. Usage scenario: Git log without cloning the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/877138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("ssh some-host "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cd my/repo && git log"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("88. Usage scenario: Git search commit with specific unicode char in content")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70110417",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("zb@db:/tmp$ mkdir so70109544\nzb@db:/tmp$ cd so70109544/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("zb@db:/tmp/so70109544$ git init")]),s._v("\nInitialized empty Git repository in /tmp/so70109544/.git/\nzb@db:/tmp/so70109544$ perl -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'print \"\\xe2\\x80\\x8b\"'")]),s._v(" > test.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("zb@db:/tmp/so70109544$ git add test.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("zb@db:/tmp/so70109544$ git ci"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v("\n[master (root-commit) 4775358] test\n 1 file changed, 1 insertion(+)\n create mode 100644 test.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("zb@db:/tmp/so70109544$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -G")]),s._v(" $")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\u200b'")]),s._v("\ncommit 47753580a0e8e32af4e6c272d7ffdf0170f5bdd2 (HEAD -> master)\nAuthor: zb <zb@somewhere.xyz>\nDate:   Thu Nov 25 12:34:04 2021 +0100\n\n    test\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("89. Usage scenario: git compare commit ID between branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9190843",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log branch1...branch2\n\ngit log branch1...branch2 module/admin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("90. Usage scenario: I accidentally git reset one commit too far. How do I undo this?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34835314",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout yyyyyy -b newbranch\ngit log newbranch\n\ngit cherry-pick yyyyyy\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("91. Usage scenario: Can Emacs display entire git history of a file without requiring git.el?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6673954",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config diff.renames copies\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -M")]),s._v(" -- <filename> <oldname> <oldername>...")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config log.follow true")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log foo.c ;# ok, follow foo.c")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log foo.c bar.c ;# uh oh, now what?")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("92. Usage scenario: how to search for all commits of a particular filename?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12240278",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("93. Usage scenario: How to get a list of remote changes from fetch using LibGit2Sharp")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44082331",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log ..@{u}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("94. Usage scenario: Find a git commit in a repo history that was a directory rename or move")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[s._v("git mv")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47015776",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git init .\nmkdir foo\ntouch foo/file{1,2,3}\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial commit'")]),s._v("\n\ngit mv foo bar\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'renamed foo -> bar'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0429048856377cda39eb475248e142e1bfa4323b")]),s._v("\nAuthor: Lars Kellogg-Stedman <lars@example.com>\nDate:   Mon Oct 30 08:52:24 2017 -0400\n\n    renamed foo -> bar\n\ndiff --git a/foo/file1 b/bar/file1\nsimilarity index 100%\nrename from foo/file1\nrename to bar/file1\ndiff --git a/foo/file2 b/bar/file2\nsimilarity index 100%\nrename from foo/file2\nrename to bar/file2\ndiff --git a/foo/file3 b/bar/file3\nsimilarity index 100%\nrename from foo/file3\nrename to bar/file3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --summary")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 0429048856377cda39eb475248e142e1bfa4323b")]),s._v("\nAuthor: Lars Kellogg-Stedman <lars@redhat.com>\nDate:   Mon Oct 30 08:52:24 2017 -0400\n\n    renamed foo -> bar\n\n rename {foo => bar}/file1 (100%)\n rename {foo => bar}/file2 (100%)\n rename {foo => bar}/file3 (100%)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("p",[e("strong",[s._v("95. Usage scenario: How to search the author of any function or variable in the git project?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11864626",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -S"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"methodFoo"')]),s._v(" -- TroublingClass\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("96. Usage scenario: Show logs for commits that are in a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36946434",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log master..devel\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("97. Usage scenario: How to get a list of all refs a git push would push?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7617586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log @{u}..\n\ngit log -p @{u}..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("98. Usage scenario: How can I see the list of differing commits on one file between two branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8225215",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log commit1 commit2 -- file1 file2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("99. Usage scenario: How to get history of a git branch (Starting Point) once fast forward merge happens")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22731069",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log master..branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("100. Usage scenario: How can I limit the log to commits that affected a given path, but see "),e("em",[s._v("all")]),s._v(" the changes made in those commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28621952",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -p `git rev-list HEAD -- <path>`\n\ngit rev-list HEAD -- <path>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("101. Usage scenario: How to scan multiple Git commits to see if/when a specific bit of text was added to the codebase in the last month")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48477618",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -SisHidden\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("102. Usage scenario: Github clone a previous configuration")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48843114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Resets index to former commit; replace '<commit_id>' with your commit code")]),s._v("\ngit reset <commit_id>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Moves pointer back to previous HEAD")]),s._v("\ngit reset --soft HEAD@{1}\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Revert to <commit_id>"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Updates working copy to reflect the new commit")]),s._v("\ngit reset --hard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("103. Usage scenario: git log to see just the new entries")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32595436",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log aaf5ccs -p --stat src/languages | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^ +'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("104. Usage scenario: git log: contributors list since certain tag?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22478128",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log sha1..sha2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("105. Usage scenario: How to get the commit hash ID for a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49766328",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("106. Usage scenario: generate changelog from git log including the current commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28972460",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nif [ -a .commit ]\n    then\n    rm .commit\n    git log -1 HEAD > tmpfile && cat COMMIT.md >> tmpfile && mv tmpfile COMMIT.md\n    git add COMMIT.md\n    git commit --amend -C HEAD --no-verify\nfi\nexit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("107. Usage scenario: Add tag name to \"git log --graph --format=format:'%h - %s'\" output")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11002202",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git logtagdist")]),s._v("\n* 9bea2b5 - Git 1.7.11-rc3 - tagged: v1.7.11-rc3\n*   3a2c135 - Merge git://github.com/git-l10n/git-po - 17 past v1.7.11-rc2\n|\\\n| *   3482b14 - Merge git://github.com/ralfth/git-po-de - 5 past v1.7.11-rc2\n| |\\\n| | * d7f22ed - l10n: de.po: translate 27 new messages - 3 past v1.7.11-rc2\n| * | 6cb4571 - l10n: Update  po/vi.po to v1.7.11.rc2.2.gb694fbb - 3 past v1.7.11-rc2\n| |/\n| * b694fbb - l10n: zh_CN.po: translate 27 new messages - 2 past v1.7.11-rc2\n| * 7256fd7 - l10n: Update git.pot (27 new, 1 removed messages) - 1 past v1.7.11-rc2\n* |   73a6e3c - Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mm/api-credentials-doc'")]),s._v(" - 11 past v1.7.11-rc2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("108. Usage scenario: How to get the same push output using a date range in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5943646",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git push origin your_branch --verbose\n\ngit log sha1A..sha1B\n\ngit log origin/your_branch..your_branch\n\ngit log origin/your_branch..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("109. Usage scenario: Gathering git commit information b/n 2 commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40101596",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log 8ce980e...99214db~\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("110. Usage scenario: How do I get a log for submodule ref pointer?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23151138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- yourSubmodule\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("111. Usage scenario: Git diff to show changes in CSS block across commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45797838",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<regex>'")]),s._v("\n\ngit log -<n>\n\ngit log <path>\n\ngit log -4 -G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\.card-container {.*?}'")]),s._v(" ./assets/css/app.css\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("112. Usage scenario: git trying to clone a submodule's ref that doesn't exist")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28476016",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --patch")]),s._v(" tools")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 3adfe4b33e4ade9da82983d268e60ca2e52268f9")]),s._v("\nAuthor: Alexander Groß <agross@therightstuff.de>\nDate:   Wed Oct 22 16:50:12 2014 +0200\n\n    The big Paket conversion\n\ndiff --git a/tools b/tools\nindex 84c72d3..c84d813 160000\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/tools")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/tools")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -1 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-Subproject commit 84c72d3cbe98e28d3b5c7643e7290085ec1551f7")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+Subproject commit c84d813ebdae2fc9f2f14d5821cf820fbed42534")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("113. Usage scenario: Did a merge occur from a specific branch into master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23350417",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge-base origin/develop origin/master\n\ngit merge-base origin/develop origin/master | xargs git log -1\n\ngit merge-base origin/develop origin/master | xargs -I sha git log sha..origin/develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("114. Usage scenario: Pulling a remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7670169",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git push\n\ngit fetch\n\ngit merge origin/master\n\ngit log\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("115. Usage scenario: Create a new release after changing a branch in GitHub")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53004495",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --patch\n\ngit branch develop-resurrection <your commit hash>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("116. Usage scenario: Removed file without git remove. Now it's in repo, and not local. How to remove from repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34850375",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm --cached\n\ngit log --cc --stat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("117. Usage scenario: Use git to find added lines matching regex")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34216495",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log master..HEAD -U1 -G printf\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("118. Usage scenario: View commits that make changes to subfolder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32002972",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -- ath\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("119. Usage scenario: Git: Remove all commits from pull request")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41956696",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" backup               # backup the branch for safety")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                            # count how many commits you want to remove")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" HEAD~3            # Let, you want to remove 3 commits here   ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin HEAD            # force (-f) push to remote as you rewrite the history")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("120. Usage scenario: How can I summarize the changes users have made in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53862296",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --shortstat | \\\nawk '/^ [0-9]/ { f += $1; i += $4; d += $6 } \\\nEND { printf("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%d files changed, %d insertions(+), %d deletions(-)"')]),s._v(", f, i, d) }'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);