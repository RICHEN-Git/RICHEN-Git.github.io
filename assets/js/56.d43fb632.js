(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{503:function(s,t,e){"use strict";e.r(t);var n=e(19),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-filter-branch-rewrite-branches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-filter-branch-rewrite-branches"}},[s._v("#")]),s._v(" 📌 git filter-branch - Rewrite branches")]),s._v(" "),e("h2",{attrs:{id:"subdirectory-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#subdirectory-filter"}},[s._v("#")]),s._v(" 🔹 --subdirectory-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Detach (move) subdirectory into separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1263    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/359759",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone /XYZ /ABC\n\ncd /ABC\nfor i in branch1 br2 br3; do git branch -t $i origin/$i; done\ngit remote rm origin\n\ncd /ABC\nfor i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\ngit remote rm origin\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC -- --all\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC HEAD\n\ngit reset --hard\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to remove origin from git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 622    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9224789",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote rm origin\n\ngit filter-branch --prune-empty --subdirectory-filter path/to/subtree HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Export subtree in Git with history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 104    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1662787",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter foodir -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I move a directory in a Git repo for all commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3142821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You can use the subdirectory filter to achieve this\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter blog/ --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n▲ EDIT 1: If you don't want to effectively make _posts the root, use a tree-filter instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mv blog/_posts .'")]),s._v(" HEAD\n\n▲ EDIT 2: If blog/_posts did not exist in some of the commits, the above will fail. Use this instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test -d blog/_posts && mv blog/_posts . || echo \"Nothing to do\"'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git create a new branch with only a specified directory and its history then push to new repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31160999",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch subdir_branch HEAD\ngit filter-branch --subdirectory-filter dir/to/filter -- subdir_branch\ngit push git://.../new_repo.git subdir_branch:master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: Conversion of a Subdirectory to a Submodule")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35937708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter htdocs/typo3_src --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\nRewrite cbe03e13da071403a2632263f1760b560398cdd3 (1/12) (0 seconds passed, remaining 0 predicted)    004b20fc15023539484c7f5990b99780f54dc0ac\nfatal: failed to unpack tree object cbe03e13da071403a2632263f1760b560398cdd3:htdocs/typo3_src\nCould not initialize the index\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter htdocs/typo3_src/ --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\nRewrite ec6e3c7212f1080fc052c87b1129335ab5bee524 (5/10) (1 seconds passed, remaining 1 predicted)    \nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/develop'")]),s._v(" was rewritten\nWARNING: Ref "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/master'")]),s._v(" is unchanged\nWARNING: Ref "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/tags/0.0.1'")]),s._v(" is unchanged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git multiple sub projects from sub folders?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3252064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter project1 HEAD")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to make part of an existing Git repository a submodule")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1593779",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter ABC HEAD --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rm -r -f --cached --ignore-unmatch ABC"')]),s._v(" --prune-empty HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Split one subfolder from git repository with all branches and history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47084338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/USERNAME/REPOSITORY-NAME")]),s._v("\n$ cd REPOSITORY-NAME\n\n$ for i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FOLDER-NAME --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDER-NAME'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (push)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote set-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (push)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Detach subdirectory (that was renamed!) into a new repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6638058",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch rename $COMMIT_ID_OF_RENAME \ngit branch pre-rename rename~\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## First filter all commits up to rename, but not rename itself")]),s._v("\ngit filter-branch --subdirectory-filter $OLDNAME pre-rename\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Add a graft, so our rename rev comes after the processed pre-rename revs")]),s._v("\necho `git rev-parse rename` `git rev-parse pre-rename` >> .git/info/grafts\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## The first filter-branch left a refs backup directory. Move it away so the")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## next filter-branch doesn't complain")]),s._v("\nmv .git/refs/original .git/refs/original0\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Now filter the rest")]),s._v("\ngit filter-branch --subdirectory-filter $NEWNAME master ^pre-rename\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## The graft is now baked into the branch, so we don't need it anymore")]),s._v("\nrm .git/info/grafts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nset -u\nset -e\nset -x\n\nrm -rf .git x y foo\n\ngit init\nmkdir x\necho initial > x/foo\ngit add x/foo\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test commit 1'")]),s._v("\n\necho tc2 >> x/foo\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test commit 2'")]),s._v("\n\nmv x y\ngit rm x/foo\ngit add y/foo\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test rename'")]),s._v("\n\ngit branch rename HEAD\n\necho post rename >> y/foo\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test post rename'")]),s._v("\n\ngit branch pre-rename rename~\n\ngit filter-branch --subdirectory-filter x pre-rename\necho `git rev-parse rename` `git rev-parse pre-rename` >> .git/info/grafts\n\nmv .git/refs/original .git/refs/original0\n\ngit filter-branch --subdirectory-filter y master ^pre-rename\n\nrm .git/info/grafts\n\ngit log -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Create a git repository from commits of a previous one")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4755041",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter foobar --prune-empty -- --all\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f filename1 pattern2.*'")]),s._v(" --prune-empty -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git status picking up parent folder's files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9813398",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("Making a Subdirectory the New Root\n\nSuppose you’ve done an import from another source control system and have subdirectories\nthat make no sense (trunk, tags, and so on). If you want to make the trunk subdirectory be \nthe new project root for every commit, filter-branch can help you do that, too:\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter trunk HEAD")]),s._v("\n\nRewrite 856f0bf61e41a27326cdae8f09fe708d679f596f (12/12)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nNow your new project root is what was in the trunk subdirectory each time. Git will also \nautomatically remove commits that did not affect the subdirectory.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: git filter-branch led to a disconnected history: how to get rid of the old commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17973408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cvs2git --blobfile=blob --dump=dump /path/to/cvs/base\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 1")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module1"')]),s._v(" -- --all\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 2")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module2"')]),s._v(" -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git push a sub-directory into another main repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25407830",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <ORIG_REPO_DIR> <NEW_REPO_DIR>\ncd <NEW_REPO_DIR>\ngit filter-branch --prune-empty --subdirectory-filter <THE_SUBDIR_TO_MAKE_NEW_ROOTDIR> master\ngit push <MY_NEW_REMOTE_ORIGIN_URL> -f .\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Checkout a Specific Folder within a Git Repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36142629",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ filter-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Filter the master branch to your directory and remove empty commits")]),s._v("\ngit filter-branch --prune-empty --subdirectory-filter YOUR_FOLDER_NAME filter_from_branch\n\n▲ subtree split\ngit subtree split -P <name-of-folder> -b <name-of-new-branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Create new git repo from already existing repo's subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6687726",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/remotes/origin | grep -v HEAD); do\n  git checkout -b $(basename $branch) $branch\n  git filter-branch -f --subdirectory-filter subdirectory HEAD -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How can I split a repository apart into smaller atomic repositories?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5106626",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("   To rewrite the repository to look as if foodir/ had been its project\n   root, and discard all other history:\n\n       git filter-branch --subdirectory-filter foodir -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Splitting large git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26455253",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --prune-empty --subdirectory-filter foldername master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How do I pull just one folder from another Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58964379",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter server -- --all \ngit remote add temp git@temporaryrepo....\ngit push temp master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to copy git repository including only one subfolder?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3448847",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter foodir -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"env-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#env-filter"}},[s._v("#")]),s._v(" 🔹 --env-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to change the author and committer name and e-mail of multiple commits in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1426    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/750182",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit filter-branch --env-filter '\nOLD_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-old-email@example.com"')]),s._v("\nCORRECT_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Your Correct Name"')]),s._v("\nCORRECT_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your-correct-email@example.com"')]),s._v("\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMITTER_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_EMAIL"')]),s._v(" ]\nthen\n    export GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$CORRECT_NAME"')]),s._v("\n    export GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$CORRECT_EMAIL"')]),s._v("\nfi\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$OLD_EMAIL"')]),s._v(" ]\nthen\n    export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$CORRECT_NAME"')]),s._v("\n    export GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$CORRECT_EMAIL"')]),s._v("\nfi\n' --tag-name-filter cat -- --branches --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can one change the timestamp of an old commit in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 610    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/454750",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter \\\n    'if [ $GIT_COMMIT = 119f9ecf58069b265ab22f1f97d2b648faf932e0 ]\n     then\n         export GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fri Jan 2 21:38:53 2009 -0800"')]),s._v("\n         export GIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sat May 19 01:01:01 2007 -0700"')]),s._v("\n     fi'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git, rewrite previous commit usernames and emails")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 316    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11768843",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.change-commits "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!'")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"f() { VAR=\\$1; OLD=\\$2; NEW=\\$3; shift 3; git filter-branch --env-filter \\"if [[ \\\\\\"\\$\\`echo \\$VAR\\`\\\\\\" = \'\\$OLD\' ]]; then export \\$VAR=\'\\$NEW\'; fi\\" \\$@; }; f"')]),s._v("\n\nchange-commits="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { VAR=$1; OLD=$2; NEW=$3; shift 3; git filter-branch --env-filter \\"if [[ \\\\\\"$`echo $VAR`\\\\\\" = \'$OLD\' ]]; then export $VAR=\'$NEW\'; fi\\" \\$@; }; f"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to amend several commits in Git to change author")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 296    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4982271",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter 'if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"incorrect@email"')]),s._v(" ]; then\n     GIT_AUTHOR_EMAIL=correct@email;\n     GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Correct Name"')]),s._v(";\n     GIT_COMMITTER_EMAIL=$GIT_AUTHOR_EMAIL;\n     GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v("; fi' -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Retroactively Correct Authors with Git SVN?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 57    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-shortlog.html"}},[s._v("git shortlog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/392427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git shortlog -s\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit filter-branch --env-filter '\n\nn=$GIT_AUTHOR_NAME\nm=$GIT_AUTHOR_EMAIL\n\ncase ${GIT_AUTHOR_NAME} in\n        user1) n="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"User One"')]),s._v(" ; m="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user1@example.com"')]),s._v(" ;;\n        "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"User Two"')]),s._v(") n="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"User Two"')]),s._v(" ; m="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"user2@example.com"')]),s._v(" ;;\nesac\n\nexport GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$n"')]),s._v("\nexport GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$m"')]),s._v("\nexport GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$n"')]),s._v("\nexport GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$m"')]),s._v("\n'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Remove committer information from git commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32944640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMITTER_EMAIL"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v(" ]; then\n  export GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v("\n  export GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v("\n  export GIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_DATE"')]),s._v("\nfi\n' --tag-name-filter cat -- --branches --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How do I remove an author from a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3465700",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Niko Schwarz"')]),s._v(" ]; then \\\n        export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jon Doe"')]),s._v(" GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"john@bugmenot.com"')]),s._v("; \\\n    fi\n    '\n\n$ cd /tmp\n$ mkdir filter-branch && cd filter-branch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\nInitialized empty Git repository in /private/tmp/filter-branch/.git/\n$ \n$ touch hi && git add . && git commit -m bla\n[master (root-commit) 081f7f5] bla\n 0 files changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 hi\n$ echo howdi >> hi && git commit -a -m bla\n[master a466a18] bla\n 1 files changed, 1 insertions(+), 0 deletions(-)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit a466a18e4dc48908f7ba52f8a373dab49a6cfee4")]),s._v("\nAuthor: Niko Schwarz <niko.schwarz@gmail.com>\nDate:   Thu Aug 12 09:43:44 2010 +0200\n\n    bla\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 081f7f50921edc703b55c04654218fe95d09dc3c")]),s._v("\nAuthor: Niko Schwarz <niko.schwarz@gmail.com>\nDate:   Thu Aug 12 09:43:34 2010 +0200\n\n    bla\n$ \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter '")]),s._v("\n> if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Niko Schwarz"')]),s._v(" ]; then \\    \n> export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Jon Doe"')]),s._v(" GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"john@bugmenot.com"')]),s._v("; \\\n> fi\n> '\nRewrite a466a18e4dc48908f7ba52f8a373dab49a6cfee4 (2/2)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 5f0dfc0dc9a325a3f3aaf4575369f15b0fb21fe9")]),s._v("\nAuthor: Jon Doe <john@bugmenot.com>\nDate:   Thu Aug 12 09:43:44 2010 +0200\n\n    bla\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 3cf865fa0a43d2343b4fb6c679c12fc23f7c6015")]),s._v("\nAuthor: Jon Doe <john@bugmenot.com>\nDate:   Thu Aug 12 09:43:34 2010 +0200\n\n    bla\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to update git commit author, but keep original date when amending?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41303384",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit filter-branch --env-filter '\nNEW_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MyName"')]),s._v("\nNEW_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my-name@my-domain.com"')]),s._v("\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"afdkjh1231jkh123hk1j23"')]),s._v(" ] || [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"43hkjwldfpkmsdposdfpsdifn"')]),s._v(" ]\nthen\n    export GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_NAME"')]),s._v("\n    export GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_EMAIL"')]),s._v("\n    export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_NAME"')]),s._v("\n    export GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_EMAIL"')]),s._v("\nfi\n' --tag-name-filter cat -- --branches --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How can I update the usernames/emails in Git commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5106251",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter GIT_AUTHOR_EMAIL=new_address")]),s._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter '")]),s._v("\nif test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v(" = Barry; then\n  GIT_AUTHOR_EMAIL=barrys-correct-address\nfi'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: how to remove old commits after filter-branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3223155",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter 'export GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fixed-email"')]),s._v(";\n                                       GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fixed-author"')]),s._v("' -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Git how to edit commit message and preserve old commit date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19493602",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git interactive rebase (fixup) preserving original date/time stamps on combined commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41210156",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Shift date for multiple commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39660241",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\nCOMMIT_DATE=$(git log $GIT_COMMIT -n1 --format=%aD);\nNEW_DATE=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$COMMIT_DATE+1 day"')]),s._v(" -R);\nGIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_DATE"')]),s._v("\nexport GIT_COMMITTER_DATE\nGIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_DATE"')]),s._v("\nexport GIT_AUTHOR_DATE\n' SHA..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to remove user commited with user from Pull request?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46362376",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter \\\n'if test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"012345"')]),s._v("; then\n    export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name Here"')]),s._v("\n    export GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Name Here"')]),s._v("\n    export GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@here.com"')]),s._v("\n    export GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"email@here.com"')]),s._v("\nfi' && rm -fr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-parse --git-dir)/refs/original/"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to rewrite git history up to a merge commit included")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59489475",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"......"')]),s._v(" E^! HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: strip all timestamps from a local git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21351754",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\nexport GIT_COMMITTER_DATE=2014-01-25T15:00:00\nexport GIT_AUTHOR_DATE=2014-01-25T15:00:00'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Export git history, for a file and a subfolder, into another existing git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56328369",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd oldrepo_filt_git\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\nRewrite 252bf7ff5f385dad880240d5d80e68f24ae09b59 (1/8) (0 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite f318d9712cd7aacdb5dd45febbcdbbce6b741e08 (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite 00b62e7da8784d45850d7483cbea88fdc4aa844c (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite c618eff47d38412c54a8381a5bacc921bddefe2d (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2cada8d822d83f37bdc4a37bcfb03047c1cc1ded (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 7b296b70018f4105f190d06ed4d9c58e3f80532f (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 18a1ad1d35cd8573c39485d0a29b630325f9727d (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2ffbbf03d51363f1ced3aaaf000d5921c9d8b919 (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\n\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/testbranch'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   31cd8b5 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n|\\\n| * 42b153d (testbranch) change 5 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ff1be9d change 4 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * 90f050c change 3 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * d2d2136 change 2 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ab237ac change 1 made\n|/\n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n* ea0a32d added a.txt\n   a.txt | 1 +\n   1 file changed, 1 insertion(+)\n\ngit remote add oldrepo ../oldrepo_filt_git/\ngit pull oldrepo master --allow-unrelated-histories\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   845c81e (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" of ../oldrepo_filt_git\n|\\\n| *   31cd8b5 (oldrepo/master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\\\n| | * 42b153d (oldrepo/testbranch) change 5 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ff1be9d change 4 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * 90f050c change 3 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * d2d2136 change 2 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ab237ac change 1 made\n| |/\n| |    a.txt     | 1 +\n| |    aa/aa.txt | 1 +\n| |    aa/ab.txt | 1 +\n| |    3 files changed, 3 insertions(+)\n| * ea0a32d added a.txt\n|    a.txt | 1 +\n|    1 file changed, 1 insertion(+)\n* 8e99c2d Initial commit by Bob\n   README | 1 +\n   1 file changed, 1 insertion(+)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add old-repo ../oldrepo_filt_git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch old-repo")]),s._v("\nwarning: no common commits\nremote: Enumerating objects: 29, done.\nremote: Counting objects: 100% (29/29), done.\nremote: Compressing objects: 100% (17/17), done.\nremote: Total 29 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (29/29), done.\nFrom ../oldrepo_filt_git\n * [new branch]      master     -> old-repo/master\n * [new branch]      testbranch -> old-repo/testbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-head old-repo/master")]),s._v("\nBranch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldrepo-head'")]),s._v(" set up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'old-repo'")]),s._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-root $(git log oldrepo-head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=%H | head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%T %ct'")]),s._v(" ..oldrepo-head > /tmp/hashlist\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master new-master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --strategy")]),s._v("-option=theirs oldrepo-root")]),s._v("\n[new-master 427cf77] added a.txt\n Author: tester <tester@example.com>\n Date: Mon May 27 14:31:10 2019 +0200\n 1 file changed, 1 insertion(+)\n create mode 100644 a.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* 427cf77 (HEAD -> new-master) added a.txt\n* 8e99c2d Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --preserve")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" new-master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --root")]),s._v(" oldrepo-head")]),s._v("\nSuccessfully rebased and updated refs/heads/oldrepo-head.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit 61fbe54721a9432e91e48917ed036f55da4105a4 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 f8e8f8a\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:57:00 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n| * commit f8e8f8aedaa7bc999bdfdd49542c9ee04edb770c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:58 2019 +0200\n| |\n| |     change 5 made\n| |\n| * commit b084029040d6596e0795e7567b2684dc59c02241\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:56 2019 +0200\n| |\n| |     change 4 made\n| |\n| * commit b62dabca3a46efbe76edb10591935db136f74aaa\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:54 2019 +0200\n| |\n| |     change 3 made\n| |\n| * commit 252f3e9697b87b4f59cd0a74681ef25401340fcf\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:51 2019 +0200\n| |\n| |     change 2 made\n| |\n| * commit c382c8a713489ca0e5dc106bed29fdce379952b0\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Tue May 28 12:56:49 2019 +0200\n|\n|       change 1 made\n|\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(fgrep -m 1 $(git log -1 --pretty=%T $GIT_COMMIT) /tmp/hashlist | cut -d\" \" -f2)'")]),s._v(" new-master..oldrepo-head\nRewrite 61fbe54721a9432e91e48917ed036f55da4105a4 (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master..oldrepo-head\nRewrite f2b2385d85c74dbf0cbf8fabc02ec30cb50d8f2a (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" 427cf77417a\nYou must specify a ref to rewrite.\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (2/2) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/new-master'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n...\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (refs/original/refs/heads/new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" oldrepo-head master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" oldrepo-root")]),s._v("\nDeleted branch oldrepo-root (was ea0a32d).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" new-master")]),s._v("\nDeleted branch new-master (was 4ac225e).\n$ rm .git/refs/original/refs/heads/new-master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote remove old-repo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch tmp 427cf774")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" tmp^..tmp\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (1/1) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/tmp'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller tmp")]),s._v("\n* commit 4ac225e308e280e3a96be0168c6e9dece44d4979 (tmp)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Mon May 27 14:31:10 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n|\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" tmp")]),s._v("\nDeleted branch tmp (was 4ac225e).\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| | \n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| | \n| * commit 9bfc6cde58be9102102f839e5cc0fe8f25f0f78c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:00 2019 +0200\n| | \n| |     change 5 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 485ae0f50054610b6a41098fb695e59d194cc856\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:50 2019 +0200\n| | \n| |     change 4 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit b6804b6e8e313b5c4766568a287f0785503e3a11\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:40 2019 +0200\n| | \n| |     change 3 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 8b463423d2a99929a6a248e38ba1368a56d3769d\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:30 2019 +0200\n| | \n| |     change 2 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 3bc0bed30ebea1498a15711825b2ea8347cc374d\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Mon May 27 14:31:20 2019 +0200\n|   \n|       change 1 made\n|   \n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n| \n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n| \n|     added a.txt\n| \n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n| \n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n   README | 1 +\n   1 file changed, 1 insertion(+)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br"),e("span",{staticClass:"line-number"},[s._v("279")]),e("br"),e("span",{staticClass:"line-number"},[s._v("280")]),e("br"),e("span",{staticClass:"line-number"},[s._v("281")]),e("br"),e("span",{staticClass:"line-number"},[s._v("282")]),e("br"),e("span",{staticClass:"line-number"},[s._v("283")]),e("br"),e("span",{staticClass:"line-number"},[s._v("284")]),e("br"),e("span",{staticClass:"line-number"},[s._v("285")]),e("br"),e("span",{staticClass:"line-number"},[s._v("286")]),e("br"),e("span",{staticClass:"line-number"},[s._v("287")]),e("br"),e("span",{staticClass:"line-number"},[s._v("288")]),e("br"),e("span",{staticClass:"line-number"},[s._v("289")]),e("br"),e("span",{staticClass:"line-number"},[s._v("290")]),e("br"),e("span",{staticClass:"line-number"},[s._v("291")]),e("br"),e("span",{staticClass:"line-number"},[s._v("292")]),e("br"),e("span",{staticClass:"line-number"},[s._v("293")]),e("br"),e("span",{staticClass:"line-number"},[s._v("294")]),e("br"),e("span",{staticClass:"line-number"},[s._v("295")]),e("br"),e("span",{staticClass:"line-number"},[s._v("296")]),e("br"),e("span",{staticClass:"line-number"},[s._v("297")]),e("br"),e("span",{staticClass:"line-number"},[s._v("298")]),e("br"),e("span",{staticClass:"line-number"},[s._v("299")]),e("br"),e("span",{staticClass:"line-number"},[s._v("300")]),e("br"),e("span",{staticClass:"line-number"},[s._v("301")]),e("br"),e("span",{staticClass:"line-number"},[s._v("302")]),e("br"),e("span",{staticClass:"line-number"},[s._v("303")]),e("br"),e("span",{staticClass:"line-number"},[s._v("304")]),e("br"),e("span",{staticClass:"line-number"},[s._v("305")]),e("br"),e("span",{staticClass:"line-number"},[s._v("306")]),e("br"),e("span",{staticClass:"line-number"},[s._v("307")]),e("br"),e("span",{staticClass:"line-number"},[s._v("308")]),e("br"),e("span",{staticClass:"line-number"},[s._v("309")]),e("br"),e("span",{staticClass:"line-number"},[s._v("310")]),e("br"),e("span",{staticClass:"line-number"},[s._v("311")]),e("br"),e("span",{staticClass:"line-number"},[s._v("312")]),e("br"),e("span",{staticClass:"line-number"},[s._v("313")]),e("br"),e("span",{staticClass:"line-number"},[s._v("314")]),e("br"),e("span",{staticClass:"line-number"},[s._v("315")]),e("br"),e("span",{staticClass:"line-number"},[s._v("316")]),e("br"),e("span",{staticClass:"line-number"},[s._v("317")]),e("br"),e("span",{staticClass:"line-number"},[s._v("318")]),e("br"),e("span",{staticClass:"line-number"},[s._v("319")]),e("br"),e("span",{staticClass:"line-number"},[s._v("320")]),e("br"),e("span",{staticClass:"line-number"},[s._v("321")]),e("br"),e("span",{staticClass:"line-number"},[s._v("322")]),e("br"),e("span",{staticClass:"line-number"},[s._v("323")]),e("br"),e("span",{staticClass:"line-number"},[s._v("324")]),e("br"),e("span",{staticClass:"line-number"},[s._v("325")]),e("br"),e("span",{staticClass:"line-number"},[s._v("326")]),e("br"),e("span",{staticClass:"line-number"},[s._v("327")]),e("br"),e("span",{staticClass:"line-number"},[s._v("328")]),e("br"),e("span",{staticClass:"line-number"},[s._v("329")]),e("br"),e("span",{staticClass:"line-number"},[s._v("330")]),e("br"),e("span",{staticClass:"line-number"},[s._v("331")]),e("br"),e("span",{staticClass:"line-number"},[s._v("332")]),e("br"),e("span",{staticClass:"line-number"},[s._v("333")]),e("br"),e("span",{staticClass:"line-number"},[s._v("334")]),e("br"),e("span",{staticClass:"line-number"},[s._v("335")]),e("br"),e("span",{staticClass:"line-number"},[s._v("336")]),e("br"),e("span",{staticClass:"line-number"},[s._v("337")]),e("br"),e("span",{staticClass:"line-number"},[s._v("338")]),e("br"),e("span",{staticClass:"line-number"},[s._v("339")]),e("br"),e("span",{staticClass:"line-number"},[s._v("340")]),e("br"),e("span",{staticClass:"line-number"},[s._v("341")]),e("br"),e("span",{staticClass:"line-number"},[s._v("342")]),e("br"),e("span",{staticClass:"line-number"},[s._v("343")]),e("br"),e("span",{staticClass:"line-number"},[s._v("344")]),e("br"),e("span",{staticClass:"line-number"},[s._v("345")]),e("br"),e("span",{staticClass:"line-number"},[s._v("346")]),e("br"),e("span",{staticClass:"line-number"},[s._v("347")]),e("br"),e("span",{staticClass:"line-number"},[s._v("348")]),e("br"),e("span",{staticClass:"line-number"},[s._v("349")]),e("br"),e("span",{staticClass:"line-number"},[s._v("350")]),e("br"),e("span",{staticClass:"line-number"},[s._v("351")]),e("br"),e("span",{staticClass:"line-number"},[s._v("352")]),e("br"),e("span",{staticClass:"line-number"},[s._v("353")]),e("br"),e("span",{staticClass:"line-number"},[s._v("354")]),e("br"),e("span",{staticClass:"line-number"},[s._v("355")]),e("br"),e("span",{staticClass:"line-number"},[s._v("356")]),e("br"),e("span",{staticClass:"line-number"},[s._v("357")]),e("br"),e("span",{staticClass:"line-number"},[s._v("358")]),e("br"),e("span",{staticClass:"line-number"},[s._v("359")]),e("br"),e("span",{staticClass:"line-number"},[s._v("360")]),e("br"),e("span",{staticClass:"line-number"},[s._v("361")]),e("br"),e("span",{staticClass:"line-number"},[s._v("362")]),e("br"),e("span",{staticClass:"line-number"},[s._v("363")]),e("br"),e("span",{staticClass:"line-number"},[s._v("364")]),e("br"),e("span",{staticClass:"line-number"},[s._v("365")]),e("br"),e("span",{staticClass:"line-number"},[s._v("366")]),e("br"),e("span",{staticClass:"line-number"},[s._v("367")]),e("br"),e("span",{staticClass:"line-number"},[s._v("368")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Git filter branch from HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30422785",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE; export GIT_COMMITTER_DATE'")]),s._v(" HEAD~7..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to change author of specific commits based on a predicate")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69059500",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\nif git show -s --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v(" $GIT_COMMIT | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My commit message"')]),s._v(";\nthen\n    export GIT_AUTHOR_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"New Name"')]),s._v("\n    export GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new@email.com"')]),s._v("\nfi\n' --tag-name-filter cat -- --branches --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Git change user's credentials in past commits without changing the history (date of commits)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64854924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('git filter-branch -f --env-filter "\n GIT_AUTHOR_NAME='),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newName'")]),s._v("\n GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v("\n GIT_COMMITER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newName'")]),s._v("\n GIT_COMMITER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v('\n" HEAD\n\ngit filter-branch -f --env-filter "\nif test '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'currentWrongEmail'")]),s._v("\nthen\n    GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v("\nfi\nif test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMITTER_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'currentWrongEmail'")]),s._v("\nthen\n    GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v('\nfi\n" HEAD\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Change GIT_AUTHOR_DATE/GIT_COMMITTER_DATE date of a specific previous commit on git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43008328",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter \\\n    [snip actual filter] \\\n    HEAD ^<hash>\n\ngit filter-branch --env-filter \\\n    [snip actual filter] \\\n    HEAD ^master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Importing History from SVN to Git - Change Committer Information")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1643935",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter '\nexport GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v("\nexport GIT_COMMITTER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_NAME"')]),s._v("\nexport GIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_DATE"')]),s._v("' -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v('23. Usage scenario: How to delete a commit that "hasn\'t happened yet"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53220592",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --env-filter \\\n    'if [ $GIT_COMMIT = 03...]\n     then\n         export GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fri Jan 2 21:38:53 2009 -0800"')]),s._v("\n         export GIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sat May 19 01:01:01 2007 -0700"')]),s._v("\n     fi' SHA1..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Update Author Name in all Commits in git after particular date")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43423421",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ How to test dates in git filter-branch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cat-file"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")]),s._v(" HEAD | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/@/ /'")]),s._v("\ntree 52cbd85298ed8ee95776f93ddb0eede02a36c539\nparent 71e38d40e93aa1357dad53f1599c2a1c00b54dc5\nauthor Junio C Hamano <gitster pobox.com> 1491895625 -0700\ncommitter Junio C Hamano <gitster pobox.com> 1491895625 -0700\n\nEleventh batch for 2.13\n\nSigned-off-by: Junio C Hamano <gitster pobox.com>\n\nauthor Hiroshi Shirosaki <h.shirosaki gmail.com> 1488779947 +0900\ncommitter Eric Wong <e 80x24.org> 1488922143 +0000\n\n$ date -r 1491000000\nFri Mar 31 15:40:00 PDT 2017\n\ndate_exceeds_1491000000() {\n    test $1 -ge 1491000000\n}\n\nif date_exceeds_1491000000 $GIT_AUTHOR_DATE\n\ngit filter-branch ... --since=2017-03-31 ...\n\n...--E--F--G--H--...\n\n...--E"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--G'")]),s._v("--...\n\n▲ Summary, plus simplest method of all\ngit filter-branch --env-filter ...your-filter-here... \\\n    --tag-name-filter cat -- --branches --tags \\\n    ^123456789abcdef ^feedbeefdeadc0ffee\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("h2",{attrs:{id:"tree-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tree-filter"}},[s._v("#")]),s._v(" 🔹 --tree-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Remove folder and its contents from git/GitHub's history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 643    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17824718",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf node_modules"')]),s._v(" --prune-empty HEAD\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\necho node_modules/ >> .gitignore\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Removing node_modules from git history'")]),s._v("\ngit gc\ngit push origin master --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to remove/delete a large file from commit history in the Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 248    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30274113",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f DVD-rip'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I completely remove a file from a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 142    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3459399",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f my_file'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I move a directory in a Git repo for all commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3142821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You can use the subdirectory filter to achieve this\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter blog/ --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n▲ EDIT 1: If you don't want to effectively make _posts the root, use a tree-filter instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mv blog/_posts .'")]),s._v(" HEAD\n\n▲ EDIT 2: If blog/_posts did not exist in some of the commits, the above will fail. Use this instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test -d blog/_posts && mv blog/_posts . || echo \"Nothing to do\"'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git: change one line in file for the complete history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 53    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7198036",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed -i \"/sensitive information/ d\" filename'")]),s._v(" -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to substitute text from files in git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 41    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4114121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('git filter-branch --tree-filter "find . -name '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.php'")]),s._v(" -exec sed -i -e \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/originalpassword/newpassword/g'")]),s._v(' {} \\;"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Rename file for all commits in a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9458637",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter '\nif [ -f <old name> ]; then\n  mv <old name> <new name>\nfi' --force HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How do I preserve tags when filtering a repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5574694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'move-to-subdir $subdir'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Split one subfolder from git repository with all branches and history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47084338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/USERNAME/REPOSITORY-NAME")]),s._v("\n$ cd REPOSITORY-NAME\n\n$ for i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FOLDER-NAME --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDER-NAME'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (push)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote set-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (push)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Definitive retroactive .gitignore (how to make Git completely/retroactively forget about a file now in .gitignore)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57454176",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#commit up-to-date .gitignore (if not already existing)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands are not strictly necessary if you don't want/need a .gitignore file.  .git/info/exclude can be used instead")]),s._v("\n\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Create .gitignore"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#apply standard git ignore behavior only to current index, not working directory (--cached)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, ensure /.git/info/exclude AND/OR .gitignore exist")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if using .git/info/exclude, it will need to be modified per branch run, if the branches have differing (per-branch) .gitignore requirements.")]),s._v("\n\ngit ls-files -z --ignored --exclude-standard | xargs -r0 git rm --cached\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Commit to prevent working directory data loss!")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this commit will be automatically deleted by the --prune-empty flag in the following command")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#optionally use the --amend flag to merge this commit with the previous one instead of creating 2 commits.")]),s._v("\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignored index"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Apply standard git ignore behavior RETROACTIVELY to all commits from all branches (--all)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This step WILL delete ignored files from working directory UNLESS they have been dereferenced from the index by the commit above")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#This step will also delete any "empty" commits.  If deliberate "empty" commits should be kept, remove --prune-empty and instead run git reset HEAD^ immediately after this command')]),s._v("\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git ls-files -z --ignored --exclude-standard | xargs -r0 git rm -f --ignore-unmatch'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#List all still-existing files that are now ignored properly")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, it's time to restore from backup and start over")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n\ngit ls-files --other --ignored --exclude-standard\n\ngit push origin --force --all\ngit push origin --force --tags\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete %(refname)"')]),s._v(" refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#fetch modified remote")]),s._v("\n\ngit fetch --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#"Pull" changes WITHOUT deleting newly-ignored files from working directory')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This will overwrite local tracked files with remote - ensure any local modifications are backed-up/stashed")]),s._v("\n\ngit reset FETCH_HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to move function declaration to another file yet retain Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17961452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter 'if [ -f original.php ]; then \n    echo part1.php part2.php part3.php | xargs -n 1 cp original.php; fi' HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Splitting many subdirectories into a new, separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31841516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"mkdir samples && test -d app1 && mv app1 samples/|| test -d app2 && mv app2 samples/ || echo 'nothing to do'\"")]),s._v(" HEAD\n\ngit filter-branch -f --subdirectory-filter samples -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How do you rename a folder in git and hide it with an interactive rebase?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15389910",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reset --hard HEAD^ # removes the rename commit\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"mv bad good"')]),s._v(" foo^..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How can I extract a portion of a git repository into it's own repo while retaining history and file structure?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25316857",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone initial final\ncd final\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf <list of folders separated by space>'")]),s._v(" HEAD\n\ngit filter-branch -f --prune-empty \n\n git filter-branch –prune-empty –subdirectory-filter A/ master\n git filter-branch –prune-empty –subdirectory-filter B/ master\n\ngit clone <remote path> NewRepo\ncd NewRepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add a readme file")]),s._v("\ntouch Readme.md\ngit add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Adding ReadMe file"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo A")]),s._v("\ngit remote add -f A <remote path for A>\ngit merge -s ours --no-commit A/master\ngit read-tree --prefix=A/ -u A/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge A into NewRepo"')]),s._v("\ngit remote remove A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo B")]),s._v("\ngit remote add -f B <remote path for B>\ngit merge -s ours --no-commit B/master\ngit read-tree --prefix=B/ -u B/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge B into NewRepo"')]),s._v("\ngit remote remove B\n\ngit remote add origin <remote path for NewRepo>\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to use git-filter-repo to merge one repo as subdirectory into another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61450995",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --prune-empty --tree-filter '\n        mkdir -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${REPO_NAME}_tmp"')]),s._v("\n        git ls-tree --name-only $GIT_COMMIT | xargs -I{} mv {} "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${REPO_NAME}_tmp"')]),s._v("\n        mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${REPO_NAME}_tmp"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$REPO_NAME"')]),s._v("\n    '\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Rename variable in all commits on a given branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39608848",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed -i \"s/foo/bar/g\" $FILES'")]),s._v("  D^..H HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Remove old folder from a public git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7604807",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -r vendor/*"')]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: efficiently rewriting (rebase -i) a lot of history with git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10919879",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[ -f README ]] && echo \"---FOOTER---\" >> README'")]),s._v(" HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'perl /path/to/find-add-license.pl'")]),s._v(" --prune-empty HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find . -name \"*.[chS]\" -exec perl /path/to/just-add-license.pl \\{\\} \\;'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--prune-empty HEAD")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Git subtree split two directories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25575441",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf tests/http src/http'")]),s._v(" --prune-empty HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Splitting each commit by file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34556655",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git rebase -i aka: squash (manual procedure)\n// Manipulate any commit by editing it and commitign again\ngit rebase -i HEAD~X\n\n▲ git filter-branch\n▲ sample\n// Remove any given file from commits \n// Now you can commit it again into a new commit\n\ngit filter-branch --tree-filter 'rm -f <file name> HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to replace a string in a whole Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47158332",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ censorStringsInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#arguments are strings to censore")]),s._v("\n\nfor string in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v("\ndo\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"================ Censoring string "')]),s._v("$string"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('": ================"')]),s._v("\n  ~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$string"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\ndone\n\n~/censorStringsInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some_f_word"')]),s._v("\n\n▲ replaceStringInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to replace with")]),s._v("\n\nfor branch in $(git branch | cut -c 3-); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('">>> Replacing strings in branch $branch:"')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  ~/replaceStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\ndone\n\n~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ replaceStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace with")]),s._v("\n\ngit checkout $1\nfor file in $(~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"          Filtering file $file:"')]),s._v("\n  ~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$3"')]),s._v("\ndone\n\n~/replaceStringInBranch.sh master "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ findFilesContainingStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - branch name or nothing (current branch in that case)")]),s._v("\n\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" $2 --name-only --pretty=format: -- | sort -u\n\n~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" master\n\n▲ changeStringsInFileInCurrentBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - file name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace")]),s._v("\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"if [ -f $1 ];then sed -i s/$2/$3/g $1;fi"')]),s._v("\n\n~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc.txt"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\ngit push <remote> -f --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: In Git, how to squash all commits related to a file or folder?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28960267",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDERNAME'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Rename directory throughout Git commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26642892",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --force --tree-filter \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mkdir -p foo/bar; mv baz foo/bar/ || true'")]),s._v(" \\\n    --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Split file into separate repository, preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43004729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find -type f -not -path ./foo/bar -delete'")]),s._v(" --prune-empty\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to rebase git submodule preserving references to submodule commits from git repository containing the submodule?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40199538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" cd /submodule/repo/just/rewritten/\n # the old history is still available in refs/original\n git -C /path/to/rewritten/repo for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original\n\n cd /main/repo\ngit for-each-ref --contains <SHA1> # SHA being a SHA1 from the old submodule history\n\ngit filter-branch --prune-empty --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'change_gitlink'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How do I merge git repositories with related branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16843402",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit clone --mirror path/repo0 repo0\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj0 ; find * -maxdepth 0 ! -iname proj0 -exec mv {} proj0/ \\;)"')]),s._v(" -- --all\n\ngit clone --mirror path/repo1 repo1\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(mkdir -p proj1 ; find * -maxdepth 0 ! -iname proj1 -exec mv {} proj1/ \\;)"')]),s._v(" -- --all\n\n\ngit init new\ngit remote add proj0 path/repo0\ngit remote add proj1 path/repo1\n\ngit fetch --all\n\n\ngit checkout -b dummy remotes/proj0/BranchE\ngit checkout -b start `git log --topo-order --reverse | head -n 1 | sed s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit \\(.*\\)"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/`\ngit checkout -b merge start\n\ngit merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge"')]),s._v(" remotes/proj1/BranchE\ngit rebase --onto start start merge\n\ngit branch -D start\ngit branch -D dummy\ngit branch -m merge BranchE\n\n\ngit checkout BranchE\ngit rebase `git log --oneline | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit comment of last common commit B\'"')]),s._v(" | sed -r s/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^[a-f0-9]+) .*"')]),s._v("/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\1"')]),s._v("/` BranchH\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Removing all deleted files from git repo history w search command")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37759578",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --pretty=format: --name-only --diff-filter=D | sort -u | while read -r line; do git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf { $line }"')]),s._v(" HEAD; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to remove some files accidentally added in the first commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20808429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm fileToRemove'")]),s._v(" --prune-empty --force HEAD\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -fR dirToRemove'")]),s._v(" --prune-empty --force HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: Rebase or Merge Git branch but Keep Deleted Files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45110449",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If my_branch is as linear as you depict - no merge commits on the branch - then you could probably get by with an interactive rebase.\ngit rebase --interactive master my_branch\n\ngit diff --diff-filter D --no-renames --name-only HEAD^\n\ngit checkout HEAD^ -- path/and/filename\n\ngit add .\ngit commit --amend\n\n▲ The above rebase command will also complete the rebasing of your work onto the tip of master.  If you don't want that - e.g. if you want to merge the work into master instead - you could do something like\ngit rebase --interactive `git merge-base my_branch master` my_branch\n\ngit checkout `git merge-base master my_branch`\ncp all/the/files/that/were/deleted some/path/where/I/can/find/them/later\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cp some/path/where/I/can/find/them/later all/the/files/that/were/deleted'")]),s._v(" -- my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Apply change to all commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66122950",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"sed -i 's/import my.wrong.package/import my.right.package;/g' target_file\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How to keep the git commit history of a nested subdirectory when creating a submodule?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34664914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone https://github.com/my-repo/ProjectA.git\ncd ProjectA\ngit remote rm origin\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shopt -s dotglob nullglob; test -d FrameworkB && mv FrameworkB/* . || :'")]),s._v(" HEAD\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shopt -s dotglob nullglob; test -d FrameworkB/FrameworkB && mv FrameworkB/FrameworkB/* FrameworkB/. || :'")]),s._v(" HEAD\n\nrm -r -f ProjectA/\nrm -r -f ProjectA.xcodeproj\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Remove the project files not associated with the shared framework."')]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: git surgery - splitting a repository and modifying the directory structure")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4675317",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mv bar baz foo; rm *'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Move history from git repo to subtree")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32291121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <git repository A url>\ncd <git repository A directory>\ngit remote rm origin\ngit filter-branch --subdirectory-filter <directory 1> --\n\ngit clone <git repository B url>\ncd <git repository B directory>\ngit remote add repo-A-branch <git repository A directory>\ngit pull repo-A-branch master\ngit remote rm repo-A-branch\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf <bad subdirectory>'")]),s._v(" --prune-empty HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: git rebase squash messes up branches history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[s._v("git apply")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56113281",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git diff 971f217200f7e485308b861033b5b31b7ae69d1a \\\n         081792ccf9b4714ab4bce23e4e7b126647eeead8 \\\n         >patch.txt\ngit filter-branch --tree-filter '\\\n   if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"971f217200f7e485308b861033b5b31b7ae69d1a"')]),s._v(" ]\n   then\n       git apply /localdirectory/patch.txt\n   fi' \\\n   --prune-empty -- --all\n\ngit update-ref -d refs/original/refs/heads/master\n\ngit log --graph --all\n\n*   commit e905116fed7f4d52c65da46ab6172ae7a08e824a (HEAD -> master)\n|\\  Merge: 77cc483 584a037\n| | Author: \n| | Date:   \n| | \n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v("\n| | \n| * commit 584a03768822ebd92d4feee20ebe238fffd89c25\n| | Author: \n| | Date:   \n| | \n| |     test3\n| | \n| * commit 7a2ad09b5c39e5076cd22fa957c2d539e37c0861\n| | Author: \n| | Date:   \n| | \n| |     test2\n| | \n| * commit 11ef4fea5ba207a637a85d8e8456f48d0c7bd7ab\n| | Author: \n| | Date:   \n| | \n| |     test1\n| | \n* | commit 77cc4833cf5aac84aca9737945fd79a7632019ac\n|/  Author: \n|   Date:   \n|   \n|       4\n| \n* commit 971f217200f7e485308b861033b5b31b7ae69d1a\n| Author: \n| Date:  \n| \n|     2\n| \n* commit cef186ae9ad0e316d82c62c2082381747f25a443\n  Author: \n  Date:  \n\n      1\n\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/^2/2 and 3 together/\"'")]),s._v(" -- --all\ngit update-ref -d refs/original/refs/heads/master\n\ngit update-ref -d refs/original/refs/heads/test\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Rename folder in Git. All branches and all revisions")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43742418",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter '\nif [ -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"61571_delivery "')]),s._v(" ]; then\n  mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"61571_delivery "')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"61571_delivery"')]),s._v("\nfi' --force HEAD\n\ngit filter-branch --tree-filter '\nif [ -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"raisesoft/61571_delivery "')]),s._v(" ]; then\n  mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"raisesoft/61571_delivery "')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"raisesoft/61571_delivery"')]),s._v("\nfi' --force HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Need to safely remove corrupted file from GitLab")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35638035",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'mv "<div class=\\"contain pr\\">" some_safe_name ||:\'')]),s._v(" <all branches where the problematic files exists>\n\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'git rm --cached "<div class=\\"contain pr\\">"  ||:\'')]),s._v(" master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Accidentally committed dev database to Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2603701",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("  git filter-branch --tree-filter ´rm filename´ HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"index-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#index-filter"}},[s._v("#")]),s._v(" 🔹 --index-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to remove file from Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 231    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52643437",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rm -rf --cached --ignore-unmatch path_to_file"')]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Split large Git repository into many smaller ones")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 81    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3910697",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \n\ncd ..\ngit clone MyABRepo.tmp MyABRepo\n\ngit clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch -d /tmp/git-rewrite.tmp --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \ncd ..\ngit clone MyABRepo.tmp MyABRepo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: New repo with copied history of only currently tracked files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 45    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17909526",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Delete everything and restore what you want\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for unix")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files > keep-these.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v('\n  "git rm  --ignore-unmatch --cached -qr . ; \\\n  cat $PWD/keep-these.txt | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" | xargs -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(' git reset -q \\$GIT_COMMIT --" \\\n  --prune-empty --tag-name-filter cat -- --all\n\n'),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for macOS")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files > keep-these.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v('\n  "git rm  --ignore-unmatch --cached -qr . ; \\\n  cat $PWD/keep-these.txt | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(' | xargs -0 git reset -q \\$GIT_COMMIT --" \\\n  --prune-empty --tag-name-filter cat -- --all\n\n▲ Cleanup steps\n$ rm -rf .git/refs/original/\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# optional extra gc. Slow and may not further-reduce the repo size")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --aggressive")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ $GIT_COMMIT?\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo current commit is \\$GIT_COMMIT"')]),s._v("\nRewrite d832800a85be9ef4ee6fda2fe4b3b6715c8bb860 (1/xxxxx)current commit is d832800a85be9ef4ee6fda2fe4b3b6715c8bb860\nRewrite cd86555549ac17aeaa28abecaf450b49ce5ae663 (2/xxxxx)current commit is cd86555549ac17aeaa28abecaf450b49ce5ae663\n...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to delete the old history after running git filter-branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5985276",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ After importing a Subversion repository with multiple years of history, I ran into a similar problem with bloat from lots of binary assets. In git: shrinking Subversion import, I describe trimming my git repo from 4.5 GiB to around 100 MiB.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" /dev/shm/git"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v('\n  "git rm --cached -f --ignore-unmatch media/Optika.1.3.?.*; \\\n   git rm --cached -f --ignore-unmatch media/lens.svg; \\\n   git rm --cached -f --ignore-unmatch media/lens_simulation.swf; \\\n   git rm --cached -f --ignore-unmatch media/v.html" \\\n  --tag-name-filter cat --prune-empty -- --all\n▲ If you\'re happy with the newly rewritten history, then delete the backup copies.\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | \\\n  xargs -n 1 git update-ref -d\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --verbose")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=0"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=0")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin origin/issue5:issue5")]),s._v("\n▲ If all your local branches match their respective commits on the GitHub side (i.e., no unpushed commits), then you can perform a bulk update.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin/ | \\\n  grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'HEAD$'")]),s._v(" | perl -pe "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s,^refs/remotes/origin/,,'")]),s._v(" | \\\n  xargs -n 1 -I "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{}'")]),s._v(" git push -f origin "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/{}:{}'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin/\nrefs/remotes/origin/HEAD\nrefs/remotes/origin/issue2\nrefs/remotes/origin/issue3\nrefs/remotes/origin/issue5\nrefs/remotes/origin/master\nrefs/remotes/origin/section_merge\nrefs/remotes/origin/side-media-icons\nrefs/remotes/origin/side-pane-splitter\nrefs/remotes/origin/side-popup\nrefs/remotes/origin/v2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin refs/remotes/origin/BRANCH:BRANCH")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to split a git repository and follow directory renames?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14764368",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --prune-empty --index-filter '\n    # Delete files which are NOT needed\n    git ls-files -z | egrep -zv  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^(NAME1|NAME2|NAME3)"')]),s._v(" | \n        xargs -0 -r git rm --cached -q             \n    # Move files to root directory\n    git ls-files -s | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s-\\t\\(NAME1\\|NAME2\\|NAME3\\)/-\\t-"')]),s._v(" |\n        GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n        git update-index --index-info &&\n        ( test ! -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" \\\n            || mv -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE"')]),s._v(" )\n'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do I change a file's path in git's history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3063008",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --index-filter '\n  git ls-files -s |\n  sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s-\\t\\"*-&subproj1/-"')]),s._v(" |\n  GIT_INDEX_FILE=$GIT_INDEX_FILE.new git update-index --index-info &&\n  mv $GIT_INDEX_FILE.new $GIT_INDEX_FILE\n' HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to reduce the size of a repo on Github")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1596747",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If the commit were still on the tip, you could reset to the commit before it:\ngit reset --hard HEAD^\n\ngit rm test.wav\ngit commit --amend\n\ngit rebase -i <commit-before-mistake>\n\ngit push -f origin\n\n▲ \n* If you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ve subsequently committed modifications to these files, you'")]),s._v("ll get issues as you continue on in the rebase. They should be straightforward to deal with, since you just want the files gone. Of course, if there"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ve been a hundred commits since then that'")]),s._v("ll all cause conflicts, you could have a look at git-filter-branch. The relevant example from the man page is:\ngit filter-branch --index-filter ’git rm --cached --ignore-unmatch filename’ HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Remove files from a bare Git Repository Globally")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-repack.html"}},[s._v("git repack")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-prune.html"}},[s._v("git prune")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22649532",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n               "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch junk/bigfile'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n               "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch -r junk/'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n      'mv $GIT_INDEX_FILE /tmp/index;\n       GIT_INDEX_FILE=/tmp/index git ls-files -s|\n       grep -v FILENAME|git update-index --index-info' -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),s._v(" <commit> | grep SOMEFILE")]),s._v("\n100644 blob 4cbedad5b4ab88f700bf27ae5a32bdb3627fa632    SOMEFILE\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n      'mv $GIT_INDEX_FILE /tmp/index;\n       GIT_INDEX_FILE=/tmp/index git ls-files -s|\n       grep -v 4cbedad5b4ab88f700bf27ae5a32bdb3627fa632|\n       git update-index --index-info'  -- --all\n\n$ rm -rf refs/original\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fsck")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git prune")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git repack"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Development Log file exceeds GitHub's file size limit, even after deleting file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19082812",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm log/development.log\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"removed log file"')]),s._v("\n\ngit rm -r --cached log\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"removed log file"')]),s._v("\n\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch log/development.log'")]),s._v(" --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How can I find and remove an unknown giant object from my git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-verify-pack.html"}},[s._v("git verify-pack")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10391515",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In the following command, replace the pack*.idx filename")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# with whatever filename you find in the .git/objects/pack")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# directory:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git verify-pack"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" .git/objects/pack/pack-3f8c0...bb.idx | sort"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -k")]),s._v(" 3"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" | tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -3")])]),s._v("\ne3f094f522629ae358806b17daf78246c27c007b blob   1486 734 4667\n05408d195263d853f09dca71d55116663690c27c blob   12908 3478 1189\n7a9eb2fba2b1811321254ac360970fc169ba2330 blob   2056716 2056872 5401\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --objects")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" | grep 7a9eb2fb")]),s._v("\n7a9eb2fba2b1811321254ac360970fc169ba2330 git.tbz2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline -- git.tbz2")]),s._v("\nda3f30d019005479c99eb4c3406225613985a1db oops - removed large tarball\n6df764092f3e7c8f5f94cbe08ee5cf42e92a0289 added git tarball\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n   "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch git.tbz2'")]),s._v(" -- 6df7640^..\nRewrite 6df764092f3e7c8f5f94cbe08ee5cf42e92a0289 (1/2)rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git.tbz2'")]),s._v("\nRewrite da3f30d019005479c99eb4c3406225613985a1db (2/2)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\n\n$ rm -Rf .git/refs/original\n$ rm -Rf .git/logs/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc")]),s._v("\nCounting objects: 19, done.\nDelta compression using 2 threads.\nCompressing objects: 100% (14/14), done.\nWriting objects: 100% (19/19), done.\nTotal 19 (delta 3), reused 16 (delta 1)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to permanently delete a commit from Git's history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18014262",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Delete the file from a checkout\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch 200MB-filename'")]),s._v(" \\\n  --prune-empty --tag-name-filter cat -- --all\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")])]),s._v("\n\n$ rm -rf .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ Recovering space on the git server\n$ ssh git server\n$ cd /my/project/repo.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ Teammates\n▲ User has no local commits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset origin/master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -hard")])]),s._v("\n\n▲ User does have local commits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" origin/master")]),s._v("\n\n▲ User cleanup\n$ rm -rf .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Remove history of a file from just a single branch, not the entire repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19001052",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout topic-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git checkout master -- myfile'")]),s._v(" master..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git: How to split off library from project? filter-branch, subtree?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22259131",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git subtree split -P src/de/fencing_game -b temp-br\ngit checkout temp-br\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -or-, if you really want to keep the full path:")]),s._v("\n\ngit checkout -b temp-br\ncd src/de/fencing_game\n\ngit filter-branch --tag-name-filter cat --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch client server otherstuff'")]),s._v(" HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# also clear out stuff from the sub dir")]),s._v("\ncd transport \ngit filter-branch --tag-name-filter cat --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch fencing client server'")]),s._v(" HEAD\n\ngit update-ref -d refs/original/refs/heads/temp-br\n\ncd <new-lib-repo>\ngit init\ngit pull <original-repo> temp-br\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Export git history, for a file and a subfolder, into another existing git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56328369",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd oldrepo_filt_git\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\nRewrite 252bf7ff5f385dad880240d5d80e68f24ae09b59 (1/8) (0 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite f318d9712cd7aacdb5dd45febbcdbbce6b741e08 (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite 00b62e7da8784d45850d7483cbea88fdc4aa844c (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite c618eff47d38412c54a8381a5bacc921bddefe2d (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2cada8d822d83f37bdc4a37bcfb03047c1cc1ded (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 7b296b70018f4105f190d06ed4d9c58e3f80532f (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 18a1ad1d35cd8573c39485d0a29b630325f9727d (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2ffbbf03d51363f1ced3aaaf000d5921c9d8b919 (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\n\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/testbranch'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   31cd8b5 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n|\\\n| * 42b153d (testbranch) change 5 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ff1be9d change 4 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * 90f050c change 3 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * d2d2136 change 2 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ab237ac change 1 made\n|/\n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n* ea0a32d added a.txt\n   a.txt | 1 +\n   1 file changed, 1 insertion(+)\n\ngit remote add oldrepo ../oldrepo_filt_git/\ngit pull oldrepo master --allow-unrelated-histories\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   845c81e (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" of ../oldrepo_filt_git\n|\\\n| *   31cd8b5 (oldrepo/master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\\\n| | * 42b153d (oldrepo/testbranch) change 5 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ff1be9d change 4 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * 90f050c change 3 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * d2d2136 change 2 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ab237ac change 1 made\n| |/\n| |    a.txt     | 1 +\n| |    aa/aa.txt | 1 +\n| |    aa/ab.txt | 1 +\n| |    3 files changed, 3 insertions(+)\n| * ea0a32d added a.txt\n|    a.txt | 1 +\n|    1 file changed, 1 insertion(+)\n* 8e99c2d Initial commit by Bob\n   README | 1 +\n   1 file changed, 1 insertion(+)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add old-repo ../oldrepo_filt_git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch old-repo")]),s._v("\nwarning: no common commits\nremote: Enumerating objects: 29, done.\nremote: Counting objects: 100% (29/29), done.\nremote: Compressing objects: 100% (17/17), done.\nremote: Total 29 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (29/29), done.\nFrom ../oldrepo_filt_git\n * [new branch]      master     -> old-repo/master\n * [new branch]      testbranch -> old-repo/testbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-head old-repo/master")]),s._v("\nBranch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldrepo-head'")]),s._v(" set up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'old-repo'")]),s._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-root $(git log oldrepo-head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=%H | head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%T %ct'")]),s._v(" ..oldrepo-head > /tmp/hashlist\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master new-master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --strategy")]),s._v("-option=theirs oldrepo-root")]),s._v("\n[new-master 427cf77] added a.txt\n Author: tester <tester@example.com>\n Date: Mon May 27 14:31:10 2019 +0200\n 1 file changed, 1 insertion(+)\n create mode 100644 a.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* 427cf77 (HEAD -> new-master) added a.txt\n* 8e99c2d Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --preserve")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" new-master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --root")]),s._v(" oldrepo-head")]),s._v("\nSuccessfully rebased and updated refs/heads/oldrepo-head.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit 61fbe54721a9432e91e48917ed036f55da4105a4 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 f8e8f8a\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:57:00 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n| * commit f8e8f8aedaa7bc999bdfdd49542c9ee04edb770c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:58 2019 +0200\n| |\n| |     change 5 made\n| |\n| * commit b084029040d6596e0795e7567b2684dc59c02241\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:56 2019 +0200\n| |\n| |     change 4 made\n| |\n| * commit b62dabca3a46efbe76edb10591935db136f74aaa\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:54 2019 +0200\n| |\n| |     change 3 made\n| |\n| * commit 252f3e9697b87b4f59cd0a74681ef25401340fcf\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:51 2019 +0200\n| |\n| |     change 2 made\n| |\n| * commit c382c8a713489ca0e5dc106bed29fdce379952b0\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Tue May 28 12:56:49 2019 +0200\n|\n|       change 1 made\n|\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(fgrep -m 1 $(git log -1 --pretty=%T $GIT_COMMIT) /tmp/hashlist | cut -d\" \" -f2)'")]),s._v(" new-master..oldrepo-head\nRewrite 61fbe54721a9432e91e48917ed036f55da4105a4 (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master..oldrepo-head\nRewrite f2b2385d85c74dbf0cbf8fabc02ec30cb50d8f2a (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" 427cf77417a\nYou must specify a ref to rewrite.\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (2/2) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/new-master'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n...\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (refs/original/refs/heads/new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" oldrepo-head master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" oldrepo-root")]),s._v("\nDeleted branch oldrepo-root (was ea0a32d).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" new-master")]),s._v("\nDeleted branch new-master (was 4ac225e).\n$ rm .git/refs/original/refs/heads/new-master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote remove old-repo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch tmp 427cf774")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" tmp^..tmp\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (1/1) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/tmp'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller tmp")]),s._v("\n* commit 4ac225e308e280e3a96be0168c6e9dece44d4979 (tmp)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Mon May 27 14:31:10 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n|\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" tmp")]),s._v("\nDeleted branch tmp (was 4ac225e).\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| | \n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| | \n| * commit 9bfc6cde58be9102102f839e5cc0fe8f25f0f78c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:00 2019 +0200\n| | \n| |     change 5 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 485ae0f50054610b6a41098fb695e59d194cc856\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:50 2019 +0200\n| | \n| |     change 4 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit b6804b6e8e313b5c4766568a287f0785503e3a11\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:40 2019 +0200\n| | \n| |     change 3 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 8b463423d2a99929a6a248e38ba1368a56d3769d\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:30 2019 +0200\n| | \n| |     change 2 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 3bc0bed30ebea1498a15711825b2ea8347cc374d\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Mon May 27 14:31:20 2019 +0200\n|   \n|       change 1 made\n|   \n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n| \n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n| \n|     added a.txt\n| \n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n| \n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n   README | 1 +\n   1 file changed, 1 insertion(+)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br"),e("span",{staticClass:"line-number"},[s._v("279")]),e("br"),e("span",{staticClass:"line-number"},[s._v("280")]),e("br"),e("span",{staticClass:"line-number"},[s._v("281")]),e("br"),e("span",{staticClass:"line-number"},[s._v("282")]),e("br"),e("span",{staticClass:"line-number"},[s._v("283")]),e("br"),e("span",{staticClass:"line-number"},[s._v("284")]),e("br"),e("span",{staticClass:"line-number"},[s._v("285")]),e("br"),e("span",{staticClass:"line-number"},[s._v("286")]),e("br"),e("span",{staticClass:"line-number"},[s._v("287")]),e("br"),e("span",{staticClass:"line-number"},[s._v("288")]),e("br"),e("span",{staticClass:"line-number"},[s._v("289")]),e("br"),e("span",{staticClass:"line-number"},[s._v("290")]),e("br"),e("span",{staticClass:"line-number"},[s._v("291")]),e("br"),e("span",{staticClass:"line-number"},[s._v("292")]),e("br"),e("span",{staticClass:"line-number"},[s._v("293")]),e("br"),e("span",{staticClass:"line-number"},[s._v("294")]),e("br"),e("span",{staticClass:"line-number"},[s._v("295")]),e("br"),e("span",{staticClass:"line-number"},[s._v("296")]),e("br"),e("span",{staticClass:"line-number"},[s._v("297")]),e("br"),e("span",{staticClass:"line-number"},[s._v("298")]),e("br"),e("span",{staticClass:"line-number"},[s._v("299")]),e("br"),e("span",{staticClass:"line-number"},[s._v("300")]),e("br"),e("span",{staticClass:"line-number"},[s._v("301")]),e("br"),e("span",{staticClass:"line-number"},[s._v("302")]),e("br"),e("span",{staticClass:"line-number"},[s._v("303")]),e("br"),e("span",{staticClass:"line-number"},[s._v("304")]),e("br"),e("span",{staticClass:"line-number"},[s._v("305")]),e("br"),e("span",{staticClass:"line-number"},[s._v("306")]),e("br"),e("span",{staticClass:"line-number"},[s._v("307")]),e("br"),e("span",{staticClass:"line-number"},[s._v("308")]),e("br"),e("span",{staticClass:"line-number"},[s._v("309")]),e("br"),e("span",{staticClass:"line-number"},[s._v("310")]),e("br"),e("span",{staticClass:"line-number"},[s._v("311")]),e("br"),e("span",{staticClass:"line-number"},[s._v("312")]),e("br"),e("span",{staticClass:"line-number"},[s._v("313")]),e("br"),e("span",{staticClass:"line-number"},[s._v("314")]),e("br"),e("span",{staticClass:"line-number"},[s._v("315")]),e("br"),e("span",{staticClass:"line-number"},[s._v("316")]),e("br"),e("span",{staticClass:"line-number"},[s._v("317")]),e("br"),e("span",{staticClass:"line-number"},[s._v("318")]),e("br"),e("span",{staticClass:"line-number"},[s._v("319")]),e("br"),e("span",{staticClass:"line-number"},[s._v("320")]),e("br"),e("span",{staticClass:"line-number"},[s._v("321")]),e("br"),e("span",{staticClass:"line-number"},[s._v("322")]),e("br"),e("span",{staticClass:"line-number"},[s._v("323")]),e("br"),e("span",{staticClass:"line-number"},[s._v("324")]),e("br"),e("span",{staticClass:"line-number"},[s._v("325")]),e("br"),e("span",{staticClass:"line-number"},[s._v("326")]),e("br"),e("span",{staticClass:"line-number"},[s._v("327")]),e("br"),e("span",{staticClass:"line-number"},[s._v("328")]),e("br"),e("span",{staticClass:"line-number"},[s._v("329")]),e("br"),e("span",{staticClass:"line-number"},[s._v("330")]),e("br"),e("span",{staticClass:"line-number"},[s._v("331")]),e("br"),e("span",{staticClass:"line-number"},[s._v("332")]),e("br"),e("span",{staticClass:"line-number"},[s._v("333")]),e("br"),e("span",{staticClass:"line-number"},[s._v("334")]),e("br"),e("span",{staticClass:"line-number"},[s._v("335")]),e("br"),e("span",{staticClass:"line-number"},[s._v("336")]),e("br"),e("span",{staticClass:"line-number"},[s._v("337")]),e("br"),e("span",{staticClass:"line-number"},[s._v("338")]),e("br"),e("span",{staticClass:"line-number"},[s._v("339")]),e("br"),e("span",{staticClass:"line-number"},[s._v("340")]),e("br"),e("span",{staticClass:"line-number"},[s._v("341")]),e("br"),e("span",{staticClass:"line-number"},[s._v("342")]),e("br"),e("span",{staticClass:"line-number"},[s._v("343")]),e("br"),e("span",{staticClass:"line-number"},[s._v("344")]),e("br"),e("span",{staticClass:"line-number"},[s._v("345")]),e("br"),e("span",{staticClass:"line-number"},[s._v("346")]),e("br"),e("span",{staticClass:"line-number"},[s._v("347")]),e("br"),e("span",{staticClass:"line-number"},[s._v("348")]),e("br"),e("span",{staticClass:"line-number"},[s._v("349")]),e("br"),e("span",{staticClass:"line-number"},[s._v("350")]),e("br"),e("span",{staticClass:"line-number"},[s._v("351")]),e("br"),e("span",{staticClass:"line-number"},[s._v("352")]),e("br"),e("span",{staticClass:"line-number"},[s._v("353")]),e("br"),e("span",{staticClass:"line-number"},[s._v("354")]),e("br"),e("span",{staticClass:"line-number"},[s._v("355")]),e("br"),e("span",{staticClass:"line-number"},[s._v("356")]),e("br"),e("span",{staticClass:"line-number"},[s._v("357")]),e("br"),e("span",{staticClass:"line-number"},[s._v("358")]),e("br"),e("span",{staticClass:"line-number"},[s._v("359")]),e("br"),e("span",{staticClass:"line-number"},[s._v("360")]),e("br"),e("span",{staticClass:"line-number"},[s._v("361")]),e("br"),e("span",{staticClass:"line-number"},[s._v("362")]),e("br"),e("span",{staticClass:"line-number"},[s._v("363")]),e("br"),e("span",{staticClass:"line-number"},[s._v("364")]),e("br"),e("span",{staticClass:"line-number"},[s._v("365")]),e("br"),e("span",{staticClass:"line-number"},[s._v("366")]),e("br"),e("span",{staticClass:"line-number"},[s._v("367")]),e("br"),e("span",{staticClass:"line-number"},[s._v("368")]),e("br")])]),e("p",[e("strong",[s._v('16. Usage scenario: How to add back the original project history when the whole project was committed with a "first commit" to a brand new repo')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66874523",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You can "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stitch"')]),s._v(" the histories back together using git replace.\ngit remote add history https://github.com/some/repo\ngit fetch history\n\ngit replace sha1-local sha1-history\n\n▲ For example, if feature is a branch in that repository, you can run :\ngit checkout -b feature history/feature\ngit rebase master\n\n▲ If you want to rewrite all the commits in your local repository and make that replacement permanent, call git filter-branch or git filter-repo :\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to rewrite only your local master branch :")]),s._v("\ngit filter-branch --index-filter true -- master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to rewrite all your local branches :")]),s._v("\ngit filter-branch --index-filter true -- --branches\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Git filter-branch: keep only commits in subdir")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51542139",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 Remove everything from root-tree (from the new revision)")]),s._v("\ngit rm --ignore-unmatch --cached -qr -- .\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2 Restore challenge_gpsr sub-tree (from original revision)")]),s._v('\ngit reset -q \\$GIT_COMMIT -- challenge_gpsr    \n\ngit filter-branch -f --index-filter " \\\n    git reset -q 189bd987 -- . && \\\n    git reset -q \\$GIT_COMMIT -- challenge_gpsr \\\n'),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" --prune-empty -- "')]),s._v('robocup" 189bd987..HEAD\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How can I reduce the size of my git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-verify-pack.html"}},[s._v("git verify-pack")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34327110",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --objects --all | sort -k 2 > allfileshas.txt\n\ngit gc && git verify-pack -v .git/objects/pack/pack-*.idx | egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\w+ blob\\W+[0-9]+ [0-9]+ [0-9]+$"')]),s._v(" | sort -k 3 -n -r > bigobjects.txt\n\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch MY-BIG-DIRECTORY-OR-FILE'")]),s._v(" --tag-name-filter cat -- --all\n\ngit clone --no-hardlinks file:///Users/yourUser/your/full/repo/path repo-clone-name\n\ngit push --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: git subtree changes the package directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19748453",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" moved_package_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached -qr -- . && git reset -q $GIT_COMMIT -- src/main/java/com/company/package'")]),s._v(" --prune-empty\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"parent-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parent-filter"}},[s._v("#")]),s._v(" 🔹 --parent-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I delete all commits before a given date in Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29043295",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --parent-filter '\n    read parent\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$parent"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-p 5bdd44e5919cb0a95a9924817529cd7c980f88b5"')]),s._v(" ]\n    then\n        echo\n    else\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$parent"')]),s._v("\n    fi'\n\ngit update-ref -d refs/original/refs/heads/master\n\ngit reflog expire --expire-unreachable=all --all\ngit gc --prune=all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I combine Git repositories into a linear history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15802324",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Using git filter-branch\ngit init repo\ncd repo\ngit remote add R1 /vol/R1.git\ngit fetch R1\ngit remote add R2 /vol/R2.git\ngit fetch R2\n\ngit reset --hard R2/master\n\ngit filter-branch --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s_^\\$_-p R1/master_\"'")]),s._v(" HEAD\n\nA---B---C---D---K---L---M---N\n\n▲ Merging more than two repositories together with filter-branch\nPARENT_REPO=R1\nfor CHILD_REPO in R2 R3 R4 R5; do\n    git reset --hard $CHILD_REPO/master\n    git filter-branch --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s_^\\$_-p '")]),s._v("$PARENT_REPO/master"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"'")]),s._v(" HEAD\n    PARENT_REPO=$CHILD_REPO\ndone\n\n▲ Using grafts\ngit reset --hard R2/master\n\nROOT_OF_R2=$(git rev-list R2/master | tail -n 1)\nTIP_OF_R1=$(git rev-parse R1/master)\necho $ROOT_OF_R2 $TIP_OF_R1 >> .git/info/grafts\n\ngit filter-branch\n\nrm .git/info/grafts\n\n▲ Merging more than two repositories together with grafts\ngit reset --hard R5/master\n\nPARENT_REPO=R1\nfor CHILD_REPO in R2 R3 R4 R5; do\n    ROOT_OF_CHILD=$(git rev-list $CHILD_REPO/master | tail -n 1)\n    TIP_OF_PARENT=$(git rev-parse $PARENT_REPO/master)\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$ROOT_OF_CHILD"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TIP_OF_PARENT"')]),s._v(" >> .git/info/grafts\n    PARENT_REPO=$CHILD_REPO\ndone\n\n▲ What about git rebase?\nA---B---C---D---K"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'---L'")]),s._v("---M"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'---N'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Merge two repositories (original project and changed project WITHOUT HISTORY)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11298335",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch /path/to/original/gephi\n\ngit filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <V> && echo \"-p <E>\" || cat'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git branches not merged after switching from svn")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13805856",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --parent-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = 73653d1 && echo \"-p 2ec9e8c -p 5c237f9\" || cat'")]),s._v(" master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to remove unwanted extra root commit in git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1989275",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --parent")]),s._v("-filter \\")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = G && echo \"-p F\" || cat'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Remove oldest commits from git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9783293",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd /tmp\n$ mkdir rmcommits\n$ cd rmcommits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\nInitialized empty Git repository in /tmp/rmcommits/.git/\n$ cp /tmp/example/xy.c .\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add xy.c")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial commit'")]),s._v("\n[master (root-commit) 8d5b88c] initial commit\n 1 files changed, 273 insertions(+), 0 deletions(-)\n create mode 100644 xy.c\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'more stuff'")]),s._v(" > morestuff.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add morestuff.txt; git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add some stuff'")]),s._v("\n[master f971ae5] add some stuff\n 1 files changed, 1 insertions(+), 0 deletions(-)\n create mode 100644 morestuff.txt\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'and still more'")]),s._v(" >> morestuff.txt \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add morestuff.txt; git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add more stuff'")]),s._v("\n[master bea9192] add more stuff\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse HEAD^")]),s._v("\nf971ae5b4225aca364223a44be8be84268385ff3\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --parent")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT == f971ae5b4225aca364223a44be8be84268385ff3 && echo \"\" || cat'")]),s._v(" HEAD\nRewrite bea9192a53a5aeb7532aa1e174f7f642363396de (3/3)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline")]),s._v("\n65a246b8320382a64550d2c4b650c942d7bfba70 add more stuff\n7892ab45aa33cd5ebdc3090ce2622081059fdd79 add some stuff\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log original/refs/heads/master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=oneline")]),s._v("\nbea9192a53a5aeb7532aa1e174f7f642363396de add more stuff\nf971ae5b4225aca364223a44be8be84268385ff3 add some stuff\n8d5b88c468f75750d5a01ab40bfae160c654ac66 initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git update-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" refs/original/refs/heads/master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fsck"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --unreachable")])]),s._v("\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How do I edit the initial commit in a github repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2066034",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --parent")]),s._v("-filter \\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = SECOND && echo \"\" || cat'")]),s._v(" \\\n  --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Rebasing merged trees in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21897610",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --parent-filter <somescript> --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: correctly rebase a merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11236533",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <a2> && echo \"-p <c1>\" || cat'")]),s._v("\ngit filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <new head> && echo \"-p <c2>\" || cat'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"msg-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#msg-filter"}},[s._v("#")]),s._v(" 🔹 --msg-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to rename last N commits messages in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 32    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14201492",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter <command>\n\ngit filter-branch -f --msg-filter '\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bug XXXXXXX: \\c"')]),s._v("\n    && cat\n    ' HEAD~<N>..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: git: changing an old commit message without creating conflicts")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27699824",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/bash")]),s._v("\nREV=$1\nMESSAGE=$2\nFILTER="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"test $(echo '$GIT_COMMIT') = $(git rev-parse $REV) && echo $MESSAGE || cat\"")]),s._v("\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$FILTER"')]),s._v(" -- --all\n\ngit config alias.undo-filter-branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'! DIR=$(git rev-parse --git-dir); cp -r $DIR/refs/original/refs/ .git/; rm -r $DIR/refs/original/'")]),s._v("\ngit config alias.confirm-filter-branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'! DIR=$(git rev-parse --git-dir); rm -r $DIR/refs/original/'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Rebasing a git history with empty commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8542434",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --msg-filter '\nread msg\nif [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$msg"')]),s._v(" ] ; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$msg"')]),s._v("\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The commit message was empty"')]),s._v("\nfi'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Rewriting Git History: How do I remove a sign-off?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3690063",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sed /^Signed-off-by:/d"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How can I edit an old git commit message programmatically?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50633163",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"perl -ple 's{color}{colour}g'\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to change the specific string throughout all git message commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15874218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/git-svn.*$//g\"'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --mirror")]),s._v(" git://example.com/my-repo.git")]),s._v("\n\ngit filter-branch -f --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/git-svn.*$//g\"'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to edit multiple commit messages at once during rebase?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19931564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"1a\\\\\\\\\"'")]),s._v(" from..\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Censoring commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61315902",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/word/<redacted>/g\"'")]),s._v(" -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to copy a repo and filter out all commit descriptions")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47599464",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --msg")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'head -1'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How can I see more log lines in the git-rebase TODO editor session?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65983306",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config rebase.instructionFormat "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"..."')]),s._v("\n\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"xargs echo"')]),s._v("\n\ngit filter-branch --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cat | $(pwd)/script.sh"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor commit in $(git rev-list $1..HEAD | tac)\ndo\n    git log -n 1 $commit --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pick %h %B"')]),s._v(" | xargs echo\ndone;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("h2",{attrs:{id:"commit-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#commit-filter"}},[s._v("#")]),s._v(" 🔹 --commit-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I rebase a commit made by another author without adding myself as the committer?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 31    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5520650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --commit-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'export GIT_COMMITTER_NAME="$GIT_AUTHOR_NAME"; export GIT_COMMITTER_EMAIL="$GIT_AUTHOR_EMAIL"; export GIT_COMMITTER_DATE="$GIT_AUTHOR_DATE"; git commit-tree "$@"\'')]),s._v(" -- basecommit..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: how to abandon commits of certain characteristic when using git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29942720",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --commit-filter '\n    MSG=$(git log --format=%B -n 1 $GIT_COMMIT)\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MSG"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"temp commit"')]),s._v(" ];\n    then\n        skip_commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(";\n    else\n        git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(";\n    fi' HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"tag-name-filter"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tag-name-filter"}},[s._v("#")]),s._v(" 🔹 --tag-name-filter")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Detach (move) subdirectory into separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1263    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/359759",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone /XYZ /ABC\n\ncd /ABC\nfor i in branch1 br2 br3; do git branch -t $i origin/$i; done\ngit remote rm origin\n\ncd /ABC\nfor i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\ngit remote rm origin\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC -- --all\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC HEAD\n\ngit reset --hard\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Remove empty commits in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 43    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28313729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ ... create repository ...\n$ cd some-tmp-dir; git clone --mirror file://path-to-original\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\n\n$ cd third-tmp-dir; git clone --mirror file://path-to-filtered-tmp\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log     # and other commands to inspect")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to prepend the past to a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[s._v("git hash-object")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3148117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ For importing the old snapshots, you find some of the tools in Git's contrib/fast-import directory useful. Or, if you  already have each old snapshot in a directory, you might do something like this:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Assumes the v* glob will sort in the right order")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (i.e. zero padded, fixed width numeric fields)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For v1, v2, v10, v11, ... you might try:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     v{1..23}     (1 through 23)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     v?{,?}       (v+one character, then v+two characters)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     v?{,?{,?}}   (v+{one,two,three} characters)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#     $(ls -v v*)  (GNU ls has "version sorting")')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or, just list them directly: ``for d in foo bar baz quux; do''")]),s._v("\n(git init import)\nfor d in v*; do\n    if mv import/.git "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$d/"')]),s._v("; then\n        (cd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$d"')]),s._v(" && git add --all && git commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"pre-Git snapshot $d"')]),s._v(")\n        mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$d/.git"')]),s._v(" import/\n    fi\ndone\n(cd import && git checkout HEAD -- .)\n\ncd work && git fetch ../import master:old-history\n\nINITIAL_SHA1=$(git rev-list --reverse master | head -1)\nTIP_OF_OLD_HISTORY_SHA1=$(git rev-parse old-history)\necho $INITIAL_SHA1 $TIP_OF_OLD_HISTORY_SHA1 >> .git/info/grafts\n\n▲ The main problem with grafts is that they are limited to your repository. But, if you decide that they should be a permanent part of the history, you can use git filter-branch to make them so (make a tar/zip backup of your .git dir first; git filter-branch will save original refs, but sometime it is just easier to use a plain backup).\ngit filter-branch --tag-name-filter cat -- --all\nrm .git/info/grafts\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the last commit of old history branch")]),s._v("\noldhead=$(git rev-parse --verify old-history)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the initial commit of current branch")]),s._v("\nnewinit=$(git rev-list master | tail -n 1)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create a fake commit based on $newinit, but with a parent")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (note: at this point, $oldhead must be a full commit ID)")]),s._v("\nnewfake=$(git cat-file commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$newinit"')]),s._v(" \\\n        | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/^tree [0-9a-f]\\+\\$/aparent $oldhead"')]),s._v(" \\\n        | git hash-object -t commit -w --stdin)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# replace the initial commit with the fake one")]),s._v("\ngit replace -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$newinit"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$newfake"')]),s._v("\n\ngit push some-remote "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/replace/*'")]),s._v("\n\n▲ If you decide to make the replacement permanent, use git filter-branch (same as with grafts; make a tar/zip backup of your .git directory first):\ngit filter-branch --tag-name-filter cat -- --all\ngit replace -d $INITIAL_SHA1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do I preserve tags when filtering a repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5574694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'move-to-subdir $subdir'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Definitive retroactive .gitignore (how to make Git completely/retroactively forget about a file now in .gitignore)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57454176",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#commit up-to-date .gitignore (if not already existing)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands are not strictly necessary if you don't want/need a .gitignore file.  .git/info/exclude can be used instead")]),s._v("\n\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Create .gitignore"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#apply standard git ignore behavior only to current index, not working directory (--cached)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, ensure /.git/info/exclude AND/OR .gitignore exist")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if using .git/info/exclude, it will need to be modified per branch run, if the branches have differing (per-branch) .gitignore requirements.")]),s._v("\n\ngit ls-files -z --ignored --exclude-standard | xargs -r0 git rm --cached\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Commit to prevent working directory data loss!")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this commit will be automatically deleted by the --prune-empty flag in the following command")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#optionally use the --amend flag to merge this commit with the previous one instead of creating 2 commits.")]),s._v("\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignored index"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Apply standard git ignore behavior RETROACTIVELY to all commits from all branches (--all)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This step WILL delete ignored files from working directory UNLESS they have been dereferenced from the index by the commit above")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#This step will also delete any "empty" commits.  If deliberate "empty" commits should be kept, remove --prune-empty and instead run git reset HEAD^ immediately after this command')]),s._v("\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git ls-files -z --ignored --exclude-standard | xargs -r0 git rm -f --ignore-unmatch'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#List all still-existing files that are now ignored properly")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, it's time to restore from backup and start over")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n\ngit ls-files --other --ignored --exclude-standard\n\ngit push origin --force --all\ngit push origin --force --tags\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete %(refname)"')]),s._v(" refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#fetch modified remote")]),s._v("\n\ngit fetch --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#"Pull" changes WITHOUT deleting newly-ignored files from working directory')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This will overwrite local tracked files with remote - ensure any local modifications are backed-up/stashed")]),s._v("\n\ngit reset FETCH_HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Development Log file exceeds GitHub's file size limit, even after deleting file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19082812",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm log/development.log\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"removed log file"')]),s._v("\n\ngit rm -r --cached log\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"removed log file"')]),s._v("\n\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch log/development.log'")]),s._v(" --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git - Squash All Commits in History Before Specific Commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53589816",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git replace --graft <hash-of-*>\n\ngit filter-branch --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: git filter-branch led to a disconnected history: how to get rid of the old commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17973408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cvs2git --blobfile=blob --dump=dump /path/to/cvs/base\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 1")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module1"')]),s._v(" -- --all\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 2")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module2"')]),s._v(" -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: combine old git history into initial commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18825907",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch \\\n  --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <initial-commit-id> && echo \"\" || cat'")]),s._v(" \\\n  --tag-name-filter cat -- --all\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<initial-commit-id> "')]),s._v(" >> info/grafts  # .git/info/grafts in non-bare repo\ngit filter-branch --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Rebasing merged trees in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21897610",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --parent-filter <somescript> --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Moving a file in git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50533809",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR\ngit filter-branch --tree-filter <fill this in> --tag-name-filter cat -- --all\n\n▲ Long\nmv old-relative-path new-relative-path\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: git surgery - splitting out a single repository into many repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4670814",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd /path/to/global-repo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch work-foo master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter foo \\")]),s._v("\n      --prune-empty work-foo\n\n$ cd /path/to\n$ mkdir foo-repo\n$ cd foo-repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git pull /path/to/global-repo work-foo")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Remove commits which aren't in subtree nor in original repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21292754",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tag-name-filter cat --prune-empty\n    --subdirectory-filter main -- --all --not --remotes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: git rebase with branches (whole tree)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17107452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ echo `git rev-list [E] -1` `git rev-list master1 -1` > .git/info/grafts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat master2 [other branches]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat `git show-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --heads")]),s._v(" | awk ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How can I reduce the size of my git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-verify-pack.html"}},[s._v("git verify-pack")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34327110",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --objects --all | sort -k 2 > allfileshas.txt\n\ngit gc && git verify-pack -v .git/objects/pack/pack-*.idx | egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\w+ blob\\W+[0-9]+ [0-9]+ [0-9]+$"')]),s._v(" | sort -k 3 -n -r > bigobjects.txt\n\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch MY-BIG-DIRECTORY-OR-FILE'")]),s._v(" --tag-name-filter cat -- --all\n\ngit clone --no-hardlinks file:///Users/yourUser/your/full/repo/path repo-clone-name\n\ngit push --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"prune-empty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prune-empty"}},[s._v("#")]),s._v(" 🔹 --prune-empty")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Detach (move) subdirectory into separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1263    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/359759",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone /XYZ /ABC\n\ncd /ABC\nfor i in branch1 br2 br3; do git branch -t $i origin/$i; done\ngit remote rm origin\n\ncd /ABC\nfor i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\ngit remote rm origin\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC -- --all\n\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter ABC HEAD\n\ngit reset --hard\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Remove folder and its contents from git/GitHub's history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 643    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17824718",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf node_modules"')]),s._v(" --prune-empty HEAD\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\necho node_modules/ >> .gitignore\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Removing node_modules from git history'")]),s._v("\ngit gc\ngit push origin master --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to remove origin from git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 622    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9224789",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote rm origin\n\ngit filter-branch --prune-empty --subdirectory-filter path/to/subtree HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Split large Git repository into many smaller ones")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 81    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3910697",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \n\ncd ..\ngit clone MyABRepo.tmp MyABRepo\n\ngit clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch -d /tmp/git-rewrite.tmp --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \ncd ..\ngit clone MyABRepo.tmp MyABRepo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Remove empty commits in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 43    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28313729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ ... create repository ...\n$ cd some-tmp-dir; git clone --mirror file://path-to-original\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --format")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\n\n$ cd third-tmp-dir; git clone --mirror file://path-to-filtered-tmp\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log     # and other commands to inspect")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Extract part of a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2538259",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter Project/SubProject-0 --prune-empty -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to move a file from one git repository to another while preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-prune.html"}},[s._v("git prune")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10524661",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("~$ cd neu\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FooBar HEAD")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git remote rm origin")]),s._v("\n~/neu$ rm -r .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --aggressive")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git prune")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git remote add origin git://github.com/FooBar/neu.git")]),s._v("\n\n git filter-branch --prune-empty --subdirectory-filter myDirectory -- --all\n\n git filter-branch -f --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch $(git ls-files | grep -v 'keepthisfile.txt')\"")]),s._v("\n\n git reset --hard\n git gc --aggressive\n git prune\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to remove previously added git subtree and its history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26245982",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch -rf dir1 dir2 dirN file1 file2 fileN'")]),s._v(" --prune-empty -f HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to split a git repository and follow directory renames?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14764368",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --prune-empty --index-filter '\n    # Delete files which are NOT needed\n    git ls-files -z | egrep -zv  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^(NAME1|NAME2|NAME3)"')]),s._v(" | \n        xargs -0 -r git rm --cached -q             \n    # Move files to root directory\n    git ls-files -s | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s-\\t\\(NAME1\\|NAME2\\|NAME3\\)/-\\t-"')]),s._v(" |\n        GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n        git update-index --index-info &&\n        ( test ! -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" \\\n            || mv -f "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE"')]),s._v(" )\n'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How do I preserve tags when filtering a repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5574694",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'move-to-subdir $subdir'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Split one subfolder from git repository with all branches and history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47084338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/USERNAME/REPOSITORY-NAME")]),s._v("\n$ cd REPOSITORY-NAME\n\n$ for i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FOLDER-NAME --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDER-NAME'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (push)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote set-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (push)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Can I do a subtree merge from a subdirectory?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16603719",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add b <URL_TO_B>\ngit fetch b\ngit checkout -b b_master b/master\n\ngit filter-branch --prune-empty --subdirectory-filter foo b_master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How can I extract a portion of a git repository into it's own repo while retaining history and file structure?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25316857",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone initial final\ncd final\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf <list of folders separated by space>'")]),s._v(" HEAD\n\ngit filter-branch -f --prune-empty \n\n git filter-branch –prune-empty –subdirectory-filter A/ master\n git filter-branch –prune-empty –subdirectory-filter B/ master\n\ngit clone <remote path> NewRepo\ncd NewRepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add a readme file")]),s._v("\ntouch Readme.md\ngit add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Adding ReadMe file"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo A")]),s._v("\ngit remote add -f A <remote path for A>\ngit merge -s ours --no-commit A/master\ngit read-tree --prefix=A/ -u A/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge A into NewRepo"')]),s._v("\ngit remote remove A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo B")]),s._v("\ngit remote add -f B <remote path for B>\ngit merge -s ours --no-commit B/master\ngit read-tree --prefix=B/ -u B/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge B into NewRepo"')]),s._v("\ngit remote remove B\n\ngit remote add origin <remote path for NewRepo>\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git filter-branch led to a disconnected history: how to get rid of the old commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17973408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cvs2git --blobfile=blob --dump=dump /path/to/cvs/base\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 1")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module1"')]),s._v(" -- --all\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Module 2")]),s._v("\ngit filter-branch --tag-name-filter cat --prune-empty --subdirectory-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/module2"')]),s._v(" -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: git push a sub-directory into another main repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25407830",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <ORIG_REPO_DIR> <NEW_REPO_DIR>\ncd <NEW_REPO_DIR>\ngit filter-branch --prune-empty --subdirectory-filter <THE_SUBDIR_TO_MAKE_NEW_ROOTDIR> master\ngit push <MY_NEW_REMOTE_ORIGIN_URL> -f .\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Checkout a Specific Folder within a Git Repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36142629",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ filter-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Filter the master branch to your directory and remove empty commits")]),s._v("\ngit filter-branch --prune-empty --subdirectory-filter YOUR_FOLDER_NAME filter_from_branch\n\n▲ subtree split\ngit subtree split -P <name-of-folder> -b <name-of-new-branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: git: How to split off library from project? filter-branch, subtree?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22259131",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git subtree split -P src/de/fencing_game -b temp-br\ngit checkout temp-br\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -or-, if you really want to keep the full path:")]),s._v("\n\ngit checkout -b temp-br\ncd src/de/fencing_game\n\ngit filter-branch --tag-name-filter cat --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch client server otherstuff'")]),s._v(" HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# also clear out stuff from the sub dir")]),s._v("\ncd transport \ngit filter-branch --tag-name-filter cat --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch fencing client server'")]),s._v(" HEAD\n\ngit update-ref -d refs/original/refs/heads/temp-br\n\ncd <new-lib-repo>\ngit init\ngit pull <original-repo> temp-br\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Split file into separate repository, preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43004729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find -type f -not -path ./foo/bar -delete'")]),s._v(" --prune-empty\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to rebase git submodule preserving references to submodule commits from git repository containing the submodule?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40199538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" cd /submodule/repo/just/rewritten/\n # the old history is still available in refs/original\n git -C /path/to/rewritten/repo for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original\n\n cd /main/repo\ngit for-each-ref --contains <SHA1> # SHA being a SHA1 from the old submodule history\n\ngit filter-branch --prune-empty --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'change_gitlink'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Remove a file from a older commit without affecting any other commits in gitlab")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57473979",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("(master)$ git rm path/to/filetoremove")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("(master)$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Commit removing filetoremove"')]),s._v("\n(master)$ java -jar ~/Downloads/bfg.jar --delete-files filetoremove\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("(master)$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch filepattern'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Export git history, for a file and a subfolder, into another existing git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56328369",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd oldrepo_filt_git\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\nRewrite 252bf7ff5f385dad880240d5d80e68f24ae09b59 (1/8) (0 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite f318d9712cd7aacdb5dd45febbcdbbce6b741e08 (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite 00b62e7da8784d45850d7483cbea88fdc4aa844c (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite c618eff47d38412c54a8381a5bacc921bddefe2d (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2cada8d822d83f37bdc4a37bcfb03047c1cc1ded (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 7b296b70018f4105f190d06ed4d9c58e3f80532f (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 18a1ad1d35cd8573c39485d0a29b630325f9727d (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2ffbbf03d51363f1ced3aaaf000d5921c9d8b919 (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\n\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/testbranch'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   31cd8b5 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n|\\\n| * 42b153d (testbranch) change 5 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ff1be9d change 4 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * 90f050c change 3 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * d2d2136 change 2 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ab237ac change 1 made\n|/\n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n* ea0a32d added a.txt\n   a.txt | 1 +\n   1 file changed, 1 insertion(+)\n\ngit remote add oldrepo ../oldrepo_filt_git/\ngit pull oldrepo master --allow-unrelated-histories\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   845c81e (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" of ../oldrepo_filt_git\n|\\\n| *   31cd8b5 (oldrepo/master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\\\n| | * 42b153d (oldrepo/testbranch) change 5 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ff1be9d change 4 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * 90f050c change 3 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * d2d2136 change 2 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ab237ac change 1 made\n| |/\n| |    a.txt     | 1 +\n| |    aa/aa.txt | 1 +\n| |    aa/ab.txt | 1 +\n| |    3 files changed, 3 insertions(+)\n| * ea0a32d added a.txt\n|    a.txt | 1 +\n|    1 file changed, 1 insertion(+)\n* 8e99c2d Initial commit by Bob\n   README | 1 +\n   1 file changed, 1 insertion(+)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add old-repo ../oldrepo_filt_git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch old-repo")]),s._v("\nwarning: no common commits\nremote: Enumerating objects: 29, done.\nremote: Counting objects: 100% (29/29), done.\nremote: Compressing objects: 100% (17/17), done.\nremote: Total 29 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (29/29), done.\nFrom ../oldrepo_filt_git\n * [new branch]      master     -> old-repo/master\n * [new branch]      testbranch -> old-repo/testbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-head old-repo/master")]),s._v("\nBranch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldrepo-head'")]),s._v(" set up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'old-repo'")]),s._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-root $(git log oldrepo-head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=%H | head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%T %ct'")]),s._v(" ..oldrepo-head > /tmp/hashlist\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master new-master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --strategy")]),s._v("-option=theirs oldrepo-root")]),s._v("\n[new-master 427cf77] added a.txt\n Author: tester <tester@example.com>\n Date: Mon May 27 14:31:10 2019 +0200\n 1 file changed, 1 insertion(+)\n create mode 100644 a.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* 427cf77 (HEAD -> new-master) added a.txt\n* 8e99c2d Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --preserve")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" new-master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --root")]),s._v(" oldrepo-head")]),s._v("\nSuccessfully rebased and updated refs/heads/oldrepo-head.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit 61fbe54721a9432e91e48917ed036f55da4105a4 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 f8e8f8a\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:57:00 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n| * commit f8e8f8aedaa7bc999bdfdd49542c9ee04edb770c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:58 2019 +0200\n| |\n| |     change 5 made\n| |\n| * commit b084029040d6596e0795e7567b2684dc59c02241\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:56 2019 +0200\n| |\n| |     change 4 made\n| |\n| * commit b62dabca3a46efbe76edb10591935db136f74aaa\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:54 2019 +0200\n| |\n| |     change 3 made\n| |\n| * commit 252f3e9697b87b4f59cd0a74681ef25401340fcf\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:51 2019 +0200\n| |\n| |     change 2 made\n| |\n| * commit c382c8a713489ca0e5dc106bed29fdce379952b0\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Tue May 28 12:56:49 2019 +0200\n|\n|       change 1 made\n|\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(fgrep -m 1 $(git log -1 --pretty=%T $GIT_COMMIT) /tmp/hashlist | cut -d\" \" -f2)'")]),s._v(" new-master..oldrepo-head\nRewrite 61fbe54721a9432e91e48917ed036f55da4105a4 (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master..oldrepo-head\nRewrite f2b2385d85c74dbf0cbf8fabc02ec30cb50d8f2a (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" 427cf77417a\nYou must specify a ref to rewrite.\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (2/2) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/new-master'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n...\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (refs/original/refs/heads/new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" oldrepo-head master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" oldrepo-root")]),s._v("\nDeleted branch oldrepo-root (was ea0a32d).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" new-master")]),s._v("\nDeleted branch new-master (was 4ac225e).\n$ rm .git/refs/original/refs/heads/new-master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote remove old-repo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch tmp 427cf774")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" tmp^..tmp\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (1/1) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/tmp'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller tmp")]),s._v("\n* commit 4ac225e308e280e3a96be0168c6e9dece44d4979 (tmp)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Mon May 27 14:31:10 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n|\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" tmp")]),s._v("\nDeleted branch tmp (was 4ac225e).\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| | \n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| | \n| * commit 9bfc6cde58be9102102f839e5cc0fe8f25f0f78c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:00 2019 +0200\n| | \n| |     change 5 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 485ae0f50054610b6a41098fb695e59d194cc856\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:50 2019 +0200\n| | \n| |     change 4 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit b6804b6e8e313b5c4766568a287f0785503e3a11\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:40 2019 +0200\n| | \n| |     change 3 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 8b463423d2a99929a6a248e38ba1368a56d3769d\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:30 2019 +0200\n| | \n| |     change 2 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 3bc0bed30ebea1498a15711825b2ea8347cc374d\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Mon May 27 14:31:20 2019 +0200\n|   \n|       change 1 made\n|   \n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n| \n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n| \n|     added a.txt\n| \n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n| \n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n   README | 1 +\n   1 file changed, 1 insertion(+)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br"),e("span",{staticClass:"line-number"},[s._v("279")]),e("br"),e("span",{staticClass:"line-number"},[s._v("280")]),e("br"),e("span",{staticClass:"line-number"},[s._v("281")]),e("br"),e("span",{staticClass:"line-number"},[s._v("282")]),e("br"),e("span",{staticClass:"line-number"},[s._v("283")]),e("br"),e("span",{staticClass:"line-number"},[s._v("284")]),e("br"),e("span",{staticClass:"line-number"},[s._v("285")]),e("br"),e("span",{staticClass:"line-number"},[s._v("286")]),e("br"),e("span",{staticClass:"line-number"},[s._v("287")]),e("br"),e("span",{staticClass:"line-number"},[s._v("288")]),e("br"),e("span",{staticClass:"line-number"},[s._v("289")]),e("br"),e("span",{staticClass:"line-number"},[s._v("290")]),e("br"),e("span",{staticClass:"line-number"},[s._v("291")]),e("br"),e("span",{staticClass:"line-number"},[s._v("292")]),e("br"),e("span",{staticClass:"line-number"},[s._v("293")]),e("br"),e("span",{staticClass:"line-number"},[s._v("294")]),e("br"),e("span",{staticClass:"line-number"},[s._v("295")]),e("br"),e("span",{staticClass:"line-number"},[s._v("296")]),e("br"),e("span",{staticClass:"line-number"},[s._v("297")]),e("br"),e("span",{staticClass:"line-number"},[s._v("298")]),e("br"),e("span",{staticClass:"line-number"},[s._v("299")]),e("br"),e("span",{staticClass:"line-number"},[s._v("300")]),e("br"),e("span",{staticClass:"line-number"},[s._v("301")]),e("br"),e("span",{staticClass:"line-number"},[s._v("302")]),e("br"),e("span",{staticClass:"line-number"},[s._v("303")]),e("br"),e("span",{staticClass:"line-number"},[s._v("304")]),e("br"),e("span",{staticClass:"line-number"},[s._v("305")]),e("br"),e("span",{staticClass:"line-number"},[s._v("306")]),e("br"),e("span",{staticClass:"line-number"},[s._v("307")]),e("br"),e("span",{staticClass:"line-number"},[s._v("308")]),e("br"),e("span",{staticClass:"line-number"},[s._v("309")]),e("br"),e("span",{staticClass:"line-number"},[s._v("310")]),e("br"),e("span",{staticClass:"line-number"},[s._v("311")]),e("br"),e("span",{staticClass:"line-number"},[s._v("312")]),e("br"),e("span",{staticClass:"line-number"},[s._v("313")]),e("br"),e("span",{staticClass:"line-number"},[s._v("314")]),e("br"),e("span",{staticClass:"line-number"},[s._v("315")]),e("br"),e("span",{staticClass:"line-number"},[s._v("316")]),e("br"),e("span",{staticClass:"line-number"},[s._v("317")]),e("br"),e("span",{staticClass:"line-number"},[s._v("318")]),e("br"),e("span",{staticClass:"line-number"},[s._v("319")]),e("br"),e("span",{staticClass:"line-number"},[s._v("320")]),e("br"),e("span",{staticClass:"line-number"},[s._v("321")]),e("br"),e("span",{staticClass:"line-number"},[s._v("322")]),e("br"),e("span",{staticClass:"line-number"},[s._v("323")]),e("br"),e("span",{staticClass:"line-number"},[s._v("324")]),e("br"),e("span",{staticClass:"line-number"},[s._v("325")]),e("br"),e("span",{staticClass:"line-number"},[s._v("326")]),e("br"),e("span",{staticClass:"line-number"},[s._v("327")]),e("br"),e("span",{staticClass:"line-number"},[s._v("328")]),e("br"),e("span",{staticClass:"line-number"},[s._v("329")]),e("br"),e("span",{staticClass:"line-number"},[s._v("330")]),e("br"),e("span",{staticClass:"line-number"},[s._v("331")]),e("br"),e("span",{staticClass:"line-number"},[s._v("332")]),e("br"),e("span",{staticClass:"line-number"},[s._v("333")]),e("br"),e("span",{staticClass:"line-number"},[s._v("334")]),e("br"),e("span",{staticClass:"line-number"},[s._v("335")]),e("br"),e("span",{staticClass:"line-number"},[s._v("336")]),e("br"),e("span",{staticClass:"line-number"},[s._v("337")]),e("br"),e("span",{staticClass:"line-number"},[s._v("338")]),e("br"),e("span",{staticClass:"line-number"},[s._v("339")]),e("br"),e("span",{staticClass:"line-number"},[s._v("340")]),e("br"),e("span",{staticClass:"line-number"},[s._v("341")]),e("br"),e("span",{staticClass:"line-number"},[s._v("342")]),e("br"),e("span",{staticClass:"line-number"},[s._v("343")]),e("br"),e("span",{staticClass:"line-number"},[s._v("344")]),e("br"),e("span",{staticClass:"line-number"},[s._v("345")]),e("br"),e("span",{staticClass:"line-number"},[s._v("346")]),e("br"),e("span",{staticClass:"line-number"},[s._v("347")]),e("br"),e("span",{staticClass:"line-number"},[s._v("348")]),e("br"),e("span",{staticClass:"line-number"},[s._v("349")]),e("br"),e("span",{staticClass:"line-number"},[s._v("350")]),e("br"),e("span",{staticClass:"line-number"},[s._v("351")]),e("br"),e("span",{staticClass:"line-number"},[s._v("352")]),e("br"),e("span",{staticClass:"line-number"},[s._v("353")]),e("br"),e("span",{staticClass:"line-number"},[s._v("354")]),e("br"),e("span",{staticClass:"line-number"},[s._v("355")]),e("br"),e("span",{staticClass:"line-number"},[s._v("356")]),e("br"),e("span",{staticClass:"line-number"},[s._v("357")]),e("br"),e("span",{staticClass:"line-number"},[s._v("358")]),e("br"),e("span",{staticClass:"line-number"},[s._v("359")]),e("br"),e("span",{staticClass:"line-number"},[s._v("360")]),e("br"),e("span",{staticClass:"line-number"},[s._v("361")]),e("br"),e("span",{staticClass:"line-number"},[s._v("362")]),e("br"),e("span",{staticClass:"line-number"},[s._v("363")]),e("br"),e("span",{staticClass:"line-number"},[s._v("364")]),e("br"),e("span",{staticClass:"line-number"},[s._v("365")]),e("br"),e("span",{staticClass:"line-number"},[s._v("366")]),e("br"),e("span",{staticClass:"line-number"},[s._v("367")]),e("br"),e("span",{staticClass:"line-number"},[s._v("368")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to remove some files accidentally added in the first commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20808429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm fileToRemove'")]),s._v(" --prune-empty --force HEAD\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -fR dirToRemove'")]),s._v(" --prune-empty --force HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Remove commits which aren't in subtree nor in original repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21292754",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tag-name-filter cat --prune-empty\n    --subdirectory-filter main -- --all --not --remotes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How can I reduce the size of my git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-verify-pack.html"}},[s._v("git verify-pack")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34327110",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --objects --all | sort -k 2 > allfileshas.txt\n\ngit gc && git verify-pack -v .git/objects/pack/pack-*.idx | egrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\w+ blob\\W+[0-9]+ [0-9]+ [0-9]+$"')]),s._v(" | sort -k 3 -n -r > bigobjects.txt\n\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm -rf --cached --ignore-unmatch MY-BIG-DIRECTORY-OR-FILE'")]),s._v(" --tag-name-filter cat -- --all\n\ngit clone --no-hardlinks file:///Users/yourUser/your/full/repo/path repo-clone-name\n\ngit push --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: New git repo from selected files in existing repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26903814",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --prune-empty --subdirectory-filter YOUR_FOLDER_NAME master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Move history from git repo to subtree")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32291121",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <git repository A url>\ncd <git repository A directory>\ngit remote rm origin\ngit filter-branch --subdirectory-filter <directory 1> --\n\ngit clone <git repository B url>\ncd <git repository B directory>\ngit remote add repo-A-branch <git repository A directory>\ngit pull repo-A-branch master\ngit remote rm repo-A-branch\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf <bad subdirectory>'")]),s._v(" --prune-empty HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: git subtree changes the package directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19748453",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" moved_package_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached -qr -- . && git reset -q $GIT_COMMIT -- src/main/java/com/company/package'")]),s._v(" --prune-empty\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[s._v("#")]),s._v(" 🔹 -d")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I move a directory in a Git repo for all commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3142821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You can use the subdirectory filter to achieve this\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter blog/ --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n▲ EDIT 1: If you don't want to effectively make _posts the root, use a tree-filter instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mv blog/_posts .'")]),s._v(" HEAD\n\n▲ EDIT 2: If blog/_posts did not exist in some of the commits, the above will fail. Use this instead:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test -d blog/_posts && mv blog/_posts . || echo \"Nothing to do\"'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Split large Git repository into many smaller ones")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 81    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3910697",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \n\ncd ..\ngit clone MyABRepo.tmp MyABRepo\n\ngit clone MyHugeRepo/ MyABRepo.tmp/\ncd MyABRepo.tmp\ngit filter-branch -d /tmp/git-rewrite.tmp --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch DIR_1/* DIR_2/*'")]),s._v(" HEAD \ncd ..\ngit clone MyABRepo.tmp MyABRepo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Splitting many subdirectories into a new, separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31841516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"mkdir samples && test -d app1 && mv app1 samples/|| test -d app2 && mv app2 samples/ || echo 'nothing to do'\"")]),s._v(" HEAD\n\ngit filter-branch -f --subdirectory-filter samples -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: efficiently rewriting (rebase -i) a lot of history with git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10919879",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[ -f README ]] && echo \"---FOOTER---\" >> README'")]),s._v(" HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'perl /path/to/find-add-license.pl'")]),s._v(" --prune-empty HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find . -name \"*.[chS]\" -exec perl /path/to/just-add-license.pl \\{\\} \\;'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--prune-empty HEAD")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[s._v("#")]),s._v(" 🔹 -f")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to remove/delete a large file from commit history in the Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 248    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30274113",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f DVD-rip'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to move a file from one git repository to another while preserving history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-prune.html"}},[s._v("git prune")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10524661",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("~$ cd neu\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FooBar HEAD")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git remote rm origin")]),s._v("\n~/neu$ rm -r .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --aggressive")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git prune")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("~/neu$ git remote add origin git://github.com/FooBar/neu.git")]),s._v("\n\n git filter-branch --prune-empty --subdirectory-filter myDirectory -- --all\n\n git filter-branch -f --prune-empty --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch $(git ls-files | grep -v 'keepthisfile.txt')\"")]),s._v("\n\n git reset --hard\n git gc --aggressive\n git prune\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to rename last N commits messages in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 32    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14201492",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --msg-filter <command>\n\ngit filter-branch -f --msg-filter '\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Bug XXXXXXX: \\c"')]),s._v("\n    && cat\n    ' HEAD~<N>..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to remove previously added git subtree and its history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26245982",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch -rf dir1 dir2 dirN file1 file2 fileN'")]),s._v(" --prune-empty -f HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Rebasing a git history with empty commit messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8542434",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --msg-filter '\nread msg\nif [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$msg"')]),s._v(" ] ; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$msg"')]),s._v("\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The commit message was empty"')]),s._v("\nfi'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Definitive retroactive .gitignore (how to make Git completely/retroactively forget about a file now in .gitignore)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57454176",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#commit up-to-date .gitignore (if not already existing)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#these commands are not strictly necessary if you don't want/need a .gitignore file.  .git/info/exclude can be used instead")]),s._v("\n\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Create .gitignore"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#apply standard git ignore behavior only to current index, not working directory (--cached)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, ensure /.git/info/exclude AND/OR .gitignore exist")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if using .git/info/exclude, it will need to be modified per branch run, if the branches have differing (per-branch) .gitignore requirements.")]),s._v("\n\ngit ls-files -z --ignored --exclude-standard | xargs -r0 git rm --cached\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Commit to prevent working directory data loss!")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this commit will be automatically deleted by the --prune-empty flag in the following command")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#optionally use the --amend flag to merge this commit with the previous one instead of creating 2 commits.")]),s._v("\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ignored index"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Apply standard git ignore behavior RETROACTIVELY to all commits from all branches (--all)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This step WILL delete ignored files from working directory UNLESS they have been dereferenced from the index by the commit above")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#This step will also delete any "empty" commits.  If deliberate "empty" commits should be kept, remove --prune-empty and instead run git reset HEAD^ immediately after this command')]),s._v("\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git ls-files -z --ignored --exclude-standard | xargs -r0 git rm -f --ignore-unmatch'")]),s._v(" --prune-empty --tag-name-filter cat -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#List all still-existing files that are now ignored properly")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if this command returns nothing, it's time to restore from backup and start over")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#this command must be run on each branch")]),s._v("\n\ngit ls-files --other --ignored --exclude-standard\n\ngit push origin --force --all\ngit push origin --force --tags\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete %(refname)"')]),s._v(" refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#fetch modified remote")]),s._v("\n\ngit fetch --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#"Pull" changes WITHOUT deleting newly-ignored files from working directory')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#This will overwrite local tracked files with remote - ensure any local modifications are backed-up/stashed")]),s._v("\n\ngit reset FETCH_HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Create a git repository from commits of a previous one")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4755041",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --subdirectory-filter foobar --prune-empty -- --all\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f filename1 pattern2.*'")]),s._v(" --prune-empty -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to move function declaration to another file yet retain Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17961452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter 'if [ -f original.php ]; then \n    echo part1.php part2.php part3.php | xargs -n 1 cp original.php; fi' HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Splitting many subdirectories into a new, separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31841516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"mkdir samples && test -d app1 && mv app1 samples/|| test -d app2 && mv app2 samples/ || echo 'nothing to do'\"")]),s._v(" HEAD\n\ngit filter-branch -f --subdirectory-filter samples -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How can I extract a portion of a git repository into it's own repo while retaining history and file structure?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25316857",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone initial final\ncd final\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf <list of folders separated by space>'")]),s._v(" HEAD\n\ngit filter-branch -f --prune-empty \n\n git filter-branch –prune-empty –subdirectory-filter A/ master\n git filter-branch –prune-empty –subdirectory-filter B/ master\n\ngit clone <remote path> NewRepo\ncd NewRepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add a readme file")]),s._v("\ntouch Readme.md\ngit add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Adding ReadMe file"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo A")]),s._v("\ngit remote add -f A <remote path for A>\ngit merge -s ours --no-commit A/master\ngit read-tree --prefix=A/ -u A/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge A into NewRepo"')]),s._v("\ngit remote remove A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge Repo B")]),s._v("\ngit remote add -f B <remote path for B>\ngit merge -s ours --no-commit B/master\ngit read-tree --prefix=B/ -u B/master\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merge B into NewRepo"')]),s._v("\ngit remote remove B\n\ngit remote add origin <remote path for NewRepo>\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Merge two repositories (original project and changed project WITHOUT HISTORY)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11298335",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch /path/to/original/gephi\n\ngit filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <V> && echo \"-p <E>\" || cat'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: efficiently rewriting (rebase -i) a lot of history with git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10919879",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[[ -f README ]] && echo \"---FOOTER---\" >> README'")]),s._v(" HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'perl /path/to/find-add-license.pl'")]),s._v(" --prune-empty HEAD\n\ngit filter-branch -d /dev/shm/git --tree-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find . -name \"*.[chS]\" -exec perl /path/to/just-add-license.pl \\{\\} \\;'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--prune-empty HEAD")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to change the specific string throughout all git message commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15874218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/git-svn.*$//g\"'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --mirror")]),s._v(" git://example.com/my-repo.git")]),s._v("\n\ngit filter-branch -f --msg-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sed \"s/git-svn.*$//g\"'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Splitting each commit by file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34556655",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git rebase -i aka: squash (manual procedure)\n// Manipulate any commit by editing it and commitign again\ngit rebase -i HEAD~X\n\n▲ git filter-branch\n▲ sample\n// Remove any given file from commits \n// Now you can commit it again into a new commit\n\ngit filter-branch --tree-filter 'rm -f <file name> HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Create new git repo from already existing repo's subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6687726",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/remotes/origin | grep -v HEAD); do\n  git checkout -b $(basename $branch) $branch\n  git filter-branch -f --subdirectory-filter subdirectory HEAD -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: correctly rebase a merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11236533",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <a2> && echo \"-p <c1>\" || cat'")]),s._v("\ngit filter-branch -f --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test $GIT_COMMIT = <new head> && echo \"-p <c2>\" || cat'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to replace a string in a whole Git history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47158332",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ censorStringsInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#arguments are strings to censore")]),s._v("\n\nfor string in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v("\ndo\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"================ Censoring string "')]),s._v("$string"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('": ================"')]),s._v("\n  ~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$string"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\ndone\n\n~/censorStringsInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"some_f_word"')]),s._v("\n\n▲ replaceStringInWholeGitHistory.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to replace with")]),s._v("\n\nfor branch in $(git branch | cut -c 3-); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('">>> Replacing strings in branch $branch:"')]),s._v("\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n  ~/replaceStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("\ndone\n\n~/replaceStringInWholeGitHistory.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ replaceStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace with")]),s._v("\n\ngit checkout $1\nfor file in $(~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("); do\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"          Filtering file $file:"')]),s._v("\n  ~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$3"')]),s._v("\ndone\n\n~/replaceStringInBranch.sh master "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\n▲ findFilesContainingStringInBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - branch name or nothing (current branch in that case)")]),s._v("\n\ngit log -S "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" $2 --name-only --pretty=format: -- | sort -u\n\n~/findFilesContainingStringInBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" master\n\n▲ changeStringsInFileInCurrentBranch.sh:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 - file name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $2 - string to find")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $3 - string to replace")]),s._v("\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"if [ -f $1 ];then sed -i s/$2/$3/g $1;fi"')]),s._v("\n\n~/changeStringsInFileInCurrentBranch.sh "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"abc.txt"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my_password"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"********"')]),s._v("\n\ngit push <remote> -f --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Splitting a Git repository based on arbitrary file paths")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7479926",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -f b-main.js tests/b-tests.js"')]),s._v(" \\\n                  --prune-empty HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote rm origin")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add origin git@github.com:username/reponame.git")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to rewrite git history up to a merge commit included")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59489475",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"......"')]),s._v(" E^! HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Removing all deleted files from git repo history w search command")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37759578",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --all --pretty=format: --name-only --diff-filter=D | sort -u | while read -r line; do git filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -rf { $line }"')]),s._v(" HEAD; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Export git history, for a file and a subfolder, into another existing git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56328369",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd oldrepo_filt_git\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch -r $(bash -O extglob -c 'ls -xd !(a*)')\"")]),s._v(" --prune-empty -- --all\nRewrite 252bf7ff5f385dad880240d5d80e68f24ae09b59 (1/8) (0 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite f318d9712cd7aacdb5dd45febbcdbbce6b741e08 (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nRewrite 00b62e7da8784d45850d7483cbea88fdc4aa844c (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite c618eff47d38412c54a8381a5bacc921bddefe2d (2/8) (1 seconds passed, remaining 3 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2cada8d822d83f37bdc4a37bcfb03047c1cc1ded (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 7b296b70018f4105f190d06ed4d9c58e3f80532f (5/8) (3 seconds passed, remaining 1 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 18a1ad1d35cd8573c39485d0a29b630325f9727d (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\nRewrite 2ffbbf03d51363f1ced3aaaf000d5921c9d8b919 (7/8) (5 seconds passed, remaining 0 predicted)    rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'b.txt'")]),s._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bb/bb.txt'")]),s._v("\n\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" was rewritten\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/testbranch'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   31cd8b5 (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n|\\\n| * 42b153d (testbranch) change 5 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ff1be9d change 4 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * 90f050c change 3 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * d2d2136 change 2 made\n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| * ab237ac change 1 made\n|/\n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n* ea0a32d added a.txt\n   a.txt | 1 +\n   1 file changed, 1 insertion(+)\n\ngit remote add oldrepo ../oldrepo_filt_git/\ngit pull oldrepo master --allow-unrelated-histories\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")])]),s._v("\n*   845c81e (HEAD -> master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" of ../oldrepo_filt_git\n|\\\n| *   31cd8b5 (oldrepo/master) Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\\\n| | * 42b153d (oldrepo/testbranch) change 5 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ff1be9d change 4 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * 90f050c change 3 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * d2d2136 change 2 made\n| | |  a.txt     | 1 +\n| | |  aa/aa.txt | 1 +\n| | |  aa/ab.txt | 1 +\n| | |  3 files changed, 3 insertions(+)\n| | * ab237ac change 1 made\n| |/\n| |    a.txt     | 1 +\n| |    aa/aa.txt | 1 +\n| |    aa/ab.txt | 1 +\n| |    3 files changed, 3 insertions(+)\n| * ea0a32d added a.txt\n|    a.txt | 1 +\n|    1 file changed, 1 insertion(+)\n* 8e99c2d Initial commit by Bob\n   README | 1 +\n   1 file changed, 1 insertion(+)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add old-repo ../oldrepo_filt_git")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch old-repo")]),s._v("\nwarning: no common commits\nremote: Enumerating objects: 29, done.\nremote: Counting objects: 100% (29/29), done.\nremote: Compressing objects: 100% (17/17), done.\nremote: Total 29 (delta 2), reused 0 (delta 0)\nUnpacking objects: 100% (29/29), done.\nFrom ../oldrepo_filt_git\n * [new branch]      master     -> old-repo/master\n * [new branch]      testbranch -> old-repo/testbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-head old-repo/master")]),s._v("\nBranch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'oldrepo-head'")]),s._v(" set up to track remote branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'old-repo'")]),s._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch oldrepo-root $(git log oldrepo-head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --reverse")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=%H | head"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%T %ct'")]),s._v(" ..oldrepo-head > /tmp/hashlist\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master new-master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --strategy")]),s._v("-option=theirs oldrepo-root")]),s._v("\n[new-master 427cf77] added a.txt\n Author: tester <tester@example.com>\n Date: Mon May 27 14:31:10 2019 +0200\n 1 file changed, 1 insertion(+)\n create mode 100644 a.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")])]),s._v("\n* 427cf77 (HEAD -> new-master) added a.txt\n* 8e99c2d Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --preserve")]),s._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" new-master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --root")]),s._v(" oldrepo-head")]),s._v("\nSuccessfully rebased and updated refs/heads/oldrepo-head.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit 61fbe54721a9432e91e48917ed036f55da4105a4 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 f8e8f8a\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:57:00 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n| * commit f8e8f8aedaa7bc999bdfdd49542c9ee04edb770c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:58 2019 +0200\n| |\n| |     change 5 made\n| |\n| * commit b084029040d6596e0795e7567b2684dc59c02241\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:56 2019 +0200\n| |\n| |     change 4 made\n| |\n| * commit b62dabca3a46efbe76edb10591935db136f74aaa\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:54 2019 +0200\n| |\n| |     change 3 made\n| |\n| * commit 252f3e9697b87b4f59cd0a74681ef25401340fcf\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Tue May 28 12:56:51 2019 +0200\n| |\n| |     change 2 made\n| |\n| * commit c382c8a713489ca0e5dc106bed29fdce379952b0\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Tue May 28 12:56:49 2019 +0200\n|\n|       change 1 made\n|\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(fgrep -m 1 $(git log -1 --pretty=%T $GIT_COMMIT) /tmp/hashlist | cut -d\" \" -f2)'")]),s._v(" new-master..oldrepo-head\nRewrite 61fbe54721a9432e91e48917ed036f55da4105a4 (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master..oldrepo-head\nRewrite f2b2385d85c74dbf0cbf8fabc02ec30cb50d8f2a (3/6) (1 seconds passed, remaining 1 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/oldrepo-head'")]),s._v(" was rewritten\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" 427cf77417a\nYou must specify a ref to rewrite.\n\nsd@DESKTOP-RO11QOC MSYS /c/Users/sd/AppData/Local/Temp/newrepo_git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" new-master\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (2/2) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/new-master'")]),s._v(" was rewritten\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8 (HEAD -> oldrepo-head)\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| |\n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| |\n...\n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (refs/original/refs/heads/new-master)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" oldrepo-head master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" oldrepo-root")]),s._v("\nDeleted branch oldrepo-root (was ea0a32d).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" new-master")]),s._v("\nDeleted branch new-master (was 4ac225e).\n$ rm .git/refs/original/refs/heads/new-master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote remove old-repo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch tmp 427cf774")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --env")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export GIT_COMMITTER_DATE=$(git log -1 --pretty=%at $GIT_COMMIT)'")]),s._v(" tmp^..tmp\nRewrite 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1 (1/1) (0 seconds passed, remaining 0 predicted)\nRef "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/tmp'")]),s._v(" was rewritten\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller tmp")]),s._v("\n* commit 4ac225e308e280e3a96be0168c6e9dece44d4979 (tmp)\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Mon May 27 14:31:10 2019 +0200\n|\n|     added a.txt\n|\n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n|\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" tmp")]),s._v("\nDeleted branch tmp (was 4ac225e).\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stat")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --pretty")]),s._v("=fuller")]),s._v("\n*   commit cdaa4b82f3833770a9051a2490487548603e3af8\n|\\  Merge: 427cf77 9bfc6cd\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:10 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:10 2019 +0200\n| | \n| |     Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'testbranch'")]),s._v("\n| | \n| * commit 9bfc6cde58be9102102f839e5cc0fe8f25f0f78c\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:32:00 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:32:00 2019 +0200\n| | \n| |     change 5 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 485ae0f50054610b6a41098fb695e59d194cc856\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:50 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:50 2019 +0200\n| | \n| |     change 4 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit b6804b6e8e313b5c4766568a287f0785503e3a11\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:40 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:40 2019 +0200\n| | \n| |     change 3 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 8b463423d2a99929a6a248e38ba1368a56d3769d\n| | Author:     tester <tester@example.com>\n| | AuthorDate: Mon May 27 14:31:30 2019 +0200\n| | Commit:     bob <bob@example.com>\n| | CommitDate: Mon May 27 14:31:30 2019 +0200\n| | \n| |     change 2 made\n| | \n| |  a.txt     | 1 +\n| |  aa/aa.txt | 1 +\n| |  aa/ab.txt | 1 +\n| |  3 files changed, 3 insertions(+)\n| | \n| * commit 3bc0bed30ebea1498a15711825b2ea8347cc374d\n|/  Author:     tester <tester@example.com>\n|   AuthorDate: Mon May 27 14:31:20 2019 +0200\n|   Commit:     bob <bob@example.com>\n|   CommitDate: Mon May 27 14:31:20 2019 +0200\n|   \n|       change 1 made\n|   \n|    a.txt     | 1 +\n|    aa/aa.txt | 1 +\n|    aa/ab.txt | 1 +\n|    3 files changed, 3 insertions(+)\n| \n* commit 427cf77417a2406db5dd6a0e9bd4fb60542f2ee1\n| Author:     tester <tester@example.com>\n| AuthorDate: Mon May 27 14:31:10 2019 +0200\n| Commit:     bob <bob@example.com>\n| CommitDate: Tue May 28 12:55:43 2019 +0200\n| \n|     added a.txt\n| \n|  a.txt | 1 +\n|  1 file changed, 1 insertion(+)\n| \n* commit 8e99c2d71048b4999d012b33d34386351d6d0fef\n  Author:     bob <bob@example.com>\n  AuthorDate: Mon May 27 14:31:00 2019 +0200\n  Commit:     bob <bob@example.com>\n  CommitDate: Mon May 27 14:31:00 2019 +0200\n\n      Initial commit by Bob\n\n   README | 1 +\n   1 file changed, 1 insertion(+)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br"),e("span",{staticClass:"line-number"},[s._v("144")]),e("br"),e("span",{staticClass:"line-number"},[s._v("145")]),e("br"),e("span",{staticClass:"line-number"},[s._v("146")]),e("br"),e("span",{staticClass:"line-number"},[s._v("147")]),e("br"),e("span",{staticClass:"line-number"},[s._v("148")]),e("br"),e("span",{staticClass:"line-number"},[s._v("149")]),e("br"),e("span",{staticClass:"line-number"},[s._v("150")]),e("br"),e("span",{staticClass:"line-number"},[s._v("151")]),e("br"),e("span",{staticClass:"line-number"},[s._v("152")]),e("br"),e("span",{staticClass:"line-number"},[s._v("153")]),e("br"),e("span",{staticClass:"line-number"},[s._v("154")]),e("br"),e("span",{staticClass:"line-number"},[s._v("155")]),e("br"),e("span",{staticClass:"line-number"},[s._v("156")]),e("br"),e("span",{staticClass:"line-number"},[s._v("157")]),e("br"),e("span",{staticClass:"line-number"},[s._v("158")]),e("br"),e("span",{staticClass:"line-number"},[s._v("159")]),e("br"),e("span",{staticClass:"line-number"},[s._v("160")]),e("br"),e("span",{staticClass:"line-number"},[s._v("161")]),e("br"),e("span",{staticClass:"line-number"},[s._v("162")]),e("br"),e("span",{staticClass:"line-number"},[s._v("163")]),e("br"),e("span",{staticClass:"line-number"},[s._v("164")]),e("br"),e("span",{staticClass:"line-number"},[s._v("165")]),e("br"),e("span",{staticClass:"line-number"},[s._v("166")]),e("br"),e("span",{staticClass:"line-number"},[s._v("167")]),e("br"),e("span",{staticClass:"line-number"},[s._v("168")]),e("br"),e("span",{staticClass:"line-number"},[s._v("169")]),e("br"),e("span",{staticClass:"line-number"},[s._v("170")]),e("br"),e("span",{staticClass:"line-number"},[s._v("171")]),e("br"),e("span",{staticClass:"line-number"},[s._v("172")]),e("br"),e("span",{staticClass:"line-number"},[s._v("173")]),e("br"),e("span",{staticClass:"line-number"},[s._v("174")]),e("br"),e("span",{staticClass:"line-number"},[s._v("175")]),e("br"),e("span",{staticClass:"line-number"},[s._v("176")]),e("br"),e("span",{staticClass:"line-number"},[s._v("177")]),e("br"),e("span",{staticClass:"line-number"},[s._v("178")]),e("br"),e("span",{staticClass:"line-number"},[s._v("179")]),e("br"),e("span",{staticClass:"line-number"},[s._v("180")]),e("br"),e("span",{staticClass:"line-number"},[s._v("181")]),e("br"),e("span",{staticClass:"line-number"},[s._v("182")]),e("br"),e("span",{staticClass:"line-number"},[s._v("183")]),e("br"),e("span",{staticClass:"line-number"},[s._v("184")]),e("br"),e("span",{staticClass:"line-number"},[s._v("185")]),e("br"),e("span",{staticClass:"line-number"},[s._v("186")]),e("br"),e("span",{staticClass:"line-number"},[s._v("187")]),e("br"),e("span",{staticClass:"line-number"},[s._v("188")]),e("br"),e("span",{staticClass:"line-number"},[s._v("189")]),e("br"),e("span",{staticClass:"line-number"},[s._v("190")]),e("br"),e("span",{staticClass:"line-number"},[s._v("191")]),e("br"),e("span",{staticClass:"line-number"},[s._v("192")]),e("br"),e("span",{staticClass:"line-number"},[s._v("193")]),e("br"),e("span",{staticClass:"line-number"},[s._v("194")]),e("br"),e("span",{staticClass:"line-number"},[s._v("195")]),e("br"),e("span",{staticClass:"line-number"},[s._v("196")]),e("br"),e("span",{staticClass:"line-number"},[s._v("197")]),e("br"),e("span",{staticClass:"line-number"},[s._v("198")]),e("br"),e("span",{staticClass:"line-number"},[s._v("199")]),e("br"),e("span",{staticClass:"line-number"},[s._v("200")]),e("br"),e("span",{staticClass:"line-number"},[s._v("201")]),e("br"),e("span",{staticClass:"line-number"},[s._v("202")]),e("br"),e("span",{staticClass:"line-number"},[s._v("203")]),e("br"),e("span",{staticClass:"line-number"},[s._v("204")]),e("br"),e("span",{staticClass:"line-number"},[s._v("205")]),e("br"),e("span",{staticClass:"line-number"},[s._v("206")]),e("br"),e("span",{staticClass:"line-number"},[s._v("207")]),e("br"),e("span",{staticClass:"line-number"},[s._v("208")]),e("br"),e("span",{staticClass:"line-number"},[s._v("209")]),e("br"),e("span",{staticClass:"line-number"},[s._v("210")]),e("br"),e("span",{staticClass:"line-number"},[s._v("211")]),e("br"),e("span",{staticClass:"line-number"},[s._v("212")]),e("br"),e("span",{staticClass:"line-number"},[s._v("213")]),e("br"),e("span",{staticClass:"line-number"},[s._v("214")]),e("br"),e("span",{staticClass:"line-number"},[s._v("215")]),e("br"),e("span",{staticClass:"line-number"},[s._v("216")]),e("br"),e("span",{staticClass:"line-number"},[s._v("217")]),e("br"),e("span",{staticClass:"line-number"},[s._v("218")]),e("br"),e("span",{staticClass:"line-number"},[s._v("219")]),e("br"),e("span",{staticClass:"line-number"},[s._v("220")]),e("br"),e("span",{staticClass:"line-number"},[s._v("221")]),e("br"),e("span",{staticClass:"line-number"},[s._v("222")]),e("br"),e("span",{staticClass:"line-number"},[s._v("223")]),e("br"),e("span",{staticClass:"line-number"},[s._v("224")]),e("br"),e("span",{staticClass:"line-number"},[s._v("225")]),e("br"),e("span",{staticClass:"line-number"},[s._v("226")]),e("br"),e("span",{staticClass:"line-number"},[s._v("227")]),e("br"),e("span",{staticClass:"line-number"},[s._v("228")]),e("br"),e("span",{staticClass:"line-number"},[s._v("229")]),e("br"),e("span",{staticClass:"line-number"},[s._v("230")]),e("br"),e("span",{staticClass:"line-number"},[s._v("231")]),e("br"),e("span",{staticClass:"line-number"},[s._v("232")]),e("br"),e("span",{staticClass:"line-number"},[s._v("233")]),e("br"),e("span",{staticClass:"line-number"},[s._v("234")]),e("br"),e("span",{staticClass:"line-number"},[s._v("235")]),e("br"),e("span",{staticClass:"line-number"},[s._v("236")]),e("br"),e("span",{staticClass:"line-number"},[s._v("237")]),e("br"),e("span",{staticClass:"line-number"},[s._v("238")]),e("br"),e("span",{staticClass:"line-number"},[s._v("239")]),e("br"),e("span",{staticClass:"line-number"},[s._v("240")]),e("br"),e("span",{staticClass:"line-number"},[s._v("241")]),e("br"),e("span",{staticClass:"line-number"},[s._v("242")]),e("br"),e("span",{staticClass:"line-number"},[s._v("243")]),e("br"),e("span",{staticClass:"line-number"},[s._v("244")]),e("br"),e("span",{staticClass:"line-number"},[s._v("245")]),e("br"),e("span",{staticClass:"line-number"},[s._v("246")]),e("br"),e("span",{staticClass:"line-number"},[s._v("247")]),e("br"),e("span",{staticClass:"line-number"},[s._v("248")]),e("br"),e("span",{staticClass:"line-number"},[s._v("249")]),e("br"),e("span",{staticClass:"line-number"},[s._v("250")]),e("br"),e("span",{staticClass:"line-number"},[s._v("251")]),e("br"),e("span",{staticClass:"line-number"},[s._v("252")]),e("br"),e("span",{staticClass:"line-number"},[s._v("253")]),e("br"),e("span",{staticClass:"line-number"},[s._v("254")]),e("br"),e("span",{staticClass:"line-number"},[s._v("255")]),e("br"),e("span",{staticClass:"line-number"},[s._v("256")]),e("br"),e("span",{staticClass:"line-number"},[s._v("257")]),e("br"),e("span",{staticClass:"line-number"},[s._v("258")]),e("br"),e("span",{staticClass:"line-number"},[s._v("259")]),e("br"),e("span",{staticClass:"line-number"},[s._v("260")]),e("br"),e("span",{staticClass:"line-number"},[s._v("261")]),e("br"),e("span",{staticClass:"line-number"},[s._v("262")]),e("br"),e("span",{staticClass:"line-number"},[s._v("263")]),e("br"),e("span",{staticClass:"line-number"},[s._v("264")]),e("br"),e("span",{staticClass:"line-number"},[s._v("265")]),e("br"),e("span",{staticClass:"line-number"},[s._v("266")]),e("br"),e("span",{staticClass:"line-number"},[s._v("267")]),e("br"),e("span",{staticClass:"line-number"},[s._v("268")]),e("br"),e("span",{staticClass:"line-number"},[s._v("269")]),e("br"),e("span",{staticClass:"line-number"},[s._v("270")]),e("br"),e("span",{staticClass:"line-number"},[s._v("271")]),e("br"),e("span",{staticClass:"line-number"},[s._v("272")]),e("br"),e("span",{staticClass:"line-number"},[s._v("273")]),e("br"),e("span",{staticClass:"line-number"},[s._v("274")]),e("br"),e("span",{staticClass:"line-number"},[s._v("275")]),e("br"),e("span",{staticClass:"line-number"},[s._v("276")]),e("br"),e("span",{staticClass:"line-number"},[s._v("277")]),e("br"),e("span",{staticClass:"line-number"},[s._v("278")]),e("br"),e("span",{staticClass:"line-number"},[s._v("279")]),e("br"),e("span",{staticClass:"line-number"},[s._v("280")]),e("br"),e("span",{staticClass:"line-number"},[s._v("281")]),e("br"),e("span",{staticClass:"line-number"},[s._v("282")]),e("br"),e("span",{staticClass:"line-number"},[s._v("283")]),e("br"),e("span",{staticClass:"line-number"},[s._v("284")]),e("br"),e("span",{staticClass:"line-number"},[s._v("285")]),e("br"),e("span",{staticClass:"line-number"},[s._v("286")]),e("br"),e("span",{staticClass:"line-number"},[s._v("287")]),e("br"),e("span",{staticClass:"line-number"},[s._v("288")]),e("br"),e("span",{staticClass:"line-number"},[s._v("289")]),e("br"),e("span",{staticClass:"line-number"},[s._v("290")]),e("br"),e("span",{staticClass:"line-number"},[s._v("291")]),e("br"),e("span",{staticClass:"line-number"},[s._v("292")]),e("br"),e("span",{staticClass:"line-number"},[s._v("293")]),e("br"),e("span",{staticClass:"line-number"},[s._v("294")]),e("br"),e("span",{staticClass:"line-number"},[s._v("295")]),e("br"),e("span",{staticClass:"line-number"},[s._v("296")]),e("br"),e("span",{staticClass:"line-number"},[s._v("297")]),e("br"),e("span",{staticClass:"line-number"},[s._v("298")]),e("br"),e("span",{staticClass:"line-number"},[s._v("299")]),e("br"),e("span",{staticClass:"line-number"},[s._v("300")]),e("br"),e("span",{staticClass:"line-number"},[s._v("301")]),e("br"),e("span",{staticClass:"line-number"},[s._v("302")]),e("br"),e("span",{staticClass:"line-number"},[s._v("303")]),e("br"),e("span",{staticClass:"line-number"},[s._v("304")]),e("br"),e("span",{staticClass:"line-number"},[s._v("305")]),e("br"),e("span",{staticClass:"line-number"},[s._v("306")]),e("br"),e("span",{staticClass:"line-number"},[s._v("307")]),e("br"),e("span",{staticClass:"line-number"},[s._v("308")]),e("br"),e("span",{staticClass:"line-number"},[s._v("309")]),e("br"),e("span",{staticClass:"line-number"},[s._v("310")]),e("br"),e("span",{staticClass:"line-number"},[s._v("311")]),e("br"),e("span",{staticClass:"line-number"},[s._v("312")]),e("br"),e("span",{staticClass:"line-number"},[s._v("313")]),e("br"),e("span",{staticClass:"line-number"},[s._v("314")]),e("br"),e("span",{staticClass:"line-number"},[s._v("315")]),e("br"),e("span",{staticClass:"line-number"},[s._v("316")]),e("br"),e("span",{staticClass:"line-number"},[s._v("317")]),e("br"),e("span",{staticClass:"line-number"},[s._v("318")]),e("br"),e("span",{staticClass:"line-number"},[s._v("319")]),e("br"),e("span",{staticClass:"line-number"},[s._v("320")]),e("br"),e("span",{staticClass:"line-number"},[s._v("321")]),e("br"),e("span",{staticClass:"line-number"},[s._v("322")]),e("br"),e("span",{staticClass:"line-number"},[s._v("323")]),e("br"),e("span",{staticClass:"line-number"},[s._v("324")]),e("br"),e("span",{staticClass:"line-number"},[s._v("325")]),e("br"),e("span",{staticClass:"line-number"},[s._v("326")]),e("br"),e("span",{staticClass:"line-number"},[s._v("327")]),e("br"),e("span",{staticClass:"line-number"},[s._v("328")]),e("br"),e("span",{staticClass:"line-number"},[s._v("329")]),e("br"),e("span",{staticClass:"line-number"},[s._v("330")]),e("br"),e("span",{staticClass:"line-number"},[s._v("331")]),e("br"),e("span",{staticClass:"line-number"},[s._v("332")]),e("br"),e("span",{staticClass:"line-number"},[s._v("333")]),e("br"),e("span",{staticClass:"line-number"},[s._v("334")]),e("br"),e("span",{staticClass:"line-number"},[s._v("335")]),e("br"),e("span",{staticClass:"line-number"},[s._v("336")]),e("br"),e("span",{staticClass:"line-number"},[s._v("337")]),e("br"),e("span",{staticClass:"line-number"},[s._v("338")]),e("br"),e("span",{staticClass:"line-number"},[s._v("339")]),e("br"),e("span",{staticClass:"line-number"},[s._v("340")]),e("br"),e("span",{staticClass:"line-number"},[s._v("341")]),e("br"),e("span",{staticClass:"line-number"},[s._v("342")]),e("br"),e("span",{staticClass:"line-number"},[s._v("343")]),e("br"),e("span",{staticClass:"line-number"},[s._v("344")]),e("br"),e("span",{staticClass:"line-number"},[s._v("345")]),e("br"),e("span",{staticClass:"line-number"},[s._v("346")]),e("br"),e("span",{staticClass:"line-number"},[s._v("347")]),e("br"),e("span",{staticClass:"line-number"},[s._v("348")]),e("br"),e("span",{staticClass:"line-number"},[s._v("349")]),e("br"),e("span",{staticClass:"line-number"},[s._v("350")]),e("br"),e("span",{staticClass:"line-number"},[s._v("351")]),e("br"),e("span",{staticClass:"line-number"},[s._v("352")]),e("br"),e("span",{staticClass:"line-number"},[s._v("353")]),e("br"),e("span",{staticClass:"line-number"},[s._v("354")]),e("br"),e("span",{staticClass:"line-number"},[s._v("355")]),e("br"),e("span",{staticClass:"line-number"},[s._v("356")]),e("br"),e("span",{staticClass:"line-number"},[s._v("357")]),e("br"),e("span",{staticClass:"line-number"},[s._v("358")]),e("br"),e("span",{staticClass:"line-number"},[s._v("359")]),e("br"),e("span",{staticClass:"line-number"},[s._v("360")]),e("br"),e("span",{staticClass:"line-number"},[s._v("361")]),e("br"),e("span",{staticClass:"line-number"},[s._v("362")]),e("br"),e("span",{staticClass:"line-number"},[s._v("363")]),e("br"),e("span",{staticClass:"line-number"},[s._v("364")]),e("br"),e("span",{staticClass:"line-number"},[s._v("365")]),e("br"),e("span",{staticClass:"line-number"},[s._v("366")]),e("br"),e("span",{staticClass:"line-number"},[s._v("367")]),e("br"),e("span",{staticClass:"line-number"},[s._v("368")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How do I change the date of all commits in a branch to now?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52028045",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch -f --env-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'GIT_COMMITTER_DATE="`date`"; GIT_AUTHOR_DATE="`date`"\'')]),s._v("\ngit push -f origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Running git filter-branch subdirectory-filter to also remove get rid of other subdirectories history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39980849",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("path=android/\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" |\nwhile read ref; do\n  if test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git rev-list --count "')]),s._v("$ref"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -- "')]),s._v("$path"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v(" = 0; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete $ref"')]),s._v("\n  fi\ndone | git update-ref --stdin\n\ngit filter-branch -f --prune-empty --tag-name-filter cat --subdirectory-filter android -- --all\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Git filter-branch: keep only commits in subdir")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51542139",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1 Remove everything from root-tree (from the new revision)")]),s._v("\ngit rm --ignore-unmatch --cached -qr -- .\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2 Restore challenge_gpsr sub-tree (from original revision)")]),s._v('\ngit reset -q \\$GIT_COMMIT -- challenge_gpsr    \n\ngit filter-branch -f --index-filter " \\\n    git reset -q 189bd987 -- . && \\\n    git reset -q \\$GIT_COMMIT -- challenge_gpsr \\\n'),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" --prune-empty -- "')]),s._v('robocup" 189bd987..HEAD\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Two remote repositories, different forlders")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38088147",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b nameOfPublicBranch\n// Create a new branch where you want to start to filter\n\ngit filter-branch -f --subdirectory-filter public\n// This filters your branch down to commits that modified public (and below)\n\ngit push repoB nameOfPublicBranch\n// now export to repoB just this stuff that you wanted on your branch nameOfPublicBranch\n\ngit checkout <yourOldBranchName>\n// get back to your old branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Git change user's credentials in past commits without changing the history (date of commits)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64854924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('git filter-branch -f --env-filter "\n GIT_AUTHOR_NAME='),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newName'")]),s._v("\n GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v("\n GIT_COMMITER_NAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newName'")]),s._v("\n GIT_COMMITER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v('\n" HEAD\n\ngit filter-branch -f --env-filter "\nif test '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_AUTHOR_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'currentWrongEmail'")]),s._v("\nthen\n    GIT_AUTHOR_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v("\nfi\nif test "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMITTER_EMAIL"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'currentWrongEmail'")]),s._v("\nthen\n    GIT_COMMITTER_EMAIL="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'newEmail'")]),s._v('\nfi\n" HEAD\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to keep the git commit history of a nested subdirectory when creating a submodule?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34664914",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone https://github.com/my-repo/ProjectA.git\ncd ProjectA\ngit remote rm origin\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shopt -s dotglob nullglob; test -d FrameworkB && mv FrameworkB/* . || :'")]),s._v(" HEAD\n\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'shopt -s dotglob nullglob; test -d FrameworkB/FrameworkB && mv FrameworkB/FrameworkB/* FrameworkB/. || :'")]),s._v(" HEAD\n\nrm -r -f ProjectA/\nrm -r -f ProjectA.xcodeproj\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Remove the project files not associated with the shared framework."')]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to cut some files from earlier commits in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11217206",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -f passwords.txt'")]),s._v(" HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to fix branches of partial directory structure in SVN to Git migration")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15481085",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Initial situation\nproject1/\nproject2/\nproject3/\nproject4/\n\nproject3/\n\n.project\nsrc/\ntest/\n\n▲ Step 1: Rewrite branch to move all contents into subdirectory (if needed)\ngit filter-branch --index-filter \\\n    'git ls-files -s | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s-\\t\\"*-&project3/-"')]),s._v(" |\n        GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n            git update-index --index-info &&\n     mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE"')]),s._v("' \\\n     master..project3-production-branch\n\n▲ Step 2: Rewrite branch to restore other projects\nbranch="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project3-production-branch"')]),s._v("\nparent=`git merge-base $branch master` # or replace master with trunk if needed\npaths="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project1 project2 project4"')]),s._v("\ngit filter-branch -f --index-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reset -q $parent -- $paths"')]),s._v(" --tag-name-filter cat -- \\\n$parent..$branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h2",{attrs:{id:"force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force"}},[s._v("#")]),s._v(" 🔹 --force")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: New repo with copied history of only currently tracked files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 45    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17909526",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Delete everything and restore what you want\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for unix")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files > keep-these.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v('\n  "git rm  --ignore-unmatch --cached -qr . ; \\\n  cat $PWD/keep-these.txt | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" | xargs -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(' git reset -q \\$GIT_COMMIT --" \\\n  --prune-empty --tag-name-filter cat -- --all\n\n'),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for macOS")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files > keep-these.txt")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v('\n  "git rm  --ignore-unmatch --cached -qr . ; \\\n  cat $PWD/keep-these.txt | tr '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(' | xargs -0 git reset -q \\$GIT_COMMIT --" \\\n  --prune-empty --tag-name-filter cat -- --all\n\n▲ Cleanup steps\n$ rm -rf .git/refs/original/\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# optional extra gc. Slow and may not further-reduce the repo size")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --aggressive")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ $GIT_COMMIT?\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo current commit is \\$GIT_COMMIT"')]),s._v("\nRewrite d832800a85be9ef4ee6fda2fe4b3b6715c8bb860 (1/xxxxx)current commit is d832800a85be9ef4ee6fda2fe4b3b6715c8bb860\nRewrite cd86555549ac17aeaa28abecaf450b49ce5ae663 (2/xxxxx)current commit is cd86555549ac17aeaa28abecaf450b49ce5ae663\n...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to remove all traces of a single file in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21213019",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --force --index-filter \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch Rakefile'")]),s._v(" \\\n  --prune-empty --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to permanently delete a commit from Git's history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18014262",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Delete the file from a checkout\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --force")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --index")]),s._v("-filter \\")]),s._v("\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch 200MB-filename'")]),s._v(" \\\n  --prune-empty --tag-name-filter cat -- --all\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")])]),s._v("\n\n$ rm -rf .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ Recovering space on the git server\n$ ssh git server\n$ cd /my/project/repo.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n▲ Teammates\n▲ User has no local commits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset origin/master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -hard")])]),s._v("\n\n▲ User does have local commits\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" origin/master")]),s._v("\n\n▲ User cleanup\n$ rm -rf .git/refs/original/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Rename directory throughout Git commit history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26642892",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --force --tree-filter \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mkdir -p foo/bar; mv baz foo/bar/ || true'")]),s._v(" \\\n    --tag-name-filter cat -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to remove GitHub commit along with it's history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44978525",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch --force --index-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch PATH-TO-YOUR-CONFIG-FILE'")]),s._v(" \\\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--prune-empty --tag-name-filter cat -- --all")]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YOUR-CONFIG-FILE"')]),s._v(" >> .gitignore\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add YOUR-CONFIG-FILE to .gitignore"')]),s._v("\ngit push origin --force --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I make a Git commit in the past?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 231    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[s._v("git hash-object")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3898842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Specifying Dates Other Than “now”\nGit internal format = <unix timestamp> <time zone offset>, e.g.  1112926393 +0200\nRFC 2822            = e.g. Thu, 07 Apr 2005 22:13:13 +0200\nISO 8601            = e.g. 2005-04-07T22:13:13\n\n▲ Inserting a File Into a Single ref History\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("---A---B---C---o---o---o   master")]),s._v("\n\ngit checkout master\ngit checkout A~0\ngit add path/to/file\ngit commit --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'whenever'")]),s._v("\ngit tag ,new-commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete me later'")]),s._v("\ngit checkout -\ngit rebase --onto ,new-commit A\ngit tag -d ,new-commit\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v('---A---N                      (was ",new-commit", but we delete the tag)')]),s._v("\n        \\\n         B"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'---C'")]),s._v("---o---o---o   master\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("---A'---B'---C'---o---o---o   master")]),s._v("\n\nB---C---o---o---o   master\n\ngit checkout master\ngit checkout --orphan new-root\ngit rm -rf .\ngit add path/to/file\nGIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'whenever'")]),s._v(" git commit\ngit checkout -\ngit rebase --root --onto new-root\ngit branch -d new-root\n\nN                       (was new-root, but we deleted it)\n \\\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'---C'")]),s._v("---o---o---o   master\n\n▲ Inserting a File Into a Multi-ref History\nnew_file=$(git hash-object -w path/to/file)\ngit filter-branch \\\n  --index-filter \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git update-index --add --cacheinfo 100644 '")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$new_file"')]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' path/to/file'")]),s._v(" \\\n  --tag-name-filter cat \\\n  -- --all\ngit reset --hard\n\nfile_path=path/to/file\nbefore_commit=$(git rev-parse --verify A)\nfile_blob=$(git hash-object -w "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file_path"')]),s._v(")\ngit filter-branch \\\n  --index-filter '\n\n    if x=$(git rev-list -1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" --not "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"$before_commit\"'")]),s._v(") &&\n       test -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$x"')]),s._v("; then\n         git update-index --add --cacheinfo 100644 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"$file_blob $file_path\"'")]),s._v("\n    fi\n\n  ' \\\n  --tag-name-filter cat \\\n  -- --all\ngit reset --hard\n\nfile_path=path/to/file\nbefore_commit=$(git rev-parse --verify A)\n\ngit checkout master\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$before_commit"')]),s._v("\ngit add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file_path"')]),s._v("\ngit commit --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'whenever'")]),s._v("\nnew_commit=$(git rev-parse --verify HEAD)\nfile_blob=$(git rev-parse --verify HEAD:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file_path"')]),s._v(")\ngit checkout -\n\ngit filter-branch \\\n  --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sed -e s/$before_commit/$new_commit/g"')]),s._v(" \\\n  --index-filter '\n\n    if x=$(git rev-list -1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_COMMIT"')]),s._v(" --not "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"$new_commit\"'")]),s._v(") &&\n       test -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$x"')]),s._v("; then\n         git update-index --add --cacheinfo 100644 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\"$file_blob $file_path\"'")]),s._v("\n    fi\n\n  ' \\\n  --tag-name-filter cat \\\n  -- --all\ngit reset --hard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I prepend history to a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[s._v("git hash-object")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1547490",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Finding commit to attach (root of short history)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --topo")]),s._v("-order master | tail"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --parents")]),s._v(" master | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\n$ TAIL=$(git rev-list --topo-order master | tail -n 1)\n\n▲ Finding a commit to attach to (top of the historical repository)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --verify")]),s._v(" history^0")]),s._v("\n\n$ TOP=$(git rev-parse --verify history^0)\n\n▲ Joining history using a grafts file\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TAIL $TOP"')]),s._v(" >> .git/info/grafts\n\n▲ Rewriting history according to the grafts file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch $TOP..master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n▲ Using refs/replace/ mechanism\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cat-file commit $TAIL > TAIL_COMMIT")]),s._v("\n\n\ntree 2b5bfdf7798569e0b59b16eb9602d5fa572d6038\nauthor Joe R Hacker  1112911993 -0700\ncommitter Joe R Hacker  1112911993 -0700\n\nInitial revision of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project"')]),s._v(", after moving to new repository\n\n\ntree 2b5bfdf7798569e0b59b16eb9602d5fa572d6038\nparent 0f6592e3c2f2fe01f7b717618e570ad8dff0bbb1\nauthor Joe R Hacker  1112911993 -0700\ncommitter Joe R Hacker  1112911993 -0700\n\nInitial revision of "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project"')]),s._v(", after moving to new repository\n\n$ NEW_TAIL=$(git hash-object -t commit -w TAIL_COMMIT)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git replace $TAIL $NEW_TAIL")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Adding ignore files to git repo retroactively")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5718107",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch \\\n    --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git rm --cached --ignore-unmatch filename'")]),s._v(" \\\n    --tag-name-filter cat \\\n    -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Change the root directory of a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11764065",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch \\\n  --subdirectory-filter dir1 \\\n  --tag-name-filter cat \\\n  -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to unshallow a clone without unshallow?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35510771",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout --orphan temp abc123\ngit commit -C abc123   #creates a root commit with the contents and commit message of abc123\ngit replace abc123 temp  #"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tricks"')]),s._v(" git into using the root commit instead of `abc123`\ngit filter-branch -- --all  #rewrites the whole repo\ngit checkout master\ngit branch -D temp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: How to squash all commits between two commits into a single commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43816219",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("       X\n      / \\\n...--B   A--C--D--E   <-- branch\n      \\ /\n       Y\n\n...--B--A--C--D--E   <-- branch\n\n...--B--A'-...\n\n...--B--A"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-C'")]),s._v("-D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-E'")]),s._v("  <-- branch\n\n▲ Using git rebase -i\n...--B--X--Y"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-C'")]),s._v("-D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-E'")]),s._v("   <-- branch\n\n...--B--XY"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-C'")]),s._v("-D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-E'")]),s._v("   <-- branch\n\n▲ Using git replace\n       X\n      / \\\n...--B   A--C--D--E   <-- branch\n     |\\ /\n     | Y\n     \\\n      A'  <-- refs/replace/<complicated-thing>\n\n▲ Making the replacement permanent, shedding X and Y entirely\nE, D, C, A'\n\n       X\n      / \\\n...--B   A--C--D--E   <-- refs/original/refs/heads/branch\n     |\\ /\n     | Y\n     \\\n      A'  <-- refs/replace/<complicated-thing>\n       \\\n        C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("-E'  <-- branch\n\n...--B--A"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-C'")]),s._v("-D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-E'")]),s._v("  <-- branch\n\n▲ The mechanics of filter-branch\ngit filter-branch -- <hash>..branchname\n\n▲ Using cherry-pick\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Rebase entire git branch onto orphan branch while keeping commit tree intact")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47441465",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch <filter-list> <branch-name>\n\nE--F--G--H--A"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B'")]),s._v("-C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("   <-- master\n\n▲ Using git replace\nA--B--C--D   <-- master\n\nE--F--G--H   <-- master-old\n          \\\n           A'   <-- refs/replace/deadcabf001...\n\n▲ Using filter-branch with replacements\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to split a git repository into recent and older commits at a specific commit point, preserving branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48396032",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First create a branch for the historical commits\ngit branch history $TRUNCPOINT\ngit push project-history history:master\ngit push project-history A\n\ngit log --graph --oneline --decorate --all\n* fdc8f84 (A) branchA a1\n| * 7237a3e (HEAD -> master) fourth\n| * 55be55d third\n|/  \n* 26555d8 second\n* 5a68ca2 first\n\n▲ Create a base commit to serve as the parent for the recent commits\nMESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository"')]),s._v("\nBASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n▲ Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\ngit filter-branch -- --all\ngit push project-recent master\ngit push project-recent B\n\ngit log --graph --oneline --decorate --all\n* 2335aeb (B) branchB b2\n* 2bb7ea3 branchB b1\n| * 83c3ae9 (HEAD -> master) sixth\n|/  \n* 25931c5 fifth\n* 1e1e201 fourth\n* a7f3373 Get history from historical repository\n\n▲ Fully reproduced example bash script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nWORKDIR=${PWD}\n\ncreate_repos () {\n    rm -rf repo-split-example repo-split-recent repo-split-history\n    # Create the repo to be split\n    example_repo\n\n    # Create the repo to contain the historical commits\n    HISTREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-history"')]),s._v("\n    mkdir ../repo-split-history\n    cd ../repo-split-history/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-history $HISTREPO\n\n    # Create the repo to contain the recent commits\n    RECEREPO="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file://${WORKDIR}/repo-split-recent"')]),s._v("\n    mkdir ../repo-split-recent\n    cd ../repo-split-recent/\n    git init --bare\n    cd ../repo-split-example\n    git remote add project-recent $RECEREPO\n}\n\nexample_repo () {\n    # Part I: set up a test repo with our example commits\n    mkdir repo-split-example\n    cd repo-split-example/\n    git init\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"We want to split the repository into project-recent and project-history portions, following the instructions at https://git-scm.com/book/en/v2/Git-Tools-Replace., but also including branches."')]),s._v(" > README.md\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"First commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"first"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Second commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"second"')]),s._v("\n\n    git checkout -b A HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch A change."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchA a1"')]),s._v("\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Third commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"third"')]),s._v("\n    TRUNCPARENT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fourth commit."')]),s._v(" >> README.md \n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fourth"')]),s._v("\n    TRUNCPOINT=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fifth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fifth"')]),s._v("\n    FIFTH=`git rev-parse HEAD`\n\n    git checkout -b B HEAD\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b1"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b1"')]),s._v("\n    B1=`git rev-parse HEAD`\n\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Add Branch B change. b2"')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"branchB b2"')]),s._v("\n    B2=`git rev-parse HEAD`\n\n    git checkout master\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Sixth commit."')]),s._v(" >> README.md\n    git add README.md\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"sixth"')]),s._v("\n\n    # Now we have a repo with the requisite structure, ready to be split\n    git log --graph --all --oneline --decorate\n}\n\n\nsplit_repo () {\n    # Part II: Split the git repo into historical and current halves at $TRUNCPOINT\n    # Following guidelines at https://git-scm.com/book/en/v2/Git-Tools-Replace\n\n    # First create a branch for the historical commits\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Branching history at $TRUNCPOINT"')]),s._v("\n    git branch history $TRUNCPOINT\n    git log --graph --oneline --decorate history A\n\n    # Now copy the history repo to the remote HISTREPO repository\n    git push project-history history:master\n    git push project-history A\n\n    # Now to split the repo to get the recent history from TRUNCPOINT to HEAD of master\n    # Create a base commit for the new new recent history\n    MESSAGE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Get history from historical repository at $HISTREPO"')]),s._v("\n    BASECOMMIT=`echo $MESSAGE | git commit-tree ${TRUNCPARENT}^{tree}`\n\n    # Split the repository by grafting the TRUNCPARENT onto BASECOMMIT\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${TRUNCPOINT} ${BASECOMMIT}"')]),s._v(" > .git/info/grafts\n    git filter-branch -- --all\n\n    # Finally, push the current rewritten master and associated branches to a new repository\n    git push project-recent master\n    git push project-recent B\n}\n\ncreate_repos\nsplit_repo \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br"),e("span",{staticClass:"line-number"},[s._v("117")]),e("br"),e("span",{staticClass:"line-number"},[s._v("118")]),e("br"),e("span",{staticClass:"line-number"},[s._v("119")]),e("br"),e("span",{staticClass:"line-number"},[s._v("120")]),e("br"),e("span",{staticClass:"line-number"},[s._v("121")]),e("br"),e("span",{staticClass:"line-number"},[s._v("122")]),e("br"),e("span",{staticClass:"line-number"},[s._v("123")]),e("br"),e("span",{staticClass:"line-number"},[s._v("124")]),e("br"),e("span",{staticClass:"line-number"},[s._v("125")]),e("br"),e("span",{staticClass:"line-number"},[s._v("126")]),e("br"),e("span",{staticClass:"line-number"},[s._v("127")]),e("br"),e("span",{staticClass:"line-number"},[s._v("128")]),e("br"),e("span",{staticClass:"line-number"},[s._v("129")]),e("br"),e("span",{staticClass:"line-number"},[s._v("130")]),e("br"),e("span",{staticClass:"line-number"},[s._v("131")]),e("br"),e("span",{staticClass:"line-number"},[s._v("132")]),e("br"),e("span",{staticClass:"line-number"},[s._v("133")]),e("br"),e("span",{staticClass:"line-number"},[s._v("134")]),e("br"),e("span",{staticClass:"line-number"},[s._v("135")]),e("br"),e("span",{staticClass:"line-number"},[s._v("136")]),e("br"),e("span",{staticClass:"line-number"},[s._v("137")]),e("br"),e("span",{staticClass:"line-number"},[s._v("138")]),e("br"),e("span",{staticClass:"line-number"},[s._v("139")]),e("br"),e("span",{staticClass:"line-number"},[s._v("140")]),e("br"),e("span",{staticClass:"line-number"},[s._v("141")]),e("br"),e("span",{staticClass:"line-number"},[s._v("142")]),e("br"),e("span",{staticClass:"line-number"},[s._v("143")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to move E..H commits into a separate repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13376022",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd /path/to/repo\ngit checkout -b newbranch special\ngit rev-parse E > .git/info/grafts\ngit filter-branch\nrm .git/info/grafts\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Insert a commit without merging")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16255435",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# use a graft to temporarily change the parent of B to be D")]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$SHA_B $SHA_D"')]),s._v(" > .git/info/grafts\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# apply the grafts, changing the SHAs of the commits B...C")]),s._v("\ngit filter-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove old pending commits")]),s._v("\ngit gc\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the no longer needed grafts")]),s._v("\nrm .git/info/grafts\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Starting a new repository from a previous file on another repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40979642",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git filter-branch \\\n  --tree-filter \\\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'find . -path . -o -path path/to/keep.txt -o -print0 | xargs -0 rm -f'")]),s._v(" \\\n  --prune-empty \\\n  --tag-name-filter cat \\\n  -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git split commit before branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59848124",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout B\ngit reset A\n\ngit add files whose changes all belong in B1\ngit add --patch files whose changes partially belong in B1\ngit reset --patch any hunks you added by mistake\ngit commit   # this makes B1\ngit add .    # everything that remains belongs in B2, so add everything\ngit commit   # this makes B2\n\ngit replace --graft C B2\ngit filter-branch -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Migrating two svn paths to a new single git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44700289",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add oldproject ../oldproject\ngit fetch\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commit-id $graft-id"')]),s._v(" >> .git/info/grafts\ngit filter-branch $graft-id..HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);