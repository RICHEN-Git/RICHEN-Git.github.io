(window.webpackJsonp=window.webpackJsonp||[]).push([[113],{540:function(t,e,s){"use strict";s.r(e);var a=s(19),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),s("br")])]),t._v(" "),s("h1",{attrs:{id:"git-replace-create-list-delete-refs-to-replace-objects"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-replace-create-list-delete-refs-to-replace-objects"}},[t._v("#")]),t._v(" 📌 git replace - Create, list, delete refs to replace objects")]),t._v(" "),s("h2",{attrs:{id:"d"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[t._v("#")]),t._v(" 🔹 -d")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Git: Change already pushed commit message using git rebase")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/42253273",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch backup                                 # backup your branch just for safety")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <commit-hash>                        # checkout the commit trying to modify")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --amend")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Change message here'")]),t._v("       # change the author name and mail\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log                                           # copy the new-commit-hash")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git replace <old-commit-hash> <new-commit-hash>   # replace the old commit by new one")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git filter-branch --"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),t._v(" ^<old-commit-hash>     # note ")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'^'")]),t._v(" before hash, rewrite all futures commits based on the replacement                   \n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git replace"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" <old-commit-hash>                  # remove the replacement for cleanliness ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <branch>                             # go to branch HEAD and see if the commit is changed perfectly")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" origin HEAD                           # force push as history is changed.")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("h2",{attrs:{id:"graft"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#graft"}},[t._v("#")]),t._v(" 🔹 --graft")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: How to merge two branches without a common ancestor?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 33    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/1491057",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git replace --graft <your M2 commit hash> <your M1 commit hash>\n\ngit push origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/replace/*'")]),t._v("\ngit fetch origin "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/replace/*:refs/replace/*'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("2. Usage scenario: Merge git repositories without common history, but with common files")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/48930812",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git replace --graft <hash-of-Y> <hash-of-X>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("3. Usage scenario: How to consolidate code from two git repositories with same code in branch, but different history?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/56564889",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git replace --graft X v1.2.0\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("4. Usage scenario: How do I get shared history back after a git repository has been copied?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/51759116",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("<download tarball or zip file from github.com/repo>\n<extract tarball or zip file into directory D>\n$ cd D\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" initial"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"imported from github.com/repo.git"')]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone ssh://example.com/repo.git combine")]),t._v("\n$ cd combine\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add public git://github.com/repo.git")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch public")]),t._v("\n\ngit replace --graft <hash-of-B> <hash-of-R>\n\ngit config --add remote.origin.fetch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'+refs/replace/*:refs/replace/*'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[s("strong",[t._v('5. Usage scenario: "Amend" a git merge commit after the merged branch is changed')])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/59291043",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git replace --graft HEAD HEAD^^ HEAD^2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"format"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[t._v("#")]),t._v(" 🔹 --format")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Merge two Git repos and keep the history")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/42457384",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git checkout master\ngit replace --graft $(git log RepoB/master --format=%H | tail -1) HEAD\ngit replace --graft $(git log RepoA/master --format=%H | tail -1) RepoB/master\ngit reset --hard RepoA/master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h2",{attrs:{id:"none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Creating a GitHub repository with only a subset of a local repository's history")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 69    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/gitk.html"}},[t._v("gitk")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/5724782",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git branch -m master old-master\ngit checkout --orphan master\ngit commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Import clean version of my code"')]),t._v("\n\ngit replace master old-master\n\ngit push github master:master\ngitk --all\n\n\n~$ mkdir newrepo\n~$ cd newrepo\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git init")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git pull ~/oldrepo master")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now newrepo has just the new history; we can set up oldrepo to pull from it")]),t._v("\nnewrepo$ cd ~/oldrepo\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("oldrepo$ git remote add newrepo ~/newrepo")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("oldrepo$ git remote update")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("oldrepo$ git branch"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --set")]),t._v("-upstream master newrepo/master")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... do work in newrepo, commit, push to GitHub, etc.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now if we want to look at the full history in oldrepo:")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("oldrepo$ git pull")]),t._v("\n\n\noldrepo$ mkdir ~/newrepo\noldrepo$ cp $(git ls-files) ~/newrepo\noldrepo$ cd ~/newrepo\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git init")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git add .")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git commit"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Import clean version of my code"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("newrepo$ git fetch ~/oldrepo master:old-master")]),t._v("\n\necho $(git rev-parse master) $(git rev-parse old-master) >> .git/info/grafts\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br")])]),s("p",[s("strong",[t._v("2. Usage scenario: Migrating a git-svn branch to a git branch")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/16266407",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git replace B B'\ngit replace E E'\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);