(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{455:function(s,t,e){"use strict";e.r(t);var n=e(19),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-branch-list-create-or-delete-branches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-branch-list-create-or-delete-branches"}},[s._v("#")]),s._v(" 📌 git branch - List, create, or delete branches")]),s._v(" "),e("h2",{attrs:{id:"d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[s._v("#")]),s._v(" 🔹 -d")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I delete all Git branches which have been merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3556    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6127884",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ UPDATE:\ngit branch --merged\n\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v("\n\n▲ If you want to skip, you can add it to the egrep command like the following. The branch skip_branch_name will not be deleted.\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev|skip_branch_name)"')]),s._v("\n\ngit branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v(" | xargs git branch -d\n\ngit branch -d branchname\n\n▲ If it's not merged, use:\ngit branch -D branchname\n\ngit push --delete origin branchname\n\ngit push origin :branchname    # for really old git\n\ngit remote prune origin\n\ngit branch -dr branchname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Cleaning up old remote git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1421    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3184742",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r -d origin/devel\n\ngit remote prune origin\n\ngit fetch origin --prune\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to prune local tracking branches that do not exist on remote anymore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1141    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17029936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do you stop tracking a remote branch in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 874    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3046478",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --unset-upstream\n\ngit branch -d -r origin/<remote branch name>\n\ngit config --unset branch.<branch>.remote\ngit config --unset branch.<branch>.merge\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git remote branch deleted, but still it appears in 'branch -a'")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 812    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5096739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/coolbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: What to do with branch after merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 493    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14005910",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d branch1\n\ngit push origin :branch1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How can I archive git branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 469    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1309934",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git tag archive/<branchname> <branchname>\ngit branch -d <branchname>\n\ngit checkout -b <branchname> archive/<branchname>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Deleting a local branch with Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 377    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41492295",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" Test_Branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" Test_Branch")]),s._v("\n\ngit push origin --delete Test_Branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Delete local Git branches after deleting them on the remote repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 192    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17987721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ The quick way\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make sure we keep master\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YOUR_BRANCH_TO_KEEP"')]),s._v(" | xargs -n 1 git branch -d\n\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -Ev "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\*|master|develop|staging)"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make this an alias\nalias gbpurge="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --merged | grep -Ev \"(\\*|master|develop|staging)\" | xargs -n 1 git branch -d'")]),s._v("\n\n. ~/.bashrc\n\n. ~/.zshrc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to remove a branch locally?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 127    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28258756",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('11. Usage scenario: How do I "move" my commits from "no branch" to an actual branch?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 72    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8953246",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch temp\ngit checkout master # or any other branch\ngit merge temp\ngit branch -d temp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Easiest way to replay commits on new git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5341526",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add temp file:///path/to/old/repo/on/your/machine\n\ngit fetch temp\n\ngit checkout temp/master -b wip\n\ngit rebase master\n\ngit checkout master\ngit merge wip\n\ngit branch -d wip\ngit remote rm temp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: remove branches not on remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18380712",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged origin/master | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to merge one remote branch into another remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23337869",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout branch_2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge branch_1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" branch_1")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" foo branch_2")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push remote_name :branch_name")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git-svn: Bulk removing orphaned remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7209462",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|^[[:space:]]*||'")]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^tags/'")]),s._v(" > git-branch-list\n\nfor i in `cat old-branch-list`; do git branch -d -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; rm -rf .git/svn/refs/remotes/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Detach many subdirectories into a new, separate Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fast-import.html"}},[s._v("git fast-import")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2989613",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd origRepo\ngit subtree split -P apps/AAA -b aaa\ngit subtree split -P libs/XXX -b xxx\n\ncd ..\nmkdir aaaRepo\ncd aaaRepo\ngit init\ngit fetch ../origRepo aaa\ngit checkout -b master FETCH_HEAD\n\ncd ..\nmkdir xxxRepo\ncd xxxRepo\ngit init\ngit fetch ../origRepo xxx\ngit checkout -b master FETCH_HEAD\n\ncd ..\nmkdir newRepo\ncd newRepo\ngit init\ngit-stitch-repo ../aaaRepo:apps/AAA ../xxxRepo:libs/XXX | git fast-import\n\ngit checkout master-A\ngit pull . master-B\ngit checkout master\ngit branch -d master-A \ngit branch -d master-B\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How can I make git-svn get rid of remote branches that don't exist anymore?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17157518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r my_branch\nrm -rf .git/svn/refs/remotes/my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Convert a two-parent commit into a single-parent one in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2914026",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# starting with branch-full-reordering at "Corrected GPU float measures"')]),s._v("\ngit merge --squash branch-full-reordering-wo-auxarray-wo-diver\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# go on to make the "improve performance commit"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# starting with branch-full-reordering at "Corrected GPU float measures"')]),s._v("\ngit rebase branch-full-reordering branch-full-reordering-wo-auxarray-wo-diver\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# go on to make the "improve performance commit"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# recreate your topic branch")]),s._v("\ngit branch topic <SHA1 of commit "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Correct pesky bug"')]),s._v(">\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# overkill: you could also specify that as branch-full-reordering^^2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which means the second parent of the [first] parent of the branch tip")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the topic branch like you meant to in the first place :)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~2 means two commits before")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# you could also just use the SHA1 of commit "Corrected GPU float measures"')]),s._v("\ngit rebase branch-full-reordering~2 topic\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the main branch onto the topic")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# the merge will be ignored, so this will just move the "Improve performance" commit    ')]),s._v("\ngit rebase topic branch-full-reordering\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete the topic branch")]),s._v("\ngit branch -d topic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Delete all git branches which have been merged - Fatal: branch name required?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43055670",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v("\n\ngit branch -d\n\ngit branch --merged |\n egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v(" |\n xargs --no-run-if-empty git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v('20. Usage scenario: How to remove a branch named "--orphan"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4024533",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -- --orphan\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Git rewind master branch to specific commit in master's history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17112544",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard f1c6f05\ngit push -f origin master\n\ngit checkout -b bug-fix-branch master\ngit cherry-pick 7661a06\n\ngit checkout master\ngit merge bug-fix-branch\ngit branch -d bug-fix-branch    # optional, maybe not desired\ngit push origin master\n\ngit checkout master\ngit revert f1c6f05..62fe9db\ngit push master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: I accidentally created a git local branch called --track, how can I delete it?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2752290",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -- --track\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: git change origin of a branch (rebase)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10976962",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch tmp C\ngit checkout test\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the current branch (test) on top of tmp")]),s._v("\ngit rebase tmp  \n\ngit branch -d tmp\n\ngit rebase -i tmp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Rebase entire development branch onto new master branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31353842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ First off, if the inital commit on your develop branch is suitable as the initial commit on the new master branch, then you can simply create the master branch there and you're done:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch master <sha1-of-initial-commit-on-develop>")]),s._v("\n\n▲ If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t have that luxury, then you'")]),s._v("ll need to create a new empty commit that will serve as the initial commit of master.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create the new master branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Clear the working directory (we want the initial commit to be empty)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -rf")]),s._v(" .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create the initial commit on master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --allow")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Rebase the entire develop branch onto the new master branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --root")]),s._v(" develop")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch temp <common-ancestor>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout <topic-branch>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase temp")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" temp")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: git subtree push changes back to subtree project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10133695",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("(in Master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git subtree split"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prefix")]),s._v("=lib/slave"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" split-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push <bare Slave repo> split-branch:master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" split-branch")]),s._v("\n$ cd /path/to/Slave/working/copy\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git pull  # (now in Slave)")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How to create a patch without commit in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9810882",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" feature-foo  # create and switch to new branch feature-foo")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# do whatever you need to do")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master          # switch back to the master branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge feature-foo        # merge your change into master (optional)")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" feature-foo    # delete the branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How do I make a copy of a branch for testing rebase?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3365887",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ I think you want to just do:\ngit checkout -b feat-x-exp feat-x\n\n▲ If you mess up, you can go back to the state of the original branch with:\ngit reset --hard feat-x\n\n▲ If your experiment is successful, you can move feat-x to match feat-x-exp and remove the experimental branch:\ngit checkout feat-x\ngit reset --hard feat-x-exp\ngit branch -d feat-x-exp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to delete multiple local branches in Git with keyword?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31248812",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TEST"')]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How do I manage merging and rebasing in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4337457",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Enable rerere")]),s._v("\ngit config --global rerere.enabled 1\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Start a feature branch")]),s._v("\ngit checkout -b feature\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Hack hack hack")]),s._v("\ngit commit\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Practice merge")]),s._v("\ngit merge master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...then throw the merge commit away, the work is saved by rerere")]),s._v("\ngit reset --hard HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Hack hack hack")]),s._v("\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Really merge to master, reusing any saved work from rerere")]),s._v("\ngit checkout master\ngit merge feature\ngit branch -d feature\n\ngit checkout master\ngit merge --squash feature\ngit commit\n\ngit checkout master\ngit merge feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Purging redundant branches from git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21984044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin git@github.com:you/repo.git (fetch)\norigin git@github.com:you/repo.git (push)\nupstream git://github.com/original/repo.git (fetch)\nupstream git://github.com/original/repo.git (push)\n\n▲ List all local branches that are merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\nmy-feature\nmy-other-feature\nmaster\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-other-feature")]),s._v("\n\n▲ Delete local references to remote branches that don't exist\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote prune origin")]),s._v("\n\n▲ Delete remote branches which have been merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\norigin/my-feature\norigin/my-other-feature\nupstream/someone-elses-branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --delete")]),s._v(" origin my-other-feature # equivalent, just different syntax")]),s._v("\n\n▲ Script solution\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# E.g. save as ~/bin/git-cleanup, make executable and have ~/bin in your path")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# call as `git cleanup`")]),s._v("\n\necho -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fetching latest ... "')]),s._v("\ngit fetch origin\ngit fetch upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged local feature branches ... "')]),s._v("\nbranches=`git branch --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^feature ]]; then\n        git branch -d $branch;\n    fi\ndone\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting local refs to remote branches that don\'t exist ... "')]),s._v("\ngit remote prune origin\ngit remote prune upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged remote feature and hotfix branches ... "')]),s._v("\nbranches=`git branch -r --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^(origin)\\/(feature.*$) ]]; then\n        remote=${BASH_REMATCH[1]};\n        branch=${BASH_REMATCH[2]};\n        git push $remote :$branch;\n    fi\ndone\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all finished"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Github forking new version and merging changes with it")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13475935",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add upstream git@github.com:original-user/project-name.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" merge-upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge upstream/master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge merge-upstream")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" merge-upstream")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: How do I back out a series of changes without screwing up history in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7248217",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch temp\ngit reset --hard rev2\ngit reset --soft temp\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),s._v("\ngit branch -d temp\n\ngit reset --hard rev2\ngit reset --soft HEAD@{1}\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),s._v("\n\ngit merge --no-ff -s ours rev2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: How delete a local branch after merging it through a pull request? git-flow, bitbucket, sourcetree")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59886538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# to be executed with your "main" stable branch checked out')]),s._v("\ngit branch -d $(git branch --merged)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How do I batch delete redundant remote git branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15462564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | grep guy/ | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Cherry-pick merge commit failing with empty commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51096757",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout branch-2\ngit branch   moving/branch-2 # new branch to work with\ngit rebase --onto  branch-1 [sha_of_c] moving/branch-2 # move commits of branch ontop of the other \ngit checkout branch-1 \ngit reset --hard  moving/branch-2 # set branch lable to new HEAD\ngit branch -d  moving/branch-2 # clean up\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: git: how to re-order (severely) a commit sequence")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6964283",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout X -- .\ngit add -A\ngit commit -C X\n\ngit checkout -b temp old_branch~5\ngit checkout old_branch -- .\ngit add -A\ngit commit -C old_branch\ngit checkout old_branch~1 -- .\ngit add -A\ngit commit -C old_branch~1\ngit checkout old_branch~2 -- .\ngit add -A\ngit commit -C old_branch~2\ngit checkout old_branch~3 -- .\ngit add -A\ngit commit -C old_branch~3\ngit checkout old_branch~4 -- .\ngit add -A\ngit commit -C old_branch~4\n\ngit push . HEAD:old_branch -f\ngit checkout old_branch\ngit branch -d temp\n\ngit log -5 # to see the new history\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: How to remove remote branch and its commit history from git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26646093",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use\ngit branch -vva\n\n* master                898bfa9 [origin/master] Commit A\n  test                  a2b238b [origin/test] Commit B\n  remotes/origin/HEAD   -> origin/master\n  remotes/origin/master 898bfa9 Commit A\n  remotes/origin/test   a2b238b Commit B\n\n▲ If you see bugs/test, then to delete it:\ngit branch -d bugs/test\n\n▲ If you what you are still seeing is remotes/origin/bugs/test then prune your old remote references:\ngit remote prune origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: How to tell if git branch has been fully merged after squash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57910555",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Illustration, with graph-drawings\nA   <-- master (HEAD)\n\nA   <-- new-branch (HEAD), master\n\nA   <-- master\n \\\n  B   <--  new-branch (HEAD)\n\nA   <-- another-branch (HEAD), master\n \\\n  B   <--  new-branch\n\n  C   <-- another-branch (HEAD)\n /\nA   <-- master\n \\\n  B   <--  new-branch\n\n  C   <-- another-branch\n /\nA   <-- master (HEAD)\n \\\n  B   <--  new-branch\n\n  C   <-- another-branch\n /\nA---D   <-- master (HEAD)\n \\\n  B   <--  new-branch\n\ngit merge --no-ff new-branch\n\nA---D\n \\ /\n  B\n\n$ cat << END > ans\nbla\nblabla\ntest\nEND\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add ans")]),s._v("\n\n  C   <-- another-branch\n /\nA---D--E   <-- master (HEAD)\n \\\n  B   <--  new-branch\n\n▲ Why git branch -d fails\n  C___  <-- another-branch\n /    \\\nA---D--E   <-- master (HEAD)\n \\ /\n  B   <--  new-branch\n\n▲ Commits are history\n...--A--B--C--D--E   <-- branch1 (HEAD)\n            \\\n             F--G--H   <-- branch2\n\n...--A--B--C--D--E--FGH   <-- branch1 (HEAD)\n            \\\n             F--G--H   <-- branch2\n\n...--A--B--C--D--E--FGH   <-- branch1 (HEAD)\n            \\\n             F--G--H   <-- branch2\n                    \\\n                     I--J   <-- branch3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: How do I remove a git branch whose name starts with a unicode character?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63704632",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(echo -e '\\u0096')features/#73_another_branch\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: How can I delete a useless local commit in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32654483",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git tag -d oops\n\ngit branch -d <oops-branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How to merge hot fix on branch to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16199441",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b Jbranch B\ngit cherry-pick J\ngit checkout -B branch I\ngit merge Jbranch\ngit checkout -B master G\ngit merge Jbranch\ngit branch -d Jbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: Undo local commit in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47352468",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reset HEAD^\n\ngit commit --amend\n\ngit checkout --detach\ngit branch -d master\ngit checkout --orphan master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: How to read output of command while still hiding it?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52201874",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GONE_BRANCHES"')]),s._v(" | xargs git branch -d 2>/dev/null\n if [ $? -ne 0 ]; then\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: Git: remove a duplicate commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24279180",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master master_old\ngit checkout -b master 423e3aa\ngit cherry-pick 527795c\ngit branch -d master_old\ngit push --force -u origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Master branch is ahead of a deleted branch by 2 commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48195543",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch -d -r origin/RailsApi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to configure "),e("code",[s._v("git branch -d")]),s._v(" to delete branch only if merged in to current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39862996",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("upstream=$(git rev-parse --abbrev-ref <branch>@{u})\n\ngit branch --unset-upstream <branch>\n\ngit branch -d <branch>\n\ngit branch -u $upstream $1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nunset=0\nupstream=$(git rev-parse --abbrev-ref $1@{u})\nif [ $? -eq 0 ]\nthen\n  unset=1\n  git branch --unset-upstream $1\nfi\n\ngit branch -d $1\n\nif [ $? -ne 0 && unset ]\nthen\n  git branch -u $upstream $1\nfi\n\n[alias]\n    delete-maybe = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"! unset=0; upstream=$(git rev-parse --abbrev-ref $1@{u} 2>/dev/null); [ $? -eq 0 ] && unset=1 && git branch --unset-upstream $1; git branch -d $1; [ $? -ne 0 ] && [ $unset -eq 1 ] && git branch -u $upstream $1; true"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Setting a broken git branch to a detached head")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18447452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f broked HEAD  # or some other valid point\ngit branch -d broked\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: Prune remote branches after fetch refspec changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35938016",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/other-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How to remove commits from parent branch when rebasing?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58746863",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b widget-2 master\ngit cherry-pick feature..widget\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then to apply that to the real widget branch and get rid of the temp")]),s._v("\n\ngit checkout -B widget widget-2\ngit branch -d widget-2\n\ngit checkout --detach master\ngit cherry-pick feature..widget\ngit checkout -B widget HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: How can I insert a commit before rebasing?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11981072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch tmp\n\ngit reset --hard HEAD~1\n\ngit commit\n\ngit cherry-pick tmp\n\ngit branch -d tmp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: How to batch remove local branches in SourceTree, which remote equivalents have been already removed in the origin?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37565165",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch | grep -v develop | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: How to change one piece of code when can't pull master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54928037",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from master")]),s._v("\ngit branch master_backup\n\ngit fetch origin\n\ngit reset --hard origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# work work work")]),s._v("\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hotfix for master'")]),s._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from master")]),s._v("\ngit reset --hard master_backup\n\ngit branch -d master_backup\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: How to add old zipped sources at the beginning of origin trunk?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18194189",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout --orphan newroot\ngit rm -rf .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unzip zip1 to project directory")]),s._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zip1'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# unzip zip2 to project directory")]),s._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'zip2'")]),s._v("\n...\ngit rebase --onto newroot --root master\ngit branch -d newroot\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: Can git split a commit that was upstream using a revert?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19943520",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("A--B--C--D--E--F (master origin/master)\n      ^- WTF Commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" split-n-fix C")]),s._v("\n\nA--B--C--D--E--F (master origin/master)\n      ^ (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git revert C")]),s._v("\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-commit C")]),s._v("\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R--(dirty) (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -p")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit")]),s._v("\n(repeat till finished)\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R--C1--C2--C3--C4 (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge split-n-fix")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" split-n-fix")]),s._v("\n\nA--B--C--D--E--F----------M (master origin/master)\n       \\                 /\n        R--C1--C2--C3--C4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: Git: How to make an experimental branch head/master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3895186",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d master\ngit branch master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: Generating patch consisting all commits from a historic branch, using only the branch name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39888435",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git tag -a 1.1 -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Release 1.1"')]),s._v("\ngit merge release/1.1\ngit branch -d release/1.1\n\ngit log --oneline --merges --grep="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<branch name>"')]),s._v("\ngit show --pretty=raw <commitId>\ngit branch hotfix/1.1 <commitId>^2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"delete"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[s._v("#")]),s._v(" 🔹 --delete")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How would I git remote prune just a specific remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39048117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --delete origin/branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('2. Usage scenario: How to force git into "merge conflict mode"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[s._v("git stash")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43763766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git merge --no-commit\n\ngit checkout bar\ngit reset --mixed HEAD^\n\ngit add -p\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# select the changes to merge")]),s._v("\ngit commit\ngit stash\n\ngit checkout master\ngit merge bar\n\ngit branch --delete bar\ngit stash branch bar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git upstream is gone after removing remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42037676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m Sprint13/Story/XXX-11\n\ngit branch --delete --remotes origin/Sprint/13/Story/XXX-11\n\ngit branch -d Sprint13/Story/XXX-11      # delete local new renamed branch\n\ngit push origin Sprint/13/Story/XXX-11:Sprint13/Story/XXX-11\n\ngit pull origin Sprint13/Story/XXX-11\n\ngit branch -d Sprint/13/Story/XXX-11      # delete old local branch\ngit push origin :Sprint/13/Story/XXX-11   # delete old remote branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h2",{attrs:{id:"d-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d-2"}},[s._v("#")]),s._v(" 🔹 -D")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I delete all Git branches which have been merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3556    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6127884",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ UPDATE:\ngit branch --merged\n\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v("\n\n▲ If you want to skip, you can add it to the egrep command like the following. The branch skip_branch_name will not be deleted.\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev|skip_branch_name)"')]),s._v("\n\ngit branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v(" | xargs git branch -d\n\ngit branch -d branchname\n\n▲ If it's not merged, use:\ngit branch -D branchname\n\ngit push --delete origin branchname\n\ngit push origin :branchname    # for really old git\n\ngit remote prune origin\n\ngit branch -dr branchname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git undo local branch delete")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 837    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4025983",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch branchName <sha1>\n\nuser@MY-PC /C/MyRepo (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" master2")]),s._v("\nDeleted branch master2 (was 130d7ba).    <-- This is the SHA1 we need to restore it!\n\nuser@MY-PC /C/MyRepo (master)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch master2 130d7ba")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git how to rollback a rebase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 260    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41049867",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog")]),s._v("\n\nb710729 HEAD@{0}: rebase: some commit\n5ad7c1c HEAD@{1}: rebase: another commit\ndeafcbf HEAD@{2}: checkout: moving from master to my-branch\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset HEAD@{2}"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout my-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase master")]),s._v("\n// not happy with the result\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" my-branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout my-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" origin/my-branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to get a fresh copy of a branch from the remote repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 138    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5657500",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard origin/master\n\ngit checkout dev\ngit branch -D master\ngit checkout master\n\ngit checkout -b master remotes/origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Deleting a badly named git branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1192194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D -- --track\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: Discard all changes on a diverged local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 88    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2358675",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" phobos")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" phobos origin/phobos")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Can I delete all the local branches except the current one?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 77    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41465769",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v('[alias]\n    # Delete all local branches but master and the current one, only if they are fully merged with master.\n    br-delete-useless = "!f(){\\\n        git branch | grep -v '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(' | grep -v ^* | xargs git branch -d;\\\n    }; f"\n    # Delete all local branches but master and the current one.\n    br-delete-useless-force = "!f(){\\\n        git branch | grep -v '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(' | grep -v ^* | xargs git branch -D;\\\n    }; f"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How can I completely empty the master branch in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 70    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15454661",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D master\ngit checkout -b master <initial commit hash>\n\ngit branch -D master\ngit checkout --orphan master\ngit rm -rf *\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v('9. Usage scenario: How can I delete all git branches which have been "Squash and Merge" via GitHub?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 53    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56026209",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -q master && git for-each-ref refs/heads/ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--format=%(refname:short)"')]),s._v(" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch^{tree}"')]),s._v(") -p $mergeBase -m _)) == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v("* ]] && git branch -D $branch; done\n\ngit checkout -q master && git for-each-ref refs/heads/ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--format=%(refname:short)"')]),s._v(" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch^{tree}"')]),s._v(") -p $mergeBase -m _)) == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v("* ]] && echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch is merged into master and can be deleted"')]),s._v("; done\n\nalias gprunesquashmerged="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'git checkout -q master && git for-each-ref refs/heads/ "--format=%(refname:short)" | while read branch; do mergeBase=$(git merge-base master $branch) && [[ $(git cherry master $(git commit-tree $(git rev-parse "$branch^{tree}") -p $mergeBase -m _)) == "-"* ]] && git branch -D $branch; done\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: git splitting repository by subfolder and retain all old branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20793890",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Short answer\ngit filter-branch --prune-empty --subdirectory-filter subDirectory -- --branches\n\n▲ Walkthrough\ngit clone yourRemote dir1Clone\ncd dir1Clone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move to a headless state")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to delete all branches without issues")]),s._v("\ngit checkout --detach\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete all branches")]),s._v("\ngit branch | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" | xargs git branch -D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get all local branches for remote")]),s._v("\ngit branch --remotes --no-color | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\->"')]),s._v(" | while read remote; do\n    git checkout --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove remote and remote branches")]),s._v("\ngit remote remove origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Isolate dir1 and recreate branches")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --prune-empty removes all commits that do not modify dir1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- --all updates all existing references, which is all existing branches")]),s._v("\ngit filter-branch --prune-empty --subdirectory-filter dir1 -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Remove commits before specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[s._v("git write-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3063486",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b oldroot X\nTREE=`git write-tree`\nCOMMIT=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Killed history"')]),s._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TREE"')]),s._v("`\ngit checkout -b newroot "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$COMMIT"')]),s._v("\ngit rebase --onto newroot oldroot master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# repeat for other branches than master that should use the new initial commit")]),s._v("\ngit checkout master\ngit branch -D oldroot\ngit branch -D newroot\ngit gc # WARNING: if everything's done right, this will actually delete your history from the repo!\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Block a git branch from being pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6644577",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone git@github.com:user/repo.git")]),s._v("\n$ cd repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" secret")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is just a dummy to prevent fast-forward merges"')]),s._v(" > dummy.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Dummy"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin secret")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" secret")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" secret")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This diverges from the GitHub branch"')]),s._v(" > new-stuff.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"New stuff"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin secret")]),s._v("\nTo git@github.com:user/repo.git\n! [rejected]        secret -> secret (non-fast forward)\nerror: failed to push some refs to ‘git@github.com:user/repo.git’\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: getting git branches of a certain age")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5396755",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g -n 1 --date=local --pretty=%gd mybranch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*{\\(.*\\)}/\\1/'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Prints "Mon Mar 21 13:23:26 2011"')]),s._v("\n\ngit log -g -n 1 --date=raw --pretty=%gd mybranch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*{\\(.*\\) .*/\\1/'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prints 1300731806")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\ncutoff_date=$(date --date="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"July 23, 2010"')]),s._v(" +%s)\ngit for-each-ref refs/heads --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" | while read branch; do\n    reflog_date=$(git log -g -n 1 --date=raw --pretty=%gd $branch -- | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*{\\(.*\\) .*/\\1/'")]),s._v(")\n    if [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$reflog_date"')]),s._v(" && "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$reflog_date"')]),s._v(" -lt "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$cutoff_date"')]),s._v(" ]; then\n        git branch -D ${branch#refs/heads/}\n    fi\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Git lets you use very readable time formats!")]),s._v("\ncutoff_time="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 year ago"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# other examples:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# cutoff_time="July 23, 2010"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# cutoff_time="yesterday"')]),s._v("\n\ngit for-each-ref refs/heads --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master|other-whitelisted-branch'")]),s._v(" |\nwhile read branch; do\n    git reflog expire --expire="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$cutoff_time"')]),s._v(" $branch\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git reflog show -1 $branch | wc -l)"')]),s._v(" -eq 0 ]; then\n        git branch -D ${branch#refs/heads/}\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Squash commits directly on feature without rebase or merge")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46101407",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Commit any working changes on branch "mybranchname", then...')]),s._v("\ngit checkout master\ngit checkout -b mybranchname_temp\ngit merge --squash mybranchname\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Message describing all squashed commits"')]),s._v("\ngit branch -m mybranchname mybranchname_unsquashed\ngit branch -m mybranchname\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Optional cleanup:")]),s._v("\ngit branch -D mybranchname_unsquashed\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If squashing already-pushed commits...")]),s._v("\ngit push -f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Create a new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9771429",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you no longer need the information in master, you could easily get rid of it:\ngit branch -D master\n\ngit branch -m branch1 master\n\n▲ If you are a bit uncertain whether you might need the information held in master one day, you could achieve this by renaming master to old_master before renaming branch1 to master:\ngit branch -m master old_master\ngit branch -m branch1 master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Overwrite everything in master with another branch in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29870372",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you are fine with losing the history of your master branch you just let master point to the head of your current branch (your don't "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"overwrite"')]),s._v(" master - the branch - per se):\ngit checkout yourotherbranch\ngit branch -D master\ngit checkout -b master\n\n▲ Of course if you have a remote clone, you'll then have to \ngit push -f origin master \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How do I delete a branch without an error message if the branch does not exist?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22402618",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("Linux   $ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" <branch> &>/dev/null    ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("Windows $ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" <branch> 1>nul 2>nul")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How rebase result may differ from result of a merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44554714",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/sh")]),s._v("\n\nfatal() {\n    echo fatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v(" 1>&2; exit 1\n}\n\n[ -e tt ] && fatal tt already exists\n\nmkdir tt && cd tt && git init -q || fatal failed to create tt repo\n\necho README > README && git add README && git commit -q -m A || fatal A\ngit branch branch || fatal unable to make branch\necho for master > bfile && git add bfile && git commit -q -m B || fatal B\n\ngit checkout -q -b br2 branch || fatal checkout -b br2 branch\necho file for C > cfile && git add cfile && git commit -q -m C || fatal C\ngit checkout -q branch || fatal checkout branch\necho file for D > dfile && git add dfile && git commit -q -m D || fatal D\ngit merge -q --no-commit br2 && git rm -q -f cfile && git commit -q -m E ||\n    fatal E\ngit branch -D br2\ngit checkout -q master || fatal checkout master\n\necho merging branch\ngit merge --no-edit branch || fatal merge failed\necho result is: *\n\necho removing merge, replacing with rebase of branch onto master\ngit reset -q --hard HEAD^ || fatal reset failed\ngit checkout -q branch || fatal switch back to master failed\ngit rebase master || fatal rebase failed\necho result is: *\n\necho removing rebase as well so you can poke around\ngit reset --hard ORIG_HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Deleting branches which name contains weird characters")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35720116",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-D"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: GIT: How to delete all Hotfix and Feature branches, and keep Development, Releases and Master - automatically?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37821529",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D `git branch | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(hotfix|feature)'")]),s._v("`\n\ngit branch | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(hotfix|feature)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Remove conflicted branch in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6136834",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master (In Konflikt stehende Kopie von Matthias 2011-05-24)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to fix a wrong merge in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44285140",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master  // switch to master\ngit checkout -b fix_it  // create a fix_it branch, and switch to it\ngit rebase -i <hash_right_before_bad_commit> // cherry-pick all the good commits - leave out the bad one\n\ngit checkout master\ngit branch old_master // create an old_master branch in case you want to rollback\ngit reset fix_it  // now master has the new fixed history (without the bad commit)\n\n// double-check your branches and make sure everything looks ok (and the bad commit is gone from your history)\ngit log --graph --all --oneline --decorate-short\n\n// if everything looks good, push the changes to your remote repository\ngit push origin master --force // you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ll need to force it since you'")]),s._v("ve re-written history\n\n// clean up the tmp branches\ngit branch -D fix_it, old_master\n\n// inform your team members to force get master (or just to be safe, just re-clone repository).\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Git merge branch one commit at a time?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[s._v("git apply")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39733086",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" big_feature_branch.rebased big_feature_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase master big_feature_branch.rebased")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Resolve all conflicts")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout big_feature_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git diff big_feature_branch big_feature_branch.rebased | git apply -")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge fix"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" big_feature_branch.rebased")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How to run test before merge a pullrequest")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25269504",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a temporary branch in your local repository.")]),s._v("\ngit checkout -b temp-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge the remote branch that contains the pull request.")]),s._v("\ngit pull git://foo.com/repo.git feature-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Run tests.")]),s._v("\nmake test\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Go back to the previous branch.")]),s._v("\ngit checkout -\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Delete the temporary branch.")]),s._v("\ngit branch -D temp-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Delete all commits not on master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57362655",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master$"')]),s._v(" | xargs git branch -D \n\ngit gc --prune=now --aggressive\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Disconnect local branch from remote one")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22907450",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --unset branch.<local branch A>.remote\ngit config --unset branch.<local branch A>.merge\n\ngit checkout A\ngit checkout -b D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Delete A if needed")]),s._v("\ngit branch -D A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How to change my local Git branch name to uppercase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26810414",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m test-101 tmp_branch\ngit checkout tmp_branch\ngit merge TEST-101 // make sure your data is up to date\ngit branch -D TEST-101\ngit branch -m tmp_branch TEST-101\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Close Branch instead of merging?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23144086",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m long-ago-feature dead/long-ago-feature\n\ngit tag dead/long-ago-feature long-ago-feature\ngit branch -D long-ago-feature\n\ngit update-ref refs/deadheads/long-ago-feature long-ago-feature\ngit branch -D long-ago-feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How do I list branches that have been pushed to a remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25681298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains name_of_local_branch | grep -c remotes/origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Find (/delete) local branches with content that's already pushed")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Takes one optional argument with the name of the remote (origin by default)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent shell expansion to not list the current files when we hit the '*' on the current branch")]),s._v("\nset -f\n\nif [ $# -eq 1 ]\nthen\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\nelse\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),s._v("\nfi\n\nfor b in `git branch`; do\n\n  # Skip that "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n  if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" ]]\n  then\n    continue\n  fi\n\n  # Check if the current branch tip is also somewhere on the remote\n  if [ `git branch -a --contains $b | grep -c remotes/$remote` != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" ]\n  then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b is safe to delete"')]),s._v("\n    # git branch -D $b\n  fi\ndone\n\nset +f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: SourceTree delete all local branches under a specific directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34047669",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git branch | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"completed_branches"')]),s._v(" | xargs git branch -D\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('31. Usage scenario: Rename Git branch "Master" that conflicts with branch "master" in case-insensitive file system?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18346845",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit branch -m temp\ngit checkout --track origin/Master\ngit push origin HEAD:renamed\ngit push origin :Master\ngit checkout temp\ngit branch -D Master\ngit branch -m master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote update                                # update repository")]),s._v("\nFetching origin\nremote: Counting objects: 3, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 2 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (2/2), done.\nFrom /Volumes/Disk Image/remote\n * [new branch]      Master     -> origin/Master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),s._v("                                    # note bad name ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Master'")]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/Master\n  remotes/origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\nAlready on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch is behind "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" by 1 commit, and can be fast-forwarded.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to update your local branch)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" temp                               # rename ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" for a moment\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),s._v(" origin/Master               # checkout the bad branch")]),s._v("\nBranch Master set up to track remote branch Master from origin.\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin HEAD:renamed                     # push it with a different name")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo /Volumes/Disk Image/remote\n * [new branch]      HEAD -> renamed\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :Master                          # delete bad branch on remote")]),s._v("\nTo /Volumes/Disk Image/remote\n - [deleted]         Master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout temp                                # checkout renamed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'temp'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" Master                             # delete bad local branch")]),s._v("\nDeleted branch Master (was 5343242).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master                             # change ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" name back\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),s._v("                                    # presto!")]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n  remotes/origin/renamed\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Git - how to remove branch from checkout autocomplete")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22148264",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" branchname")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :branchname")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Git command to remove local branches that have a deleted upstream?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41593339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm-if-gone: remove branches that have a configured upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# where the configured upstream no longer exists.  Run with")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -f to make it work, otherwise it just prints what it would")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove.")]),s._v("\nforce=false\ncase "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" in\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("-f) force=true;;")]),s._v("\nesac\n\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads); do\n    # find configured upstream, if any\n    remote=$(git config --get branch.$branch.remote) || continue\n    # if tracking local branch, skip\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v(" = . ]; then continue; fi\n    # if the upstream commit resolves, skip\n    ucommit=$(git rev-parse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}@{u}"')]),s._v(" 2>/dev/null) && continue\n    # upstream is invalid - remove local branch, or print removal\n    $force && git branch -D $branch || echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git branch -D $branch"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: Git: Changing to a Remote Branch From a Clone")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7603060",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b bugfix upstream/master\n\ngit merge bugfix\n\ngit rebase -i bugfix\n\ngit branch -D bugfix\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Creating a GIT project from specific commit of another GIT project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25365301",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" C6")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" branch_name")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fsck"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-reflogs")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog expire"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --expire")]),s._v("=now"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git gc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("=now")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote remove origin")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Git: How to unfetch remote branches (Github pull requests)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32887842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch | grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\*'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pr/'")]),s._v(" | xargs git branch -D\n\ngit branch -r | grep -vE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^\\*'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pr/'")]),s._v(" | xargs git branch -rD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Full local copy of remote git repository with all branches/tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51402520",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone --mirror <repo-url>\n\ngit remote remove origin\n\ngit branch -D unwanted-branch\ngit tag -D unwanted-tag\ngit gc --aggressive --prune=all\n\ngit for-each-ref\n\ngit clone --mirror file://localhost/path/to/first/clone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: GitFlow: How to maintain previous releases?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[s._v("git switch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69727920",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch\ngit branch -D main # in case you have an old copy of it\ngit switch main # now you should be up to date with origin/main\ngit merge --strategy=ours hotfix/1.1.1 # bring in commits without their changes!\n\ngit fetch\ngit switch -c merge-hotfix-into-main origin/main --no-track # create a temp branch\ngit merge <last-commit-you-want-to-integrate> # take in commits and changes\ngit merge --strategy=ours hotfix/1.1.1 # bring in remaining commits without changes\ngit branch -D main # in case you have an old copy of it\ngit switch main #\ngit merge merge-hotfix-into-main --no-ff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Remove a bunch of duplicate commits and references in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10840146",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit checkout -b temp E\ngit cherry-pick F..N\ngit branch -D master\ngit branch -m temp master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: rebase conflicted, merged commits in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22441910",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch merge-backup master\n\ngit checkout feature\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... squash the commits ...")]),s._v("\ngit diff master^2\n\ngit checkout master\ngit reset --hard master^\n\ngit merge feature\ngit read-tree --reset -u merge-backup\ngit commit\n\ngit branch -D merge-backup\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How to remove duplicated commits in a git svn tree?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36113322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("svn rm $URL/tags/the_tag\ngit branch -D -r tags/the_tag\nrm -rf .git/svn/tags/the_tag\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: git delete local branch if remote is deleted as alias")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48347436",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[alias] deletedone = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!f() { git fetch -p && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D; }; f\"")]),s._v("\n\ngit config alias.deletedone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git fetch -p && git branch -vv | grep '")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(": gone]"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("{print $1}"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | xargs git branch -D; }; f'\n\ngit config --global alias.deletedone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git fetch -p && git branch -vv | grep \": gone]\" | awk '")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("{print $1}"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | xargs git branch -D; }; f'\n\ngit config --global alias.deletedone '!f() { git fetch -p && git branch -vv | \\\n  perl -wne "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1\\n"')]),s._v(" if m/^\\s*(\\S+)\\s+[0-9a-f]+\\s+\\[\\S+: gone\\]/;"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | \\\n  xargs git branch -d; }; f'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: Squashed commits onto feature branch and can't have a clean merge back to master now")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36989943",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("  D--E--F--H'--I--J--K (mybranch)\n /         \\\nA--B--C--G--H--L--M--N--O (master)\n\n  D--E--F----BCGH'--I--J--K   <-- mybranch\n /\nA--B--C--G--H----L--M--N--O   <-- master\n\n▲ Using rebase, omitting the squash\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout mybranch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" master")]),s._v("\n\n  D--E--F----BCGH'--I--J--K   [will be abandoned]\n /\nA--B--C--G--H----L--M--N--O   <-- master\n                           \\\n                            D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-E'")]),s._v("-F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-I'")]),s._v("-J"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-K'")]),s._v("   <-- mybranch\n\n▲ Using merge, getting Git to do the work\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" tempbranch mybranch~7  # this should start from A")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick mybranch~7..mybranch~4 # pick D, E, and F")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick mybranch~3..mybranch   # pick I, J, and K")]),s._v("\n\n  D--E--F----BCGH'--I--J--K   <-- mybranch\n /\nA--B--C--G--H----L--M--N--O   <-- master\n \\\n  D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--E'")]),s._v("--F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--I'")]),s._v("--J"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--K'")]),s._v("      <-- tempbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master")]),s._v("\n\n  D--E--F----BCGH'--I--J--K   <-- mybranch\n /\nA--B--C--G--H----L--M--N--O   <-- master\n \\                         \\\n  D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--E'")]),s._v("--F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--I'")]),s._v("--J"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--K'")]),s._v("----T   <-- tempbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout mybranch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -rf")]),s._v(" .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout tempbranch -- .")]),s._v("\n\n  D--E--F----BCGH'--I--J--K-P   <-- mybranch\n /                         /\nA--B--C--G--H----L--M--N--O     <-- master\n \\                         \\\n  D"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--E'")]),s._v("--F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--I'")]),s._v("--J"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--K'")]),s._v("----T   <-- tempbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" tempbranch")]),s._v("\n\n▲ More options, and notes on how and why to do whatever you do\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: What is the git commands to delete unwanted commits that haven't been pushed to the remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7703691",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D <branch-to-delete>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: Git: Cannot pull branch back into local (Couldn't find remote ref)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51060772",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# first delete the failed new branch")]),s._v("\ngit branch -D local-branch-you-just-created-when-trying-to-solve-the-problem\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get all up-to-date remote references into your local repo")]),s._v("\ngit fetch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (optionnally) list all branches to be sure")]),s._v("\ngit branch -a\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to avoid typos, copy-paste the line with your branch in your next checkout")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which will recreate a local version of said remote branch")]),s._v("\ngit checkout name-of-the-branch-you-try-to-recover-from-remote\n\ngit checkout origin/feature_A\n\ngit checkout feature_A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[s._v("#")]),s._v(" 🔹 -f")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to prune local tracking branches that do not exist on remote anymore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1141    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17029936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: how to reset develop branch to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 113    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18436728",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to make develop be identical to master, the simplest way is just to recreate the pointer:\ngit branch -f develop master\n\n▲ Or, if you already have develop checked out:\ngit reset --hard develop master\n\n▲ Note however that both of these options will get rid of any history that develop had which wasn"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t in master. If that isn'")]),s._v("t okay, you could preserve it by instead creating a commit that mirrored master's latest state:\ngit checkout develop\ngit merge --no-commit master\ngit checkout --theirs master .\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Update a local branch with the changes from a tracked remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 83    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11278576",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit branch -f --track my_local_branch origin/my_remote_branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OR (if my_local_branch is currently checked out):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --set")]),s._v("-upstream-to my_local_branch origin/my_remote_branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if you weren't already on my_local_branch branch:")]),s._v("\ngit checkout my_local_branch \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then:")]),s._v("\ngit pull\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git: moving branch head")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 49    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9759440",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f A 6\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git remove remote history past certain commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22674305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f master last-release\n\ngit push -f origin last-release:master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Rebasing after squash merge?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10028323",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit branch -f topic F\n\ngit push -f origin topic\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git commit to all branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21461116",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout br1")]),s._v("\n... make fix, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git commit"')]),s._v(" to create X1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout br2")]),s._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'br2'")]),s._v(".\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick br1    # take diff of `C`-vs-`X1`, apply to `F` to make `X2`")]),s._v("\n... etc\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" br2^  # make a copy of E but don't commit yet")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# edit to fix it")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit               # make new commit E")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' that'")]),s._v("s fixed\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick br2")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" br2 HEAD")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout br2^      # get back on E' as a detached HEAD")]),s._v("\n[git says stuff here about moving the detached HEAD]\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick br3    # copy commit G")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" br3 HEAD # and move br3 label here")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Git branching from an older revision and rolling back the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4094095",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create core-experimental using core as starting point")]),s._v("\ngit branch core-experimental core\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move core")]),s._v("\ngit branch -f core <SHA1 of B>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: git branch roll back to previous commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6979253",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f secondary secondary~2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: git branch several commits ago?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4110018",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch branchB branchA    # start branch B at commit L\ngit checkout branchA\ngit reset --hard <SHA1-of-I>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you don't want to check out branchA, you could use")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     git branch -f branchA <SHA1-of-I>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to keep branch hierarchy in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14541230",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f origin/A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Rebase two branches onto another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54024005",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rebase master feature/2\n\ngit branch -f feature/1 feature/2^\n\ngit rebase --onto feature/1 feature/1@{1} feature/2\n\ngit rebase --fork-point feature/1 feature/2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Recovering 'old commits' from multiple git rebases")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2696681",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit checkout -b FeaturesBC\ngit cherry-pick f3f3d43 \ngit cherry-pick efd3fed \n//etc...\n\ngit branch FeatureB-old efd3fed\ngit branch FeatureC-old 893eb78\n\ngit branch -f FeatureB efd3fed\ngit branch -f FeatureC 893eb78\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to rebase entire master branch of git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[s._v("git mktree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58003170",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -B feature\ngit branch -f master   $(git commit-tree -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit.'")]),s._v(" `:|git mktree`)\ngit merge -s ours --allow-unrelated-histories   master\n\ngit checkout -B feature\ngit branch -f master   $(git commit-tree -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Initial commit.'")]),s._v(" `:|git mktree`)\ngit rebase --root --onto master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Setting a broken git branch to a detached head")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18447452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f broked HEAD  # or some other valid point\ngit branch -d broked\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to make git branch's lastest codes same to another branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56803203",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f dev master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Cancel part of a single line from specific commit, after git push")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39497350",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ tag these so you can restore if something goes wrong.\ngit tag MyOldCommit BADCOMMIT\ngit tag MyOldMaster master\n\n▲ if you need to you can recover master unchanged with\ngit branch -f master MyOldMaster\n\ngit checkout -b MyFixedCommit BADCOMMIT\n\ngit commit --amend -m"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my commit message"')]),s._v("\n\ngit checkout master\n\ngit rebase --onto MyFixedCommit BADCOMMIT master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: git status after checking out a previous commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20861556",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f myBranchName #or "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(" if it"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s the branch you'")]),s._v("re working on\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Git workflow issue. Remove a merged branch from another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17371445",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f developer new-dev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: git local branch overwrite files with another local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56195737",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f mybranch stage\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How do you keep branches sharing the same history through rebases?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47851206",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -f stage0 newhash0\ngit branch -f stage1 newhash1\ngit branch -f stage2 newhash2\ngit branch -f stage3 newhash3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force"}},[s._v("#")]),s._v(" 🔹 --force")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Using git subtree merging, while also merging in all branches of all merged subtrees")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2139427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.;s.remotes.tags/all.')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\ngit for-each-ref --shell --format \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --force --track -l all/%(refname:short) %(refname:short)'")]),s._v(" refs/remotes \\\n  | sh\n\nmkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.remotes.heads/all.')\"")]),s._v("\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.g')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("h2",{attrs:{id:"m"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[s._v("#")]),s._v(" 🔹 -m")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I rename a local Git branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16231    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6591218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to rename a branch while pointed to any branch, do:\ngit branch -m <oldname> <newname>\n\n▲ If you want to rename the current branch, you can do:\ngit branch -m <newname>\n\n▲ If you want to push the  local branch and reset the upstream branch:\ngit push origin -u <newname>\n\n▲ And finally if you want to Delete the  remote branch:\ngit push origin --delete <oldname>\n\ngit config --global alias.rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'branch -m'")]),s._v("\n\n▲ If you are on Windows or another case-insensitive filesystem, and there are only capitalization changes in the name, you need to use -M, otherwise, git will throw branch already exists error:\ngit branch -M <newname>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Change a branch name in a Git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 486    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-help.html"}},[s._v("git help")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3866972",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m newname\n\ngit help branch\n\ngit branch (-m | -M) [<oldbranch>] <newbranch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v('3. Usage scenario: How can I create a Git repository with the default branch name other than "master"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 255    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42871621",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Newer Git, New Repo\ngit init --initial-branch=trunk\ngit init -b trunk\n\ngit config --global init.defaultBranch trunk\n\n▲ Older Git, New Repo\ngit init\ngit checkout -b trunk\n\n▲ Bare Repos\ngit init --bare\ngit symbolic-ref HEAD refs/heads/trunk\n\n▲ Old Repos\ngit init\ntouch file.txt\ngit add file.txt\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'commit 1'")]),s._v("\ngit branch -m trunk\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Switch branch names in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 146    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21932",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master crap_work\ngit branch -m previous_master master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Forking a sub directory of a repository on GitHub and making it part of my own repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 71    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24577293",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Setting up a repository\ngit clone https://github.com/xbmc/xbmc.git\ncd xbmc\n\ngit branch -m upstream-master\n\ngit subtree split --prefix=addons/skin.confluence -b upstream-skin\ngit checkout upstream-skin\n\ngit remote rename origin upstream\n\ngit remote add origin https://github.com/tbekolay/xbmc-skin.git\ngit fetch origin\ngit push -u origin upstream-skin\n\ngit checkout -b master\ngit push -u origin master\n\n▲ Making changes to your repositories\ngit checkout master\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My XBMC Skin"')]),s._v(" > README\ngit add README\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Added README"')]),s._v("\ngit push\n\n▲ Receiving upstream commits\ngit checkout upstream-master\ngit pull\n\ngit subtree split --prefix=addons/skin.confluence \\\n  --onto upstream-skin -b upstream-skin\n\ngit checkout master\ngit rebase upstream-skin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: GitLab rename branch and start over on another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 53    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35119087",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master develop    # rename master on local\ngit push origin :master         # delete master on remote\ngit push origin develop         # create develop on remote\ngit checkout -b master develop  # create a new local master on top of develop\ngit push origin master          # create master on remote\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Swap a master and a feature branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 41    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17200119",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master newfeaturebranch\ngit branch -m feature1 master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How do I move the contents of my master branch to a new Git branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6577702",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master old_master\ngit branch master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: git: disable automatic pushing to a certain remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6083666",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m some_branch a_branch_name_not_present_on_some_remote\n\ngit config --global push.default tracking\ngit branch --set-upstream some_branch origin/totally_different_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Get all git branches that matches regex and split it into array")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25571646",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("first_match=$( git branch -a | grep -m 1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" )\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to change my local Git branch name to uppercase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26810414",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m test-101 tmp_branch\ngit checkout tmp_branch\ngit merge TEST-101 // make sure your data is up to date\ngit branch -D TEST-101\ngit branch -m tmp_branch TEST-101\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: git upstream is gone after removing remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42037676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m Sprint13/Story/XXX-11\n\ngit branch --delete --remotes origin/Sprint/13/Story/XXX-11\n\ngit branch -d Sprint13/Story/XXX-11      # delete local new renamed branch\n\ngit push origin Sprint/13/Story/XXX-11:Sprint13/Story/XXX-11\n\ngit pull origin Sprint13/Story/XXX-11\n\ngit branch -d Sprint/13/Story/XXX-11      # delete old local branch\ngit push origin :Sprint/13/Story/XXX-11   # delete old remote branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Rename branches in git bare repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36183406",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m <oldbranch> <newbranch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git format-patch : how can I get it to ignore already merged commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-help.html"}},[s._v("git help")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8456259",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ One simple option is to say specify which commits you want in a way that doesn’t include the older, already-applied ones.  The general syntax for referring to commits can be found in git help rev-parse; in this case, for example, saying “the last 5 commits on my current branch” would look like\ngit format-patch HEAD~5\n\n▲ Another possibility would be to rebase your perl-d-add-tests-2 feature branch against the current blead branch.  IIRC, your earlier work on this branch was accidentally squashed into a single commit when it was applied to blead, so in this case you might have to do more manual cleanup than you’d expect.  If you want to try this approach, I suggest doing it on a throwaway branch, so you won’t lose anything if it goes badly.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pull in upstream changes:")]),s._v("\ngit checkout blead\ngit pull\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# create and switch to a new branch "tmp":')]),s._v("\ngit checkout -b tmp perl-d-add-tests-2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# rebuild this branch against your current "blead" branch:')]),s._v("\ngit rebase blead\n\n▲ If you like the results, you can use the temporary branch in place of your feature branch:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete current feature branch:")]),s._v("\ngit branch -d perl-d-add-tests-2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rename the temporary branch back to the feature branch's name")]),s._v("\ngit branch -m tmp perl-d-add-tests-2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# switch to the recreated feature branch:")]),s._v("\ngit checkout perl-d-add-tests-2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# generate patches against blead:")]),s._v("\ngit format-patch blead\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to revert a git checkout masTER?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39173553",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Defining the problem\n▲ Fixing it\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" masTER master")]),s._v("\nfatal: A branch named "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" already exists.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" masTER tmp")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" tmp master")]),s._v("\n\n>>> s\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'straße'")]),s._v("\n>>> with open(s, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'w'")]),s._v(") as stream:\n...     stream.write("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'street\\n'")]),s._v(")\n... \n7\n>>> os.listdir()[10]\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'file_абвгде'")]),s._v("          # oops, that's one I was using for testing proftpd\n>>> os.listdir()[30]   # should clean out my tmp dir more often ...\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'straße'")]),s._v("\n>>> open("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'STRASSE'")]),s._v(")\nTraceback (most recent call last):\n  File "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<stdin>"')]),s._v(", line 1, in <module>\nFileNotFoundError: [Errno 2] No such file or directory: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'STRASSE'")]),s._v("\n>>> open("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'STRAßE'")]),s._v(").read()\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'street\\n'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: changing all the logs to another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15450741",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m master develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('17. Usage scenario: Rename Git branch "Master" that conflicts with branch "master" in case-insensitive file system?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18346845",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit branch -m temp\ngit checkout --track origin/Master\ngit push origin HEAD:renamed\ngit push origin :Master\ngit checkout temp\ngit branch -D Master\ngit branch -m master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote update                                # update repository")]),s._v("\nFetching origin\nremote: Counting objects: 3, done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 2 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (2/2), done.\nFrom /Volumes/Disk Image/remote\n * [new branch]      Master     -> origin/Master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),s._v("                                    # note bad name ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Master'")]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/Master\n  remotes/origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\nAlready on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nYour branch is behind "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/master'")]),s._v(" by 1 commit, and can be fast-forwarded.\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git pull"')]),s._v(" to update your local branch)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" temp                               # rename ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" for a moment\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),s._v(" origin/Master               # checkout the bad branch")]),s._v("\nBranch Master set up to track remote branch Master from origin.\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin HEAD:renamed                     # push it with a different name")]),s._v("\nTotal 0 (delta 0), reused 0 (delta 0)\nTo /Volumes/Disk Image/remote\n * [new branch]      HEAD -> renamed\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :Master                          # delete bad branch on remote")]),s._v("\nTo /Volumes/Disk Image/remote\n - [deleted]         Master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout temp                                # checkout renamed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'temp'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" Master                             # delete bad local branch")]),s._v("\nDeleted branch Master (was 5343242).\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" master                             # change ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" name back\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),s._v("                                    # presto!")]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n  remotes/origin/renamed\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Restore branches after cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38163275",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("atom-pane-manager git:master ❯ git branch -m remotes/origin/mbigras mbigras\nerror: refname refs/heads/remotes/origin/mbigras not found\nfatal: Branch rename failed\n                                                 ^^^^^^^^^\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")])]),s._v("\n  origin/HEAD -> origin/master\n  origin/master\n\ngit branch origin/mbigras mbigras\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to remove remote origin from branch name after converting from svn to git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52974535",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m old_name new_name\n\nfor branch in `git branch -r | grep -v tags`; do\n    new_branch=$(echo $branch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    git branch $branch $branch\n    git branch -m $branch $new_branch\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How can I get rid of the message \"Heads up! The branch 'master' that you pushed to was renamed to 'main'\" when pushing changes to git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69183888",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m random\ngit push origin HEAD -f # pushed changes to new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"random"')]),s._v("\n\ngit push origin :master # deleted master that was hanging there somehow\n\ngit commit --amend -a --no-edit # to force a commit change\ngit push -u origin random -f # no message!\n\ngit push origin :random\ngit branch -m master\ngit push -u origin master\ngit remote prune origin\ngit push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to convert existing non-empty directory into a Git working directory and push files to a remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50580994",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\n\ngit branch -m branch1 tempBranch\n\ngit fetch\n\ngit pull\n\ngit checkout -b branch1\ngit push -u origin branch1\n\ngit merge tempBranch\n\ngit push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Remove a bunch of duplicate commits and references in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10840146",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit checkout -b temp E\ngit cherry-pick F..N\ngit branch -D master\ngit branch -m temp master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to rearange commits in few independed branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40046718",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch branch-1 C5\ngit branch -m temp branch-2\ngit rebase --onto C0 branch-1 branch-2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Hide but still save a branch with GIT?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35435850",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd $HOME\ngit clone myproject myproject_archive\n\ncd myproject\ngit remote add archive ../myproject_archive\n\ngit branch -D _branch1\netc...\n\ngit branch -m branch2 _branch2\ngit push _branch2 archive\ngit branch -D branch2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Create new branch with all commits after a specific commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44816880",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m old_branch release_y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"move"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#move"}},[s._v("#")]),s._v(" 🔹 --move")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Rename a Git branch locally and remotely?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 221    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36999938",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Yes,\ngit branch --move <old_name> <new_name>\n\ngit checkout <new_name>\ngit push origin [--set-upstream] <new_name>\ngit push origin --delete <old_name>\n\n▲ You can use the following shorthands:\n▲ NB.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git - transferring all commits to another branch and creating a new master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12077848",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --move master develop\ngit checkout --orphan master\ngit rm -rf . ;# abandon the staged, orphaned changes\necho README > README ;# put something in this working directory\ngit add README && git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit of <my_project>"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout develop && git checkout master")]),s._v("\nerror: pathspec "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" did not match any file(s) known to git.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --orphan")]),s._v(" master")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nfatal: Non-fast-forward commit does not make sense into an empty head\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge develop")]),s._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'recursive'")]),s._v(" strategy.\n README | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 README\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")])]),s._v("\n*   867a1f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'develop'")]),s._v("\n|\\  \n| * 22df145 README\n* 15ba82a Initial commit of test project\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h2",{attrs:{id:"m-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#m-2"}},[s._v("#")]),s._v(" 🔹 -M")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I rename a local Git branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16231    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6591218",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you want to rename a branch while pointed to any branch, do:\ngit branch -m <oldname> <newname>\n\n▲ If you want to rename the current branch, you can do:\ngit branch -m <newname>\n\n▲ If you want to push the  local branch and reset the upstream branch:\ngit push origin -u <newname>\n\n▲ And finally if you want to Delete the  remote branch:\ngit push origin --delete <oldname>\n\ngit config --global alias.rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'branch -m'")]),s._v("\n\n▲ If you are on Windows or another case-insensitive filesystem, and there are only capitalization changes in the name, you need to use -M, otherwise, git will throw branch already exists error:\ngit branch -M <newname>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git merge squash repeatedly")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4481621",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout development@{0}  # get working tree from "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"development"')]),s._v(", detach HEAD\ngit reset --soft stable  # reposition detached HEAD on "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stable"')]),s._v("\ngit commit  # enter the appropriate commit message\ngit branch temp  # create a temporary branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"temp"')]),s._v(" at HEAD\ngit checkout temp  # get on the new temporary branch\ngit branch -M stable  # rename "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"temp"')]),s._v(" to "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"stable"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Restoring a branch that was overwritten with rename (git branch -M)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38441305",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog master")]),s._v("\n63fa031 master@{0}: clone: from git://192.168.70.128/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -M")]),s._v(" master nice")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* nice\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog master")]),s._v("\nfatal: ambiguous argument "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(": unknown revision or path not in the working tree.\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--'")]),s._v(" to separate paths from revisions, like this:\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git <command> [<revision>...] -- [<file>...]'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reflog nice")]),s._v("\n63fa031 nice@{0}: Branch: renamed refs/heads/master to refs/heads/nice\n63fa031 nice@{1}: clone: from git://192.168.70.128/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("h2",{attrs:{id:"c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[s._v("#")]),s._v(" 🔹 -c")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: List all local branches without a remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 128    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31776247",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if (!$2) print $1;}'")]),s._v("\n\n[alias]\n  local-branches = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'\"")]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2 !~/\\/origin\\// { print $1 }'")]),s._v("\n\ngit branch -vv | cut -c 3- | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$3 !~/\\[/ { print $1 }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I stop myself from committing to the master branch in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8591425",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <oldrev> <newrev> <refname>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# update a blame tree")]),s._v("\nwhile read oldrev newrev ref\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"STARTING [$oldrev $newrev $ref]"')]),s._v("\n\nif [ $ref == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/master"')]),s._v(" ] && [ $USER != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hudson"')]),s._v(" ]\nthen\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YOU CANNOT COMMIT STUFF TO MASTER BRANCH"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TO CORRECT THIS run"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git branch -c <branch name> then run"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git push <reponame> <branch name>"')]),s._v("\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"and hudson will take and push to master IF it passes the tests"')]),s._v("\n    exit 1;\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is hudson, allowing commit to master"')]),s._v("\nfi\n\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"c-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c-2"}},[s._v("#")]),s._v(" 🔹 -C")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Forcibly copying a branch from another branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62029100",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -C sourceBranch targetBranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-color"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-color"}},[s._v("#")]),s._v(" 🔹 --no-color")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git splitting repository by subfolder and retain all old branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20793890",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Short answer\ngit filter-branch --prune-empty --subdirectory-filter subDirectory -- --branches\n\n▲ Walkthrough\ngit clone yourRemote dir1Clone\ncd dir1Clone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move to a headless state")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to delete all branches without issues")]),s._v("\ngit checkout --detach\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete all branches")]),s._v("\ngit branch | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" | xargs git branch -D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get all local branches for remote")]),s._v("\ngit branch --remotes --no-color | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\->"')]),s._v(" | while read remote; do\n    git checkout --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove remote and remote branches")]),s._v("\ngit remote remove origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Isolate dir1 and recreate branches")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --prune-empty removes all commits that do not modify dir1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- --all updates all existing references, which is all existing branches")]),s._v("\ngit filter-branch --prune-empty --subdirectory-filter dir1 -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: List git branches that can safely be deleted")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2353809",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master # or whatever branch you might compare against ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merged")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")])]),s._v("\n\no <--- experimental\n|\no\n|\no <--- next\n|\no\n|\no <--- master\n|\no----o <--- broken\n|\no\n|\n\n\n$ for branch in `git branch --no-color --verbose | \\\nsed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/*//'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("`; \\\ndo echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[$branch]"')]),s._v("; git checkout -q $branch; git branch --merged; done\n\n[broken]\n* broken\n[master]\n* master\n[next]\nmaster\n* next\n[experimental]\nmaster\nnext\n* experimental\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Purging redundant branches from git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21984044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin git@github.com:you/repo.git (fetch)\norigin git@github.com:you/repo.git (push)\nupstream git://github.com/original/repo.git (fetch)\nupstream git://github.com/original/repo.git (push)\n\n▲ List all local branches that are merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\nmy-feature\nmy-other-feature\nmaster\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-other-feature")]),s._v("\n\n▲ Delete local references to remote branches that don't exist\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote prune origin")]),s._v("\n\n▲ Delete remote branches which have been merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\norigin/my-feature\norigin/my-other-feature\nupstream/someone-elses-branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --delete")]),s._v(" origin my-other-feature # equivalent, just different syntax")]),s._v("\n\n▲ Script solution\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# E.g. save as ~/bin/git-cleanup, make executable and have ~/bin in your path")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# call as `git cleanup`")]),s._v("\n\necho -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fetching latest ... "')]),s._v("\ngit fetch origin\ngit fetch upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged local feature branches ... "')]),s._v("\nbranches=`git branch --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^feature ]]; then\n        git branch -d $branch;\n    fi\ndone\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting local refs to remote branches that don\'t exist ... "')]),s._v("\ngit remote prune origin\ngit remote prune upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged remote feature and hotfix branches ... "')]),s._v("\nbranches=`git branch -r --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^(origin)\\/(feature.*$) ]]; then\n        remote=${BASH_REMATCH[1]};\n        branch=${BASH_REMATCH[2]};\n        git push $remote :$branch;\n    fi\ndone\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all finished"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v('4. Usage scenario: How to remove "^[[m" and "^[[32" characters in vim')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64442570",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --no-color --merged \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[s._v("#")]),s._v(" 🔹 -i")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Merging remote content to local repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13187169",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch original-repo\ngit branch -r | cut -f3- -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" | xargs -i{} git push new-repo original-repo/{}:{}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"r"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r"}},[s._v("#")]),s._v(" 🔹 -r")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to fetch all Git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2600    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10312587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR answer\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\ngit fetch --all\ngit pull --all\n\n▲ Complete answer\ngit fetch --all\n\ngit pull --all\n\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list branches that contain a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1612    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1419637",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ From the git-branch manual page:\n git branch --contains <commit>\n\n git branch -r --contains <commit>\n\nfetch = +refs/heads/*:refs/remotes/origin/*\n\n▲ If you need to include other ref namespace (pull request, Gerrit, ...), you need to add that new refspec, and fetch again:\ngit config --add remote.origin.fetch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+refs/pull/*/head:refs/remotes/origin/pr/*"')]),s._v("\ngit fetch\ngit branch -r --contains <commit>\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),s._v(" tests")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit d590f2ac0635ec0053c4a7377bd929943d475297")]),s._v("\nAuthor: Nick Quaranto <nick@quaran.to>\nDate:   Wed Apr 1 20:38:59 2009 -0400\n\n    Green all around, finally.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" d590f2")]),s._v("\n  tests\n* master\n\n▲ Note: if the commit is on a remote tracking branch, add the -a option.\n(as MichielB comments below)\ngit branch -a --contains <commit>\n\n           __*__*__*__*__> <upstream>\n          /\nfork-point\n          \\__+__+__-__+__+__-__+__> <head>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Cleaning up old remote git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1421    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3184742",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r -d origin/devel\n\ngit remote prune origin\n\ngit fetch origin --prune\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to prune local tracking branches that do not exist on remote anymore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1141    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17029936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How do you stop tracking a remote branch in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 874    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3046478",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --unset-upstream\n\ngit branch -d -r origin/<remote branch name>\n\ngit config --unset branch.<branch>.remote\ngit config --unset branch.<branch>.merge\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git remote branch deleted, but still it appears in 'branch -a'")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 812    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5096739",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/coolbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Listing each branch and its last revision's date in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 191    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2514279",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for k in `git branch | perl -pe s/^..//`; do echo -e `git show --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k -- | head -n 1`\\\\t$k; done | sort -r\n\nfor k in `git branch | sed s/^..//`; do echo -e `git log -1 --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k --`\\\\t"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$k"')]),s._v(";done | sort\n\nfor k in `git branch -r | perl -pe "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^..(.*?)( ->.*)?$/\\1/'")]),s._v("`; do echo -e `git show --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k -- | head -n 1`\\\\t$k; done | sort -r\n\nfor k in git branch | perl -pe s\\/\\^\\.\\.\\/\\/; do echo -e git show --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k -- | head -n 1\\\\t$k; done | sort -r \n\nalias gbage="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'for k in `git branch -r | perl -pe '")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("s/^..(.*?)( ->.*)?$/\\1/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("`; do echo -e `git show --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k -- | head -n 1`\\\\t$k; done | sort -r'\n\nalias gbage='for k in `git branch -r | \\\n  perl -pe "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("s/^..(.*?)( ->.*)?$/\\1/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("`; \\\n  do echo -e `git show --pretty=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%Cgreen%ci %Cblue%cr%Creset"')]),s._v(" $k -- | \\\n     head -n 1`\\\\t$k; done | sort -r'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Delete multiple remote branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 169    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10555315",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk -F/ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/\\/PREFIX/{print $2}'")]),s._v(" | xargs -I {} git push origin :{}\n\ngit branch -r | awk -F/ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/\\/PREFIX/{print $2}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to remove a branch locally?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 127    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28258756",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: git: check if commit xyz in remote repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 88    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5549506",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\n\ngit branch -r --contains xyz\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to update my fork to have the same branches and tags as the original repository on github?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15781173",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep origin | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $remote/$brname ; done\n\ngit pull --rebase --all\n\ngit push --all maxandersen\ngit push --tags maxandersen\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Checkout all branches from remote as tracking branches. Based on    https://stackoverflow.com/questions/379081/track-all-remote-git-branches-as-local-branches/6300386#6300386")]),s._v("\n\nUPSTREAM=$1\nMYREPO=$2\n\nusage() {\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage:"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 <upstream-remote> <target-remote>"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Example which ensures remote named 'maxandersen' have all the same branches and tags as 'origin'\"")]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 origin maxandersen"')]),s._v("\n   exit 1\n}\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" ]\nthen\n echo Missing upstream remote name.\n usage\nfi\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MYREPO"')]),s._v(" ]\nthen\n echo Missing target remote name. \n usage\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"1. This will setup '$MYREPO' to track all branches in '$UPSTREAM' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n for brname in `git branch -r | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $UPSTREAM/$brname ; done\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"2. This will push all local branches and tags into '$MYREPO' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n git push --all $MYREPO\n git push --tags $MYREPO\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How to merge branches in 2 different repositories?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 44    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38469476",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Initialization and first merge\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -o")]),s._v(" staging http://staging")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add project2 http://sampleproject2")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")])]),s._v("\nstaging/Production\nstaging/UAT\nproject2/Master\nproject2/QA\nproject2/DEV\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" staging_UAT"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),s._v(" staging/UAT")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge project2/Master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push staging staging_UAT:UAT")]),s._v("\n\n▲ Future merges\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout staging_UAT")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git pull")]),s._v("\n\nUpdates were rejected because the tip of your current branch is behind its remote counterpart.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch project2")]),s._v("\n\n▲ Adaptions\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to check if a commit has been merged to my current branch - somewhere in time?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35101826",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Solution\ngit branch --contains ab123456\n\ngit branch -r --contains ab123456\n\n▲ References\n▲ Note\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v('14. Usage scenario: How to fetch all remote branch, "git fetch --all" doesn\'t work')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31445390",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch\n*master\n\ngit branch -r\norigin/master\norigin/A\n\ngit checkout -b mylocal origin/A\n\ngit branch\nmaster\n*mylocal\n\ngit branch -r\norigin/master\norigin/A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git-svn: Bulk removing orphaned remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7209462",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|^[[:space:]]*||'")]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^tags/'")]),s._v(" > git-branch-list\n\nfor i in `cat old-branch-list`; do git branch -d -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; rm -rf .git/svn/refs/remotes/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How can I make git-svn get rid of remote branches that don't exist anymore?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17157518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r my_branch\nrm -rf .git/svn/refs/remotes/my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Merge multiple git repositories into one, keeping branches history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26509985",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create a new repo:")]),s._v("\ngit init all_projects\ncd all_project\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to make it more easy to understand, let's create a new branch")]),s._v("\ngit checkout -b main\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# import 1st project")]),s._v("\ngit remote add projectA http://projectA\ngit fetch --all --tags\ngit checkout masterA projectA/master\ngit rebase masterA main\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move the main branch to the current state")]),s._v("\ngit branch main -f\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now your branch main is at the same state as your A project")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# import 2st project")]),s._v("\ngit remote add projectB http://projectB\ngit fetch --all --tags\ngit checkout masterB projectB/master\ngit rebase masterB main\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move the main branch to the current state")]),s._v("\ngit branch main -f\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now your branch main contains all commits from projectA and projectB")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# etc..")]),s._v("\n\nfor i in $(git branch -r |grep projectA|awk -F"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("); do\n  git checkout $i projectA/$i\n  git rebase $i main\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How do I get the list of branches not merged into master, ordered by most recent commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15578409",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(committerdate:short) %(refname:short)"')]),s._v(" --count=15 $(git branch -r --no-merged origin/master | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^ *#refs/remotes/#'")]),s._v(")\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Split one subfolder from git repository with all branches and history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47084338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/USERNAME/REPOSITORY-NAME")]),s._v("\n$ cd REPOSITORY-NAME\n\n$ for i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FOLDER-NAME --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDER-NAME'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (push)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote set-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (push)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How to remove all remote tracking branches that still exist on remote but no longer in my fetch refspec")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15672505",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# This deletes all remote tracking branches for all remotes. So be careful if you have multiple remotes.")]),s._v("\ngit branch -r | xargs -L 1 git branch -rD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Be careful! This deletes EVERY tag!")]),s._v("\ngit tag | xargs -L 1 git tag -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Import a git repository with all its history into an existing git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14516663",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add temp staging_path/(reponame)\ngit fetch temp\ngit fetch --tags temp ## optional -- may pull in additional history\nfor remote in $(git branch -r | grep temp/ ) ; do git branch --no-track imported_$(basename $remote) $remote ; done ## create local branches prefixed with "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'imported_'")]),s._v("\ngit remote rm temp ## optional -- assumes you no longer plan to use the source repo\n\ngit merge -s ours --no-commit imported_master ## mysterious "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge strategy"')]),s._v("\ngit read-tree -u --prefix=(reponame)/ imported_master ## move to sub-folder\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How would I git remote prune just a specific remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39048117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --delete origin/branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Get only remote branches that have already been merged into master/develop")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51041015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git branch -r --merged master | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin/"')]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('24. Usage scenario: How do I identify which remote branches a given SHA-1 "belongs to"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9019265",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" <SHA-1>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to get latest commit hash from remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-remote.html"}},[s._v("git ls-remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55704573",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-remote --sort=committerdate\n\ngit rev-parse `git branch -r --sort=committerdate | tail -1`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Purging redundant branches from git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21984044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin git@github.com:you/repo.git (fetch)\norigin git@github.com:you/repo.git (push)\nupstream git://github.com/original/repo.git (fetch)\nupstream git://github.com/original/repo.git (push)\n\n▲ List all local branches that are merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\nmy-feature\nmy-other-feature\nmaster\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-other-feature")]),s._v("\n\n▲ Delete local references to remote branches that don't exist\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote prune origin")]),s._v("\n\n▲ Delete remote branches which have been merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\norigin/my-feature\norigin/my-other-feature\nupstream/someone-elses-branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --delete")]),s._v(" origin my-other-feature # equivalent, just different syntax")]),s._v("\n\n▲ Script solution\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# E.g. save as ~/bin/git-cleanup, make executable and have ~/bin in your path")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# call as `git cleanup`")]),s._v("\n\necho -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fetching latest ... "')]),s._v("\ngit fetch origin\ngit fetch upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged local feature branches ... "')]),s._v("\nbranches=`git branch --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^feature ]]; then\n        git branch -d $branch;\n    fi\ndone\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting local refs to remote branches that don\'t exist ... "')]),s._v("\ngit remote prune origin\ngit remote prune upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged remote feature and hotfix branches ... "')]),s._v("\nbranches=`git branch -r --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^(origin)\\/(feature.*$) ]]; then\n        remote=${BASH_REMATCH[1]};\n        branch=${BASH_REMATCH[2]};\n        git push $remote :$branch;\n    fi\ndone\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all finished"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v('27. Usage scenario: How can I "splice" two (or more) completely unrelated linear branch ancestries into a new one?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25930104",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("A---B------C--D [branch1]\n\n  X---Y--Z [branch2]\n\n▲ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Splicing"')]),s._v(" two unrelated branches\n▲ Generalization to more than two branches\nA ----- o ---- o [branch1]\n\n   o ----- o ---- o -- o [branch2]\n\n...\n\n o ----- o - o [branchn]\n\ngit rev-list --reverse --max-parents=0 --all\n\ngit branch -r --contains `git rev-list --reverse --max-parents=0 --all | head -1`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: How to check whether a Git commit exists on some remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65612198",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" <commit-sha>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to get list of all branches created off a GIT branch (get all sub branches of a branch)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27167903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains commitid\n\ngit branch --contains Rel2\n\ngit branch -r --contains commitid\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: How do I batch delete redundant remote git branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15462564",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | grep guy/ | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Locally find all unmerged branches of origin")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18743003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --no-merged\n\ngit branch -r --no-merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Master branch is ahead of a deleted branch by 2 commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48195543",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch -d -r origin/RailsApi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Prune remote branches after fetch refspec changes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35938016",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r origin/other-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: Restore branches after cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38163275",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("atom-pane-manager git:master ❯ git branch -m remotes/origin/mbigras mbigras\nerror: refname refs/heads/remotes/origin/mbigras not found\nfatal: Branch rename failed\n                                                 ^^^^^^^^^\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")])]),s._v("\n  origin/HEAD -> origin/master\n  origin/master\n\ngit branch origin/mbigras mbigras\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: How to remove remote origin from branch name after converting from svn to git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52974535",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m old_name new_name\n\nfor branch in `git branch -r | grep -v tags`; do\n    new_branch=$(echo $branch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    git branch $branch $branch\n    git branch -m $branch $new_branch\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: Moving to gitolite missing some branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10852806",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote update  ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or:")]),s._v("\n\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream $brname  $remote/$brname ; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Removed remote. But remote branch still shows")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43058534",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -r coworker/theirbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: Clone GitHub Repository and Merge All Pull Requests")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41926958",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\n\nset -e\n\ngit clone https://github.com/Sumi-Interactive/SIAlertView\ncd SIAlertView\n\ngit config --add remote.origin.fetch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+refs/pull/*/head:refs/remotes/origin/pr/*"')]),s._v("\ngit fetch\n\nfor branch in $(git branch -r); do\n    [[ $branch =~ origin/pr/ ]] && git merge $branch\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Git: How to get a list of pushed branches to remote master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56268748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit branch -a | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\s*remotes/"')]),s._v("\n\ngit branch -r\n\ngit branch -r --merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: Git Command To Find Previous Branch of Specific Type")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55963389",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --sort=version:refname\n\ngit branch --list -r *release/v* --sort=-version:refname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: how to see branches in my remote origin?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38429921",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: How to determine master, origin, head")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8826076",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | xargs git log --decorate\n\ngit fetch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: Git: find remote branches that are not merged into a specific remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66548640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --no-merged origin/develop\n           ^^             ^^^^^^^ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --help")])]),s._v("\nNAME\n       git-branch - List, create, or delete branches\n\nSYNOPSIS\n       git branch [--color[=<when>] | --no-color] [--show-current]\n               [-v [--abbrev=<length> | --no-abbrev]]\n               [--column[=<options>] | --no-column] [--sort=<key>]\n               [(--merged | --no-merged) [<commit>]]\n               [--contains [<commit]] [--no-contains [<commit>]]\n               [--points-at <object>] [--format=<format>]\n               [(-r | --remotes) | (-a | --all)]                           # <----\n               [--list] [<pattern>...]\n       git branch [--track | --no-track] [-f] <branchname> [<start-point>]\n       git branch (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n       git branch --unset-upstream [<branchname>]\n       git branch (-m | -M) [<oldbranch>] <newbranch>\n       git branch (-c | -C) [<oldbranch>] <newbranch>\n       git branch (-d | -D) [-r] <branchname>...\n       git branch --edit-description [<branchname>]\n\nDESCRIPTION\n...\n       -r, --remotes\n           List or delete (if used with -d) the remote-tracking branches. \n           Combine with --list to match the optional pattern(s).\n...\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: Git: Pull everything from bare usb remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25663746",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch -t $brname $remote/$brname ; done \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: How to remove duplicated commits in a git svn tree?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36113322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("svn rm $URL/tags/the_tag\ngit branch -D -r tags/the_tag\nrm -rf .git/svn/tags/the_tag\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: How to fork and a Git repo to my repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18807665",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone https://github.com/usrname/Spoon-Knife.git\ncd Spoon-Knife\ngit fetch --tags\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\ngit remote add test https://github.com/usrname/test.git\ngit config push.default matching\ngit push --all\ngit push --tags\ngit config push.default simple\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: How to print X month ago time before branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69954172",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("current_timestamp=$(date +%s)\nfour_month_ago=$(( $current_timestamp - 4*30*24*60*60 ))\n\nfor x in `git branch -r|sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v("|sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ HEAD /d'")]),s._v("`; do\n    branch_timestamp=$(git show -s --format=%at origin/$x)\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch_timestamp"')]),s._v(" < "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$four_month_ago"')]),s._v(" ]]; then\n        num=$(( ($current_timestamp - $branch_timestamp) / (30*24*60*60)))\n        list_branch+=("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$num month ago - ${x}"')]),s._v(")\n    fi\ndone\n\ni=0\nfor x in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${list_branch[@]}"')]),s._v("; do\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"    %3d - %s\\n"')]),s._v(" $i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$x"')]),s._v("\n    i=$(( i + 1 ))\ndone\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: how to Specify master branch by initialising git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44080166",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/your/repo.git # Sets master -> origin/master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),s._v(" # shows origin/master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"commit message"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: Git: Show all remote branches that a faulty branch has been merged into")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35166677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains <branch name> -r\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: How to pull a branch from remote when you accidentally deleted local branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18489342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --track <local branch name> <remote branch name>\n\ngit branch -r | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(HEAD|master)"')]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/origin\\///"')]),s._v(" | xargs -I % git branch --track % origin/%\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: Pull all branches from remote through it's mirror bare remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19297298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\n\ncd my_rep\ngit remote add group_origin /url/to/group_origin\ngit fetch group_origin\n\ngit checkout --track -b branch_x group_origin/branch_x\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: Merging remote content to local repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13187169",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch original-repo\ngit branch -r | cut -f3- -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" | xargs -i{} git push new-repo original-repo/{}:{}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"remotes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#remotes"}},[s._v("#")]),s._v(" 🔹 --remotes")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git splitting repository by subfolder and retain all old branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20793890",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Short answer\ngit filter-branch --prune-empty --subdirectory-filter subDirectory -- --branches\n\n▲ Walkthrough\ngit clone yourRemote dir1Clone\ncd dir1Clone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move to a headless state")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# in order to delete all branches without issues")]),s._v("\ngit checkout --detach\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete all branches")]),s._v("\ngit branch | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" | xargs git branch -D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get all local branches for remote")]),s._v("\ngit branch --remotes --no-color | grep --invert-match "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\->"')]),s._v(" | while read remote; do\n    git checkout --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("\ndone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove remote and remote branches")]),s._v("\ngit remote remove origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Isolate dir1 and recreate branches")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --prune-empty removes all commits that do not modify dir1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -- --all updates all existing references, which is all existing branches")]),s._v("\ngit filter-branch --prune-empty --subdirectory-filter dir1 -- --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: git upstream is gone after removing remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42037676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m Sprint13/Story/XXX-11\n\ngit branch --delete --remotes origin/Sprint/13/Story/XXX-11\n\ngit branch -d Sprint13/Story/XXX-11      # delete local new renamed branch\n\ngit push origin Sprint/13/Story/XXX-11:Sprint13/Story/XXX-11\n\ngit pull origin Sprint13/Story/XXX-11\n\ngit branch -d Sprint/13/Story/XXX-11      # delete old local branch\ngit push origin :Sprint/13/Story/XXX-11   # delete old remote branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Should I delete the LOCAL remote/origin/master branch after I have merged it with my local master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23960515",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Disambiguation: master on origin vs origin/master on your local repo\n▲ master on the remote origin\ngit push origin --delete master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or")]),s._v("\ngit push origin :master\n\n▲ Remote-tracking branch origin/master on your local repo\ngit branch --remotes --delete origin/master\n\ngit push origin --delete feature\n\ngit fetch origin --prune\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or shorter")]),s._v("\ngit fetch origin -p\n\n▲ Please Read\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: how to checkout latest commit of a specific remote in bash script")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33675466",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\ngit branch --remotes                             |\\\ngrep origin/                                     |\\\ngrep -v origin/HEAD                              |\\\nxargs -n 1 git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'format:%ct %h%n'")]),s._v(" |\\\nsort -n                                          |\\\ntail -1                                          |\\\ncut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a"}},[s._v("#")]),s._v(" 🔹 -a")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list branches that contain a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1612    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1419637",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ From the git-branch manual page:\n git branch --contains <commit>\n\n git branch -r --contains <commit>\n\nfetch = +refs/heads/*:refs/remotes/origin/*\n\n▲ If you need to include other ref namespace (pull request, Gerrit, ...), you need to add that new refspec, and fetch again:\ngit config --add remote.origin.fetch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+refs/pull/*/head:refs/remotes/origin/pr/*"')]),s._v("\ngit fetch\ngit branch -r --contains <commit>\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),s._v(" tests")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit d590f2ac0635ec0053c4a7377bd929943d475297")]),s._v("\nAuthor: Nick Quaranto <nick@quaran.to>\nDate:   Wed Apr 1 20:38:59 2009 -0400\n\n    Green all around, finally.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" d590f2")]),s._v("\n  tests\n* master\n\n▲ Note: if the commit is on a remote tracking branch, add the -a option.\n(as MichielB comments below)\ngit branch -a --contains <commit>\n\n           __*__*__*__*__> <upstream>\n          /\nfork-point\n          \\__+__+__-__+__+__-__+__> <head>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I search Git branches for a file or directory?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 510    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/372970",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git log --all -- somefile\n\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit 55d2069a092e07c56a6b4d321509ba7620664c63")]),s._v("\nAuthor: Dustin Sallings <dustin@spy.net>\nDate:   Tue Dec 16 14:16:22 2008 -0800\n\n    added somefile\n\n\n% git branch -a --contains 55d2069\n  otherbranch\n\n% git log --all -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'**/my_file.png'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git: How to find out on which branch a tag is?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 140    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15806668",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains tags/<tag>\n\n git rev-parse --verify tags/<tag>^{commit}\n # or, shorter:\n git rev-parse tags/<tag>~0\n\ngit branch --contains <commit>\n\ngit branch -a --contains tags/<tag>\ngit branch -a --contains <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Track all remote git branches as local branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 133    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/379842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for i in `git branch -a | grep remote | grep -v HEAD | grep -v master`; do git branch --track ${i#remotes/origin/} $i; done\n\nfor remote in `git branch -r `; do git branch --track $remote; done\n\nfor remote in `git branch -r `; do git checkout $remote ; git pull; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How can I determine if a given git hash exists on a given branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 125    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2444924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git branch -a --contains 4f08c85ad\n* master\n  remotes/origin/bug_872\n  remotes/origin/bug_898\n  remotes/origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git Hub Clone All Branches At Once")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 77    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40318872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master `; do\n   git branch --track ${branch#remotes/origin/} $branch\ndone\n\ngit branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git shallow clone (clone --depth) misses remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 67    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23710503",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("florianb$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n        * master\n          remotes/origin/HEAD -> origin/master\n          remotes/origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("florianb$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n        * master\n          remotes/origin/HEAD -> origin/master\n          remotes/origin/debian\n          remotes/origin/master\n          remotes/origin/python_codegen\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: GIT pulling or cloning repository only gets Master branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 60    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13204972",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit checkout [any_individual_branch_name]\n\ngit branch -v --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v('9. Usage scenario: Grep Git Branch Names, Return Only Branches Whose Name Contain "Theme"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 30    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32783008",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a | grep Theme\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Deleting a local Git Branch that was never pushed - delete it on the server, too?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38912123",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you didn't push the branch to the remote, you can simple delete it locally: \ngit branch -d my_branch\n\ngit branch -a\n\n*  master\n   my_branch\n   remotes/origin/master\n\n▲ If you did push it, you can remove it from the remote as follows:\ngit push origin :my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: switch branch in git by partial name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11388904",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.sco "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!sh -c \"git branch -a | grep -v remotes | grep $1 | xargs git checkout\"'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How can I diff two git branches in bitbucket pipeline")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47355353",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+ git branch -a")]),s._v("\n* develop\n  remotes/origin/develop\n\ngit fetch origin "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+refs/heads/*:refs/remotes/origin/*"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: git-p4 migrate branches in different subdirectories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37673794",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" mkdir workdir\n cd workdir\n git init\n\ngit config git-p4.user myp4user\ngit config git-p4.passwowrd myp4password\ngit config git-p4.port myp4port\ngit config git-p4.client myp4client\n\ngit config git-p4.useClientSpec true\ngit config git-p4.client myp4client\n\ngit config git-p4.branchUser myp4user\n\ngit config git-p4.branchList master:branch1\ngit config --add git-p4.branchList master:branch2\ngit config --add git-p4.branchList branch1:branch3\ngit config --add git-p4.branchList branch1:branch4\ngit config --add git-p4.branchList master:branch5\ngit config --add git-p4.branchList branch5:branch6\n\n git branch -a\n  remotes/p4/depot/dev/project/master\n  remotes/p4/depot/dev/project/branch1\n  remotes/p4/depot/dev/dev/project/branch2\n  remotes/p4/depot/dev/dev/sub-project/branch3\n  remotes/p4/depot/dev/dev/sub-project/branch4\n  remotes/p4/depot/patch-project/branch5\n  remotes/p4/depot/patch-project/special/developern/branch6\n\n  git checkout -b master  remotes/p4/depot/dev/project/master\n  git checkout -b branch1  remotes/p4/depot/dev/project/branch1\n  git checkout -b branch2   remotes/p4/depot/dev/dev/project/branch2\n  git checkout -b branch3   remotes/p4/depot/dev/dev/sub-project/branch3\n  git checkout -b branch4   remotes/p4/depot/dev/dev/sub-project/branch4\n  git checkout -b branch5   remotes/p4/depot/patch-project/branch5\n  git checkout -b branch6   remotes/p4/depot/patch-project/special/developern/branch6\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How do you remove a branch and all of its history locally and remotely?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34699362",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains 666bad\ngit tag --contains 666bad\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete %(refname)'")]),s._v(" refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to get aliases working in .gitconfig?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1061650",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("alias g=’git’\nalias gb=’git branch’\nalias gba=’git branch -a’\nalias gc=’git commit -v’\nalias gca=’git commit -v -a’\nalias gd=’git diff | mate’\nalias gl=’git pull’\nalias gp=’git push’\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Get all git branches that matches regex and split it into array")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25571646",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("first_match=$( git branch -a | grep -m 1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" )\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Getting a list of branches that were merged into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23303903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --list -a --merged integrationBranch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^..//;s/ .*//'")]),s._v(" | xargs git branch --list -a --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to ensure everything has been pushed with git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14873063",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n  develop                             44e61b5 <Commit message>\n  feature/CodeContracts               c26edee <Commit message>\n* feature/Foo                         3a40e22 <Commit message>\n  master                              e68e28a <Commit message>\n  remotes/origin/HEAD                 -> origin/master\n  remotes/origin/develop              44e61b5 <Commit message>\n  remotes/origin/feature/Bar          be9666c <Commit message>\n  remotes/origin/master               e68e28a <Commit message>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Git: How to list branches with info about tracked remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7730033",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a -v\n\ngit branch -a -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Locally find all unmerged branches of origin")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18743003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --no-merged\n\ngit branch -r --no-merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How can I reliably parse git branch output to capture just the branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55928602",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains <commit_id> --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: How to get list of git branches in Rails application?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22778063",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n origin/1-2-stable\n origin/2-0-stable\n origin/2-1-stable\n origin/2-2-stable\n origin/3-0-unstable\n origin/HEAD\n origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")])]),s._v("\n origin/1-2-stable\n origin/2-0-stable\n origin/2-1-stable\n origin/2-2-stable\n origin/3-0-unstable\n origin/HEAD\n origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Updating multiple branches of a forked repository on Github")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4333752",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for repo_o_branch in \\\n    $(git branch -a|grep repo-o|perl -nle"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s,^\\s*repo\\-o/,,;print $_'")]),s._v(";\ndo\n    (                                                              \\\n       ( git checkout $repo_o_branch                               \\\n         && git pull --rebase repo-o $repo_o_branch)               \\\n       || ( git checkout -b $repo_o_branch repo-o/$repo_o_branch ) \\\n    ) && git push repo-f $repo_o_branch;\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: How do I list branches that have been pushed to a remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25681298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains name_of_local_branch | grep -c remotes/origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Find (/delete) local branches with content that's already pushed")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Takes one optional argument with the name of the remote (origin by default)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent shell expansion to not list the current files when we hit the '*' on the current branch")]),s._v("\nset -f\n\nif [ $# -eq 1 ]\nthen\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\nelse\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),s._v("\nfi\n\nfor b in `git branch`; do\n\n  # Skip that "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n  if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" ]]\n  then\n    continue\n  fi\n\n  # Check if the current branch tip is also somewhere on the remote\n  if [ `git branch -a --contains $b | grep -c remotes/$remote` != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" ]\n  then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b is safe to delete"')]),s._v("\n    # git branch -D $b\n  fi\ndone\n\nset +f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: VSTS: How to auto-delete git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44944750",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\nfor reBranch in $(git branch -a)\ndo\n{\n  if [[ $reBranch == remotes/origin* ]];\n  then\n  {\n    if [[ $reBranch ==remotes/origin/HEAD ]]; then \n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HEAD is not a branch"')]),s._v("\n    else\n      branch=$(echo $reBranch | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" -f 3)\n      echo $branch\n      sha=$(git rev-parse origin/$branch)\n      dateo=$(git show -s --format=%ci $sha)\n      datef=$(echo $dateo | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 1)\n      Todate=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$datef"')]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n      current=$(date +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n      day=$(( ( $current - $Todate )/60/60/24 ))\n      echo $day\n      if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$day"')]),s._v(" -gt 180 ]; then\n      git push origin :$branch\n      echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete the old branch $branch"')]),s._v("\n      fi\n    fi\n\n  }\n  fi\n}\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Disappearing head in git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1181808",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  remotes/origin/next\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Restore branches after cloning")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38163275",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("atom-pane-manager git:master ❯ git branch -m remotes/origin/mbigras mbigras\nerror: refname refs/heads/remotes/origin/mbigras not found\nfatal: Branch rename failed\n                                                 ^^^^^^^^^\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")])]),s._v("\n  origin/HEAD -> origin/master\n  origin/master\n\ngit branch origin/mbigras mbigras\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Git: How to get a list of pushed branches to remote master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56268748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit branch -a | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\s*remotes/"')]),s._v("\n\ngit branch -r\n\ngit branch -r --merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: Deleting remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37823939",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  precious\n  stash-exp\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/maint\n  remotes/origin/master\n  remotes/origin/next\n  remotes/origin/pu\n  remotes/origin/todo\n\n▲ If you're in this confusing situation, spell everything out completely.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref")]),s._v("\nbbc61680168542cf6fd3ae637bde395c73b76f0f commit refs/heads/master\nf247a4de65f24e5f924d097843894bf839d34ac6 commit refs/heads/precious\n93df9a13560851eaa088f76d71a95a96c6902188 commit refs/heads/stash-exp\na28705da929ad746abcb34270947f738549d3246 commit refs/remotes/origin/HEAD\n0b65a8dbdb38962e700ee16776a3042beb489060 commit refs/remotes/origin/maint\na28705da929ad746abcb34270947f738549d3246 commit refs/remotes/origin/master\n6bd575154409f30ff65ca6ef24fc65deb942bab4 commit refs/remotes/origin/next\na83f22757e2811817565ce1064edcffb40eeb213 commit refs/remotes/origin/pu\n2d30c169da9a8b402b36a0b24689330559ca8943 commit refs/remotes/origin/todo\nd5aef6e4d58cfe1549adef5b436f3ace984e8c86 tag    refs/tags/gitgui-0.10.0\n33682a5e98adfd8ba4ce0e21363c443bd273eb77 tag    refs/tags/gitgui-0.10.1\n[lots more tags, snipped]\n\n▲ Dealing with the remote Git\ngit push origin :refs/heads/remotes/origin/feature/Issue01\n\ngit push origin -d refs/heads/bad/name/one refs/heads/bad/name/two\n\n▲ Using git remote prune or git fetch -p\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: Git: get the list of branches into which current branch was ever merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25681823",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --merged my-feature\n\ngit branch -a --merged branch4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Erase git branch that got duplicated with the same name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31501058",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch    -> should output 1 dev\ngit branch -a -> should print the 2 branches (local on top and remote on bottom)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: how to check all the commits of one branch is present in an another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34195289",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --merged origin/<branch_name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('33. Usage scenario: Differences in "git branch" output after removing and adding again remote repository')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35179345",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n* master\n  remotes/origin/HEAD -> origin/master\n  remotes/origin/foo -> origin/master\n  remotes/origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: Can't find local files after pushing new git branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41292915",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit remote show origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Cannot checkout branch from GitHub forked repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50765446",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#fetch the branch")]),s._v("\ngit fetch origin issue799\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#see if origin/issue799 exists")]),s._v("\ngit branch -a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if yes")]),s._v("\ngit checkout issue799\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if not, create the local branch from FETCH_HEAD")]),s._v("\ngit checkout -b issue799 FETCH_HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#the next push after you make some new commits")]),s._v("\ngit push -u origin issue799\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to merge deteched commits to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45789443",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout <sha-1 of commit>\n\ngit checkout branchname\n\ngit reflog\n\ngit checkout <sha-1 of commit 13>\n\ngit branch -a \n\ngit checkout -b <branch-name>\n\ngit checkout master\ngit merge <branch-name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Git: Cannot pull branch back into local (Couldn't find remote ref)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51060772",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# first delete the failed new branch")]),s._v("\ngit branch -D local-branch-you-just-created-when-trying-to-solve-the-problem\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get all up-to-date remote references into your local repo")]),s._v("\ngit fetch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (optionnally) list all branches to be sure")]),s._v("\ngit branch -a\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# to avoid typos, copy-paste the line with your branch in your next checkout")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# which will recreate a local version of said remote branch")]),s._v("\ngit checkout name-of-the-branch-you-try-to-recover-from-remote\n\ngit checkout origin/feature_A\n\ngit checkout feature_A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("h2",{attrs:{id:"all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[s._v("#")]),s._v(" 🔹 --all")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I search for branch names in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 139    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31787945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all | grep <id>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: GIT pulling or cloning repository only gets Master branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 60    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13204972",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit checkout [any_individual_branch_name]\n\ngit branch -v --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v('3. Usage scenario: How can I "splice" two (or more) completely unrelated linear branch ancestries into a new one?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25930104",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("A---B------C--D [branch1]\n\n  X---Y--Z [branch2]\n\n▲ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Splicing"')]),s._v(" two unrelated branches\n▲ Generalization to more than two branches\nA ----- o ---- o [branch1]\n\n   o ----- o ---- o -- o [branch2]\n\n...\n\n o ----- o - o [branchn]\n\ngit rev-list --reverse --max-parents=0 --all\n\ngit branch -r --contains `git rev-list --reverse --max-parents=0 --all | head -1`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Does Git somehow stores the list of child commits efficiently")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22709066",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all --contains <commithash>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to fetch remote branch properly?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67995246",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"l"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[s._v("#")]),s._v(" 🔹 -l")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git list of branch names of specific remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 47    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-remote.html"}},[s._v("git ls-remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10076537",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("git@vonc-VirtualBox:~/ce/ce6/.git$ git ls-remote origin")]),s._v("\n8598d26b4a4bbe416f46087815734d49ba428523    HEAD\n8598d26b4a4bbe416f46087815734d49ba428523    refs/heads/master\n38325f657380ddef07fa32063c44d7d6c601c012    refs/heads/test_trap\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("git@vonc-VirtualBox:~/ce/ce6/.git$ git ls-remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --heads")]),s._v(" origin")]),s._v("\n8598d26b4a4bbe416f46087815734d49ba428523    refs/heads/master\n38325f657380ddef07fa32063c44d7d6c601c012    refs/heads/test_trap\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("git@vonc-VirtualBox:~/ce/ce6/.git$ git ls-remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --heads")]),s._v(" origin  | sed ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s?.*refs/heads/??'")]),s._v("\nmaster\ntest_trap\n\ngit branch -r -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<remote>/<pattern>'")]),s._v("\ngit for-each-ref "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/<remote>/<pattern>'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Using git subtree merging, while also merging in all branches of all merged subtrees")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2139427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.;s.remotes.tags/all.')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\ngit for-each-ref --shell --format \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --force --track -l all/%(refname:short) %(refname:short)'")]),s._v(" refs/remotes \\\n  | sh\n\nmkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.remotes.heads/all.')\"")]),s._v("\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.g')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("h2",{attrs:{id:"list"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[s._v("#")]),s._v(" 🔹 --list")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Getting a list of branches that were merged into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23303903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --list -a --merged integrationBranch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^..//;s/ .*//'")]),s._v(" | xargs git branch --list -a --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Rename Git branch folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32458845",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin\nfor branch in $(git branch --list "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"feature/*"')]),s._v(")\ndo\n newbranch="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hamster/${branch#feature/}"')]),s._v("\n # locally create new branch based on old one\n git checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("\n git checkout -b "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${newbranch}"')]),s._v("\n # push the new branch to the remote\n git push --set-upstream "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${newbranch}"')]),s._v("\n # delete old branch remotely and locally\n git push "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('":${branch}"')]),s._v("\n git branch -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git Command To Find Previous Branch of Specific Type")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55963389",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --sort=version:refname\n\ngit branch --list -r *release/v* --sort=-version:refname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: shurtcut git branch checkout")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61473228",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("readarray -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" branches < <(git branch --list "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*$1*"')]),s._v(")\nlen=${#branches[@]}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"show-current"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#show-current"}},[s._v("#")]),s._v(" 🔹 --show-current")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get the current branch name in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3375    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6245587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch\n\ngit rev-parse --abbrev-ref HEAD\n\ngit branch --show-current\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I show up the current branch in WSL ( I use Vscode)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62589123",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --show-current\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Displaying current branch while outside of git repository directory?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59037117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git --git-dir=subfolder/.git branch --show-current\n\nfind . -maxdepth 2 -type d -name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git"')]),s._v(" -exec echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{} :"')]),s._v(" ; -execdir git branch --show-current ;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"v"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[s._v("#")]),s._v(" 🔹 -v")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I delete all Git branches which have been merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3556    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6127884",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ UPDATE:\ngit branch --merged\n\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v("\n\n▲ If you want to skip, you can add it to the egrep command like the following. The branch skip_branch_name will not be deleted.\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev|skip_branch_name)"')]),s._v("\n\ngit branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v(" | xargs git branch -d\n\ngit branch -d branchname\n\n▲ If it's not merged, use:\ngit branch -D branchname\n\ngit push --delete origin branchname\n\ngit push origin :branchname    # for really old git\n\ngit remote prune origin\n\ngit branch -dr branchname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to fetch all Git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2600    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10312587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR answer\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\ngit fetch --all\ngit pull --all\n\n▲ Complete answer\ngit fetch --all\n\ngit pull --all\n\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to prune local tracking branches that do not exist on remote anymore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1141    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17029936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Delete local Git branches after deleting them on the remote repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 192    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17987721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ The quick way\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make sure we keep master\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YOUR_BRANCH_TO_KEEP"')]),s._v(" | xargs -n 1 git branch -d\n\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -Ev "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\*|master|develop|staging)"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make this an alias\nalias gbpurge="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --merged | grep -Ev \"(\\*|master|develop|staging)\" | xargs -n 1 git branch -d'")]),s._v("\n\n. ~/.bashrc\n\n. ~/.zshrc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Track all remote git branches as local branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 133    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/379842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for i in `git branch -a | grep remote | grep -v HEAD | grep -v master`; do git branch --track ${i#remotes/origin/} $i; done\n\nfor remote in `git branch -r `; do git branch --track $remote; done\n\nfor remote in `git branch -r `; do git checkout $remote ; git pull; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git Hub Clone All Branches At Once")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 77    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40318872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master `; do\n   git branch --track ${branch#remotes/origin/} $branch\ndone\n\ngit branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to update my fork to have the same branches and tags as the original repository on github?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15781173",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep origin | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $remote/$brname ; done\n\ngit pull --rebase --all\n\ngit push --all maxandersen\ngit push --tags maxandersen\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Checkout all branches from remote as tracking branches. Based on    https://stackoverflow.com/questions/379081/track-all-remote-git-branches-as-local-branches/6300386#6300386")]),s._v("\n\nUPSTREAM=$1\nMYREPO=$2\n\nusage() {\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage:"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 <upstream-remote> <target-remote>"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Example which ensures remote named 'maxandersen' have all the same branches and tags as 'origin'\"")]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 origin maxandersen"')]),s._v("\n   exit 1\n}\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" ]\nthen\n echo Missing upstream remote name.\n usage\nfi\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MYREPO"')]),s._v(" ]\nthen\n echo Missing target remote name. \n usage\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"1. This will setup '$MYREPO' to track all branches in '$UPSTREAM' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n for brname in `git branch -r | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $UPSTREAM/$brname ; done\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"2. This will push all local branches and tags into '$MYREPO' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n git push --all $MYREPO\n git push --tags $MYREPO\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Git-svn: Bulk removing orphaned remote branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7209462",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s|^[[:space:]]*||'")]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^tags/'")]),s._v(" > git-branch-list\n\nfor i in `cat old-branch-list`; do git branch -d -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; rm -rf .git/svn/refs/remotes/"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: git pull all branches from remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18911322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $remote/$brname $brname ; done\n\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --track $brname $remote/$brname  ; done\n\nremote=origin ; // put here the name of the remote you want\nfor brname in `\n  git branch -r | grep $remote | grep -v master | grep -v HEAD \n  | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("\n`; do \n  git branch --set-upstream-to $remote/$brname $brname; \n  # or\n  git branch --track $brname  $remote/$brname ; \ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: switch branch in git by partial name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11388904",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.sco "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!sh -c \"git branch -a | grep -v remotes | grep $1 | xargs git checkout\"'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Delete all git branches which have been merged - Fatal: branch name required?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43055670",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v("\n\ngit branch -d\n\ngit branch --merged |\n egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v(" |\n xargs --no-run-if-empty git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Removing git repository objects entirely from all branches and tags and pushing changes to remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10633774",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Configure the repository to push all existing branches & tags")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# when none are explicitly specified")]),s._v("\ngit config --add remote.origin.push "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+refs/tags/*:refs/tags/*'")]),s._v("\ngit config --add remote.origin.push "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'+refs/heads/*:refs/heads/*'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Make sure all local branches exist, so they get filtered")]),s._v("\nfor remote_branch in `git branch --all | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\*//'")]),s._v("`; do local_branch=`echo $remote_branch | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s!remotes/origin/!!'")]),s._v("`; git checkout $local_branch; done\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent git <1.7.7.1 from complaining about dirty working directory")]),s._v("\ngit update-index -q --ignore-submodules --refresh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Do the filtering across --all branches and rewrite tags")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that this will necessarily remove signatures on tags")]),s._v("\ngit filter-branch -f --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rm -rf --ignore-unmatch modules/custom/mymigration/data/photos/*"')]),s._v(" --tag-name-filter cat -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Remove the backed-up refs")]),s._v("\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Clear out the reflog and garbage-collect")]),s._v("\ngit reflog expire --expire=now --all\ngit gc --aggressive --prune=now\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Push all changes to origin - pushes tags and branches")]),s._v("\ngit push origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How can I delete all Git remote branches which are older than a year?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46923307",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Delete no-merged branches which are older then one year\n    #!/bin/bash\n    \n    tarBranch=$(git branch -r --no-merged | grep -v master | grep -v developer | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    for branch in $tarBranch\n    do\n     echo $branch\n     lastDate=$(git show -s --format=%ci origin/$branch)\n     convertDate=$(echo $lastDate | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 1)\n     Todate=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$convertDate"')]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     current=$(date +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     day=$(( ( $current - $Todate )/60/60/24 ))\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last commit on $branch branch was $day days ago"')]),s._v("\n     if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$day"')]),s._v(" -gt 365 ]; then\n        git push origin :$branch\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete the old branch $branch"')]),s._v("\n     fi\n    done\n\n▲ Delete the merged branches which are older than five months\n    #!/bin/bash\n    \n    git checkout master\n    #deleted merged branches on master branch\n    tarBranch=$(git branch -r --merged | grep -v master | grep -v develop | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    for branch in $tarBranch\n    do\n     echo $branch\n     lastDate=$(git show -s --format=%ci origin/$branch)\n     convertDate=$(echo $lastDate | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 1)\n     Todate=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$convertDate"')]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     current=$(date +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     day=$(( ( $current - $Todate )/60/60/24 ))\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last commit on $branch branch was $day days ago"')]),s._v("\n     if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$day"')]),s._v(" -gt 150 ]; then\n        git push origin :$branch\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete the old branch $branch"')]),s._v("\n     fi\n    done\n\n    git checkout develop\n    #deleted merged branches on developer branch\n    tarBranch=$(git branch -r --merged | grep -v master | grep -v develop | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    for branch in $tarBranch\n    do\n     echo $branch\n     lastDate=$(git show -s --format=%ci origin/$branch)\n     convertDate=$(echo $lastDate | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 1)\n     Todate=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$convertDate"')]),s._v(" +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     current=$(date +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%s'")]),s._v(")\n     day=$(( ( $current - $Todate )/60/60/24 ))\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last commit on $branch branch was $day days ago"')]),s._v("\n     if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$day"')]),s._v(" -gt 150 ]; then\n        git push origin :$branch\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"delete the old branch $branch"')]),s._v("\n     fi\n    done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to ensure everything has been pushed with git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14873063",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")])]),s._v("\n  develop                             44e61b5 <Commit message>\n  feature/CodeContracts               c26edee <Commit message>\n* feature/Foo                         3a40e22 <Commit message>\n  master                              e68e28a <Commit message>\n  remotes/origin/HEAD                 -> origin/master\n  remotes/origin/develop              44e61b5 <Commit message>\n  remotes/origin/feature/Bar          be9666c <Commit message>\n  remotes/origin/master               e68e28a <Commit message>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Git: How to list branches with info about tracked remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7730033",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a -v\n\ngit branch -a -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to tell which local branch is out of date with remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19019029",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -v\n\ngit branch -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to determine branch parent for rebase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40267625",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --oneline \\\n  | cut -f 1 -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" \\\n  | (while read commit ; do\n       other_branches="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git branch --contains $commit | egrep -v '^\\* ')\"")]),s._v("\n       if [ -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${other_branches}"')]),s._v(" ] ; then\n         echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${commit} is in:\\n${other_branches}"')]),s._v("\n         break\n       fi\n     done)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How do I get the information about each branch of my git local repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61112075",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -v |\nperl -wlne'\n   print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$3 --\x3e $ENV{reponame} [$1] $2"')]),s._v("\n      if /^..(\\S+)\\s+([a-f0-9]+)\\s+(\\[(?:ahead|behind)\\s+\\d+\\])/\n' |\nwhile IFS= read -r MOD; do\n   printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{%s}\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MOD"')]),s._v("  # Replace with code that uses $MOD\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to remove remote origin from branch name after converting from svn to git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52974535",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m old_name new_name\n\nfor branch in `git branch -r | grep -v tags`; do\n    new_branch=$(echo $branch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(")\n    git branch $branch $branch\n    git branch -m $branch $new_branch\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Gitlab: import my old gitlab repository folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48309920",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("CURRENT_PROJECT="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<project-name>"')]),s._v("\nCURRENT_GROUP="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<group-name>"')]),s._v("\ngit clone C:/Users/<user>/Desktop/repositories/$CURRENT_GROUP/$CURRENT_PROJECT.git $CURRENT_PROJECT\ncd $CURRENT_PROJECT\ngit remote set-url origin http://<server-address>/$CURRENT_GROUP/$CURRENT_PROJECT.git\n\nfor branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master `; do\n   git branch --track ${branch#remotes/origin/} $branch\ndone\n\ngit push --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: git: How do I get the hash of the latest commit in the current branch when in detached HEAD state?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23172595",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -v --contains HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Remove all local closed branch depends on its remote status")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24673780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | xargs -n 1 git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Git: Pull everything from bare usb remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25663746",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch -t $brname $remote/$brname ; done \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Merge two git repos into one without renaming files")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15517913",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Init a git repo which will contain the merge of the two repos, each in its own subdirectory")]),s._v("\ncd ~/dev\nmkdir Merged\ncd Merged\ngit init\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dummy initial commit to create a master branch")]),s._v("\ngit commit --allow-empty -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Clone first repo")]),s._v("\ncd ..\ngit clone <RepoA url>\ncd RepoA\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout all branches")]),s._v("\nfor remote in `git branch -r | grep -v master `; do git checkout --track $remote ; done\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prepend subdirectory to all committed files paths in all branches")]),s._v("\ngit filter-branch -f --prune-empty --tree-filter ' mkdir -p .sub;\n  find . -mindepth 1 -exec mv {} .sub;\n  mv .sub RepoA\n  ' -- --glob=refs/heads/*\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Garbage cleanup")]),s._v("\ngit gc --aggressive\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Same steps for second repo")]),s._v("\ncd ..\ngit clone <RepoB URL>\ncd RepoB\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Checkout all branches  ")]),s._v("\nfor remote in `git branch -r | grep -v master `; do git checkout --track $remote ; done\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prepend subdirectory to all committed files paths in all branches")]),s._v("\ngit filter-branch -f --prune-empty --tree-filter ' mkdir -p .sub;\n  find . -mindepth 1 -exec mv {} .sub;\n  mv .sub RepoB\n  ' -- --glob=refs/heads/*\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Garbage cleanup")]),s._v("\ngit gc --aggressive\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge modified repos into unified repo")]),s._v("\ncd ../Merged\ngit remote add RepoA ../RepoA\ngit remote add RepoB ../RepoB\ngit fetch --all\nfor remote in `git branch -r`; do git checkout -b $remote --track $remote ; done\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Merge wanted branches (usually master) from each original repo into the master branch of the unified repo")]),s._v("\ngit checkout master\ngit merge RepoA/master\ngit merge RepoB/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Remove remotes")]),s._v("\ngit remote rm RepoA\ngit remote rm RepoB\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Garbage cleanup")]),s._v("\ngit gc --aggressive\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# All done")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Optionally push into a new empty remote repository")]),s._v("\ngit remote add RepoMerged <Merged Repo URL>\ngit push --all RepoMerged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to pull a branch from remote when you accidentally deleted local branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18489342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --track <local branch name> <remote branch name>\n\ngit branch -r | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(HEAD|master)"')]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/origin\\///"')]),s._v(" | xargs -I % git branch --track % origin/%\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: Git - Clean up of old branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33154464",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" branch_to_remove")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" `git branch | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" master`")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -D")]),s._v(" `git branch | grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master\\|another_branch'")]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Pull all branches from remote through it's mirror bare remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19297298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\n\ncd my_rep\ngit remote add group_origin /url/to/group_origin\ngit fetch group_origin\n\ngit checkout --track -b branch_x group_origin/branch_x\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Git current branch commits list")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26670080",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log HEAD $(git branch -a | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^*"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\->"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/^ /--not /"')]),s._v(")\n\ngit config --global alias.branchlog "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!git log HEAD $(git branch -a | grep -v "^*" | grep -v "\\->" | sed "s/^ /--not /")\'')]),s._v("\n\ngit log HEAD --not master --not origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"vv"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#vv"}},[s._v("#")]),s._v(" 🔹 -vv")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I see which Git branches are tracking which remote / upstream branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1319    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4952368",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -vv   # doubly verbose!\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Find out which remote branch a local branch is tracking")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1178    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12538667",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -vv")])]),s._v("\n  main   aaf02f0 [main/master: ahead 25] Some other commit\n* master add0a03 [jdsumsion/master] Some commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to prune local tracking branches that do not exist on remote anymore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1141    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17029936",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | egrep -v -f /dev/fd/0 <(git branch -vv | grep origin) | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v(" | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: List all local branches without a remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 128    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31776247",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if (!$2) print $1;}'")]),s._v("\n\n[alias]\n  local-branches = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'\"")]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2 !~/\\/origin\\// { print $1 }'")]),s._v("\n\ngit branch -vv | cut -c 3- | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$3 !~/\\[/ { print $1 }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git command to show branch upstream")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-name-rev.html"}},[s._v("git name-rev")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27952587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -vv \n\ngit name-rev @{u}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Printing Unpushed Branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17529993",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -vv | grep ahead\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Git: How to list branches with info about tracked remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7730033",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a -v\n\ngit branch -a -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to configure git put push only some branches and ignore others?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17450803",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Set push policy to upstream:\ngit config --global push.default=upstream\n\n▲ Then, make sure the private branches have no upstream branch set (that would probably be the case if you haven't set it up manually)\ngit branch -vv\n\n▲ If there are any remote tracking branches, remove them with:\ngit branch -d -r origin/<remote branch name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Push remote specific branches with different names")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30775418",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config default.push upstream\n\ngit checkout --track -b fork-master fork/master\n\ngit branch -vv\n\ngit push fork fork-master fork-test fork-updates fork-123\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to fetch remote branch properly?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67995246",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all -vv\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: git delete local branch if remote is deleted as alias")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48347436",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[alias] deletedone = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!f() { git fetch -p && git branch -vv | grep ': gone]' | awk '{print $1}' | xargs git branch -D; }; f\"")]),s._v("\n\ngit config alias.deletedone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git fetch -p && git branch -vv | grep '")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(": gone]"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("{print $1}"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | xargs git branch -D; }; f'\n\ngit config --global alias.deletedone "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git fetch -p && git branch -vv | grep \": gone]\" | awk '")]),s._v("\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("{print $1}"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | xargs git branch -D; }; f'\n\ngit config --global alias.deletedone '!f() { git fetch -p && git branch -vv | \\\n  perl -wne "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v("print "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1\\n"')]),s._v(" if m/^\\s*(\\S+)\\s+[0-9a-f]+\\s+\\[\\S+: gone\\]/;"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\''")]),s._v(" | \\\n  xargs git branch -d; }; f'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: GIT: command to check current branch is present in remote tracking branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33098705",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -vv")])]),s._v("\n* master 1c33b92 [origin/master] Description\nb1 1c3c81 [origin/b2] Description of b1\nc1 2d4d92 Description of c1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"verbose"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#verbose"}},[s._v("#")]),s._v(" 🔹 --verbose")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: List git branches that can safely be deleted")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2353809",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master # or whatever branch you might compare against ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merged")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")])]),s._v("\n\no <--- experimental\n|\no\n|\no <--- next\n|\no\n|\no <--- master\n|\no----o <--- broken\n|\no\n|\n\n\n$ for branch in `git branch --no-color --verbose | \\\nsed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/*//'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("`; \\\ndo echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[$branch]"')]),s._v("; git checkout -q $branch; git branch --merged; done\n\n[broken]\n* broken\n[master]\n* master\n[next]\nmaster\n* next\n[experimental]\nmaster\nnext\n* experimental\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Order branches in "),e("code",[s._v("git branch --all")]),s._v(" by branch name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31061493",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all --verbose | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^[ *] //'")]),s._v(" | while read line; do echo $(basename $(echo $line | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $1 }'")]),s._v(")) $line; done | sort | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f2-\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"q"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[s._v("#")]),s._v(" 🔹 -q")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list all tags within a certain git branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32169239",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ To print all tags, that point to a certain commit, you can do:\ngit for-each-ref refs/tags | grep HASH\n\n▲ Or if you are on Windows and don't use Cygwin or similar:\ngit for-each-ref refs/tags | find "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HASH"')]),s._v("\n\n▲ If you want the tag name only, you can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t use Git'")]),s._v("s --format , because we need it for grep"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ing. Thus we need to strip the stuff we aren'")]),s._v("t interested in away in the final step (Linux/Cygwin):\ngit for-each-ref refs/tags | grep HASH | sed -r "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*refs\\/tags\\/(.*)/\\1/"')]),s._v("\n\ngit for-each-ref refs/tags --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" | while read x\ndo\n    if git branch --contains $x | grep -q "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^[ *] master$"')]),s._v("\n        then echo $x\n    fi\ndone\n\ngit log --simplify-by-decoration --decorate --pretty=oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v(" | fgrep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'tag: '")]),s._v("\n\n (HEAD, tag: Test-Tag1, tag: Test-Tag2, Test-Tag3, fork/devel, devel)\n (tag: Another-Tag)\n (tag: And-Another)\n\nimport os\nfrom subprocess import call\n\nprint("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v(" * 80)\n\ndirpath = r"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"D:\\Projekte\\arangodb"')]),s._v(" # << Put your repo root path here!\n\ntagdir = os.path.join(dirpath, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".git"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs"')]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tags"')]),s._v(")\ncommitspath = os.path.join(dirpath, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_commit_list.tmp"')]),s._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# could probably read from stdin directly somewhow instead of writing to file...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# write commits in local master branch to file")]),s._v("\nos.chdir(dirpath)\nos.system("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git rev-list refs/heads/master > "')]),s._v(" + commitspath)\n\ntags = {}\nfor tagfile in os.listdir(tagdir):\n    with open(os.path.join(tagdir, tagfile), "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"r"')]),s._v(") as file:\n        tags[file.read().strip()] = tagfile\n\ntags_set = set(tags)\n\ncommits = {}\nwith open(commitspath, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"r"')]),s._v(") as file:\n    for line in file:\n        commits[line.strip()] = 1\nos.remove(commitspath)\n\ncommits_set = set(commits)\n\nfor commit in sorted(commits_set.intersection(tags_set), key=lambda x: tags[x]):\n    print(tags[commit])\n\nTest-Tag1\nTest-Tag2\nTest-Tag3\nAnother-Tag\nAnd-Another\n\ngit tag --list --branch master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Determine whether two Git branches have diverged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9909098",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git_is_merged () {\n    local revlist\n    if revlist=$(git rev-list -1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --not "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("); then\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$revlist"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$1' IS merged into '$2'.\"")]),s._v("\n        else\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$1' is NOT merged into '$2'.\"")]),s._v("\n        fi\n    fi\n}\n\nalias gim="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git_is_merged'")]),s._v("\n\ngit branch --contains origin/devel | grep -q origin/master && echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merged"')]),s._v(" || echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not merged"')]),s._v("\n\ngit branch --merged origin/master | grep -q origin/devel && echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merged"')]),s._v(" || echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not merged"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("h2",{attrs:{id:"abbrev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abbrev"}},[s._v("#")]),s._v(" 🔹 --abbrev")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Show information about only the current branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38710195",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --list -v `git rev-parse --abbrev-ref HEAD`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-abbrev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-abbrev"}},[s._v("#")]),s._v(" 🔹 --no-abbrev")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Head commit for all remote branches using Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3893370",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r -v --no-abbrev\n\ngit show-ref\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"t"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#t"}},[s._v("#")]),s._v(" 🔹 -t")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Split one subfolder from git repository with all branches and history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47084338",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone https://github.com/USERNAME/REPOSITORY-NAME")]),s._v("\n$ cd REPOSITORY-NAME\n\n$ for i in $(git branch -r | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/.*origin\\///"')]),s._v("); do git branch -t $i origin/$i; done\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --subdirectory")]),s._v("-filter FOLDER-NAME --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --prune")]),s._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tree")]),s._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'rm -rf FOLDER-NAME'")]),s._v(" -- --all\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/REPOSITORY-NAME.git (push)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote set-url origin https://github.com/USERNAME/NEW-REPOSITORY-NAME.git")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (fetch)\norigin  https://github.com/USERNAME/NEW-REPOSITORY-NAME.git (push)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")])]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I delete a branch with the name starting with '-'")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20034725",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D -- -t\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How do you make a patch showing the difference between the branch before the first commit and the last committed version in the same branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40532837",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you branched off master,\ngit diff master...ticket20\n\n▲ If you branched off a remote or otherwise tracked your branchpoint with git branch -t or git config branch.autosetupmerge true, \ngit diff ticket20@{u}...ticket20\n\n▲ If you've got it checked out,\ngit diff @{u}...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git: Pull everything from bare usb remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25663746",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch -t $brname $remote/$brname ; done \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"track"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#track"}},[s._v("#")]),s._v(" 🔹 --track")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to fetch all Git branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2600    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10312587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ TL;DR answer\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\ngit fetch --all\ngit pull --all\n\n▲ Complete answer\ngit fetch --all\n\ngit pull --all\n\ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Track a new remote branch created on GitHub")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 276    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11262780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch\ngit branch --track branch-name origin/branch-name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Track all remote git branches as local branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 133    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/379842",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for i in `git branch -a | grep remote | grep -v HEAD | grep -v master`; do git branch --track ${i#remotes/origin/} $i; done\n\nfor remote in `git branch -r `; do git branch --track $remote; done\n\nfor remote in `git branch -r `; do git checkout $remote ; git pull; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Deleting a badly named git branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1192194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D -- --track\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git Hub Clone All Branches At Once")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 77    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40318872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master `; do\n   git branch --track ${branch#remotes/origin/} $branch\ndone\n\ngit branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to update my fork to have the same branches and tags as the original repository on github?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 52    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15781173",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep origin | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $remote/$brname ; done\n\ngit pull --rebase --all\n\ngit push --all maxandersen\ngit push --tags maxandersen\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("## Checkout all branches from remote as tracking branches. Based on    https://stackoverflow.com/questions/379081/track-all-remote-git-branches-as-local-branches/6300386#6300386")]),s._v("\n\nUPSTREAM=$1\nMYREPO=$2\n\nusage() {\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Usage:"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 <upstream-remote> <target-remote>"')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Example which ensures remote named 'maxandersen' have all the same branches and tags as 'origin'\"")]),s._v("\n   echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0 origin maxandersen"')]),s._v("\n   exit 1\n}\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" ]\nthen\n echo Missing upstream remote name.\n usage\nfi\n\nif [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MYREPO"')]),s._v(" ]\nthen\n echo Missing target remote name. \n usage\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"1. This will setup '$MYREPO' to track all branches in '$UPSTREAM' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n for brname in `git branch -r | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$UPSTREAM"')]),s._v(" | grep -v master | grep -v HEAD | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/.*\\///g'")]),s._v("`; do git branch --track $brname  $UPSTREAM/$brname ; done\nfi\n\nread -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"2. This will push all local branches and tags into '$MYREPO' - Are you sure ?\"")]),s._v(" -n 1 -r\n\nif [[ $REPLY =~ ^[Yy]$ ]]\nthen\n git push --all $MYREPO\n git push --tags $MYREPO\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git pull all branches from remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18911322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $remote/$brname $brname ; done\n\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --track $brname $remote/$brname  ; done\n\nremote=origin ; // put here the name of the remote you want\nfor brname in `\n  git branch -r | grep $remote | grep -v master | grep -v HEAD \n  | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("\n`; do \n  git branch --set-upstream-to $remote/$brname $brname; \n  # or\n  git branch --track $brname  $remote/$brname ; \ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to rebase one repo to another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2247827",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add project2 <path_to_project_2>\ngit fetch project2\ngit branch --track project2Branch project2/master\ngit checkout project2Branch\n\ngit checkout master # or whatever branch you want to rebase\ngit rebase <hash-for-commit>\n\ngit remote rm project2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: I accidentally created a git local branch called --track, how can I delete it?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2752290",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -d -- --track\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How do I setup a staging repository in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7843015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd repo_B\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --bare")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add upstream URL_FOR_REPO_A")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream +master:refs/heads/x_master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch master x_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream +master:refs/heads/x_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push upstream")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone URL_FOR_REPO_A")]),s._v("\n$ cd repoDir\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add dev URL_FOR_REPO_B")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch dev")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),s._v(" master_b dev/master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master_b")]),s._v("\n$ <resolve conflicts, if any>\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master")]),s._v("\n\n▲ Note 1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git configure branch.upstream.fetch +master:refs/heads/x_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git configure"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --add")]),s._v(" branch.upstream.fetch +branch_1_0:refs/heads/x_branch_1_0")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n\n▲ Note 2\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Using git subtree merging, while also merging in all branches of all merged subtrees")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2139427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.;s.remotes.tags/all.')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\ngit for-each-ref --shell --format \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --force --track -l all/%(refname:short) %(refname:short)'")]),s._v(" refs/remotes \\\n  | sh\n\nmkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.remotes.heads/all.')\"")]),s._v("\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.g')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: git cannot delete local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22108695",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -D -- --track\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: git-svn import only branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-svn.html"}},[s._v("git svn")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4291377",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("[~]$ git svn fetch release-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),s._v(" SVN_BRANCHED_REVISION")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("[~]$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --track")]),s._v(" release git-svn-release-branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("[~]$ git checkout release")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("[~]$ git svn rebase")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: is my branch tracking to master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9858953",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --track stats_page origin/stats_page\n\ngit branch --track stats_page\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Gitlab: import my old gitlab repository folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48309920",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("CURRENT_PROJECT="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<project-name>"')]),s._v("\nCURRENT_GROUP="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<group-name>"')]),s._v("\ngit clone C:/Users/<user>/Desktop/repositories/$CURRENT_GROUP/$CURRENT_PROJECT.git $CURRENT_PROJECT\ncd $CURRENT_PROJECT\ngit remote set-url origin http://<server-address>/$CURRENT_GROUP/$CURRENT_PROJECT.git\n\nfor branch in `git branch -a | grep remotes | grep -v HEAD | grep -v master `; do\n   git branch --track ${branch#remotes/origin/} $branch\ndone\n\ngit push --all\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to pull updates from remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6605414",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --track L remote/R\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How to pull a branch from remote when you accidentally deleted local branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18489342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --track <local branch name> <remote branch name>\n\ngit branch -r | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(HEAD|master)"')]),s._v(" | sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/origin\\///"')]),s._v(" | xargs -I % git branch --track % origin/%\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: List all remote branches that are behind master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39711863",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master    \ngit branch -r | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\->'")]),s._v(" | while read remote; do git branch --track "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${remote#origin/}"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$remote"')]),s._v("; done #set tracking of all remote branches\ngit fetch --all # fetch all remote branches to the local repository\ngit pull --all # update all local branches\nfor BRANCH in `git branch --list | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\*//g'")]),s._v("`\ndo\n    COMMITS_AHEAD_OF_MASTER=`git log master..$BRANCH`\n    if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$COMMITS_AHEAD_OF_MASTER"')]),s._v(" ]\n    then\n        COMMITS_BEHIND_MASTER=`git log $BRANCH..master`\n        if [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$COMMITS_BEHIND_MASTER"')]),s._v(" ]\n        then\n            echo $BRANCH >> up_to_date.txt\n        else\n            echo $BRANCH >> behind.txt\n        fi\n    else\n        echo $BRANCH >> ahead.txt\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"no-track"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-track"}},[s._v("#")]),s._v(" 🔹 --no-track")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Import a git repository with all its history into an existing git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14516663",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add temp staging_path/(reponame)\ngit fetch temp\ngit fetch --tags temp ## optional -- may pull in additional history\nfor remote in $(git branch -r | grep temp/ ) ; do git branch --no-track imported_$(basename $remote) $remote ; done ## create local branches prefixed with "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'imported_'")]),s._v("\ngit remote rm temp ## optional -- assumes you no longer plan to use the source repo\n\ngit merge -s ours --no-commit imported_master ## mysterious "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"merge strategy"')]),s._v("\ngit read-tree -u --prefix=(reponame)/ imported_master ## move to sub-folder\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"set-upstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-upstream"}},[s._v("#")]),s._v(" 🔹 --set-upstream")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Make an existing Git branch track a remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4515    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2286030",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As of Git 1.8.0:\ngit branch -u upstream/foo\n\ngit branch -u upstream/foo foo\n\ngit branch --set-upstream-to=upstream/foo\n\ngit branch --set-upstream-to=upstream/foo foo\n\n▲ As of Git 1.7.0 (before 1.8.0):\ngit branch --set-upstream foo upstream/foo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to change the remote a branch is tracking?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1326    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4879224",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Using git v1.8.0 or later:\ngit branch branch_name --set-upstream-to your_new_remote/branch_name\n\n▲ Or you can use the -u switch\ngit branch branch_name -u your_new_remote/branch_name\n\n▲ Using git v1.7.12 or earlier\ngit branch --set-upstream branch_name your_new_remote/branch_name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to pull remote branch from somebody else's repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 438    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5884825",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add coworker git://path/to/coworkers/repo.git\ngit fetch coworker\ngit checkout --track coworker/foo\n\ngit checkout foo\ngit pull\n\ngit branch --set-upstream foo colin/foo\n\ngit remote add colin git://path/to/colins/repo.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git checkout tag, git pull fails in branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 118    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15949751",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch --set-upstream master origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Change from master to a new default branch git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 31    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51274682",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b develop\n\ngit pull origin master\n\ngit checkout develop-local\ngit branch --set-upstream-to origin/develop-remote\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to make the master branch track?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 25    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5112408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream master origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: git : how to specify a default remote push-to branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3599554",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git branch --set-upstream-to abc origin/master\n\ngit branch --set-upstream-to abc origin/master\n\n▲ Note the -to added to --set-upstream since git1.8.0.\n▲ Since Git1.7.0:\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: git pull all branches from remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18911322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $remote/$brname $brname ; done\n\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --track $brname $remote/$brname  ; done\n\nremote=origin ; // put here the name of the remote you want\nfor brname in `\n  git branch -r | grep $remote | grep -v master | grep -v HEAD \n  | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("\n`; do \n  git branch --set-upstream-to $remote/$brname $brname; \n  # or\n  git branch --track $brname  $remote/$brname ; \ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How do I keep two git repositories in sync?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14371044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add origin [USER]@laptop:/home/[USER]/git_test\ngit pull # Complains about untracked branch while adding the branch you want to track\ngit branch --set-upstream master origin/master\ngit pull\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to restore Git bare repository from local one")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23397289",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git init --bare\n\ngit remote set-url origin <Remote_URL>\ngit push origin master\ngit branch --set-upstream-to=origin/master master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: git: disable automatic pushing to a certain remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6083666",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -m some_branch a_branch_name_not_present_on_some_remote\n\ngit config --global push.default tracking\ngit branch --set-upstream some_branch origin/totally_different_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git Tracking Upstream")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11012861",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream upstream_master upstream/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: Pushing a new branch in GIT")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39867826",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream origin yourbranch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: git pull from branch complains about which branch to merge with")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10514676",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream basics origin/basics\n\ngit push -u origin my_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to set upstream branch in git-svn?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-version.html"}},[s._v("git version")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25270876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ This seems to be a bug introduced in git 1.9, since --set-upstream-to worked before exactly as you mention.\nAnd strace displays correct locating and reading of the upstream branch ref, then however it's ignored for some reason.\n$ cat >> .git/config << EOF\n\n[branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("]\n        remote = .\n        merge = refs/svn/trunk\n        rebase = true\nEOF\n\ngit branch --set-upstream-to=svn/trunk master\n\n▲ I still reproduce this on git version 2.1.4. Anyone to bother file a bug report?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Master branch is ahead of a deleted branch by 2 commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48195543",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch -d -r origin/RailsApi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: After git remote remove, my local commit status changed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45385382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: One git command to create new local branch, push to origin, track origin")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36287888",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b new_branch origin/master &&\ngit push origin new_branch &&\ngit branch --set-upstream-to origin/new_branch\n\ngit config --global alias.newb "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f(){ git checkout -b $1 origin/$2 && git push origin &1 && git branch --set-upstream-to origin/$1 };f"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How to fork and a Git repo to my repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18807665",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone https://github.com/usrname/Spoon-Knife.git\ncd Spoon-Knife\ngit fetch --tags\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\ngit remote add test https://github.com/usrname/test.git\ngit config push.default matching\ngit push --all\ngit push --tags\ngit config push.default simple\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#u"}},[s._v("#")]),s._v(" 🔹 -u")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Make an existing Git branch track a remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4515    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2286030",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As of Git 1.8.0:\ngit branch -u upstream/foo\n\ngit branch -u upstream/foo foo\n\ngit branch --set-upstream-to=upstream/foo\n\ngit branch --set-upstream-to=upstream/foo foo\n\n▲ As of Git 1.7.0 (before 1.8.0):\ngit branch --set-upstream foo upstream/foo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Find a Git branch containing changes to a given file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 102    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[s._v("gitk")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6258472",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("FILENAME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<filename>"')]),s._v("\ngit log --all --format=%H $FILENAME | while read f; do git branch --contains $f; done | sort -u\n\ngitk --all --date-order -- $FILENAME\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" refs/heads | grep -v master | while read br; do git cherry master $br | while read x h; do if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"`git log -n 1 --format=%H $h -- $FILENAME`"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$h"')]),s._v(" ]; then echo $br; fi; done; done | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Fetching a Git Branch Under a Different Name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42514085",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch <remote>\ngit checkout -b <local-branch> <remote>/<remote-branch>\n\ngit checkout <local-branch>\ngit branch -u <remote>/<remote-branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to set a git branch to push to a remote with a different branch name and pull from completely different url")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12969042",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config push.default upstream\ngit config push.default review \ngit branch --set-upstream hotfix review/JistChanges\n\ngit branch -u review/JistChanges hotfix\n\ngit remote set-url --push origin\ngit config remote.origin.push refs/heads/hotfix:JistChanges\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How can I pull from one remote and push to another with git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24337920",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout foo\ngit branch -u foo contributor/foo\n\ngit remote add contributor https://github.com/user/fork_repo\n\ngit config remote.pushdefault origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How do I get a new git branch to show its state relative to its remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31089325",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -u origin/branch_name\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to link local branches to corresponding remote branches and avoid/limit unwanted local push to different branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32715783",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -u")]),s._v(" origin/brA prod-brA")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Pull a remote master to a non-forked repo's branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32529779",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add upstream https://github...\n\ngit fetch upstream\n\ngit branch -u upstream/master gh-pages\n\ngit checkout gh-pages\ngit merge upstream/master gh-pages\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("h2",{attrs:{id:"set-upstream-to"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-upstream-to"}},[s._v("#")]),s._v(" 🔹 --set-upstream-to")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Make an existing Git branch track a remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4515    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2286030",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ As of Git 1.8.0:\ngit branch -u upstream/foo\n\ngit branch -u upstream/foo foo\n\ngit branch --set-upstream-to=upstream/foo\n\ngit branch --set-upstream-to=upstream/foo foo\n\n▲ As of Git 1.7.0 (before 1.8.0):\ngit branch --set-upstream foo upstream/foo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: git checkout tag, git pull fails in branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 118    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15949751",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch --set-upstream master origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Update a local branch with the changes from a tracked remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 83    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11278576",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\ngit branch -f --track my_local_branch origin/my_remote_branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# OR (if my_local_branch is currently checked out):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --set")]),s._v("-upstream-to my_local_branch origin/my_remote_branch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# if you weren't already on my_local_branch branch:")]),s._v("\ngit checkout my_local_branch \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then:")]),s._v("\ngit pull\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to make an existing branch track a remote branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21730821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --set")]),s._v("-upstream-to origin/master")]),s._v("\nBranch master set up to track remote branch master from origin.\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git : how to specify a default remote push-to branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 22    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3599554",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ git branch --set-upstream-to abc origin/master\n\ngit branch --set-upstream-to abc origin/master\n\n▲ Note the -to added to --set-upstream since git1.8.0.\n▲ Since Git1.7.0:\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: git pull all branches from remote repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18911322",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $remote/$brname $brname ; done\n\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --track $brname $remote/$brname  ; done\n\nremote=origin ; // put here the name of the remote you want\nfor brname in `\n  git branch -r | grep $remote | grep -v master | grep -v HEAD \n  | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("\n`; do \n  git branch --set-upstream-to $remote/$brname $brname; \n  # or\n  git branch --track $brname  $remote/$brname ; \ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to make Local branches configured for 'git pull':")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12154280",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout -b springdevelopment \ngit add .\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial commit'")]),s._v("\ngit push -u origin springdevelopment \n\ngit checkout --track origin/springdevelopment \n\ngit branch --set-upstream-to origin/springdevelopment\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to restore Git bare repository from local one")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23397289",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git init --bare\n\ngit remote set-url origin <Remote_URL>\ngit push origin master\ngit branch --set-upstream-to=origin/master master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to import local git repository to github?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59673153",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add origin https://github.com/...\ngit branch --set-upstream-to=origin/master master\n\ngit clone https://github.com/...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to set upstream branch in git-svn?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-version.html"}},[s._v("git version")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25270876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ This seems to be a bug introduced in git 1.9, since --set-upstream-to worked before exactly as you mention.\nAnd strace displays correct locating and reading of the upstream branch ref, then however it's ignored for some reason.\n$ cat >> .git/config << EOF\n\n[branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("]\n        remote = .\n        merge = refs/svn/trunk\n        rebase = true\nEOF\n\ngit branch --set-upstream-to=svn/trunk master\n\n▲ I still reproduce this on git version 2.1.4. Anyone to bother file a bug report?\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: After git remote remove, my local commit status changed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45385382",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Master branch is ahead of a deleted branch by 2 commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48195543",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/master master\n\ngit branch -d -r origin/RailsApi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to fork and a Git repo to my repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18807665",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone https://github.com/usrname/Spoon-Knife.git\ncd Spoon-Knife\ngit fetch --tags\nremote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\ngit remote add test https://github.com/usrname/test.git\ngit config push.default matching\ngit push --all\ngit push --tags\ngit config push.default simple\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Pull all branches from remote through it's mirror bare remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19297298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("remote=origin ; for brname in `git branch -r | grep $remote | grep -v master | grep -v HEAD | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{gsub(/[^\\/]+\\//,\"\",$1); print $1}'")]),s._v("`; do git branch --set-upstream-to $brname  $remote/$brname ; done\n\ncd my_rep\ngit remote add group_origin /url/to/group_origin\ngit fetch group_origin\n\ngit checkout --track -b branch_x group_origin/branch_x\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How do I get the latest version of a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60634172",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --set-upstream-to=origin/somebranch/develop somebranch/develop\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h2",{attrs:{id:"unset-upstream"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unset-upstream"}},[s._v("#")]),s._v(" 🔹 --unset-upstream")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I rename both a Git local and remote branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1511    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30590238",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Renaming local and remote\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Rename the local branch to the new name")]),s._v("\ngit branch -m <old_name> <new_name>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Delete the old branch on remote - where <remote> is, for example, origin")]),s._v("\ngit push <remote> --delete <old_name>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or shorter way to delete remote branch [:]")]),s._v("\ngit push <remote> :<old_name>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent git from using the old name when pushing in the next step.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Otherwise, git will use the old upstream name instead of <new_name>.")]),s._v("\ngit branch --unset-upstream <new_name>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Push the new branch to remote")]),s._v("\ngit push <remote> <new_name>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Reset the upstream branch for the new_name local branch")]),s._v("\ngit push <remote> -u <new_name>\n\n▲ Renaming Only remote branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# In this option, we will push the branch to the remote with the new name")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# While keeping the local name as is")]),s._v("\ngit push <remote> <remote>/<old_name>:refs/heads/<new_name> :<old_name>\n\n▲ Important note:\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: find remote branches that are not merged into a specific remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66548640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --no-merged origin/develop\n           ^^             ^^^^^^^ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --help")])]),s._v("\nNAME\n       git-branch - List, create, or delete branches\n\nSYNOPSIS\n       git branch [--color[=<when>] | --no-color] [--show-current]\n               [-v [--abbrev=<length> | --no-abbrev]]\n               [--column[=<options>] | --no-column] [--sort=<key>]\n               [(--merged | --no-merged) [<commit>]]\n               [--contains [<commit]] [--no-contains [<commit>]]\n               [--points-at <object>] [--format=<format>]\n               [(-r | --remotes) | (-a | --all)]                           # <----\n               [--list] [<pattern>...]\n       git branch [--track | --no-track] [-f] <branchname> [<start-point>]\n       git branch (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n       git branch --unset-upstream [<branchname>]\n       git branch (-m | -M) [<oldbranch>] <newbranch>\n       git branch (-c | -C) [<oldbranch>] <newbranch>\n       git branch (-d | -D) [-r] <branchname>...\n       git branch --edit-description [<branchname>]\n\nDESCRIPTION\n...\n       -r, --remotes\n           List or delete (if used with -d) the remote-tracking branches. \n           Combine with --list to match the optional pattern(s).\n...\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"edit-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#edit-description"}},[s._v("#")]),s._v(" 🔹 --edit-description")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to use the remote branch name in merge commit messages?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44492270",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("  git branch --edit-description\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: find remote branches that are not merged into a specific remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66548640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --no-merged origin/develop\n           ^^             ^^^^^^^ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --help")])]),s._v("\nNAME\n       git-branch - List, create, or delete branches\n\nSYNOPSIS\n       git branch [--color[=<when>] | --no-color] [--show-current]\n               [-v [--abbrev=<length> | --no-abbrev]]\n               [--column[=<options>] | --no-column] [--sort=<key>]\n               [(--merged | --no-merged) [<commit>]]\n               [--contains [<commit]] [--no-contains [<commit>]]\n               [--points-at <object>] [--format=<format>]\n               [(-r | --remotes) | (-a | --all)]                           # <----\n               [--list] [<pattern>...]\n       git branch [--track | --no-track] [-f] <branchname> [<start-point>]\n       git branch (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n       git branch --unset-upstream [<branchname>]\n       git branch (-m | -M) [<oldbranch>] <newbranch>\n       git branch (-c | -C) [<oldbranch>] <newbranch>\n       git branch (-d | -D) [-r] <branchname>...\n       git branch --edit-description [<branchname>]\n\nDESCRIPTION\n...\n       -r, --remotes\n           List or delete (if used with -d) the remote-tracking branches. \n           Combine with --list to match the optional pattern(s).\n...\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"contains"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contains"}},[s._v("#")]),s._v(" 🔹 --contains")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list branches that contain a given commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1612    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1419637",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ From the git-branch manual page:\n git branch --contains <commit>\n\n git branch -r --contains <commit>\n\nfetch = +refs/heads/*:refs/remotes/origin/*\n\n▲ If you need to include other ref namespace (pull request, Gerrit, ...), you need to add that new refspec, and fetch again:\ngit config --add remote.origin.fetch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"+refs/pull/*/head:refs/remotes/origin/pr/*"')]),s._v("\ngit fetch\ngit branch -r --contains <commit>\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -1")]),s._v(" tests")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit d590f2ac0635ec0053c4a7377bd929943d475297")]),s._v("\nAuthor: Nick Quaranto <nick@quaran.to>\nDate:   Wed Apr 1 20:38:59 2009 -0400\n\n    Green all around, finally.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" d590f2")]),s._v("\n  tests\n* master\n\n▲ Note: if the commit is on a remote tracking branch, add the -a option.\n(as MichielB comments below)\ngit branch -a --contains <commit>\n\n           __*__*__*__*__> <upstream>\n          /\nfork-point\n          \\__+__+__-__+__+__-__+__> <head>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Using Git, show all commits that are in one branch, but not the other(s)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 345    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1710951",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains branch-to-delete\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git: How to find out on which branch a tag is?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 140    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15806668",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains tags/<tag>\n\n git rev-parse --verify tags/<tag>^{commit}\n # or, shorter:\n git rev-parse tags/<tag>~0\n\ngit branch --contains <commit>\n\ngit branch -a --contains tags/<tag>\ngit branch -a --contains <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I determine if a given git hash exists on a given branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 125    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2444924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git branch -a --contains 4f08c85ad\n* master\n  remotes/origin/bug_872\n  remotes/origin/bug_898\n  remotes/origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git: check if commit xyz in remote repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 88    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5549506",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\n\ngit branch -r --contains xyz\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Show the original branch for a commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 44    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4535867",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" d590f2")]),s._v("\n  tests\n* master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-list tests | grep d590f2")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to check if a commit has been merged to my current branch - somewhere in time?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35101826",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Solution\ngit branch --contains ab123456\n\ngit branch -r --contains ab123456\n\n▲ References\n▲ Note\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How can I check whether a branch has been merged into another branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42821535",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How do you remove a branch and all of its history locally and remotely?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[s._v("git gc")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34699362",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains 666bad\ngit tag --contains 666bad\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'delete %(refname)'")]),s._v(" refs/original | git update-ref --stdin\ngit reflog expire --expire=now --all\ngit gc --prune=now\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Git only allow merge from development into master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43376982",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# $1 is a merge commit.  Find all its parents, except the first")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# (which is "on" the branch being merged-into and hence not relevant).')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For each remaining parent, find which branch(es) contain them.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# If those branch heads *are* them, consider that the "source" of the merge.')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note that this means if branches A and B both name commit 1234567,")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and you merge commit 1234567 into branch master, this considers")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the merge (with its one parent) to merge both branches A and B.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# That may not be ideal, but it is what we get...")]),s._v("\nmerges_from()\n{\n    local branches b src\n\n    set -- $($GIT rev-list --parents --no-walk $1)\n    shift 2\n    for i do\n        # git branch --contains may print something like\n        #    * (no branch)\n        # or\n        #    * (detached from blah)\n        # if HEAD is detached.  This should not happen in\n        # a bare repo, but if it does, we'll add HEAD to\n        # our list.\n        branches=$($GIT branch --merged $i |\n            sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\* (.*)/HEAD/'")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^[* ]//'")]),s._v(")\n        set -- $branches\n        src="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n        for b do\n            if [ $($GIT rev-parse $b) = $i ]; then\n                src="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${src}${src:+ }$b"')]),s._v("\n            fi\n            [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$src"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ] && src="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-"')]),s._v("\n        done\n        echo $src\n    done\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How can I see what branch another branch was forked from?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4804023",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains $(git merge-base customers/acme_patches devel stable)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" $(git merge-base customers/acme_patches devel stable)")]),s._v("\ncustomers/acme_patches\ndevel\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" $(git merge-base customers/acme_patches devel stable)")]),s._v("\ncustomers/acme_patches\ndevel\nstable\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Delete multiple branches in a single run")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56669240",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Also, if needed, maybe consider having a first command to generate the branch list, and pass the result to the branch command. For example if you decided to delete merged branches\ngit branch -d `git branch --merged`\n\n▲ or, other hypothetical situation, if you want to get rid of all branches having some bad commit (introduced a bug)\ngit branch -d `git branch --contains <bad-commit>`\n\ngit push -d origin <branchList>\n\ngit remote prune origin\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v('13. Usage scenario: How do I identify which remote branches a given SHA-1 "belongs to"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9019265",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" <SHA-1>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Determine branch name from git commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56798886",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains <hash>\ngit tag --contains <hash>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: How to check whether a Git commit exists on some remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65612198",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --contains")]),s._v(" <commit-sha>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to get list of all branches created off a GIT branch (get all sub branches of a branch)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27167903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains commitid\n\ngit branch --contains Rel2\n\ngit branch -r --contains commitid\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: How can I reliably parse git branch output to capture just the branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55928602",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains <commit_id> --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: How to make every user delete a branch locally")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33148299",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains origin/messed_up_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How do I list branches that have been pushed to a remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25681298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains name_of_local_branch | grep -c remotes/origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Find (/delete) local branches with content that's already pushed")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Takes one optional argument with the name of the remote (origin by default)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Prevent shell expansion to not list the current files when we hit the '*' on the current branch")]),s._v("\nset -f\n\nif [ $# -eq 1 ]\nthen\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\nelse\n  remote="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),s._v("\nfi\n\nfor b in `git branch`; do\n\n  # Skip that "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v("\n  if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b"')]),s._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*"')]),s._v(" ]]\n  then\n    continue\n  fi\n\n  # Check if the current branch tip is also somewhere on the remote\n  if [ `git branch -a --contains $b | grep -c remotes/$remote` != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" ]\n  then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$b is safe to delete"')]),s._v("\n    # git branch -D $b\n  fi\ndone\n\nset +f\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Does Git somehow stores the list of child commits efficiently")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22709066",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --all --contains <commithash>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to checkout a commit's child?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35824320",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ A commit can have unlimited children. If you want to see all the histories that trace back to a commit you can \ngit log --all --ancestry-path ^$commit\n\ngit branch --contains $commit\ngit tag --contains $commit\n\n▲ with whatever display options you want.  If you want to automate finding commits whose parent is a particular commit you could start with \nchild-commits() { \n        git rev-list --all --ancestry-path --parents ^$1^{} \\\n        | awk /$(git rev-parse $1^{})"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/ {print $1}'")]),s._v("\n}\n\n▲ But if you just want to see where you've been, use\ngit reflog\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: git: How do I get the hash of the latest commit in the current branch when in detached HEAD state?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23172595",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -v --contains HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Git: Show all remote branches that a faulty branch has been merged into")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35166677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --contains <branch name> -r\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"merged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merged"}},[s._v("#")]),s._v(" 🔹 --merged")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I delete all Git branches which have been merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3556    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6127884",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ UPDATE:\ngit branch --merged\n\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v("\n\n▲ If you want to skip, you can add it to the egrep command like the following. The branch skip_branch_name will not be deleted.\ngit branch --merged| egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev|skip_branch_name)"')]),s._v("\n\ngit branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|main|dev)"')]),s._v(" | xargs git branch -d\n\ngit branch -d branchname\n\n▲ If it's not merged, use:\ngit branch -D branchname\n\ngit push --delete origin branchname\n\ngit push origin :branchname    # for really old git\n\ngit remote prune origin\n\ngit branch -dr branchname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Delete local Git branches after deleting them on the remote repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 192    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17987721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ The quick way\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make sure we keep master\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"YOUR_BRANCH_TO_KEEP"')]),s._v(" | xargs -n 1 git branch -d\n\ngit branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | grep -Ev "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\*|master|develop|staging)"')]),s._v(" | xargs -n 1 git branch -d\n\n▲ Make this an alias\nalias gbpurge="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --merged | grep -Ev \"(\\*|master|develop|staging)\" | xargs -n 1 git branch -d'")]),s._v("\n\n. ~/.bashrc\n\n. ~/.zshrc\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: remove branches not on remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18380712",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged origin/master | xargs git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: List git branches that can safely be deleted")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2353809",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master # or whatever branch you might compare against ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merged")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")])]),s._v("\n\no <--- experimental\n|\no\n|\no <--- next\n|\no\n|\no <--- master\n|\no----o <--- broken\n|\no\n|\n\n\n$ for branch in `git branch --no-color --verbose | \\\nsed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/*//'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $1}'")]),s._v("`; \\\ndo echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[$branch]"')]),s._v("; git checkout -q $branch; git branch --merged; done\n\n[broken]\n* broken\n[master]\n* master\n[next]\nmaster\n* next\n[experimental]\nmaster\nnext\n* experimental\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git list branches merged into a branch but not into another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8071358",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" comm -12 <(sort <(git branch --no-merged master)) <(sort <(git branch --merged integration))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Delete all git branches which have been merged - Fatal: branch name required?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43055670",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged | egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v("\n\ngit branch -d\n\ngit branch --merged |\n egrep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(^\\*|master|dev)"')]),s._v(" |\n xargs --no-run-if-empty git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Checking if develop branch has been merged into feature branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32619594",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")])]),s._v("\n* main\n  side\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-merged")]),s._v("\n  ahead\n$ \n\n$ if git merge-base --is-ancestor side main; then\n>     echo side is merged into main\n> fi\nside is merged into main\n$ \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Getting a list of branches that were merged into another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23303903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --list -a --merged integrationBranch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^..//;s/ .*//'")]),s._v(" | xargs git branch --list -a --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How can I tell what GIT branches are not fully merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17282261",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# merge branch without fast forward and commit")]),s._v("\ngit merge --no-ff --no-commit branchname\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# code review")]),s._v("\ngit diff\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit the merge")]),s._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'merged: branchname'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# view the branches that have been merged already")]),s._v("\ngit branch --merged\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# view the branches that have NOT been merged yet")]),s._v("\ngit branch --no-merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Get only remote branches that have already been merged into master/develop")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51041015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git branch -r --merged master | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin/"')]),s._v(" \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Purging redundant branches from git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21984044",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -v")])]),s._v("\norigin git@github.com:you/repo.git (fetch)\norigin git@github.com:you/repo.git (push)\nupstream git://github.com/original/repo.git (fetch)\nupstream git://github.com/original/repo.git (push)\n\n▲ List all local branches that are merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch upstream")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\nmy-feature\nmy-other-feature\nmaster\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" my-other-feature")]),s._v("\n\n▲ Delete local references to remote branches that don't exist\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote prune origin")]),s._v("\n\n▲ Delete remote branches which have been merged\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --merged")]),s._v(" upstream/master")]),s._v("\norigin/my-feature\norigin/my-other-feature\nupstream/someone-elses-branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :my-feature")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --delete")]),s._v(" origin my-other-feature # equivalent, just different syntax")]),s._v("\n\n▲ Script solution\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# E.g. save as ~/bin/git-cleanup, make executable and have ~/bin in your path")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# call as `git cleanup`")]),s._v("\n\necho -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Fetching latest ... "')]),s._v("\ngit fetch origin\ngit fetch upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged local feature branches ... "')]),s._v("\nbranches=`git branch --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^feature ]]; then\n        git branch -d $branch;\n    fi\ndone\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting local refs to remote branches that don\'t exist ... "')]),s._v("\ngit remote prune origin\ngit remote prune upstream\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Deleting merged remote feature and hotfix branches ... "')]),s._v("\nbranches=`git branch -r --no-color --merged upstream/master`\nfor branch in $branches;\ndo\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" =~ ^(origin)\\/(feature.*$) ]]; then\n        remote=${BASH_REMATCH[1]};\n        branch=${BASH_REMATCH[2]};\n        git push $remote :$branch;\n    fi\ndone\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"done"')]),s._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"all finished"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: How delete a local branch after merging it through a pull request? git-flow, bitbucket, sourcetree")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59886538",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# to be executed with your "main" stable branch checked out')]),s._v("\ngit branch -d $(git branch --merged)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v('13. Usage scenario: How to remove "^[[m" and "^[[32" characters in vim')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64442570",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --no-color --merged \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: Determine whether two Git branches have diverged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9909098",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git_is_merged () {\n    local revlist\n    if revlist=$(git rev-list -1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" --not "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v("); then\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$revlist"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$1' IS merged into '$2'.\"")]),s._v("\n        else\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$1' is NOT merged into '$2'.\"")]),s._v("\n        fi\n    fi\n}\n\nalias gim="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git_is_merged'")]),s._v("\n\ngit branch --contains origin/devel | grep -q origin/master && echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merged"')]),s._v(" || echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not merged"')]),s._v("\n\ngit branch --merged origin/master | grep -q origin/devel && echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Merged"')]),s._v(" || echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not merged"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: git list remote branches, order by number of commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39792540",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list --left-right --count master...test-branch\n\ngit branch --merged master\n\ngit fetch\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(push:track)"')]),s._v(" refs/heads\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: Git: How to get a list of pushed branches to remote master?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56268748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a\n\ngit branch -a | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\s*remotes/"')]),s._v("\n\ngit branch -r\n\ngit branch -r --merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Git hook to prevent creating new branches from specific branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35649638",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngetBranchName()\n{\n    echo $(git rev-parse --abbrev-ref HEAD)\n}\n\ngetMergedBranches()\n{\n    echo $(git branch --merged)\n}\n\nif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(getBranchName)"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),s._v(" ]; then\n    if [[ $(getMergedBranches) == *"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),s._v("* ]]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Don\'t create branches from the dev branch!"')]),s._v("\n        exit 1\n    fi\nfi\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: how to check all the commits of one branch is present in an another branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34195289",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --merged origin/<branch_name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Remove all local closed branch depends on its remote status")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24673780",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\*"')]),s._v(" | xargs -n 1 git branch -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: How do I cleanup remote git branches that have already been merged?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45615909",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --merged | grep -v master | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" -f2 | xargs git push origin --delete\n\ngit branch -r --merged | grep -v master | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v(" -f2- | xargs git push origin --delete\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to obtain a list of branches which are only direct ancestors of the current branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33330722",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-merged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-merged"}},[s._v("#")]),s._v(" 🔹 --no-merged")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git : List all unmerged changes in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 266    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry.html"}},[s._v("git cherry")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3602022",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --no-merged master\n\ngit cherry -v master <branch>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git list branches merged into a branch but not into another")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 20    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8071358",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" comm -12 <(sort <(git branch --no-merged master)) <(sort <(git branch --merged integration))\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Locally find all unmerged branches of origin")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18743003",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --no-merged\n\ngit branch -r --no-merged\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to find all branch still not merge to develop branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37544061",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --no-merged develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Find out if my feature branches made it to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9740108",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --merged master\n\ngit branch --no-merged master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git: find remote branches that are not merged into a specific remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66548640",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --no-merged origin/develop\n           ^^             ^^^^^^^ \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --help")])]),s._v("\nNAME\n       git-branch - List, create, or delete branches\n\nSYNOPSIS\n       git branch [--color[=<when>] | --no-color] [--show-current]\n               [-v [--abbrev=<length> | --no-abbrev]]\n               [--column[=<options>] | --no-column] [--sort=<key>]\n               [(--merged | --no-merged) [<commit>]]\n               [--contains [<commit]] [--no-contains [<commit>]]\n               [--points-at <object>] [--format=<format>]\n               [(-r | --remotes) | (-a | --all)]                           # <----\n               [--list] [<pattern>...]\n       git branch [--track | --no-track] [-f] <branchname> [<start-point>]\n       git branch (--set-upstream-to=<upstream> | -u <upstream>) [<branchname>]\n       git branch --unset-upstream [<branchname>]\n       git branch (-m | -M) [<oldbranch>] <newbranch>\n       git branch (-c | -C) [<oldbranch>] <newbranch>\n       git branch (-d | -D) [-r] <branchname>...\n       git branch --edit-description [<branchname>]\n\nDESCRIPTION\n...\n       -r, --remotes\n           List or delete (if used with -d) the remote-tracking branches. \n           Combine with --list to match the optional pattern(s).\n...\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"sort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" 🔹 --sort")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I get a list of Git branches, ordered by most recent commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2344    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5188364",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Basic Usage:\ngit for-each-ref --sort=-committerdate refs/heads/\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Or using git branch (since version 2.7.0)")]),s._v("\ngit branch --sort=-committerdate  # DESC\ngit branch --sort=committerdate  # ASC\n\n▲ Advanced Usage:\ngit for-each-ref --sort=committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(color:red)%(objectname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:relative)%(color:reset))'")]),s._v("\n\n▲ Pro Usage (Unix):\n[alias]\n    # ATTENTION: All aliases prefixed with ! run in /bin/sh make sure you use sh syntax, not bash/zsh or whatever\n    recentb = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!r() { refbranch=$1 count=$2; git for-each-ref --sort=-committerdate refs/heads --format='%(refname:short)|%(HEAD)%(color:yellow)%(refname:short)|%(color:bold green)%(committerdate:relative)|%(color:blue)%(subject)|%(color:magenta)%(authorname)%(color:reset)' --color=always --count=${count:-20} | while read line; do branch=$(echo \\\"$line\\\" | awk 'BEGIN { FS = \\\"|\\\" }; { print $1 }' | tr -d '*'); ahead=$(git rev-list --count \\\"${refbranch:-origin/master}..${branch}\\\"); behind=$(git rev-list --count \\\"${branch}..${refbranch:-origin/master}\\\"); colorline=$(echo \\\"$line\\\" | sed 's/^[^|]*|//'); echo \\\"$ahead|$behind|$colorline\\\" | awk -F'|' -vOFS='|' '{$5=substr($5,1,70)}1' ; done | ( echo \\\"ahead|behind||branch|lastcommit|message|author\\\\n\\\" && cat) | column -ts'|';}; r\"")]),s._v("\n\n▲ Result:\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to get latest commit hash from remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-remote.html"}},[s._v("git ls-remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55704573",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-remote --sort=committerdate\n\ngit rev-parse `git branch -r --sort=committerdate | tail -1`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Collecting a list of all branches in a repository in a special format [Git]")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51364727",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)%09%(committerdate)'")]),s._v(" --sort=-committerdate\n\ngit branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(color:bold green) %(refname:short) %(color:white) %(committerdate)'")]),s._v(" --sort=-committerdate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\n\nREMOTE_URL=$1\n\ngit clone -q --depth 1 --bare --no-single-branch $REMOTE_URL /tmp/temp-git-clone\ncd /tmp/temp-git-clone\ngit branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(color:bold green) %(refname:short) %(color:white) %(committerdate)'")]),s._v(" --sort=-committerdate\nrm -rf /tmp/temp-git-clone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git Command To Find Previous Branch of Specific Type")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55963389",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --sort=version:refname\n\ngit branch --list -r *release/v* --sort=-version:refname\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to list most recent 10 remote branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63247839",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --sort=-committerdate | head -n 10\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"points-at"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#points-at"}},[s._v("#")]),s._v(" 🔹 --points-at")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: See what git branches (or tags) point to given commit hash?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35444988",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --points-at <commit> --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v("\ngit branch --points-at <commit>\ngit tag --points-at <commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: List all Git branches currently at specified commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67789918",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --points-at <commit SHA>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: get all branch names associated with a particular commit hash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68715432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --points-at=<hash>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[s._v("#")]),s._v(" 🔹 --format")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: List all local branches without a remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 128    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31776247",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if (!$2) print $1;}'")]),s._v("\n\n[alias]\n  local-branches = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"!git branch --format '%(refname:short) %(upstream:short)' | awk '{if (!$2) print $1;}'\"")]),s._v("\n\ngit branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(upstream)"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2 !~/\\/origin\\// { print $1 }'")]),s._v("\n\ngit branch -vv | cut -c 3- | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$3 !~/\\[/ { print $1 }'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git: How do I list local branches that are tracking remote branches that no longer exist?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56609356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("LANG=en git branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(if:equals=gone)%(upstream:track,nobracket)%(then)%(refname:short)%(end)'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I reliably parse git branch output to capture just the branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55928602",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a --contains <commit_id> --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Delete all git branches already pushed")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56937048",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# nuke all branches* (which have no unique commit)")]),s._v("\ngit branch -d $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) refs/heads"')]),s._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# for "main" branches (I mean permanent, like master), recreate them if needed from remote')]),s._v("\ngit checkout master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Collecting a list of all branches in a repository in a special format [Git]")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51364727",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)%09%(committerdate)'")]),s._v(" --sort=-committerdate\n\ngit branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(color:bold green) %(refname:short) %(color:white) %(committerdate)'")]),s._v(" --sort=-committerdate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\n\nREMOTE_URL=$1\n\ngit clone -q --depth 1 --bare --no-single-branch $REMOTE_URL /tmp/temp-git-clone\ncd /tmp/temp-git-clone\ngit branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(color:bold green) %(refname:short) %(color:white) %(committerdate)'")]),s._v(" --sort=-committerdate\nrm -rf /tmp/temp-git-clone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Push all locally non tracked branches to the same remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/70131234",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nwhile IFS= read -r aBranch ; do {  \n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Push ${aBranch} to backup"')]),s._v(";  \n  git push backup "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${aBranch}"')]),s._v("\n};\ndone < <(git branch --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short) %(upstream:short)'")]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{if (!$2) print $1;}'")]),s._v(");\nunset aBranch ;\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Reset local repository branch to be just like remote repository HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8213    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1628334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch origin\ngit reset --hard origin/master\n\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Saving my work, just in case"')]),s._v("\ngit branch my-saved-work\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Move the most recent commit(s) to a new branch with Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7474    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1628584",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Moving to an existing branch\ngit checkout existingbranch\ngit merge master\ngit checkout master\ngit reset --hard HEAD~3 # Go back 3 commits. You *will* lose uncommitted work.\ngit checkout existingbranch\n\n▲ Moving to a new branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note: Any changes not committed will be lost.")]),s._v("\ngit branch newbranch      # Create a new branch, saving the desired commits\ngit reset --hard HEAD~3   # Move master back by 3 commits (Make sure you know how many commits you need to go back)\ngit checkout newbranch    # Go to the new branch that still has the desired commits\n\ngit reset --hard a1b2c3d4\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: moving committed (but not pushed) changes to a new branch after pull")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 587    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5066120",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rebase origin/master\n\ngit branch new-work\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Use with care - make sure "git status" is clean and you\'re still on master:')]),s._v("\ngit reset --hard origin/master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I copy the content of a branch to a new local branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 557    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14998980",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout old_branch\ngit branch new_branch\n\ngit checkout -b new_branch old_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How do I 'overwrite', rather than 'merge', a branch on another branch in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4624383",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ You can use the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'ours'")]),s._v(" merge strategy (this links to octopus merge, you have to scroll down to next option; deeplinking to the correct section is not possible):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout staging")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -s")]),s._v(" ours email # Merge branches, but use our (=staging) branch head")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout email")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge staging")]),s._v("\n\n▲ I thought a bit more about this question and possible solutions. If you absolutely require the merge parents in the correct order, need to perform this action with a single command line invocation, and don't mind running plumbing commands, you can do the following:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout A")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ff")]),s._v("-only $(git commit-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Throw away branch 'A'\"")]),s._v(" -p A -p B B^{tree})\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse A^{tree} B^{tree} HEAD^{tree}")]),s._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'original'")]),s._v(" | tee file1 file2 file3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial commit'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch A")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch B")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout A")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'A'")]),s._v(" > file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'change on branch A'")]),s._v(" file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout B")]),s._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'B'")]),s._v(" > file2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'change on branch B'")]),s._v(" file2\n\n▲ Now, let"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s try the strategy option (doesn'")]),s._v("t really matter if we use theirs or ours for this explanation):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -X")]),s._v(" ours A")]),s._v("\n$ cat file*\nA\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -s")]),s._v(" ours A")]),s._v("\n$ cat file*\noriginal\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse A^{tree} B^{tree} merge-strategy^{tree} strategy-option^{tree}")]),s._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n5b09d34a37a183723b409d25268c8cb4d073206e\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: What happens to git commits created in a detached HEAD state?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 222    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9984260",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git reflog\n\ngit branch new-branch ba5a739\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: Using git, how do I ignore a file in one branch but have it committed in another branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 86    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4044387",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch public_viewing")]),s._v("\n$ cd .git/\n$ touch info/exclude_from_public_viewing\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"path/to/secret/file"')]),s._v(" > info/exclude_from_public_viewing \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How can I display the current branch and folder path in terminal?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 79    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17334317",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("export PS1="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\[${BOLD}${MAGENTA}\\]\\u\\[$WHITE\\]@\\[$ORANGE\\]\\h\\[$WHITE\\]: [\\[$GREEN\\]\\w\\[$WHITE\\]\\$([[ -n \\$(git branch 2> /dev/null) ]] && echo \\" - \\")\\[$PURPLE\\]\\$(parse_git_branch)\\[$WHITE\\]] \\$ \\[$RESET\\]"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: How to combine two branches from two different repositories in a single repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 72    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/245240",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add <name> /path/to/other/repo/.git\ngit fetch <name>\ngit branch <name> <name>/master #optional\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Cleanup git master branch and move some commit to new branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 69    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5944586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch old_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout old_master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin old_master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" 037hadh527bn")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git pull upstream master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin :master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push origin master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to move the changes from one branch to another branch git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 64    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8085875",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch ticket\ngit reset --hard 3\ngit checkout ticket\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: Git - only push up the most recent commit to github")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 60    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2276709",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch secret\ngit reset --hard HEAD~3\ngit cherry-pick secret\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How can I move a set of commits from master to a separate branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 40    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[s._v("git clean")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1179615",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you can rewind "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'master'")]),s._v(" branch:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch separate_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" rel_2009_07_18")]),s._v("\n\n▲ If you can"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t rewind '")]),s._v("master' branch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch separate_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout rel_2009_07_18 -- .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clean"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -df")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Reverted to state at rel_2009_07_18'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("14. Usage scenario: How to remove branch from a remote (on Atlassian Stash/Bitbucket)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19363681",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch –D branch-name (delete from local)\ngit push origin :branch-name (delete from stash)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Can I rebase a Git branch without modifying my working copy?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 38    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4914298",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone project project-for-rebase\ncd project-for-rebase\ngit branch experimental origin/experimental\ngit rebase master experimental\ngit push origin experimental\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: How to get an Ansible check to run only once in a playbook?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 35    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22079408",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Updated\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("- name: Ensure local git repository is up-to-date")]),s._v("\n  local_action: git pull\n  run_once: true\n  register: command_result\n  failed_when: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'Updating' in command_result.stdout\"")]),s._v("\n\n▲ Original Answer\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env python")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# -*- coding: utf-8 -*-")]),s._v("\n\nimport os\nimport re\nimport subprocess\nimport sys\n\nfrom ansible.callbacks import display, banner\n\n\nclass CallbackModule(object):\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"Makes Ansible require that the current git branch is up to date.\n    '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v('"\n    env_var_name = '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'IGNORE_OUTDATED_GIT_BRANCH'")]),s._v("\n\n    msg = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'OUTDATED GIT BRANCH: Your git branch is out of sync with the '")]),s._v(" \\\n          "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'remote branch.  Please update your branch (git pull) before '")]),s._v(" \\\n          "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'continuing, or skip this test by setting the environment '")]),s._v(" \\\n          "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'variable {0}=yes.'")]),s._v(".format(env_var_name)\n\n    out_of_sync_re = re.compile(r"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Your branch (is behind|and .* have diverged)'")]),s._v(",\n                                re.MULTILINE)\n\n    def __init__(self, *args, **kwargs):\n        if os.getenv(self.env_var_name, "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'no'")]),s._v(") == "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yes'")]),s._v(":\n            self.disabled = True\n\n    def playbook_on_start(self):\n        subprocess.call(["),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'fetch'")]),s._v("])\n\n        if self.out_of_sync_re.search(subprocess.check_output([\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'status'")]),s._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--untracked-files=no'")]),s._v("])):\n            display(banner(self.msg), color="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bright purple'")]),s._v(")\n            sys.exit(1)\n\n __________________________________________________________\n/ OUTDATED GIT BRANCH: Your git branch is out of sync with \\\n| the remote branch. Please update your branch (git pull)  |\n| before continuing, or skip this test by setting the      |\n\\ environment variable IGNORE_OUTDATED_GIT_BRANCH=yes.     /\n ----------------------------------------------------------\n        \\   ^__^\n         \\  (oo)\\_______\n            (__)\\       )\\/\\\n                ||----w |\n                ||     ||\n\n$ IGNORE_OUTDATED_GIT_BRANCH=yes ansible-playbook site.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Git is automatically merging changes from a different branch to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 32    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8112217",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Problem\nUnexpected git behaviour \n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# First create a local git repo ")]),s._v("\n\n$mkdir gitexample \n$git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"my name"')]),s._v(" \n$git config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"me@me.com"')]),s._v(" \n$git init \n$git add . \n$git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial commit'")]),s._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create/Edit an empty file ")]),s._v("\n$vi readme.txt \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# add a single line: "this was added in the master branch." ')]),s._v("\n$git commit -a \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create and checkout a new branch (from master) ")]),s._v("\n$git branch test \n$git checkout test \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# edit the readme.txt file and do not commit ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# add the text:  "this was added in the test branch.", save and exit ')]),s._v("\n$vi readme.txt \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#now switch back to master ")]),s._v("\n$git checkout master \n$cat readme.txt \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#You will see both lines in the master.   ")]),s._v("\n\nQuestion #1: \n        Why was this line added in the *master branch? \n\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- even further surprising ")]),s._v("\nIn the master branch, now do a commit \n$git commit -a \n\ncat readme.txt ( you will see the line in the master now that was added in the test branch ) \n\nQuestion #2: \n        Why did this happen? \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now switch back to the test branch ")]),s._v("\n$git checkout test \n$cat readme.txt \n\nYou will only see the one line: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This was added in the master branch"')]),s._v(" \n\nQuestion #3: \n        Why did this happen? \n\nand NOT the line added in that branch: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this was added in the test branch"')]),s._v(" <= this line is gone \n\nWhat is the reason for this? \n\n1) Why do I see uncommitted changes in the branches made off master in the master branch? \n2) Why, if I commit them in the master, do the disappear in the branch in which they were made? \n\nThis is confusing, I would think the * master branch would be left untouched.  This would solve issue #2. \n\n▲ Reply\nOn Fri, Nov 11, 2011 at 12:55:04PM -0800, Jvsrvcs wrote: \n> Unexpected git behaviour \n> \n[ ... switch branches with local modifications ...] \n> #You will see both lines in the master.   \n> \n> Question #1: \n> Why was this line added in the *master branch? \n> \n\nIt wasn't. that line was added in the working directory. When you \nswitch branches, if the file in the tip of the current branch and the \nfile in the tip of the target branch don"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t differ, it'")]),s._v("s safe to keep \nyour local changes, so git does. This is to support the use-case where \nyou start editing a file when the wrong branch is checked out and want \nto change to the right one. \n\n> \n> --- even further surprising \n> In the master branch, now do a commit \n> $git commit -a \n> \n> cat readme.txt ( you will see the line in the master now that was added in \n> the test branch ) \n> \n> Question #2: \n> Why did this happen?\n... [show rest of quote]\n... [show rest of quote]\nBecause you told git to commit the file with that modification in it. \n\n> \n> # Now switch back to the test branch \n> $git checkout test \n> $cat readme.txt \n> \n> You will only see the one line: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This was added in the master branch"')]),s._v(" \n> \n> Question #3: \n> Why did this happen? \n\nBecause the file in the "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(" branch only has that line. As you said \nyourself, you edited the file but didn't commit. \n\n> \n> and NOT the line added in that branch: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"this was added in the test branch"')]),s._v(" \n> <= this line is gone \n\nAgain, that line wasn't added in any branch but in the working \ndirectory. The active branch was "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test'")]),s._v(", but doesn't magically mean \nthat uncommitted changes travel with it. \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br"),e("span",{staticClass:"line-number"},[s._v("64")]),e("br"),e("span",{staticClass:"line-number"},[s._v("65")]),e("br"),e("span",{staticClass:"line-number"},[s._v("66")]),e("br"),e("span",{staticClass:"line-number"},[s._v("67")]),e("br"),e("span",{staticClass:"line-number"},[s._v("68")]),e("br"),e("span",{staticClass:"line-number"},[s._v("69")]),e("br"),e("span",{staticClass:"line-number"},[s._v("70")]),e("br"),e("span",{staticClass:"line-number"},[s._v("71")]),e("br"),e("span",{staticClass:"line-number"},[s._v("72")]),e("br"),e("span",{staticClass:"line-number"},[s._v("73")]),e("br"),e("span",{staticClass:"line-number"},[s._v("74")]),e("br"),e("span",{staticClass:"line-number"},[s._v("75")]),e("br"),e("span",{staticClass:"line-number"},[s._v("76")]),e("br"),e("span",{staticClass:"line-number"},[s._v("77")]),e("br"),e("span",{staticClass:"line-number"},[s._v("78")]),e("br"),e("span",{staticClass:"line-number"},[s._v("79")]),e("br"),e("span",{staticClass:"line-number"},[s._v("80")]),e("br"),e("span",{staticClass:"line-number"},[s._v("81")]),e("br"),e("span",{staticClass:"line-number"},[s._v("82")]),e("br"),e("span",{staticClass:"line-number"},[s._v("83")]),e("br"),e("span",{staticClass:"line-number"},[s._v("84")]),e("br"),e("span",{staticClass:"line-number"},[s._v("85")]),e("br"),e("span",{staticClass:"line-number"},[s._v("86")]),e("br"),e("span",{staticClass:"line-number"},[s._v("87")]),e("br"),e("span",{staticClass:"line-number"},[s._v("88")]),e("br"),e("span",{staticClass:"line-number"},[s._v("89")]),e("br"),e("span",{staticClass:"line-number"},[s._v("90")]),e("br"),e("span",{staticClass:"line-number"},[s._v("91")]),e("br"),e("span",{staticClass:"line-number"},[s._v("92")]),e("br"),e("span",{staticClass:"line-number"},[s._v("93")]),e("br"),e("span",{staticClass:"line-number"},[s._v("94")]),e("br"),e("span",{staticClass:"line-number"},[s._v("95")]),e("br"),e("span",{staticClass:"line-number"},[s._v("96")]),e("br"),e("span",{staticClass:"line-number"},[s._v("97")]),e("br"),e("span",{staticClass:"line-number"},[s._v("98")]),e("br"),e("span",{staticClass:"line-number"},[s._v("99")]),e("br"),e("span",{staticClass:"line-number"},[s._v("100")]),e("br"),e("span",{staticClass:"line-number"},[s._v("101")]),e("br"),e("span",{staticClass:"line-number"},[s._v("102")]),e("br"),e("span",{staticClass:"line-number"},[s._v("103")]),e("br"),e("span",{staticClass:"line-number"},[s._v("104")]),e("br"),e("span",{staticClass:"line-number"},[s._v("105")]),e("br"),e("span",{staticClass:"line-number"},[s._v("106")]),e("br"),e("span",{staticClass:"line-number"},[s._v("107")]),e("br"),e("span",{staticClass:"line-number"},[s._v("108")]),e("br"),e("span",{staticClass:"line-number"},[s._v("109")]),e("br"),e("span",{staticClass:"line-number"},[s._v("110")]),e("br"),e("span",{staticClass:"line-number"},[s._v("111")]),e("br"),e("span",{staticClass:"line-number"},[s._v("112")]),e("br"),e("span",{staticClass:"line-number"},[s._v("113")]),e("br"),e("span",{staticClass:"line-number"},[s._v("114")]),e("br"),e("span",{staticClass:"line-number"},[s._v("115")]),e("br"),e("span",{staticClass:"line-number"},[s._v("116")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: Jenkins: GitSCM finishes the clone in a detached head state, how can I make sure that the correct branch name is checked out?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 31    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44023516",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("Checking out Revision 97b3493db4f726e11e33XXXba34fa808b63edec5 (origin/feature/merge_tfs)\n > git.exe config core.sparsecheckout # timeout=10\n > git.exe checkout -f 97b3493db4f726e11e33XXXba34fa808b63edec5\n > git.exe branch -a -v --no-abbrev # timeout=10\n > git.exe checkout -b feature/merge_tfs 97b3493db4f726e11e33XXXba34fa808b63edec5\n > git.exe rev-list 97b3493db4f726e11e334e5ba34fa808b63edec5 # timeout=10\n[Pipeline] bat\n[Ensure] Running batch script\n\nC:\\Program Files (x86)\\Jenkins\\workspace\\Ensure>cd C:\\Program Files (x86)\\Jenkins\\workspace\\Ensure \n\nC:\\Program Files (x86)\\Jenkins\\workspace\\Ensure>git branch \n* feature/merge_tfs\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: How does a Git repository works with a develop and master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 31    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6210318",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ A branch is not a directory. It is a commit label that moves along with commits, like tag is a commit label that stays with a particular commit. You will not have anything "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"inside"')]),s._v(" the master branch, rather master and develop will both initially label the same commit.\ngit branch develop\n\ngit init\n\nA [master]\n\n▲ If you make a new commit B, the branch label will move:\ngit commit -a\n\nA -> B [master]\n\n▲ If you then branch into develop, the B will get the new label as well:\ngit branch develop\n\nA -> B [master, develop]\n\n▲ If you commit on the develop, it will move, but master won't:\ngit checkout develop\ngit commit -a\n\nA -> B [master] -> C [develop]\n\n▲ If you now commit on the master, the tree will fork:\ngit checkout master\ngit commit -a\n\nA -> B -> C [develop]\n     +--\x3e D [master]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Lost my commit in GIT. Can you accidentally delete commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2496001",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -g\n\ngit reflog\n\ngit branch foundit HEAD@{n}  # replace n with the correct number\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: Git Subtree only one file or directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22335955",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add project git@bitbucket.org:kicaj/projectname.git\ngit branch project_master project/master\n\ngit checkout -f project_master\ngit subtree split --squash --prefix=path_of_interest_in_project -b temp_branch\n\ngit checkout -f master\ngit subtree merge --allow-unrelated-histories --prefix=directory_destination_path temp_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: Add the file on the specific branch in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24806903",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch branchname\n\ngit checkout branchname\n\ngit init\n\ngit add file name\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"your message"')]),s._v("\n\ngit push\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: How to 'git remote add' and track a branch in the same filesystem")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 21    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5149946",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add b /b              # you've already done\ngit fetch b                      # get it so we can see it\ngit checkout -t b/z              # check out a local tracking branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git branch")]),s._v("\n  master\n* z\n\n$ mkdir origin\n$ cd origin/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/origin$ git init"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --bare")])]),s._v("\nInitialized empty Git repository in /origin/\n/origin$ cd ..\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone origin/ a")]),s._v("\nInitialized empty Git repository in /a/.git/\nwarning: You appear to have cloned an empty repository.\n$ cd a\n/a$ echo hi there > hello\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git add hello")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git ci"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'first commit'")]),s._v("\n[master (root-commit) 0867b93] first commit\n 1 files changed, 1 insertions(+), 0 deletions(-)\n create mode 100644 hello\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git push origin master ")]),s._v("\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 210 bytes, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\nTo /origin/\n * [new branch]      master -> master\n\n/a$ cd ..\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone origin/ b")]),s._v("\nInitialized empty Git repository in /b/.git/\n$ cd b\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/b$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" z")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n/b$ echo new guy reporting in >> hello \n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/b$ git ci"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new recruits"')]),s._v("\n[z 81044ee] new recruits\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\n/b$ cd ../a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git remote add b ../b")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git fetch b")]),s._v("\nremote: Counting objects: 5, done.\nremote: Total 3 (delta 0), reused 0 (delta 0)\nUnpacking objects: 100% (3/3), done.\nFrom ../b\n * [new branch]      master     -> b/master\n * [new branch]      z          -> b/z\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git br")]),s._v("\n* master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -t")]),s._v(" b/z")]),s._v("\nBranch z set up to track remote branch z from b.\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'z'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("/a$ git br")]),s._v("\n  master\n* z\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Pushing an existing Git repository to Github only sends about half the commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/276409",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* (no branch)\nmaster\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: Include Git commit hash and/or branch name in C/C++ source")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44038455",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("GIT_HASH=`git rev-parse HEAD`\nCOMPILE_TIME=`date -u +"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%Y-%m-%d %H:%M:%S UTC'")]),s._v("`\nGIT_BRANCH=`git branch | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^\\*"')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^..//'")]),s._v("`\nexport VERSION_FLAGS=-DGIT_HASH="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\"$(GIT_HASH)\\""')]),s._v(" -DCOMPILE_TIME="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\"$(COMPILE_TIME)\\""')]),s._v(" -DGIT_BRANCH="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\"$(GIT_BRANCH)\\""')]),s._v("\n\nall:\n    g++ main.cpp $(VERSION_FLAGS)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v('26. Usage scenario: Git: How to "undo" a merge')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4438310",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rebase --onto A C D\n\n$ edit test.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add .")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -mA")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" the_branch")]),s._v("\n$ edit test.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -mB")])]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master the_branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --no")]),s._v("-ff")]),s._v("\n$ edit test.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -mD")])]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" <SHA1-for-A> <SHA1-for-C> master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master # if you were not here already")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch old_fix  # if you want to be able to return to F' later")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --hard")]),s._v(" <SHA1-to-D'>")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout the_branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: Push local Git branch to origin")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3109525",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git clone git@github/somewhere")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout testing")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# something about getting and switching")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ... ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* testing \nmaster\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Re-open deleted Git branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25170231",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you merged hotfix into master and it created a merge commit at aabbcc, then you can resurrect hotfix using:\ngit branch hotfix aabbcc^2\n\n▲ The ^2 is shorthand for "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"the second parent"')]),s._v(". If you didn't create a merge commit, then just re-create hotfix using the last of its commits:\ngit branch hotfix ddeeff\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v('29. Usage scenario: How can I save a git "rebase in progress"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41687681",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Rebase = repeated cherry-pick\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\\n           B1--B2--B3   <-- branchB\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B2'")]),s._v("-B3'  <-- branchB\n            \\\n             B1--B2--B3   [abandoned]\n\n▲ Conflicts are in the index\n▲ But there's only one index\n▲ Where you are now\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1'  <-- HEAD\n            \\\n             B1--B2--B3   <-- branchB\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B2'")]),s._v("  <-- HEAD\n            \\\n             B1--B2--B3   <-- branchB\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch saveme    # or git tag saveme")]),s._v("\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B2'")]),s._v("  <-- HEAD, saveme\n            \\\n             B1--B2--B3   <-- branchB\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --abort")])]),s._v("\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B2'")]),s._v("  <-- saveme\n            \\\n             B1--B2--B3   <-- HEAD->branchB\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: GIT: Appending a patch made after a few commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[s._v("git reflog")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1545216",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ What happened\nA---B' (master)\n \\\n  \\-B---C---D\n\n▲ How to recover\ngit checkout master@{1}\ngit branch oldmaster master@{1}\n\ngit reflog show master\n\n▲ What you should have done\ngit rebase -i master~4 master\n\npick <hash-A>  <message-A>\npick <hash-B>  <message-B>\npick <hash-C>  <message-C>\npick <hash-D>  <message-D>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Rebase <hash-A^>..<hash-D> onto <hash-A^>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Commands:")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  p, pick = use commit")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  e, edit = use commit, but stop for amending")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  s, squash = use commit, but meld into previous commit")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# However, if you remove everything, the rebase will be aborted.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: Reverting a broken merge and reapplying selected commits with Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9141447",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("P-Q-1-2-3-4-A-B-C-D-X-Y-Z\n\n▲ Revert the merge commit (safest but messier)\ngit revert -m 1 M\n\ngit cherry-pick 1\ngit cherry-pick 2\ngit cherry-pick 3\ngit cherry-pick 4\ngit cherry-pick A\ngit cherry-pick B\ngit cherry-pick C\ngit cherry-pick D\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# M reverts some of A..D and 1..4")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# !M undoes the logical effect of the merge")]),s._v("\n\n    A-B-C-D\n   /       \\\nP-Q         M-X-Y-Z-!M-1"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-2'")]),s._v("-3"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-4'")]),s._v("-A"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-B'")]),s._v("-C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("\n   \\       /\n    1-2-3-4\n\n▲ Throw away the broken history (most dangerous but cleanest)\ngit checkout master\ngit reset --hard Q       # rewind `master` branch to `Q`\n\ngit checkout Z         # move to Z\ngit branch tmp         # make a branch pointing to Z\ngit rebase -i master   # rework this branch onto master\n\npick aaaaaaa Commit message one\npick bbbbbbb Commit message two\npick ccccccc Commit message three\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n\ngit checkout master\ngit reset --hard tmp\n\ngit push -f origin master\n\n▲ Finally\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Git pull request for just one file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8421689",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make sure the commit in question is the most recent")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make branch to point to the previous commit, leaving the changes in your work tree")]),s._v("\ngit reset HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit the changes to the first file")]),s._v("\ngit add file1\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make a branch for the first commit")]),s._v("\ngit branch first-branch HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit the changes to the second file")]),s._v("\ngit add file2\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create and check out a branch for this commit")]),s._v("\ngit checkout -b second-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the branch back, so that it doesn't include the first commit")]),s._v("\ngit rebase --onto HEAD^^ HEAD^ second-branch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# point your master branch somewhere that makes sense - maybe before either branch")]),s._v("\ngit checkout master\ngit reset --hard first-branch^\n\ngit push origin first-branch second-branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Set master branch to latest tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14083033",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -b exp\ngit merge -s ours master\ngit checkout master\ngit merge exp\n\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Commit msg"')]),s._v("\ngit tag -a v1.4 -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Tag msg"')]),s._v("\ngit push master --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("34. Usage scenario: How can I avoid an accidental dcommit from a local branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9330342",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("real_git=$(which git)\nfunction git {\n    if [[ ($1 == svn) && ($2 == dcommit) ]]\n    then\n        curr_branch=$($real_git branch | sed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\* //p'")]),s._v(")\n        if [[ ($curr_branch != master) && ($curr_branch != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'(no branch)'")]),s._v(") ]]\n        then\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Committing from $curr_branch; are you sure? [y/N]"')]),s._v("\n            read resp\n            if [[ ($resp != y) && ($resp != Y) ]]\n            then\n                return 2\n            fi\n        fi\n    fi\n    $real_git "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$@"')]),s._v("\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("35. Usage scenario: Print branch description")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15062356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/perl")]),s._v("\n\n$output= `git branch`;\n\nforeach my $line (split(/^/, $output)) {\n  my ($is_current, $name) = split(/\\s+/, $line);\n  my $description = `git config branch.$name.description`;\n\n  $description =~ s/\\s+$//;\n  printf("),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%1s %-22s %s\\n"')]),s._v(", $is_current, $name, $description);\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("36. Usage scenario: How to save without committing to remote repository in Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40164017",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch backup\ngit checkout backup\ngit push origin backup <- at this point everything is saved at your remote\n\ngit checkout YOUR_OLD_BRANCH (develop maybe)\n\ngit checkout backup <- anytime that you want to get your "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"last good state"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("37. Usage scenario: Create git branch without changing working copy")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41596843",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch foo")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch master foo/master")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git read-tree HEAD")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("38. Usage scenario: Create new branch from master without checking it out")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51342229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch master_copy master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("39. Usage scenario: Git: How to revert everything exactly to the state of a prior commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2399388",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch saved_work\ngit reset --hard previouscommit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("40. Usage scenario: I need to checkout single folder from a Bitbucket Git repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20724229",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd /tmp\ngit clone --depth=1 --bare git@myhosted_repo/project.git\n\n(cd project.git && git branch master)\n\nmkdir /tmp/workdir\ncd /tmp/workdir\ngit init .\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add the shallow clone as a remote")]),s._v("\ngit remote add --fetch shallow /tmp/project.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# read a subtree from the remote, shallow branch")]),s._v("\ngit read-tree --prefix somedir -u shallow/master:testcases/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("41. Usage scenario: How add two branch (master & develop) to redmine")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5105683",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'add new project TESTPROJECT and users'")]),s._v("\ngit push\n\nmkdir testproject\ncd mkproject\ngit init\ngit remote add origin git@192.168.48.15:testproject.git\ntouch readme.txt\n\ngit add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'init master branch'")]),s._v("\ngit push origin master:refs/heads/master\n\ngit branch develop\ngit checkout develop\ntouch newfile.txt\n\ngit add .\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'init develop branch'")]),s._v("\ngit push origin develop:refs/heads/develop\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("42. Usage scenario: git subtree add: change prefix preserving local commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21716758",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git subtree split --prefix=dir1 HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a branch with the printed commit just to use it later")]),s._v("\ngit branch split_dir_1 <split_commit>\n\ngit rm dir1\ngit commit\ngit subtree add --prefix=dir2 . split_commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("43. Usage scenario: Write git object file from remote repo clone")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54488867",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cd path/of/new/clone\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout 95eeac3")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch my_temp_branch")]),s._v("\n$ cd path/of/original/clone\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git remote add temp file://localhost/path/of/new/clone")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git fetch temp my_temp_branch")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("44. Usage scenario: How to fetch someone else's pull request (to fix it)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21255590",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add ...\n\ngit branch other_branch\n\ngit checkout other_branch\n\ngit checkout -b other_branch\n\ngit pull other_source other_branch\n\ngit add\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("45. Usage scenario: git default remote branch with gitolite")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7178697",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\n. $(dirname $0)/adc.common-functions\n\n[ $# -eq 2 ] || die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"usage: $0 <repo> <branch>"')]),s._v("\n\nif [ $SDB_WRITER_ALLOWED ]; then\n  # this will check only for write permission on the given repository\n  get_rights_and_owner $1 # this also set $repo variable\n  [ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$perm_write"')]),s._v(" ] && die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"You don\'t have write permission on $repo"')]),s._v("\nelse\n  # require a repository creator to change default branch\n  valid_owned_repo $1\nfi\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# move to repo dir")]),s._v("\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GL_REPO_BASE_ABS/$repo.git"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check for branch existence")]),s._v("\nmatch=`git branch | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^\\( \\|*\\) //'")]),s._v(" | grep $2`\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# this will check for an exact match in branch name  ")]),s._v("\n[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$2"')]),s._v(" = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$match"')]),s._v(" ] || die "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Unable to find branch $2 in repository $repo"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# update the default checked out branch")]),s._v("\ngit symbolic-ref HEAD refs/heads/$match   \n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Head branch for repository $1 updated to $2"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("46. Usage scenario: Can I checkout a tree object in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17605087",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git commit-tree <<treeid>>\n<<type a commit message>>\n^D\n<<this will produce a hash for the new commit object>>\ngit branch newbranch <<newcommithash>>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("47. Usage scenario: Partial git clone with relevant history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28357451",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch | grep split-")]),s._v("\nsplit-apache\nsplit-aviator\nsplit-ceilometer\nsplit-certmonger\nsplit-cinder\nsplit-common\nsplit-concat\nsplit-firewall\nsplit-pacemaker\n\nfor x in apache aviator ceilometer certmonger cinder common \\\n    concat firewall; do\n  git init --bare ../repos/repo-$x\n  git push ../repos/repo-$x split-$x:master\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("48. Usage scenario: Git: how to merge modified files only")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3110729",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ This is why it's important to manage your branches well, in particular to use topic branches and to merge upwards.\nx - x - x - x ------------- X (master)\n|\\                          |\n| x - x - x ---- X (paypal) |\n \\              /           /\n  x (bugfix) ---------------\n\n▲ If you have already made your bugfix, and you mistakenly made it on master instead of from the appropriate merge base, and the history on master hasn't been published, you should cherry-pick or rebase it to the right place:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If the bugfix commit is not at the tip of master, you can rebase to get it there:")]),s._v("\ngit rebase -i <commit before the bugfix> master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rearrange the list of commits to put the bugfix at the tip, save and quit")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now either cherry-pick or rebase the commit to the right place")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# (rebase is easier if the bugfix is actually several commits)")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Cherry-pick")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make a branch and cherry-pick")]),s._v("\ngit checkout -b bugfix <SHA1 of merge base>\ngit cherry-pick <SHA1 of bugfix>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove the commit from master, assuming it's still on the tip")]),s._v("\ngit checkout master\ngit reset --hard master^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or rebase")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make the bugfix branch (assuming it's still on the tip)")]),s._v("\ngit branch bugfix master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# and remove the commit from master (assuming it's still on the tip)")]),s._v("\ngit checkout master\ngit reset --hard master^    # or if the bugfix is composed of n commits, master~n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rebase the bugfix branch to the right place")]),s._v("\ngit rebase --onto <SHA1 of merge base> master bugfix\n\n▲ If the history has been published, all you can do is cherry-pick the bugfix onto the paypal branch, and remember to do it right the next time:\ngit checkout paypal\ngit cherry-pick <SHA1 of bugfix>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br")])]),e("p",[e("strong",[s._v("49. Usage scenario: How do I create a branch without cloning?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21919671",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("ssh dev1@remotebox git branch newbranchname\nssh dev2@remotebox git checkout newbranchname\nssh jenkinsci@remotebox git pull --quiet --no-commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("50. Usage scenario: Git: iOS Create an experimental iPad branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5682230",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Simply just branch it as if it was any other branch.\ngit branch iPadDev\n\ngit checkout iPadDev\n\n▲ Once satisfied, merge it back into master if you desire.\ngit merge iPadDev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("51. Usage scenario: How to verify the current git branch in a Windows BAT file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33662275",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("D:\\>git branch\n  master\n* staging\n\ngit branch | find "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"* master"')]),s._v(" > NUL & IF ERRORLEVEL 1 (\n    ECHO I am NOT on master\n) ELSE (\n    ECHO I am on master\n)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("52. Usage scenario: Convert hg branches to git branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21055481",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch <localname> <remotename>\n\ngit branch br1 hg/br1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("53. Usage scenario: How do I completely reset a GIT repo when I completely remake the entire project?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11573371",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# get the current stuff")]),s._v("\ngit pull origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# label the location you are about to nuke.  Pick a name that suites you.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# while this is not strictly necessary, I'd highly recommend it")]),s._v("\ngit checkout master\ngit branch release_0.9\ngit push origin release_0.9\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# change to a new branch")]),s._v("\ngit checkout -b release_1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove all the old files")]),s._v("\nls | xargs rm -rf\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy in your files here")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add all the new files")]),s._v("\ngit add -A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# commit and push your branch")]),s._v("\ngit commit\ngit push origin release_1.0\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# update master")]),s._v("\ngit push . HEAD:master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# push the new version of master")]),s._v("\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("p",[e("strong",[s._v("54. Usage scenario: Tree filter: how to remove all but one directory?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17593356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch newmaster `git subtree split -P deploy/philips`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("55. Usage scenario: Share (pull request) ONLY SOME commits with upstream repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32600067",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout master # or whatever base branch we will be using")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch GPT-99_description")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch GPT-99_description_AU")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch GPT-99_description_GA")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout GPT-99_description_GA")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add <files>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GPT-99 - AUS files - ..."')]),s._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add <files>")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"GPT-99 - ..."')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick SHA#1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git cherry-pick SHA#2")]),s._v("\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --onto")]),s._v(" GPT-99_description GPT-99_description_AU GPT-99_description_GA")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout GPT-99_description_GA")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git merge GPT-99_description_AU")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("56. Usage scenario: How do I create a git hook to prepend commit messages with branch name?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38796710",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("NAME=$(git branch | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*'")]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/* //'")]),s._v(") \necho -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NAME"')]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("': '")]),s._v("|cat - "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" > /tmp/out && mv /tmp/out "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("57. Usage scenario: How do I divide a single, large git branch into two successive branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66993224",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch b3 C\n\ngit branch b2 E\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("58. Usage scenario: In git, how do I remove a commit from a branch but keep that commit in a separate branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[s._v("git revert")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51132612",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Create a new branch from feature3. Then reset feature3 from the dev branch. However, if you have pushed these commits you will need to use revert\ngit checkout dev\ngit branch newbranch feature3\ngit reset --hard feature3\n\n▲ Now if you haven't pushed to remote\ngit reset --hard feature3\n\n▲ Or if you have pushed\ngit revert feature3\n\n▲ Also, if you want to add specific commits to newbranch, like feature7 you can use\ngit checkout newbranch\ngit cherry-pick feature7\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("59. Usage scenario: How to merge a file in dev branch to master branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10087465",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("1) git branch\n* master\n  your_new_brach\n2) git checkout your_new_brach my_file1 my_file2 my_file3\n3) git status # You will see new changes into master branch \n4) git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'Merge' changes from 'your_new_brach' branch\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("60. Usage scenario: Git: duplicate local repo with unpushed commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51084324",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$> git remote add bitbucket_origin <your-bitbucket-repo-url>\n\n$> git remote -v\n\n$> git push bitbucket_origin <your-branch-name>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# <your-branch-name> is where you're checked-out to locally")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It can be seen by:")]),s._v("\n$> git branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("61. Usage scenario: Git: Roll back to much earlier version")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14206274",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <repo-url>\n\ngit log\ngit branch\ngit tag\n\ngit checkout <commit-sha1, branch, tag>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("62. Usage scenario: How to clean the branch list?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45153016",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* branch-1\n  master\n  trunk\n$ ls .git/refs/heads/\nbranch-1  master  trunk\n$ rm .git/refs/heads/master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n* branch-1\n  trunk\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("63. Usage scenario: Git: temporarily reverting pushed commit(s)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15270014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch hotfix-20130307 ad84471\ngit push origin hotfix-20130307\n\ngit fetch\ngit checkout hotfix-20130307\n\ngit checkout master\ngit pull\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("64. Usage scenario: How to get git to ignore directory on my server?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28215098",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch releases\ngit checkout releases\n\ngit rm myApp/test\ngit commit\n\ngit merge --no-commit development\n\ngit pull origin releases\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("65. Usage scenario: How to discard changes that are already pushed to remote?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9570391",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch someBranch\ngit reset --hard HEAD~3\ngit push --force\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("66. Usage scenario: How to revert last commits on branch, merge with other branch and re-add the commits?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54997876",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit branch new_branch\ngit reset --hard HEAD~5\n\n    C-D-E new_branch\n   /\nA-B       master\n   \\[fork]\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-F'")]),s._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-H'")]),s._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-J'")]),s._v("----X' remote/master\n\ngit checkout remote/master\ngit merge -Xours master\n\n    C-D-E new_branch\n   /\nA-B---------------------------      \n   \\[fork]                    \\\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-F'")]),s._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-H'")]),s._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-J'")]),s._v("----X' remote/master, master\n\ngit checkout master\ngit rebase remote/master\n\nA-B---------------------------      \n   \\[fork]                    \\\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-D'")]),s._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-F'")]),s._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-H'")]),s._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-J'")]),s._v("----X' remote/master, master\n                                \\\n                                 C-D-E new_branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("p",[e("strong",[s._v("67. Usage scenario: How can I make this script reflect the branch status on PS1?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34817009",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("export PS1="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$USER_AND_DOMAIN$SEPARATOR$WORKING_DIR"')]),s._v("'$(git branch &>/dev/null;\\\nif [ $? -eq 0 ]; then \\\n  echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(echo `git status` | grep "')]),s._v('nothing to commit" > /dev/null 2>&1; \\\n  if [ '),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$?"')]),s._v(" -eq "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0"')]),s._v(" ]; then \\\n    # @4 - Clean repository - nothing to commit\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$SEPARATOR$GREENBOLD[$GREEN'\"")]),s._v("$(__git_ps1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v("); \\\n  else \\\n    # @5 - Changes to working tree\n     echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"'$SEPARATOR$GREENBOLD[$RED'\"")]),s._v("$(__git_ps1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%s"')]),s._v("); \\\n  fi)\"; \\\nfi)'"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GREENBOLD] $WHITEBOLD\\t\\n$RED>$WHITE"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("68. Usage scenario: Migrating two svn repos with a common history to git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-svn.html"}},[s._v("git svn")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7158968",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git svn clone -s -A svn.authors --no-metadata http://subversion.foo.local/repo1/path git_migration\ngit svn clone -s -A svn.authors --no-metadata http://subversion.foo.local/repo2/path git_migration-2\ncd git_migration\ngit branch repo1 # Branch for first repo\ngit reset --hard <highest_common_hash> # To have only common history on master\ngit checkout -b repo2 # Branch for second repo\ngit pull ../git_migration-2 master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("69. Usage scenario: How to restore a locally lost git bare repo (using separate-git-dir) with one of its remotes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58259804",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch master network/master\ngit read-tree master\n\ngit branch master network/master\n\ngit read-tree master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("70. Usage scenario: Local Gitlab installation doesn't show all commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37043315",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git add/commit first")]),s._v("\ngit branch tmp\ngit checkout master\ngit merge tmp\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("71. Usage scenario: How to checkout commits in detached head")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33669456",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch new_branch thesha\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("72. Usage scenario: GIT Workflow: Merge most of a feature branch into master, omitting one specific commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57623550",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit cherry-pick <commit id of feature 1>\n\ngit branch feature1 1A\n\nA - B [master]\n     \\\n      1A [feature1]\n        \\\n         2A - 2B [feature]\n\ngit rebase --onto master 1A 2B\n\n      2A1 - 2B1 [feature]\n     /\nA - B [master]\n     \\\n      1A [feature1]\n\ngit checkout feature\ngit branch feature1\n\nA - B [master]\n     \\\n      1A - 2A - 1B - 2B [feature]\n                        [feature1]\n\ngit checkout feature\ngit rebase -i master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete 1A and 1B")]),s._v("\n\n      2A - 2B [feature]\n     /\nA - B [master]\n     \\\n      1A - 2A - 1B - 2B [feature1]\n\ngit checkout feature1\ngit rebase -i master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete 2A and 2B")]),s._v("\n\n      2A - 2B [feature]\n     /\nA - B [master]\n     \\\n      1A - 1B [feature1]\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br")])]),e("p",[e("strong",[s._v("73. Usage scenario: How to discard stash pop in Git without dropping my uncommitted changes?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[s._v("git apply")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60351270",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch stash_data [stash hash ID]\n\n[on `master` branch, with all changes]\ngit checkout -b combined_data\ngit add [your files]\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"preparing to revert a stash pop"')]),s._v("\n\n[still on branch `combined_data`]\ngit diff stash_data master | git apply\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("74. Usage scenario: How to turn an existing, non-empty directory into a git branch of an existing non-empty git repo living in another directory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7828870",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd B\ngit branch dev\ngit commit -a\n\ncd A\ngit pull ../B dev\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("75. Usage scenario: Git: Change already pushed commit message using git rebase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[s._v("git replace")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42253273",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch backup                                 # backup your branch just for safety")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout <commit-hash>                        # checkout the commit trying to modify")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --amend")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Change message here'")]),s._v("       # change the author name and mail\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log                                           # copy the new-commit-hash")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git replace <old-commit-hash> <new-commit-hash>   # replace the old commit by new one")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch --"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --all")]),s._v(" ^<old-commit-hash>     # note ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^'")]),s._v(" before hash, rewrite all futures commits based on the replacement                   \n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git replace"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -d")]),s._v(" <old-commit-hash>                  # remove the replacement for cleanliness ")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout <branch>                             # go to branch HEAD and see if the commit is changed perfectly")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -f")]),s._v(" origin HEAD                           # force push as history is changed.")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("76. Usage scenario: How to recover deleted branch on fork from the original repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53134862",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch <name> <start>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("77. Usage scenario: How to determine if a branch has no parent commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[s._v("git status")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47141310",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ mkdir tt\n$ cd tt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\nInitialized empty Git repository in ...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git status")]),s._v("\nOn branch master\n\nNo commits yet\n\nnothing to commit (create/copy files and use "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git add"')]),s._v(" to track)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git symbolic-ref HEAD")]),s._v("\nrefs/heads/master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git rev-parse HEAD")]),s._v("\nHEAD\nfatal: ambiguous argument "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'HEAD'")]),s._v(": unknown revision or path not in the working tree.\nUse "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--'")]),s._v(" to separate paths from revisions, like this:\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git <command> [<revision>...] -- [<file>...]'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("78. Usage scenario: Project migration to new directory - keeping Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24120082",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fetch\ngit branch master origin/master\ngit reset --soft master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("79. Usage scenario: Create new branch keeping unstaged changes in Master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52805804",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch newbranch")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git branch newbranch master")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("80. Usage scenario: How to push a file inside a folder made in a github repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41088049",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git clone <repository_link> #(Https/SSH)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make required changes to this cloned local repository")]),s._v("\ngit add --all # stage all the changes\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'your commit message'")]),s._v(" # commit into the repository\ngit push <origin> <branch> # push to the remote repository\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To list available upstreams of this repository <origin>:")]),s._v("\ngit remote -v\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To see branch you are on:")]),s._v("\ngit branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("81. Usage scenario: How to commit changes on an old commit et put it on top of history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64755015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from detached HEAD")]),s._v("\ngit branch new_feature\ngit checkout feature\ngit reset --hard new_feature\ngit push --force origin feature\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from feature")]),s._v("\ngit reset --hard HEAD~1\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make changes to C3")]),s._v("\ngit commit --amend\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# make commits C4 and C5")]),s._v("\ngit push --force origin feature\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("82. Usage scenario: Get a series of commits on a detached head onto a branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15673917",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("If you want to keep them by creating a new branch, this may be a good time\nto do so with:\n\n git branch new_branch_name <SHA of fifth commit>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("83. Usage scenario: Github: Pull some commits from fork into original project")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24587031",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote add fork /url/of/fork\ngit fetch --all\ngit branch tmp fork/B\ngit checkout master\ngit merge tmp\n\ngit checkout B \ngit branch tmp \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);