(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{544:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-rebase-reapply-commits-on-top-of-another-base-tip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-rebase-reapply-commits-on-top-of-another-base-tip"}},[t._v("#")]),t._v(" 📌 git rebase - Reapply commits on top of another base tip")]),t._v(" "),e("h2",{attrs:{id:"onto"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#onto"}},[t._v("#")]),t._v(" 🔹 --onto")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to cherry-pick a range of commits and merge them into another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 914    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1994491",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ As mentioned below by Keith Kim, Git 1.7.2+ introduced the ability to cherry-pick a range of commits (but you still need to be aware of the consequence of cherry-picking for future merge)\n▲ Note: as of Git 2.9.x/2.10 (Q3 2016), you can cherry-pick a range of commit directly on an orphan branch (empty head): see "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How to make existing branch an orphan in git"')]),t._v(".\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checkout a new temporary branch at the current location")]),t._v("\ngit checkout -b tmp\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Move the integration branch to the head of the new patchset")]),t._v("\ngit branch -f integration last_SHA-1_of_working_branch_range\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase the patchset onto tmp, the old location of integration")]),t._v("\ngit rebase --onto tmp first_SHA-1_of_working_branch_range~1 integration\n\ngit rev-list --reverse --topo-order B^..D | while read rev \ndo \n  git cherry-pick $rev || break \ndone \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Change first commit of project with Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 881    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2309391",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto <tmp branch> <commit after changed> <branch>`\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Squash the first two commits in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 850    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/598788",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root master\n\npick sha1 X\nsquash sha1 Y\npick sha1 Z\n\n git checkout <sha1_for_B>\n\n git reset --soft <sha1_for_A>\n\n git commit --amend\n\n git tag tmp\n\n git checkout master\n\n git rebase --onto tmp <sha1_for_B>\n\n git tag -d tmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to copy commits from one branch to another?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 686    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2474371",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wss-starting-point is the SHA1/branch immediately before the first commit to rebase")]),t._v("\ngit branch wss-to-rebase wss\ngit rebase --onto v2.1 wss-starting-point wss-to-rebase\ngit checkout v2.1\ngit merge wss-to-rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to git rebase a branch with the onto command?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 511    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29916361",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ tl;dr\ngit checkout B\ngit rebase --onto A B^\n\n▲ The Quick: git rebase\n          Before                           After\n    A---B---C---F---G (branch)        A---B---C---F---G (branch)\n             \\                                         \\\n              D---E (HEAD)                              D---E (HEAD)\n\n▲ The Precise: git rebase --onto with 2 arguments\n          Before                           After\n    A---B---C---F---G (branch)        A---B---C---F---G (branch)\n             \\                                     \\\n              D---E---H---I (HEAD)                  E---H---I (HEAD)\n\n          Before                       After\n    A---B---C---E---F (HEAD)        A---B---F (HEAD)\n\n▲ The Surgeon: git rebase --onto with 3 arguments\n          Before                                     After\n    A---B---C---F---G (branch)                A---B---C---F---G (branch)\n             \\                                             \\\n              D---E---H---I (HEAD)                          E---H (HEAD)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Edit the root commit in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 314    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2119656",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout the root commit")]),t._v("\ngit checkout <sha1-of-root>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# amend the commit")]),t._v("\ngit commit --amend\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase all the other commits in master onto the amended root")]),t._v("\ngit rebase --onto HEAD HEAD master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Have I lost my changes after rebasing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 219    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13155341",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master <commit id for 6> my_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: Reordering of commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 165    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2740812",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i <SHA1 of commit a>^ branchA\n\ngit checkout branchB\ngit cherry-pick branchA  # cherry-pick one commit, the tip of branchA\n\ngit checkout master\ngit cherry-pick branchA^\n\ngit branch -f branchA branchA^^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create a temporary branch")]),t._v("\ngit branch fromAtoB branchA\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# move branchA back two commits")]),t._v("\ngit branch -f branchA branchA~2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase those two commits onto branchB")]),t._v("\ngit rebase --onto branchB branchA fromAtoB\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge (fast-forward) these into branchB")]),t._v("\ngit checkout branchB\ngit merge fromAtoB\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean up")]),t._v("\ngit branch -d fromAtoB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How to rebase a branch off a rebased branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 77    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31882353",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Short answer to How can I effectively rebase B off A so that it looks like B started from A?\nAssuming you want to move exactly one commit:\ngit rebase --onto A B~ B\n\n▲ If you want to move more then one commit use:\ngit rebase --onto A old_A B\n\ngit log --graph --decorate --all\n\no---o---o---o  master\n     \\\n      o---o---o  A\n               \\\n                o B\n\no---o---o-----------o  master\n     \\               \\\n      o---o---o(B~)   o---o---o A\n               \\\n                o B\n\ngit rebase --onto [target] [rebasing stops] [rebasing head]\ngit rebase --onto A B~ B\n\no---o---o----------o  master\n     \\              \\\n      o---o---o      o---o---o A\n            (old_A)           \\\n                               o B\n\n▲ Alternatively, if B was the only commit that had A as a parent, (i.e., B is the end of a chain of commits that branch off master) you could do\ngit checkout B\ngit rebase master\ngit checkout B~   # this is the commit before B (the A commit)\ngit branch -d A   # remove the old A branch (it was rebased, and so is now invalid\ngit branch A      # recreate the A branch on the commit that is based on the original A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How do I recover/resynchronise after someone pushes a rebase or a reset to a published branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 75    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[t._v("git reflog")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4084870",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout foo\ngit branch old-foo origin/foo # BEFORE fetching!!\ngit fetch\ngit rebase --onto origin/foo old-foo foo\ngit branch -D old-foo\n\ngit reflog show origin/foo | awk '\n    PRINT_NEXT==1 { print $1; exit }\n    /fetch: forced-update/ { PRINT_NEXT=1 }'\n\ngit rebase --onto origin/foo $commit foo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to change the starting point of a branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 70    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38430972",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The term "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"branch"')]),t._v(", in Git, is ambiguous\n▲ Draw your commit graph\n...--o--o--o           <-- master\n         \\\n          o--o--o--o   <-- develop\n\n...--A--B--C           <-- master\n         \\\n          D--E--F--G   <-- develop\n\n▲ Where does a branch begin?\n          o             <-- X\n         /\n...--o--o--o--o--o--o   <-- Y\n\n          C             <-- X\n         /\n...--A--B--D--E--F--G   <-- Y\n\n          C            <-- X\n         /\n...--A--B\n         \\\n          D--E--F--G   <-- Y\n\n▲ In Git, commits may be on many branches simultaneously; DAGlets are up to you\n▲ Normally we use the two-dot X..Y syntax\n▲ Git's rebase is a little bit special\n...--A--B--C           <-- master\n         \\\n          D--E--F--G   <-- develop\n\n...--A--B--C              <-- master\n            \\\n             D"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-E'")]),t._v("-F"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-G'")]),t._v("  <-- develop\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout develop")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\n\n▲ Branch names are unique, but tip commits are not necessarily so\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC\n                 \\\n                  o--o   <-- brD\n\n          o--o--o--o     <-- brA, newbranch\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC\n                 \\\n                  o--o   <-- brD\n\n          o--o--o--o     <-- brA, HEAD -> newbranch\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC\n                 \\\n                  o--o   <-- brD\n\n▲ When we make new commits, the current name moves\n                     o   <-- HEAD -> newbranch\n                    /\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC\n                 \\\n                  o--o   <-- brD\n\n▲ What git branch -f does\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" brB brC")]),t._v("\n\n                     o   <-- HEAD -> newbranch\n                    /\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    [abandoned]\n            \\\n             o--o--o     <-- brC, brB\n                 \\\n                  o--o   <-- brD\n\n▲ Reflogs\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" brB ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brB@{1}'")]),t._v("\n    # you may not need the quotes, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'brB@{...}'")]),t._v(" --\n    # I need them in my shell, otherwise the shell\n    # eats the braces.  Some shells do, some don't.\n\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- HEAD -> brC\n                 \\\n                  o--o   <-- brD\n\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC, HEAD -> newbranch\n                 \\\n                  o--o   <-- brD\n\n          o--o--o--o     <-- brA\n         /\n...--o--o--o--o--o--o    <-- brB\n            \\\n             o--o--o     <-- brC\n                 \\  \\\n                 |   o   <-- HEAD -> newbranch\n                 \\\n                  o--o   <-- brD\n\n▲ A simple git rebase copies too much\n          o--o--o--o     <-- brA\n         /\n...--*--*--*--o--o--o    <-- brB\n            \\\n             *--*--*     <-- brC\n                 \\  \\\n                 |   *   <-- HEAD -> newbranch\n                 \\\n                  o--o   <-- brD\n\n          x--x--x--x     <-- brA\n         /\n...--x--x--*--o--o--o    <-- brB\n            \\\n             *--*--*     <-- brC\n                 \\  \\\n                 |   *   <-- HEAD -> newbranch\n                 \\\n                  o--o   <-- brD\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch   # just checking...")]),t._v("\n  brA\n  brB\n  brC\n  brD\n  master\n* newbranch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" brA brC")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br"),e("span",{staticClass:"line-number"},[t._v("104")]),e("br"),e("span",{staticClass:"line-number"},[t._v("105")]),e("br"),e("span",{staticClass:"line-number"},[t._v("106")]),e("br"),e("span",{staticClass:"line-number"},[t._v("107")]),e("br"),e("span",{staticClass:"line-number"},[t._v("108")]),e("br"),e("span",{staticClass:"line-number"},[t._v("109")]),e("br"),e("span",{staticClass:"line-number"},[t._v("110")]),e("br"),e("span",{staticClass:"line-number"},[t._v("111")]),e("br"),e("span",{staticClass:"line-number"},[t._v("112")]),e("br"),e("span",{staticClass:"line-number"},[t._v("113")]),e("br"),e("span",{staticClass:"line-number"},[t._v("114")]),e("br"),e("span",{staticClass:"line-number"},[t._v("115")]),e("br"),e("span",{staticClass:"line-number"},[t._v("116")]),e("br"),e("span",{staticClass:"line-number"},[t._v("117")]),e("br"),e("span",{staticClass:"line-number"},[t._v("118")]),e("br"),e("span",{staticClass:"line-number"},[t._v("119")]),e("br"),e("span",{staticClass:"line-number"},[t._v("120")]),e("br"),e("span",{staticClass:"line-number"},[t._v("121")]),e("br"),e("span",{staticClass:"line-number"},[t._v("122")]),e("br"),e("span",{staticClass:"line-number"},[t._v("123")]),e("br"),e("span",{staticClass:"line-number"},[t._v("124")]),e("br"),e("span",{staticClass:"line-number"},[t._v("125")]),e("br"),e("span",{staticClass:"line-number"},[t._v("126")]),e("br"),e("span",{staticClass:"line-number"},[t._v("127")]),e("br"),e("span",{staticClass:"line-number"},[t._v("128")]),e("br"),e("span",{staticClass:"line-number"},[t._v("129")]),e("br"),e("span",{staticClass:"line-number"},[t._v("130")]),e("br"),e("span",{staticClass:"line-number"},[t._v("131")]),e("br"),e("span",{staticClass:"line-number"},[t._v("132")]),e("br"),e("span",{staticClass:"line-number"},[t._v("133")]),e("br"),e("span",{staticClass:"line-number"},[t._v("134")]),e("br"),e("span",{staticClass:"line-number"},[t._v("135")]),e("br"),e("span",{staticClass:"line-number"},[t._v("136")]),e("br"),e("span",{staticClass:"line-number"},[t._v("137")]),e("br"),e("span",{staticClass:"line-number"},[t._v("138")]),e("br"),e("span",{staticClass:"line-number"},[t._v("139")]),e("br"),e("span",{staticClass:"line-number"},[t._v("140")]),e("br"),e("span",{staticClass:"line-number"},[t._v("141")]),e("br"),e("span",{staticClass:"line-number"},[t._v("142")]),e("br"),e("span",{staticClass:"line-number"},[t._v("143")]),e("br"),e("span",{staticClass:"line-number"},[t._v("144")]),e("br"),e("span",{staticClass:"line-number"},[t._v("145")]),e("br"),e("span",{staticClass:"line-number"},[t._v("146")]),e("br"),e("span",{staticClass:"line-number"},[t._v("147")]),e("br"),e("span",{staticClass:"line-number"},[t._v("148")]),e("br"),e("span",{staticClass:"line-number"},[t._v("149")]),e("br"),e("span",{staticClass:"line-number"},[t._v("150")]),e("br"),e("span",{staticClass:"line-number"},[t._v("151")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How to rebase last x commits on different branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36967662",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD~10 --onto another_branch\n\ngit checkout -b staging_branch\ngit rebase -i HEAD~10 --onto another_branch\ngit checkout another_branch\ngit merge staging_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Git: created new branch from a wrong branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8430897",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout new-feature2  \ngit rebase --onto develop new-feature new-feature2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase the stuff from new-feature to new-feature2 onto develop branch")]),t._v("\n\ngit checkout develop\ngit log --oneline new-feature..new-feature2 \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# for every commit call:")]),t._v("\ngit cherry-pick <commit-id> # note, newer versions of cherry-pick allow multiple commits at once\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: git rebase: copy instead of moving")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 53    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19705736",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch rebased-A hotfix/A\ngit rebase --onto support.2013.16 master rebased-A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Remove commits before specific commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 29    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[t._v("git gc")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3063486",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b oldroot X\nTREE=`git write-tree`\nCOMMIT=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Killed history"')]),t._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$TREE"')]),t._v("`\ngit checkout -b newroot "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$COMMIT"')]),t._v("\ngit rebase --onto newroot oldroot master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# repeat for other branches than master that should use the new initial commit")]),t._v("\ngit checkout master\ngit branch -D oldroot\ngit branch -D newroot\ngit gc # WARNING: if everything's done right, this will actually delete your history from the repo!\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: How can I rebase multiple branches at once?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23399436",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master exp1\ngit rebase --onto c2' c2 exp2\ngit rebase --onto c1' c1 exp3\ngit rebase --onto master exp4\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Remove commits from a single branch in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 29    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7259570",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout feature2\ngit rebase --onto master feature1 feature2\n\ngit checkout feature2\ngit rebase --onto D H feature2\n\ngit checkout feature1\ngit rest --hard H\n\ngit merge K'\n\nA - B - C - D - - - - - - - - - - - - - - - - - - - L - M  master  \n            |\\\n            | \\ - I"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - J'")]),t._v(" - - - - - - - K' feature2\n            \\                             \\\n             - - - - - - - E - F - G - H - Z feature1\n\ngit cherry-pick O\ngit cherry-pick P\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Moving commits from one branch to another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4121055",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# move cba onto e")]),t._v("\ngit branch foo\ngit rebase --onto <SHA1-e> <SHA1-d> foo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rewind master to d")]),t._v("\ngit checkout master\ngit reset --hard <SHA1-d>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge")]),t._v("\ngit merge foo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How to git commit --amend a commit that's the base of a branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[t._v("git reflog")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11857478",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master SOMESHA foo\n\ngit rebase --onto master cccccc foo\n\n> git reflog master\n\naaaaaa master@{0}: reset: moving to something\ncccccc master@{1}: commit: change the froozle\nffffff master@{2}: commit: snarf the froozle \n\ngit rebase --onto master master@{1} foo\n\ngit rebase --onto master foo^ foo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: Getting git to never push a single commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7235494",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (no local config changes should be in master at this point)")]),t._v("\ngit checkout -b config-changes master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make your config-related changes that you don't want to share")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Made local config changes"')]),t._v("\ngit checkout -b daily-work\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Work and commit like normal")]),t._v("\n\ngit rebase --onto master config-changes daily-work\ngit checkout master\ngit merge daily-work\n\ngit checkout master\ngit pull\ngit checkout config-changes\ngit merge master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: git pull --rebase lost commits after coworker's git push --force")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42546368",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ TL;DR: it's the fork point code\ngit rebase @{u}\n\ngit rebase --no-fork-point\n\n▲ About git pull (don't use it)\n + 5122532...6f1308f pu         -> origin/pu  (forced update)\n\n▲ Basics of git rebase\n            D   <-- master\n\n... <- C <- D   <-- master\n\n...--o--o   <-- branch\n\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\n           E'  <-- (temporary)\n          /\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\n           E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G'  <-- branch\n          /\nA--B--C--D           <-- master\n    \\\n     E--F--G         [abandoned]\n\n▲ Determining what to copy\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\ngit checkout branch; git rebase master\n\ngit rebase --onto <newbase> <upstream>\n\n▲ The --fork-point option\ngit merge-base $arg2 $(git log -g --format=%H $arg1)\n\n...--o--B1--B2--B3--C--D    <-- upstream\n                 \\\n                  E--F--G   <-- branch\n\n...--o-------------C--D     <-- upstream\n      \\\n       B1--B2--B3           <-- upstream@{1}\n                \\\n                 E--F--G    <-- branch\n\n...--o-------------C--D     <-- upstream\n      \\\n       B1--B2--B3--E--F--G  <-- branch\n\n$ arg1=origin/next\n$ arg2=stash-exp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),t._v(" $arg2 $(git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -g")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --format")]),t._v("=%H $arg1)")]),t._v("\n3313b78c145ba9212272b5318c111cde12bfef4a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --fork")]),t._v("-point $arg1 $arg2")]),t._v("\n$ echo $?\n1\n\n▲ Git before 2.0, and conclusion\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: How to add a file to the first commit on a git repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9971256",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go back to the commit you want to change (detach HEAD)")]),t._v("\ngit checkout <sha1_for_commit_to_change>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make any changes now (add your new file) then add them to the index")]),t._v("\ngit add <new_files>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# amend the current commit")]),t._v("\ngit commit --amend\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# temporarily tag this new commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (or you could remember the new commit sha1 manually)")]),t._v("\ngit tag tmp\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go back to the original branch (assume master for this example)")]),t._v("\ngit checkout master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replay all the commits after the change onto the new initial commit")]),t._v("\ngit rebase --preserve-merges --onto tmp <sha1_for_commit_to_change>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove the temporary tag")]),t._v("\ngit tag -d tmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: How to delete all Git commits except the last five")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-version.html"}},[t._v("git version")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[t._v("git gc")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11937116",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --global")]),t._v(" alias.rebase-last-five ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'!b="$(git branch --no-color | cut -c3-)" ; h="$(git rev-parse $b)" ; echo "Current branch: $b $h" ; c="$(git rev-parse $b~4)" ; echo "Recreating $b branch with initial commit $c ..." ; git checkout --orphan new-start $c ; git commit -C $c ; git rebase --onto new-start $c $b ; git branch -d new-start ; git gc\'')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --version")])]),t._v("\ngit version 1.7.12.rc2.16.g034161a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")])]),t._v("\n* e4b2337 (HEAD, master) 9\n* e508980 8\n* 01927dd 7\n* 75c0fdb 6\n* 20edb42 5\n* 1260648 4\n* b3d6cc8 3\n* 187a0ef 2\n* e5d09cf 1\n* 07bf1e2 initial\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase-last-five ")]),t._v("\nCurrent branch: master e4b2337ef33d446bbb48cbc86b44afc964ba0712\nRecreating master branch with initial commit 20edb42a06ae987463016e7f2c08e9df10fd94a0 ...\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-start'")]),t._v("\n[new-start (root-commit) 06ed4d5] 5\n 1 file changed, 1 insertion(+)\n create mode 100644 A\nFirst, rewinding head to replay your work on top of it...\nApplying: 6\nApplying: 7\nApplying: 8\nApplying: 9\nDeleted branch new-start (was 06ed4d5).\nCounting objects: 35, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (15/15), done.\nWriting objects: 100% (35/35), done.\nTotal 35 (delta 4), reused 0 (delta 0)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")])]),t._v("\n* a7fb54b (HEAD, master) 9\n* 413e5b0 8\n* 638a1ae 7\n* 9949c28 6\n* 06ed4d5 5\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Rebasing dependent topic branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1546680",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto featureA oldFeatureA featureB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: How to make a git rebase and keep the commit timestamp?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30819930",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The setup\n... o - o - o - o ...       ... o\n        ^   ^   ^               ^\n        |   |   +- next         |\n        |   +- bad              +-- master (HEAD)\n      start\n\n▲ Prerequisites\n▲ The idea\n▲ Verify if it can be done safely\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --format")]),t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%aI %s"')]),t._v(" start...master | uniq | wc -l\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),t._v(" start...master | wc"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -l")])]),t._v("\n\n▲ Extract the information needed to fix the commit dates after the rebase\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --format")]),t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%H %cI %aI %s"')]),t._v(" start...master > /tmp/hashlist\n\n▲ Backup the current master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch old_master")]),t._v("\n\n▲ Do the rebase\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --preserve")]),t._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" start bad")]),t._v("\n\n▲ Fix the commit dates\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --env")]),t._v("-filter ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'export GIT_COMMITTER_DATE=$(fgrep -m 1 "$(git log -1 --format="%aI %s" $GIT_COMMIT)" /tmp/hashlist | cut -d" " -f2)\'')]),t._v(" -f start...master\n\nexport GIT_COMMITTER_DATE=$(fgrep -m 1 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git log -1 --format="')]),t._v("%aI %s"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('" $GIT_COMMIT)"')]),t._v(" /tmp/hashlist | cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('" "')]),t._v(" -f2)\n\n▲ Verification\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --format")]),t._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%cI %aI %s"')]),t._v(" start...master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" old_master")]),t._v("\n\n▲ Cleanup\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" old_master")]),t._v("\n$ rm /tmp/hashlist\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: How to push a shallow clone to a new repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50996201",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# First, shallow-clone the old repo to the depth we want to keep")]),t._v("\ngit clone --depth=50 https://...@bitbucket.org/....git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go into the directory of the clone")]),t._v("\ncd clonedrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Once in the clone's repo directory, remove the old origin")]),t._v("\ngit remote remove origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Store the hash of the oldest commit (ie. in this case, the 50th) in a var")]),t._v("\nSTART_COMMIT=$(git rev-list master|tail -n 1)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checkout the oldest commit; detached HEAD")]),t._v("\ngit checkout $START_COMMIT\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new orphaned branch, which will be temporary")]),t._v("\ngit checkout --orphan temp_branch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit the initial commit for our new truncated history; it will be the state of the tree at the time of the oldest commit (the 50th)")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now that we have that initial commit, we're ready to replay all the other commits on top of it, in order, so rebase master onto it, except for the oldest commit whose parents don't exist in the shallow clone... it has been replaced by our 'initial commit'")]),t._v("\ngit rebase --onto temp_branch $START_COMMIT master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We're now ready to push this to the new remote repo... add the remote...")]),t._v("\ngit remote add origin https://gitlab.com/....git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ... and push.  We don't need to push the temp branch, only master, the beginning of whose commit chain will be our 'initial commit'")]),t._v("\ngit push -u origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: Merge conflicts updating from upstream")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10774554",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --hard upstream/allwinner-v3.0-android-v2\n\ngit push origin +allwinner-v3.0-android-v2\n\ngit rebase --onto upstream/branch \\\n  last-original-upstream-commit-before-yours \\\n  your-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: Git: Copy history of file from one repository to another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[t._v("git replace")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44782681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ More generally, if we assume paths shouldn't change and that the files you want could be anywhere in the tree, then you could use filter-branch with an --index-filter.\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rm --cached --ignore-unmatch each file or *glob* you do NOT want'")]),t._v(" --prune-empty -- all\n\ncd repo-b\ngit remote add repo-a path/to/repo-a\ngit fetch repo-a\n\n... A -- B <--(repo-a/master)\n  \\\n   (repo-a/other-branches-maybe)\n\nB' -- C -- D (master)(origin/master)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# be sure you're on master")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit-id $graft-id"')]),t._v(" >> .git/info/grafts\ngit filter-branch $graft-id..HEAD\n\n▲ A rebase might be a little simpler (assuming a certain level of consistency between the histories) but introduces the possibility that you end up modifying the tree at D.  If you do decide to try a rebase, it would be\ngit rebase --onto repo-A/master B' master\n\ngit rebase --interactive --onto repo-A/master --root master\n\ngit tag old-history repo-a/master\ngit tag new-root B'\n\ngit replace new-root old-history\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: Remove an unwanted merge commit and rebase instead with Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24393326",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("develop *-------*\n         \\       \\\n  feature *---*---*---*---*\n          X   M^  M   Y^  Y\n\n▲ Solution 1: Rebases\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a temporary branch at the commit right before the merge commit M")]),t._v("\ngit checkout -b temp M^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase onto the develop branch")]),t._v("\ngit rebase develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now rebase the remaining commits after M onto the temp branch")]),t._v("\ngit rebase --onto temp M feature\n\n        X   M^  Y^  Y\n*---*---*---*---*---*\n    ^       ^       ^\n develop   temp  feature\n\n▲ Solution 2: Cherry-picks\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Temporarily hard reset feature to the develop branch")]),t._v("\ngit checkout feature\ngit reset --hard develop\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cherry-pick all commits between X to M^.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The start of the cherry-pick range is exclusive, i.e. it doesn't include")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the starting point X^.")]),t._v("\ngit cherry-pick X^..M^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cherry-pick all commits between M to Y")]),t._v("\ngit cherry-pick M..Y\n\n▲ Documentation\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: (yet another) modify git history to add a very first commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10102637",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git symbolic-ref HEAD refs/heads/base\n\ngit rm --cached -r .\n\ngit clean -d --force\n\ngit commit --allow-empty -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial Commit'")]),t._v("\n\ngit cherry-pick 50da9c3\n\ngit rebase --onto base --root master\n\ngit branch -d base\n\ngit branch -D c4-c5branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: Rebasing/duplicating feature branch to an older release")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50746663",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto <newbase> <upstream> <branch>\n\ngit rebase --onto <new-parent> <old-parent> <branch>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: Cherry-pick a merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/232780",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto C A B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: Git pull request for just one file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8421689",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make sure the commit in question is the most recent")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make branch to point to the previous commit, leaving the changes in your work tree")]),t._v("\ngit reset HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit the changes to the first file")]),t._v("\ngit add file1\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make a branch for the first commit")]),t._v("\ngit branch first-branch HEAD^\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit the changes to the second file")]),t._v("\ngit add file2\ngit commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and check out a branch for this commit")]),t._v("\ngit checkout -b second-branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase the branch back, so that it doesn't include the first commit")]),t._v("\ngit rebase --onto HEAD^^ HEAD^ second-branch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# point your master branch somewhere that makes sense - maybe before either branch")]),t._v("\ngit checkout master\ngit reset --hard first-branch^\n\ngit push origin first-branch second-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("34. Usage scenario: How to transplant a feature (in a topic branch) to another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18470739",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master feature1 feature2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("35. Usage scenario: Rebase entire development branch onto new master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31353842",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ First off, if the inital commit on your develop branch is suitable as the initial commit on the new master branch, then you can simply create the master branch there and you're done:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch master <sha1-of-initial-commit-on-develop>")]),t._v("\n\n▲ If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t have that luxury, then you'")]),t._v("ll need to create a new empty commit that will serve as the initial commit of master.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the new master branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --orphan")]),t._v(" master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clear the working directory (we want the initial commit to be empty)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -rf")]),t._v(" .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the initial commit on master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --allow")]),t._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase the entire develop branch onto the new master branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --root")]),t._v(" develop")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch temp <common-ancestor>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <topic-branch>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase temp")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" temp")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("36. Usage scenario: Git, undo merge commit on rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46558402",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto topic2 topic2merge topic3\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("37. Usage scenario: How can I reorder/combine commits using Git rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[t._v("gitk")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2080533",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Safety, should be a no-op if your gitk snapshot is accurate")]),t._v("\ngit checkout backup\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Temporary branch")]),t._v("\ngit branch backup-save backup\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Move top commit onto 'Fix for #226:")]),t._v("\ngit rebase --onto origin/master HEAD^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Go back to saved branch's parent (i.e. without the moved commit)")]),t._v("\ngit reset --hard backup-save^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase onto the moved commit (HEAD@{1} is where HEAD was 1 step")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ago i.e. before the reset.)")]),t._v("\ngit rebase HEAD@{1}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't need the saved branch any more (although you might want")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to keep it for a bit just in case). This deletes it:")]),t._v("\ngit branch -D backup-save\n\ngit checkout twist\n\ngit reset --soft HEAD^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Just re-save the commit message, alternatively to skip the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# editor step do this: git commit --amend -C HEAD")]),t._v("\ngit commit --amend\n\ngit checkout backup\ngit merge twist\ngit branch -d twist\n\ngit checkout master\ngit reset --hard backup\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("38. Usage scenario: Change Git Parent Branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43269901",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto feature2 develop feature1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("39. Usage scenario: With git, how do I save a topic branch after the parent remote branch was rebased?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11146730",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto <6'-SHA> <6-SHA> my-topic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("40. Usage scenario: Revert one patch of git rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30820043",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag restart O2~\ngit rebase --abort\ngit rebase --onto restart O^ topic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("41. Usage scenario: Restore git history from split repositories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38018299",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add old_repo <url-for-old-repo> # Add old repository as a remote\ngit fetch old_repo # Fetch commits from old repo\n\ngit checkout master\ngit rebase --onto <commit from old repo> <commit from new repo> --preserve-merges\n\ngit checkout branchname\ngit rebase --onto <base on new master branch> <first commit in branch> --preserve-merges\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("42. Usage scenario: Undoing temporary changes with Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5447226",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master debug feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("43. Usage scenario: how to move git commits to and from the stash?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25187842",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" upstream/B ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'upstream/B@{1}'")]),t._v(" B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("44. Usage scenario: Rebasing commit from one parent onto another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56363781",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -ir --onto 1a92e84 81761ff master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("45. Usage scenario: Git remote tracking branch diverged from local branch with identical commits with different SHAs")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15713460",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto origin/master c3db784817 master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("46. Usage scenario: How-to git backport (rebase/cherry-pick) an already merged branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16718891",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("[alias]\n    oldest-ancestor = !bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \\"s/^ //p\\" | head -1\'')]),t._v(" -\n    rebase-onto     = !bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rebase --onto $1 `git oldest-ancestor $2 $3` $3'")]),t._v(" -\n\ngit rebase-onto stable master fix/123\n\n[alias]\n    oldest-ancestor = !bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'diff -u <(git rev-list --first-parent "${1:-master}") <(git rev-list --first-parent "${2:-HEAD}") | sed -ne \\"s/^ //p\\" | head -1\'')]),t._v(" -\n    rebase-onto     = !bash -c "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git branch $4 $2 && git rebase --onto $3 `git oldest-ancestor $1 $4` $4'")]),t._v(" -\n\ngit rebase-onto master fix/123 stable fix/123-stable\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("47. Usage scenario: Remove commits from git rebased branch after other commits were done")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27482035",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i E\n\ngit rebase --onto E G feature/x\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("48. Usage scenario: Join branch into new master commit without merging?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66080727",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto <new-parent> <old-parent> <branch>\n\ngit rebase <parent> <branch>\n\ngit rebase <parent>\n\ngit rebase --onto master commit_1 mybranch\ngit rebase master mybranch\ngit switch mybranch; git rebase master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("49. Usage scenario: Git workflow: How to merge commits made only on new branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37775927",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout stage/2.0\ngit rebase --onto stage/onto $(git merge-base development feature) feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("50. Usage scenario: Git: Create a branch. Commits a bunch. Go back to master branch, only wants to merge certain commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3714375",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master E fixing_css\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("51. Usage scenario: Git - How to locally remove a single commit a few commits back?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41253999",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" temp")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" HEAD~2 HEAD~1  # we'll explain these later")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse HEAD")]),t._v("\nde2efebf7ce2b308ea77d8b06f971e935238cd2f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("52. Usage scenario: How to prevent git doing a fast-forward when rebasing a branch that's been merged, then reverted")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68016086",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick F..B\n\ngit rebase --reapply-cherry-picks --onto master F B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("53. Usage scenario: Cherry-pick merge commit failing with empty commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51096757",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout branch-2\ngit branch   moving/branch-2 # new branch to work with\ngit rebase --onto  branch-1 [sha_of_c] moving/branch-2 # move commits of branch ontop of the other \ngit checkout branch-1 \ngit reset --hard  moving/branch-2 # set branch lable to new HEAD\ngit branch -d  moving/branch-2 # clean up\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("54. Usage scenario: How to detach a branch and reattach it to some different branch in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38610876",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto feature B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("55. Usage scenario: Git rebase multiple commits in one branch to the master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63917942",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto o5 o7\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from next")]),t._v("\ngit reset --hard HEAD~3\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("56. Usage scenario: Git merge commits from a specific upstream release")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40539375",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\ngit rebase --onto $(git rev-list -n1 v1.4-stable)\n\ngit pull --rebase origin v1.4-stable\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("57. Usage scenario: Git diff on topic branch, excluding merge commits that happened in the meantime?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7490784",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto A master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("58. Usage scenario: git - cherry-picked feature commits into new branch, reverted commits, rebase not working as expected")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22462951",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto dev HEAD~<number of commits you care about> --force-rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("59. Usage scenario: Git: how to merge modified files only")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3110729",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ This is why it's important to manage your branches well, in particular to use topic branches and to merge upwards.\nx - x - x - x ------------- X (master)\n|\\                          |\n| x - x - x ---- X (paypal) |\n \\              /           /\n  x (bugfix) ---------------\n\n▲ If you have already made your bugfix, and you mistakenly made it on master instead of from the appropriate merge base, and the history on master hasn't been published, you should cherry-pick or rebase it to the right place:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the bugfix commit is not at the tip of master, you can rebase to get it there:")]),t._v("\ngit rebase -i <commit before the bugfix> master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rearrange the list of commits to put the bugfix at the tip, save and quit")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now either cherry-pick or rebase the commit to the right place")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (rebase is easier if the bugfix is actually several commits)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Cherry-pick")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make a branch and cherry-pick")]),t._v("\ngit checkout -b bugfix <SHA1 of merge base>\ngit cherry-pick <SHA1 of bugfix>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove the commit from master, assuming it's still on the tip")]),t._v("\ngit checkout master\ngit reset --hard master^\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or rebase")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make the bugfix branch (assuming it's still on the tip)")]),t._v("\ngit branch bugfix master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and remove the commit from master (assuming it's still on the tip)")]),t._v("\ngit checkout master\ngit reset --hard master^    # or if the bugfix is composed of n commits, master~n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase the bugfix branch to the right place")]),t._v("\ngit rebase --onto <SHA1 of merge base> master bugfix\n\n▲ If the history has been published, all you can do is cherry-pick the bugfix onto the paypal branch, and remember to do it right the next time:\ngit checkout paypal\ngit cherry-pick <SHA1 of bugfix>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("60. Usage scenario: How do I squash commits on a branch that has children")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27866756",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master D bugfix\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("61. Usage scenario: Git rebase duplicate patch detection implementation")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12846068",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master D\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("62. Usage scenario: How to perform a rebase onto a specific commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12853971",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --preserve-merges --onto master^2 master dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("63. Usage scenario: How to remove a file from a pull request that I didn't modify")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50282637",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto origin/master others yours\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("64. Usage scenario: Undo a git merge, keep commits that came later")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17100928",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("(branch)         a - b - c - d - e - f - g\n               /           /\n(master)  1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 ...\n\ngit rebase --onto c d g\ngit checkout -b newbranch\n\n(newbranch)                e"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - f'")]),t._v(" - g'\n                          /\n(branch)         a - b - c - d - e - f - g\n               /           /\n(master)  1 - 2 - 3 - 4 - 5 - 6 - 7 - 8 - 9 ...\n\ngit branch -D branch\ngit branch -m newbranch branch\n\ngit push -n origin branch # check what you're about to push\ngit push -f origin branch # -f is required to rewrite history; be careful\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[e("strong",[t._v("65. Usage scenario: How to send pull request when git histories are different but changes are same?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51508696",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ TL;DR\n▲ Long\nA  <--B  <--C ... <--H   <--master\n\nA--B--C--D   <-- master\n\nA--B--C--D   <-- origin/master, upstream/master\n\nA--B--C--D   <-- master (HEAD), origin/master, upstream/master\n\nA--B--C--D   <-- origin/master, upstream/master\n          \\\n           E   <-- master (HEAD)\n\nA--B--C--D   <-- master [on origin]\n          \\\n           E--F\n\nA--B--C--D--E--F   <-- master [on origin]\n\nA-B--C--D   <-- upstream/master\n         \\\n          E--F   <-- master (HEAD), origin/master\n\nA--B--C--D   <-- master [on upstream at GitHub]\n          \\\n           E--F   <-- refs/pull/123/head [on upstream]\n\nA--B--C--D--EF   <-- master [on upstream at GitHub]\n          \\\n           E--F   <-- refs/pull/123/head [on upstream]\n\nA--B--C--D--EF   <-- upstream/master\n          \\\n           E--F   <-- master (HEAD), origin/master\n\nA--B--C--D--EF   <-- upstream/master\n          \\\n           E--F   <-- origin/master\n               \\\n                G   <-- master (HEAD)\n\n               G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("  <-- ???\n              /\nA--B--C--D--EF   <-- upstream/master\n          \\\n           E--F   <-- origin/master\n               \\\n                G--H   <-- ???\n\n▲ Using git rebase\ngit checkout master\ngit rebase other-name\n\nA--B--C--D--EF   <-- upstream/master\n          \\\n           E--F   <-- origin/master\n               \\\n                G--H   <-- master\n\ngit checkout master\ngit rebase --onto upstream/master origin/master\n\n               G--H   <-- master (HEAD)\n              /\nA--B--C--D--EF   <-- upstream/master\n          \\\n           E--F   <-- origin/master\n               \\\n                G--H   [abandoned]\n\ngit push --force origin master\n\nA--B--C--D--EF--G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("  <-- master [on origin at GitHub]\n\nA--B--C--D--EF--GH   <-- master [on upstream at GitHub]\n\n▲ The principals involved here, or, why their process is a bit unfriendly\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br")])]),e("p",[e("strong",[t._v("66. Usage scenario: Git rebase on tags and not individual commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15930893",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto 1.0 2.0 BRANCH\n\ngit rebase --onto 1.0 3.0 BRANCH\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("67. Usage scenario: Rebase feature branch on master, excluding previous feature branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31256644",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master sha123~\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("68. Usage scenario: How do I reduce the size of a bloated Git repo by non-interactively squashing all commits except for the most recent ones?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-prune.html"}},[t._v("git prune")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[t._v("git gc")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24153726",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag temp\n\ngit checkout 10004\ngit checkout --orphan new_root\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"set new root 10004"')]),t._v("\n\ngit rebase --onto new_root 10004 branchname\n\ngit diff temp   # verification that it worked with no changes\ngit tag -d temp\ngit branch -D new_root\n\ngit prune\ngit gc\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("69. Usage scenario: Git: merge two repositories one over the other")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42371140",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If your history is pretty linear (i.e. just master in each of A and B), this won't be too bad.  If there are a lot of branches to contend with it will get more involved (see update below), but still this would provide a starting point:\ngit clone /url/for/repo/A C\ncd C\n\ngit remote add B /url/for/repo/B\ngit fetch B\n\ngit rebase --onto master --root B/master\n\ngit branch -f master\ngit remote remove B\n\nA1 ---- A2 ---- A3  <--- (master)\n   \\          /\n     A4 -- A5 \n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("---------------------------")]),t._v("\n\nB1 ---- B2 ---- B3 <--- (master)\n   \\          /\n     B4 -- B5\n\ngit filter-branch --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sed \"s/^\\$/-p xxxxxxxxxx/\"'")]),t._v(" B/master\n\n▲ If you don't know if/where problems will occur, you could try the rebase and then run a validation to compare commits.  Before doing the rebase\ngit checkout master\ngit tag old-B-master\n\ngit rebase --preserve-branches --onto master --root B/master\ngit tag new-B-master\n\nA1 ---- A2 ---- A3  <--- (master)\n   \\          /\n     A4 -- A5 \n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("---------------------------")]),t._v("\n\nB1 ---- B2 <--- (master)\n   \\\n     B4 -- B5 <--- (branch1)\n\n▲ Maybe your B repo isn"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t fully merged.  This may or may not complicate things.  If you'")]),t._v("re using filter-branch, it can work on many refs at once.  You probably can't just say --all (because that could catch refs that are already in the A tree and likely the operation would end up failing), but you can list the branch tips from the B tree.\ngit filter-branch --parent-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sed \"s/^\\$/-p xxxxxxxxxx/\"'")]),t._v(" B/master B/branch1\n\n▲ If you're trying to use rebase (or if you just want to work with a single tip ref), you can create a temporary octopus merge.\ngit checkout B/master\ngit checkout -b b-entry-point\ngit merge -s ours B/branch1 B/branch2 ...\n\nA --- Am <-- (master)\n  \\\n    Ab1 <-- (branch1)\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("---------------------------------------")]),t._v("\nB1 ---- B2  <-- (master)\n\nB3 ---- B4  <-- (branch1)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br")])]),e("p",[e("strong",[t._v("70. Usage scenario: Rebase after force push")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60875172",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The setup\n...--A--B   <-- master\n         \\\n          C   <-- feature/A\n           \\\n            D   <-- feature/B\n\n...--A--B   <-- master\n         \\\n          C--E   <-- feature/A\n           \\\n            D   <-- feature/B\n\n          F   <-- feature/A\n         /\n...--A--B   <-- master\n         \\\n          C--E   [abandoned]\n           \\\n            D   <-- feature/B\n\ngit checkout feature/B\ngit rebase --onto feature/A something-goes-here\n\n▲ Copying some commit(s)\n          F   <-- feature/A, new-B (HEAD)\n         /\n...--A--B   <-- master\n         \\\n          C--E   <-- saved-A\n           \\\n            D   <-- feature/B\n\n            D'   <-- new-B (HEAD)\n           /\n          F   <-- feature/A\n         /\n...--A--B   <-- master\n         \\\n          C--E   <-- saved-A\n           \\\n            D   <-- feature/B\n\n            D'   <-- feature/B (HEAD)\n           /\n          F   <-- feature/A\n         /\n...--A--B   <-- master\n         \\\n          C--E   <-- saved-A\n           \\\n            D   [abandoned]\n\n▲ What git rebase does, in a nutshell\n...--A--B   <-- target\n      \\\n       C--D--E   <-- current (HEAD)\n\ngit rebase target\n\n          C"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-D'")]),t._v("-E'   <-- current (HEAD)\n         /\n...--A--B   <-- target\n      \\\n       C--D--E   [abandoned]\n\ngit rev-list target..HEAD\n\n▲ The truth about which commits get copied\ngit rebase target\n\ngit rebase --onto target stop\n\n...--A--B   <-- target\n      \\\n       C   <-- another\n        \\\n         D--E   <-- current (HEAD)\n\ngit rebase --onto target another\n\n          D"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-E'")]),t._v("  <-- current (HEAD)\n         /\n...--A--B   <-- target\n      \\\n       C   <-- another\n        \\\n         D--E   [abandoned]\n\n▲ Putting it all together\n          F   <-- feature/A\n         /\n...--A--B   <-- master\n         \\\n          C--E   <-- saved-A\n           \\\n            D   <-- feature/B (HEAD)\n\ngit rebase --onto feature/A saved-A\n\n            D'  <-- feature/B (HEAD)\n           /\n          F   <-- feature/A\n         /\n...--A--B   <-- master\n         \\\n          C--E   <-- saved-A\n           \\\n            D   [abandoned]\n\n▲ What if you didn't save the name?\ngit rebase --onto feature/A <hash-ID-of-E-or-C>\n\ngit rebase --onto feature/A feature/A@{1}\n\n▲ When don't you need anything special?\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br"),e("span",{staticClass:"line-number"},[t._v("104")]),e("br"),e("span",{staticClass:"line-number"},[t._v("105")]),e("br"),e("span",{staticClass:"line-number"},[t._v("106")]),e("br"),e("span",{staticClass:"line-number"},[t._v("107")]),e("br"),e("span",{staticClass:"line-number"},[t._v("108")]),e("br"),e("span",{staticClass:"line-number"},[t._v("109")]),e("br"),e("span",{staticClass:"line-number"},[t._v("110")]),e("br"),e("span",{staticClass:"line-number"},[t._v("111")]),e("br"),e("span",{staticClass:"line-number"},[t._v("112")]),e("br"),e("span",{staticClass:"line-number"},[t._v("113")]),e("br"),e("span",{staticClass:"line-number"},[t._v("114")]),e("br"),e("span",{staticClass:"line-number"},[t._v("115")]),e("br"),e("span",{staticClass:"line-number"},[t._v("116")]),e("br")])]),e("p",[e("strong",[t._v("71. Usage scenario: Git pull into an untracked copy of repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19322696",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd $your_git_repository\ngit remote add origin $URL\ngit fetch origin\ngit branch -m my_branch\ngit rebase --onto $base_commit $your_first_commit my_branch\ngit merge $remote_branch\ngit log --graph --decorate --oneline\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("72. Usage scenario: Flatten a GIT master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30321921",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" dfc22c8 00e3cd7 00565b3")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("73. Usage scenario: How to flatten merge commit during git rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46545120",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you just start the rebase, as in\ngit rebase --interactive --onto <new-parent> 2955a39^ 77a706b\n\n  P\n /\no -- X -- o -- o -- O <--(master)\n      \\\n       A -- B --- M -- D <--(branch)\n             \\   /\n               C\n\n▲ If you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re just moving branch from X to O, then you don'")]),t._v("t really need --onto; you can treat master as your upstream because the old branch point is an ancestor of the new parent.\ngit rebase -i master branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("74. Usage scenario: Adding old git history to new repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53324766",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone git@newrepo.com:project.git\ncd project\ngit fetch --all\ngit remote add original https://oldrepo.com/project-old.git\ngit fetch original\ngit rebase --onto original/master 6210d0b3cf20f506ce0bab7849550b38c9effb15 master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Manual resolution of conflict")]),t._v("\n\ngit rebase --continue\ngit push --force origin master      # Need to disable branch protection in gitlab\n                                    # Re-enable protection in gitlab\n\ngit checkout --track origin/upstream\ngit rebase --onto original/upstream 6210d0b3cf20f506ce0bab7849550b38c9effb15    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Manual resolution of conflict    ")]),t._v("\ngit rebase --continue\ngir push --force origin upstream\n\ngit checkout --track origin/pristine-tar\ngit rebase --onto original/pristine-tar 6210d0b3cf20f506ce0bab7849550b38c9effb15\ngit push --force origin pristine-tar\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("p",[e("strong",[t._v("75. Usage scenario: Removing a specific commit in the git history with several branches?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21427240",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto B' B F\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("76. Usage scenario: How to rebase feature branch from theme branch to development branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38653362",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --committer-date-is-author-date --onto dev T4 W`\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("77. Usage scenario: Binding my local repository with an existing remote repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52745729",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git push ssh://<remote-host>/<remote-path> HEAD\n\ngit fetch ssh://<remote-host>/<remote-path>\ngit merge -s ours FETCH_HEAD\ngit push ssh://<remote-host>/<remote-path> HEAD\n\ngit fetch ssh://<remote-host>/<remote-path>\ngit rebase --onto FETCH_HEAD <branch-point>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("78. Usage scenario: Reordering git branches: rebasing to an earlier branch in a chain pulls in many extra commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52448092",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" master server client")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("79. Usage scenario: Git revert merge commit, lost some files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44267881",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master feature-root feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("80. Usage scenario: How can I delete merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33446046",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto <sha-of-commit-a> B C\n\ngit checkout A\ngit reset --hard <sha-of-commit-g'>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("81. Usage scenario: How to move a branch on GitHub?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69576317",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("Another example of --onto option is to rebase part of a branch. If we\nhave the following situation:\n\n                                H---I---J topicB\n                               /\n                      E---F---G  topicA\n                     /\n        A---B---C---D  master\n\nthen the command\n\n    git rebase --onto master topicA topicB\n\nwould result in:\n\n                     H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--I'")]),t._v("--J'  topicB\n                    /\n                    | E---F---G  topicA\n                    |/\n        A---B---C---D  master\n\nThis is useful when topicB does not depend on topicA.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" main branchB")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("82. Usage scenario: Git: How to recover from changed history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19597876",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch save_point origin/master (before fetch)\n\ngit fetch\n\ngit rebase --onto origin/master save_point master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("83. Usage scenario: Pull request on a branch which got cherry picked commits merged")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53235249",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master B A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("84. Usage scenario: Squashing history commits in a pushed branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55760467",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto abc1234 d68bebe enh/12-durability\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("85. Usage scenario: Github: Changes ignored after revert (git cherrypick, git rebase)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35408781",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ git cherry-pick\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Find out the range of commits you wish to re-add to your branch.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# then use cherry-pick to add them back to the branch")]),t._v("\n\ngit cherry-pick start..end\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you wish to include the start commit as well add the ^")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will result in a cherry-pick of the start commit included as well ")]),t._v("\ngit cherry-pick start^..end\n\n▲ git rebase --onto (Carefull = rebase)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset it to the start commit")]),t._v("\ngit reset --hard start\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase every commit after b and transplant it onto a")]),t._v("\ngit rebase --onto commit1 commit2 commit3 ... commitN\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("strong",[t._v("86. Usage scenario: How to move sub-branch to other parent branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40229795",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" git rebase --onto develop origin/master yourbranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("87. Usage scenario: Merging changes from a branch based off a topic branch to a different topic branch in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5749129",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git co refactor\ngit co -b topic2_refactor\ngit rebase --onto topic2 topic1 # bases the diffs off of topic1, but applies them to topic2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("88. Usage scenario: Moving commits branched from master onto a previous commit in master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47333448",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto desired master feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("89. Usage scenario: How to rebase onto branch that has overwritten history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49243225",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto 1 A..2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("90. Usage scenario: How to Recover an Aborted Rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56744207",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto rebase_tag branch~2 branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("91. Usage scenario: Git: Rebase to equal branch (with different history) conflicts, cherry-pick doesn't")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69302859",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master renamed_wellcome~ renamed_wellcome\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("92. Usage scenario: How to add a new base to the first commit of a git revision tree")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48220684",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\n    git rebase --onto base_work others_work my_work\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("93. Usage scenario: Remove a previous commit without touching files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29995107",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD~4\n\ngit rebase --onto HEAD~3 HEAD~2 HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("94. Usage scenario: Cancel part of a single line from specific commit, after git push")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39497350",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ tag these so you can restore if something goes wrong.\ngit tag MyOldCommit BADCOMMIT\ngit tag MyOldMaster master\n\n▲ if you need to you can recover master unchanged with\ngit branch -f master MyOldMaster\n\ngit checkout -b MyFixedCommit BADCOMMIT\n\ngit commit --amend -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my commit message"')]),t._v("\n\ngit checkout master\n\ngit rebase --onto MyFixedCommit BADCOMMIT master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("95. Usage scenario: fix broken git history after merging other repo into subdir")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[t._v("git blame")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19402332",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd repoA\nmkdir dirA\ngit mv src pom.xml other* dirA  (i.e. all contents except for dirA will be moved to dirA)\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moved repoA to dirA"')]),t._v("\n\ncd repoAllNew\ngit remote add -f origin-repoA ../repoA\ngit pull origin-repoA master\n\ngit blame dirA/src/main/java/HelloWorld.java\n\ngit remote add -f origin-repoAllOld ../repoAll\n\ngit branch start <SHA1 of origin-repoAllOld/changes_start_here>\ngit branch end <SHA1 of origin-repoAllOld/master>\ngit rebase --onto master start end\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("strong",[t._v("96. Usage scenario: Git: How can I cleanly depend on a PR that hasn't merged?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57465732",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase feat1\n\ngit rebase --onto feat1 old-tip-of-feat1 feat2 # ask git to move feat2 discarding all old revisions of feat1, and put them on top of feat1\n\ngit rebase master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("97. Usage scenario: How do I reset my repository to a certain release and apply all my changes from that point on?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32056846",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto old_release master current_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("98. Usage scenario: Doing a selective rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27453598",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto c master test\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("99. Usage scenario: Disentangle old, bad merge in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39858950",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b E-repair E\ngit reset --soft 1~\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"E-prime"')]),t._v("\ngit checkout master\ngit merge E-repair\n\ngit rebase --onto master E z\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("100. Usage scenario: How to remove unnamed branch in git shown in Github network view")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38113665",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto Z^2 A master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("101. Usage scenario: git merging only recent changes from one repository to another which is an unrelated snapshot (not a clone)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30763413",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git remote add external ssh://path/to/B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git fetch external")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" A04"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" external/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("102. Usage scenario: How to rebase an old commit on a deleted branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69707901",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto 1 2 new_dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("103. Usage scenario: Git update branch after changing parent")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62998589",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto A <previous A sha> B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("104. Usage scenario: How to add old zipped sources at the beginning of origin trunk?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18194189",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout --orphan newroot\ngit rm -rf .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip zip1 to project directory")]),t._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zip1'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip zip2 to project directory")]),t._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zip2'")]),t._v("\n...\ngit rebase --onto newroot --root master\ngit branch -d newroot\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("105. Usage scenario: How to rebase Git commits to SVN after having initialized the Git repository in an SVN directory?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24480662",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd svn_repo\ngit reset --hard (warning: dont apply if you dont understand the implications)\ngit clean -rfx   (warning: dont apply if you dont understand the implications)\ncd ../git_repo\ngit checkout F'\ngit reset --hard (warning: dont apply if you dont understand the implications)\ngit clean -rfx   (warning: dont apply if you dont understand the implications)\ndiff -wru3 svn_repo git_repo | grep -i only\n\ngit commit -a -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"patch applied"')]),t._v("\n\ngit remote add featurebranch path/To/git_repo\ngit checkout featurebranch\n\ngit rebase -s recursive -Xours -Xignore-space-at-eol --onto svn_branch G K\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("106. Usage scenario: Git: How to edit old commit with multiple descendant branches?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23254805",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto commit_7.1 commit_7 topic1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("107. Usage scenario: How to avoid messy git commits in a PR")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59254616",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream /url/original/repo\ngit fetch upstream\ngit switch mybranch\ngit rebase --onto upstream/master master mybranch\ngit push --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("108. Usage scenario: rebasing a heavily-merged branch prior to pushing changes upstream")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5380821",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --onto H a j\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# then remove all commits you don't want (already cherry-picked)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# hope the best :D")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("109. Usage scenario: Duplicate commits in history after fork")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65130601",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to rebase X..yourbranch on top of X' :")]),t._v("\ngit rebase --onto X' X yourbranch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to rebase X'..yourbranch on top of Z :")]),t._v("\ngit rebase --onto Z X' yourbranch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# obviously, if you want to go with 1. :")]),t._v("\ngit rebase --onto Z X yourbranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("110. Usage scenario: Git change parent of parent commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67369840",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master feature1 feature2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("111. Usage scenario: Git rebase from one parent commit on top of a new parent commit (that doesn't have the old parent commit as one of its parents)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60005908",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto origin/master B~1 B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("112. Usage scenario: How to recombine multiple git repos into a single repo and preserve history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63275444",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto old/main revision-id-of-first-revision-of-new1-main new1/main\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# at this point you should be in DETACHED HEAD, let's create a local branch")]),t._v("\ngit branch main1\n\ngit push old HEAD:main\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("113. Usage scenario: How to work around force-pushing of an upstream branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67854980",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The Pledge\ngit fetch some-remote # adjust to the name of your remote, of course\n\n▲ The Turn\ngit rebase --onto some-remote/base-branch old-base-rev branchX\n\n▲ The Prestige\n▲ Other possibilities\ngit reset --soft old-base-rev\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Single revision for feature X"')]),t._v("\n\ngit fetch some-remote\ngit rebase --onto some-remote/base-branch old-base-rev branchX\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("114. Usage scenario: How can I rebase my new code atop of old .tar.gz archives of old versions?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69807036",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto historical ea0bdd11 master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("115. Usage scenario: How to remove previous commits and keep the ones that are my changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54140917",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream /url/original/repo\ngit fetch upstream\ngit checkout my-working-branch\ngit rebase upstream/master\ngit push --force -u origin my-working-branch\n\ngit push --force origin my-working-branch:master\n\ngit rebase -i --onto upstream/master 2f1...my-working-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("116. Usage scenario: Git fails at rebasing in modified commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30183002",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i origin/master\n\ngit rebase cr_fix\n\ngit rebase --onto A' A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("117. Usage scenario: Git: Preserving current code state and last four commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51501904",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\nfunction gitConsolidation() {\n\n    # Default settings\n    numCommitsToKeep=4\n    branchName="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v("\n    path="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/home/steve/test/testgit"')]),t._v("\n\n    # Set working directory\n    cd $path\n\n    # Get git repo name\n    gitRepoName=$(basename `git rev-parse --show-toplevel`)\n\n    # Print default message\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"** Prepairing to consolidate current Git Repo: $gitRepoName **"')]),t._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Branch: $branchName"')]),t._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Path: $path"')]),t._v("\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Total past commits to keep: $numCommitsToKeep\\n"')]),t._v("\n\n    # Get required branch\n    git checkout $branchName\n\n    # Get size before consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Repo size before consolidation: $(du -hs)"')]),t._v(" \n\n    # Print current log list\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n* Git commits prior to consolidation *"')]),t._v("  \n    git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%H - %s"')]),t._v("\n\n    # Get initial commit hash\n    initialCommitHash=$(git rev-list --max-parents=0 HEAD)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n* Found initial commit hash: $initialCommitHash *"')]),t._v("\n\n    # Get hash for commit to be consolidated with intiial commit\n    consCommitHash=$(git log --format=%H | head -$numCommitsToKeep | tail     -1)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* Found hash for commit to consolidate with initial commit: $consCommitHash *"')]),t._v("\n\n    # Get hash for latest commit\n    latestCommitHash=$(git log --format=%H | head -1)\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* Found hash for latest commit $latestCommitHash *\\n"')]),t._v("\n\n    # Begin consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* BEGIN: Git repo consolidation *"')]),t._v("\n\n    # Checkout commit to consolidate with initial commit\n    git checkout $consCommitHash\n\n    # Soft reset initial commit\n    git reset --soft $initialCommitHash\n\n    # Commit changes\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Consolidated commit $initialCommitHash -> $consCommitHash"')]),t._v("\n\n    # Set tag\n    git tag new_base\n\n    # Checkout\n    git checkout -b consolidated $latestCommitHash\n\n    # Rebase\n    git rebase --onto new_base $consCommitHash\n\n    # Get size after consolidation\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Repo size after consolidation: $(du -hs)"')]),t._v("\n\n    # Print current log list\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n * Git commits after consolidation *"')]),t._v("    \n    git log --pretty="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%H - %s"')]),t._v("\n\n    echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n* END: Git repo consolidation *"')]),t._v("\n}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Call function")]),t._v("\ngitConsolidation\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br")])]),e("p",[e("strong",[t._v("118. Usage scenario: Do rebase again after squash to different branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48699179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto branch1 <first commit of branch2 SHA1> branch2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("119. Usage scenario: How to resolve commit history on remote repo after rebasing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67100030",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Long\nA--B--C--H--I   <-- main\n       \\\n        F--G   <-- feature\n\nA--B--C--H--I--M   <-- main\n       \\      /\n        F----G   <-- feature\n\n▲ What is the best approach to this situation?\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  <-- main\n /\nA--B--C--H--I   <-- origin/main    ["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" in a Git you call "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),t._v("]\n       \\\n        F--G   <-- feature, origin/feature\n\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  [no names yet]\n /\nA--B--C--H--I   <-- main\n       \\\n        F--G   <-- feature\n\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  <-- main\n /\nA--B--C--H--I   [abandoned]\n       \\\n        F--G   <-- feature\n\n▲ Rebase in general works by copying commits\ngit rebase main\n\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  <-- main\n /\nA--B--C--H--I   <-- origin/main    ["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"main"')]),t._v(" in a Git you call "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"origin"')]),t._v("]\n       \\\n        F--G   <-- feature, origin/feature\n\ngit rebase --onto main~2 origin/main\n\n       F"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-G'")]),t._v("  <-- feature (HEAD)\n      /\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  <-- main\n /\nA--B--C--H--I   <-- origin/main\n       \\\n        F--G   <-- origin/feature\n\ngit push --force-with-lease --atomic main feature\n\n        F"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-G'")]),t._v("  <-- feature (HEAD), origin/feature\n       /\nA--B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-I'")]),t._v("  <-- main, origin/main\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br")])]),e("p",[e("strong",[t._v("120. Usage scenario: Copy changes from one subbranch of a branch to subbranch of another branch in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43755928",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto X A Y\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("121. Usage scenario: How can I create a PR in github that only shows changes in a single branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56697244",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" m--m--m--m       (master, upstream/master)\n    \\\n     a--a--a      (A)\n         \\\n          b--b--b (B)\n\ngit rebase --onto master $(git merge-base A B) B\n\n            b"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'--b'")]),t._v("--b' (B)\n           /\n m--m--m--m       (master, upstream/master)\n    \\\n     a--a--a      (A)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("122. Usage scenario: How to resolve git merge conflict without pulling master branch into feature branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53181381",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto qa-branch production-branch my-feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("123. Usage scenario: Git repository - how to replay newer commits made to old repository, to modified repository after running git filter-branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21754265",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto H' H J\n\ngit rebase --preserve-merges --onto I' I M\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("124. Usage scenario: Revert past git commits but keep changes introduced since")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40912711",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto X3 Y2 # strips Y2\ngit rebase --onto X1 Y1 # strips Y1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"continue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[t._v("#")]),t._v(" 🔹 --continue")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to modify a specified commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3606    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1186549",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bbc643cd^'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --amend")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-edit")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Break a previous commit into multiple commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2098    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6217314",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ A) Splitting the most recent commit\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD~")]),t._v("\n\n▲ B) Splitting a commit farther back\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD~")]),t._v("\n\n▲ Finally (both A and B)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Remove sensitive files and their commits from Git history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 537    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[t._v("git update-index")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/872700",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ For all practical purposes, the first thing you should be worried about is CHANGING YOUR PASSWORDS! It"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s not clear from your question whether your git repository is entirely local or whether you have a remote repository elsewhere yet; if it is remote and not secured from others you have a problem. If anyone has cloned that repository before you fix this, they'")]),t._v("ll have a copy of your passwords on their local machine, and there"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s no way you can force them to update to your \"fixed\" version with it gone from history. The only safe thing you can do is change your password to something else everywhere you'")]),t._v("ve used it.\ngit filter-branch --index-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git update-index --remove PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA'")]),t._v(" <introduction-revision-sha1>..HEAD\ngit push --force --verbose --dry-run\ngit push --force\n\n  git filter-branch --force --index-filter \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached --ignore-unmatch PATH-TO-YOUR-FILE-WITH-SENSITIVE-DATA"')]),t._v(" \\\n  --prune-empty --tag-name-filter cat -- --all\n  git push --force --verbose --dry-run\n  git push --force\n\n▲ In the future, if you accidentally commit some changes with sensitive information but you notice before pushing to a remote repository, there are some easier fixes. If you last commit is the one to add the sensitive information, you can simply remove the sensitive information, then run:\ngit commit -a --amend\n\n▲ That will amend the previous commit with any new changes you've made, including entire file removals done with a git rm. If the changes are further back in history but still not pushed to a remote repository, you can do an interactive rebase:\ngit rebase -i origin/master\n\n$EDITOR file-to-fix\ngit commit -a --amend\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git undo changes in some files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 297    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/933344",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ There are three basic ways to do this depending on what you have done with the changes to the file A. If you have not yet added the changes to the index or committed them, then you just want to use the checkout command - this will change the state of the working copy to match the repository:\ngit checkout A\n\n▲ If you added it to the index already, use reset:\ngit reset A\n\n▲ If you had committed it, then you use the revert command:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the -n means, do not commit the revert yet")]),t._v("\ngit revert -n <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now make sure we are just going to commit the revert to A")]),t._v("\ngit reset B\ngit commit\n\n▲ If on the other hand, you had committed it, but the commit involved rather a lot of files that you do not also want to revert, then the above method might involve a lot of "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reset B"')]),t._v(" commands. In this case, you might like to use this method:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# revert, but do not commit yet")]),t._v("\ngit revert -n <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean all the changes from the index")]),t._v("\ngit reset\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now just add A")]),t._v("\ngit add A\ngit commit\n\n▲ Another method again, requires the use of the rebase -i command. This one can be useful if you have more than one commit to edit:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use rebase -i to cherry pick the commit you want to edit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the sha1 of the commit before the one you want to edit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# you get an editor with a file and a bunch of lines starting with "pick"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# change the one(s) you want to edit to "edit" and then save the file')]),t._v("\ngit rebase -i <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# now you enter a loop, for each commit you set as "edit", you get to basically redo that commit from scratch')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# assume we just picked the one commit with the erroneous A commit")]),t._v("\ngit reset A\ngit commit --amend\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go back to the start of the loop")]),t._v("\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to amend older Git commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8825163",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD^^^\n\ngit add .\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: git rebase merge conflict")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 144    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11710051",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git mergetool\n\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How do I properly remove sensitive data pushed to a Git repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 61    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29741586",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive dba507c^\n\ngit commit --all --amend --no-edit\ngit rebase --continue\n\ngit push -f origin your_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How to undelete a file previously deleted in git's history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 59    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3150528",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag originalHead # just in case\ngit rebase -i <id of the parent of the commit that deleted the file>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# change pick to edit for that commit")]),t._v("\ngit checkout <id of the previous commit> <filename> # thanks for reminding, kubi\ngit commit --amend\ngit rebase --continue\ngit tag -d originalHead\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v('9. Usage scenario: git rebase "deleted by us" and "deleted by them"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27424658",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Reference documentation\n▲ Demonstration\n$ ls\na\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")])]),t._v("\n* d055cdd (HEAD -> y) Write baz in a-file\n| * 487dc8c (x) Write bar in a-file\n|/  \n* 3fa0da5 (master) Write foo in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase x")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Write baz in a-file\nUsing index info to reconstruct a base tree...\nM   a\nFalling back to patching base and 3-way merge...\nAuto-merging a\nCONFLICT (content): Merge conflict in a\nerror: Failed to merge in the changes.\nPatch failed at 0001 Write baz in a-file\nThe copy of the patch that failed is found in: .git/rebase-apply/patch\n\nWhen you have resolved this problem, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you prefer to skip this patch, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" instead.\nTo check out the original branch and stop rebasing, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n$ cat a\n<<<<<<< HEAD\nbar\n=======\nbaz\n>>>>>>> Write baz in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ours")]),t._v(" a")]),t._v("\n$ cat a\nbar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --theirs")]),t._v(" a")]),t._v("\n$ cat a\nbaz\n\n▲ More pedantic analysis\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How to remove a commit from the middle of a branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42522493",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log                          # copy the target commit ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" <target-commit>~1  # start rebase from the previous commit of target commit")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")]),t._v("      # repeat the command until finish rebase")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" origin HEAD ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to rebase after git-subtree add?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 19    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48293315",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --preserve-merges master\n\ngit rebase --continue\n\ngit diff <ref-before-rebase> <ref-after-rebase> -- .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: git push after removing large file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2327928",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD^")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" 57d0b28")]),t._v("\nStopped at 366eca1... This has a huge file\nYou can amend the commit now, with\n\n    git commit --amend\n\nOnce you are satisfied with your changes, run\n\n    git rebase --continue\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --cached")]),t._v(" big-nasty-file")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'big-nasty-file'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --amend")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Git reset current rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35174113",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you just want to redo a merge for a specific file, all you need to do is:\ngit checkout -m <file>\n\n▲ I run a git status which, as of Git 2.0.0, gives me something like this (only if you are doing an interactive rebase):\ninteractive rebase in progress; onto 14ed389\nLast command done (1 command done):\n   pick db2511c Modify file\nNext command to do (1 remaining command):\n   pick d1c2037 Modify file one more time\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --edit-todo"')]),t._v(" to view and edit)\nYou are currently rebasing branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other'")]),t._v(" on "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'14ed389'")]),t._v(".\n  (fix conflicts and then run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(")\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" to skip this patch)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(" to check out the original branch)\n\nUnmerged paths:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" to unstage)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to mark resolution)\n\n        both modified:   file.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: GIT: Updating a feature branch with changes in master without merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40532727",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Git: I've a feature branch with 80+ commits. How can I safely merge it into develop/production without ruining the history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27076194",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" HEAD~3")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD~")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add ... # only files of feature A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Feature A'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add ... # only files of feature B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Feature B'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add ... # only files of feature C")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Feature B'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v('16. Usage scenario: In rebase conflicts, how to say "use file from branch A, blow away file from master"?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37446251",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout bra")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase origin/master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --theirs")]),t._v(" -- README")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <id of commit E> -- README")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Adding old git history to new repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53324766",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone git@newrepo.com:project.git\ncd project\ngit fetch --all\ngit remote add original https://oldrepo.com/project-old.git\ngit fetch original\ngit rebase --onto original/master 6210d0b3cf20f506ce0bab7849550b38c9effb15 master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Manual resolution of conflict")]),t._v("\n\ngit rebase --continue\ngit push --force origin master      # Need to disable branch protection in gitlab\n                                    # Re-enable protection in gitlab\n\ngit checkout --track origin/upstream\ngit rebase --onto original/upstream 6210d0b3cf20f506ce0bab7849550b38c9effb15    \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Manual resolution of conflict    ")]),t._v("\ngit rebase --continue\ngir push --force origin upstream\n\ngit checkout --track origin/pristine-tar\ngit rebase --onto original/pristine-tar 6210d0b3cf20f506ce0bab7849550b38c9effb15\ngit push --force origin pristine-tar\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: How to remove a file from a git commit to push to svn")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2310765",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD~\ngit rm /path/to/symlink\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: Amending two previous commits in a pull request with a code cleanup")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61547394",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Rebase and use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"edit"')]),t._v(" to amend your commits\ngit rebase -i HEAD~3\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# use "e" or "edit" for commits 1 and 2')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# adjust them as necessary, then git rebase --continue each time")]),t._v("\n\n▲ Squash everything into one\ngit rebase -i HEAD~3\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# choose "s" or "squash", or "f" or "fixup" which is like squash but discards commit')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# messages")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: git: How to refresh a commit that isn't on top")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26420118",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive abc4321d^\n\ngit rebase --continue\n\ngit rebase --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: I want to merge master and a branch containing completely different data")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41931406",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull --rebase\n\ngit checkout feature-A\n\ngit rebase master\n\ngit add .\ngit rebase --continue\n\ngit push origin feature-A --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: Rollback to remote origin/master, but list all files that have changed first")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6192623",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i origin/master\n\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: Knowing the file that a number represents")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[t._v("git cat-file")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[t._v("git gc")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38069667",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ As mentioned in this answer you can try\ngit rev-list --objects --all | grep cbbf81da77a68297dcb6870025c5bb661c63e226\n\ngit cat-file -t cbbf81da77a68297dcb6870025c5bb661c63e226\n\n▲ and if it specifies either tree or commit, then something is probably very much corrupt. Otherwise, if it specified either blob or errors out, you can probably just garbage-collect your repository to get rid of it.\ngit gc --prune\n\nrm .git/objects/cb/bf81da77a68297dcb6870025c5bb661c63e226\n\n▲ If the file was introduced by itself in its own commit:\ngit revert <COMMIT>\n\n▲ If the file was introduced alongside other changes, find the commit before the offending commit:\ngit rebase -i <PRIOR COMMIT>\n\ngit add -A\ngit commit --amend\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Master loose Pull Request that moves to new branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27400287",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase master\n\n//resolve the conflicts then\n\ngit rebase --continue\n\ngit push origin tweet_overflow\n\n//Then do a pull request to master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: How to resolve conflict during rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20948397",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: How do I avoid spurious merge conflicts when rebasing a branch onto rewritten history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59363129",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i master\n\ndrop f878084 WIP Add glorious feature\npick 061fc84 Add Feature2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase 522cc62..061fc84 onto 522cc62 (2 commands)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# p, pick <commit> = use commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# r, reword <commit> = use commit, but edit the commit message")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e, edit <commit> = use commit, but stop for amending")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# s, squash <commit> = use commit, but meld into previous commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# f, fixup <commit> = like "squash", but discard this commit\'s log message')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# x, exec <command> = run command (the rest of the line) using shell")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# b, break = stop here (continue rebase later with 'git rebase --continue')")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# d, drop <commit> = remove commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# l, label <label> = label current HEAD with a name")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# t, reset <label> = reset HEAD to a label")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# m, merge [-C <commit> | -c <commit>] <label> [# <oneline>]")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       create a merge commit using the original merge commit's")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       message (or the oneline, if no original merge commit was")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# .       specified). Use -c <commit> to reword the commit message.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# These lines can be re-ordered; they are executed from top to bottom.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# However, if you remove everything, the rebase will be aborted.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note that empty commits are commented out")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br")])]),e("h2",{attrs:{id:"abort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abort"}},[t._v("#")]),t._v(" 🔹 --abort")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I merge two commits into one if I already started rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1866    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2568581",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Summary\n▲ The Fix\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --pretty")]),t._v("=oneline")]),t._v("\na931ac7c808e2471b22b5bd20f0cad046b1c5d0d c\nb76d157d507e819d7511132bdb5a80dd421d854f b\ndf239176e1a2ffac927d8b496ea00d5488481db5 a\n\npick b76d157 b\npick a931ac7 c\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase df23917..a931ac7 onto df23917")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commands:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  p, pick = use commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  r, reword = use commit, but edit the commit message")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  e, edit = use commit, but stop for amending")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#  s, squash = use commit, but meld into previous commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#  f, fixup = like "squash", but discard this commit\'s log message')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you remove a line here THAT COMMIT WILL BE LOST.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# However, if you remove everything, the rebase will be aborted.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\npick   b76d157 b\nsquash a931ac7 c\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is a combination of 2 commits.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The first commit's message is:")]),t._v("\n\nb\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This is the 2nd commit message:")]),t._v("\n\nc\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --pretty")]),t._v("=oneline")]),t._v("\n18fd73d3ce748f2a58d1b566c03dd9dafe0b6b4f b and c\ndf239176e1a2ffac927d8b496ea00d5488481db5 a\n\n▲ Note About Rewriting History\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to remove selected commit log entries from a Git repository while keeping their changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 276    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/495352",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" HEAD~5")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")]),t._v("  ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git rebase: conflicts keep blocking progress")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 105    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4851776",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ mkdir failing-merge\n$ cd failing-merge\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\nInitialized empty Git repository in $HOME/failing-merge/.git/\n\n$ echo v1.4-alpha-02 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" initial")]),t._v("\n[master (root-commit) 2eef0a5] initial\n 1 files changed, 1 insertions(+), 0 deletions(-)\n create mode 100644 version.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" v4")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v4'")]),t._v("\n$ echo v1.4-alpha-03 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" v4")]),t._v("\n[v4 1ef8c9b] v4\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ echo v1.4-alpha-04 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" master")]),t._v("\n[master 7313eb3] master\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout v4")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v4'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: v4\nUsing index info to reconstruct a base tree...\nFalling back to patching base and 3-way merge...\nAuto-merging version.txt\nCONFLICT (content): Merge conflict in version.txt\nRecorded preimage for "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'version.txt'")]),t._v("\nFailed to merge in the changes.\nPatch failed at 0001 v4\n\nWhen you have resolved this problem run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you would prefer to skip this patch, instead run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(".\nTo restore the original branch and stop rebasing run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n$ cat version.txt\n<<<<<<< HEAD\nv1.4-alpha-04\n=======\nv1.4-alpha-03\n>>>>>>> v4\n\n$ echo v1.4-alpha-04 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")]),t._v(" ")]),t._v("\nApplying: v4\nNo changes - did you forget to use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add'")]),t._v("?\nIf there is nothing left to stage, chances are that something else\nalready introduced the same changes; you might want to skip this patch.\n\nWhen you have resolved this problem run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you would prefer to skip this patch, instead run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(".\nTo restore the original branch and stop rebasing run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Not currently on any branch.")]),t._v("\nnothing to commit (working directory clean)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --skip")])]),t._v("\nHEAD is now at 7313eb3 master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git how to exit rebase mode")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 60    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41052122",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v('5. Usage scenario: git rebase "deleted by us" and "deleted by them"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27424658",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Reference documentation\n▲ Demonstration\n$ ls\na\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")])]),t._v("\n* d055cdd (HEAD -> y) Write baz in a-file\n| * 487dc8c (x) Write bar in a-file\n|/  \n* 3fa0da5 (master) Write foo in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase x")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Write baz in a-file\nUsing index info to reconstruct a base tree...\nM   a\nFalling back to patching base and 3-way merge...\nAuto-merging a\nCONFLICT (content): Merge conflict in a\nerror: Failed to merge in the changes.\nPatch failed at 0001 Write baz in a-file\nThe copy of the patch that failed is found in: .git/rebase-apply/patch\n\nWhen you have resolved this problem, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you prefer to skip this patch, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" instead.\nTo check out the original branch and stop rebasing, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n$ cat a\n<<<<<<< HEAD\nbar\n=======\nbaz\n>>>>>>> Write baz in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ours")]),t._v(" a")]),t._v("\n$ cat a\nbar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --theirs")]),t._v(" a")]),t._v("\n$ cat a\nbaz\n\n▲ More pedantic analysis\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v('6. Usage scenario: How can I save a git "rebase in progress"?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41687681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Rebase = repeated cherry-pick\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\\n           B1--B2--B3   <-- branchB\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-B2'")]),t._v("-B3'  <-- branchB\n            \\\n             B1--B2--B3   [abandoned]\n\n▲ Conflicts are in the index\n▲ But there's only one index\n▲ Where you are now\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1'  <-- HEAD\n            \\\n             B1--B2--B3   <-- branchB\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-B2'")]),t._v("  <-- HEAD\n            \\\n             B1--B2--B3   <-- branchB\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch saveme    # or git tag saveme")]),t._v("\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-B2'")]),t._v("  <-- HEAD, saveme\n            \\\n             B1--B2--B3   <-- branchB\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")])]),t._v("\n\n...--A1--A2--A3--A4--A5   <-- branchA\n          \\           \\\n           \\           B1"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-B2'")]),t._v("  <-- saveme\n            \\\n             B1--B2--B3   <-- HEAD->branchB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br")])]),e("p",[e("strong",[t._v('7. Usage scenario: git terminal show "rebase" next to branch name')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47777319",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --continue\n\ngit rebase --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: Undoing local merge if remote gets updated")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52591122",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ When your push fails, you know the remote must have updated, so your local origin/develop copy is out of date. I like to know what changed before deciding how to deal with it, so I usually run\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch")]),t._v("\n\n▲ If you decide you want to rebase your commit on top of the latest, you can just use\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")])]),t._v("\n\n▲ If it"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s not a clean rebase you'")]),t._v("ll get into fixing it up by hand - if you think that's going to happen (or it already did and you ran git rebase --abort), you may prefer to reset and re-do the merge by hand:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" origin/develop")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: git rebase, resolve all conflicts manually")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69988351",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If a merge conflict arises, rebase stops to ask you to resolve the merge conflict. You have to fix them as they come one by one, and then continue the rebase each time a conflict occurs by marking the afflicted files as solved via:\ngit add <resolved file>\n\ngit rebase --continue\n\n▲ If in doubt, you can always hit\ngit rebase --abort\n\ngit diff <branchname>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: git: How to refresh a commit that isn't on top")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26420118",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive abc4321d^\n\ngit rebase --continue\n\ngit rebase --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"keep-empty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keep-empty"}},[t._v("#")]),t._v(" 🔹 --keep-empty")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Clean commit using rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30376059",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD~5 --keep-empty\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"reapply-cherry-picks"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reapply-cherry-picks"}},[t._v("#")]),t._v(" 🔹 --reapply-cherry-picks")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to prevent git doing a fast-forward when rebasing a branch that's been merged, then reverted")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68016086",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick F..B\n\ngit rebase --reapply-cherry-picks --onto master F B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"skip"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#skip"}},[t._v("#")]),t._v(" 🔹 --skip")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Git rebase: conflicts keep blocking progress")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 105    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4851776",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ mkdir failing-merge\n$ cd failing-merge\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\nInitialized empty Git repository in $HOME/failing-merge/.git/\n\n$ echo v1.4-alpha-02 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" initial")]),t._v("\n[master (root-commit) 2eef0a5] initial\n 1 files changed, 1 insertions(+), 0 deletions(-)\n create mode 100644 version.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" v4")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v4'")]),t._v("\n$ echo v1.4-alpha-03 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" v4")]),t._v("\n[v4 1ef8c9b] v4\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n$ echo v1.4-alpha-04 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" master")]),t._v("\n[master 7313eb3] master\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout v4")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'v4'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: v4\nUsing index info to reconstruct a base tree...\nFalling back to patching base and 3-way merge...\nAuto-merging version.txt\nCONFLICT (content): Merge conflict in version.txt\nRecorded preimage for "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'version.txt'")]),t._v("\nFailed to merge in the changes.\nPatch failed at 0001 v4\n\nWhen you have resolved this problem run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you would prefer to skip this patch, instead run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(".\nTo restore the original branch and stop rebasing run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n$ cat version.txt\n<<<<<<< HEAD\nv1.4-alpha-04\n=======\nv1.4-alpha-03\n>>>>>>> v4\n\n$ echo v1.4-alpha-04 > version.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add version.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")]),t._v(" ")]),t._v("\nApplying: v4\nNo changes - did you forget to use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add'")]),t._v("?\nIf there is nothing left to stage, chances are that something else\nalready introduced the same changes; you might want to skip this patch.\n\nWhen you have resolved this problem run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you would prefer to skip this patch, instead run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(".\nTo restore the original branch and stop rebasing run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Not currently on any branch.")]),t._v("\nnothing to commit (working directory clean)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --skip")])]),t._v("\nHEAD is now at 7313eb3 master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br")])]),e("p",[e("strong",[t._v('2. Usage scenario: git rebase "deleted by us" and "deleted by them"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 56    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27424658",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Reference documentation\n▲ Demonstration\n$ ls\na\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")])]),t._v("\n* d055cdd (HEAD -> y) Write baz in a-file\n| * 487dc8c (x) Write bar in a-file\n|/  \n* 3fa0da5 (master) Write foo in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase x")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Write baz in a-file\nUsing index info to reconstruct a base tree...\nM   a\nFalling back to patching base and 3-way merge...\nAuto-merging a\nCONFLICT (content): Merge conflict in a\nerror: Failed to merge in the changes.\nPatch failed at 0001 Write baz in a-file\nThe copy of the patch that failed is found in: .git/rebase-apply/patch\n\nWhen you have resolved this problem, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nIf you prefer to skip this patch, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" instead.\nTo check out the original branch and stop rebasing, run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\n$ cat a\n<<<<<<< HEAD\nbar\n=======\nbaz\n>>>>>>> Write baz in a-file\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ours")]),t._v(" a")]),t._v("\n$ cat a\nbar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --theirs")]),t._v(" a")]),t._v("\n$ cat a\nbaz\n\n▲ More pedantic analysis\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Undoing a git rebase --skip - reapply a commit during a rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 46    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21707128",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --skip")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Can't resolve rebase conflict")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 46    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22816493",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --skip\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: git merge changes from another repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26895746",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --skip\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"edit-todo"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#edit-todo"}},[t._v("#")]),t._v(" 🔹 --edit-todo")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Git reset current rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35174113",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you just want to redo a merge for a specific file, all you need to do is:\ngit checkout -m <file>\n\n▲ I run a git status which, as of Git 2.0.0, gives me something like this (only if you are doing an interactive rebase):\ninteractive rebase in progress; onto 14ed389\nLast command done (1 command done):\n   pick db2511c Modify file\nNext command to do (1 remaining command):\n   pick d1c2037 Modify file one more time\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --edit-todo"')]),t._v(" to view and edit)\nYou are currently rebasing branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'other'")]),t._v(" on "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'14ed389'")]),t._v(".\n  (fix conflicts and then run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(")\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" to skip this patch)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(" to check out the original branch)\n\nUnmerged paths:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git reset HEAD <file>..."')]),t._v(" to unstage)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to mark resolution)\n\n        both modified:   file.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I process a specific merge conflict with a given strategy when rebasing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-restore.html"}},[t._v("git restore")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68948140",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Background\n▲ The state at merge conflict\ngit reset --hard\n\ngit cherry-pick -n -X theirs <hash>\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\ninteractive rebase in progress; onto 7753c04\nLast commands done (2 commands done):\n   pick 2cd436b 1\n   pick a50fcb5 4\nNext commands to do (2 remaining commands):\n   pick 7bcbde0 2\n   pick d162089 3\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --edit-todo"')]),t._v(" to view and edit)\nYou are currently rebasing branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" on "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7753c04'")]),t._v(".\n  (fix conflicts and then run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(")\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(" to skip this patch)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(" to check out the original branch)\n\nUnmerged paths:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git restore --staged <file>..."')]),t._v(" to unstage)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to mark resolution)\n        both modified:   afile\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")])]),t._v("\nHEAD is now at 2cd436b 1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -n")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" theirs REBASE_HEAD")]),t._v("\nAuto-merging afile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\nhint: Waiting for your editor to close the file... \n\n[detached HEAD 8c95399] 4\n 1 file changed, 2 insertions(+)\nAuto-merging afile\nCONFLICT (content): Merge conflict in afile\nerror: could not apply 7bcbde0... 2\nResolve all conflicts manually, mark them as resolved with\n"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add/rm <conflicted_files>"')]),t._v(", then run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --continue"')]),t._v(".\nYou can instead skip this commit: run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --skip"')]),t._v(".\nTo abort and get back to the state before "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase"')]),t._v(", run "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rebase --abort"')]),t._v(".\nCould not apply 7bcbde0... 2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")])]),t._v("\nHEAD is now at 8c95399 4\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse REBASE_HEAD")]),t._v("\n7bcbde00fb66f08d46b1abc5f718c88d144179c8\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -n")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" theirs REBASE_HEAD")]),t._v("\nAuto-merging afile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")]),t._v(" ")]),t._v("\nhint: Waiting for your editor to close the file... \n\n[detached HEAD 5ce59c6] 2\n 1 file changed, 1 deletion(-)\nSuccessfully rebased and updated refs/heads/master.\n\n▲ Using the edit command\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# HEAD commit fixed two bugs, one in file-one.py and one in file-two.py.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get file-two.py from HEAD~ into the index, leaving the fix in the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# working tree.")]),t._v("\ngit restore --source=HEAD~ file-two.py -S\ngit commit --amend --edit\n\ngit add file-two.py\ngit commit\n\ngit rebase --continue\n\n▲ Conclusion\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br")])]),e("h2",{attrs:{id:"merge"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merge"}},[t._v("#")]),t._v(" 🔹 --merge")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Git rebase --merge with only some of the commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11250551",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Saving before the rebase\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git tag save-commitC <sha1>")]),t._v("\n\n▲ Rebasing without commit C\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --merge")]),t._v(" FETCH_HEAD")]),t._v("\n\npick <sha1> <message>\npick <sha1> <message>\npick <sha1> <message>\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n\n▲ Reapplying the commit\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick save-commitC")]),t._v("\n   # resolve merge conflicts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git tag"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" save-commitC")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("h2",{attrs:{id:"s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[t._v("#")]),t._v(" 🔹 -s")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to force a common ancestor in a git merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4683931",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -s recursive -X subtree=lib --onto master~100 upstream_lib~150 new_upstream_lib\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v('2. Usage scenario: Git, how to "force" a squash rebase')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39293736",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --soft")]),t._v(" HEAD~10")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" theirs HEAD~10")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"strategy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strategy"}},[t._v("#")]),t._v(" 🔹 --strategy")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I select a merge strategy for a git rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 264    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4273436",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --strategy-option theirs ${branch} # Long option\ngit rebase -X theirs ${branch} # Short option\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"x"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[t._v("#")]),t._v(" 🔹 -X")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I select a merge strategy for a git rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 264    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4273436",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --strategy-option theirs ${branch} # Long option\ngit rebase -X theirs ${branch} # Short option\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to force a common ancestor in a git merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4683931",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -s recursive -X subtree=lib --onto master~100 upstream_lib~150 new_upstream_lib\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to deal with a file getting added to a wrong commit in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11181590",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i COMMIT-OF-FEAT-X^ # notice the ^ at the end\n\ngit rebase --continue\n\ngit co feat-Y\ngit add wrong_file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Resolve rebase conflicts easily")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19675951",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\ngit rebase -s recursive -X theirs origin/featureBranch_04\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"strategy-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strategy-option"}},[t._v("#")]),t._v(" 🔹 --strategy-option")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I select a merge strategy for a git rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 264    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4273436",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --strategy-option theirs ${branch} # Long option\ngit rebase -X theirs ${branch} # Short option\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[t._v("#")]),t._v(" 🔹 -C")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: git: exchange the order of two commits before (including) common ancestor of multiple branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31779011",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout <branch-E>\ngit rebase -i <sha1-A>\n\ngit rebase --onto <sha1-B'> <sha1-C> <branch-G>\ngit rebase --onto <sha1-B'> <sha1-C> <branch-I>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"no-ff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-ff"}},[t._v("#")]),t._v(" 🔹 --no-ff")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Merge after reverting the original merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53121257",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("master\n|\n* R\n|\\\n| * B\n\n▲ Revert the Revert\nmaster\n|\n* R'\n|\n* R\n|\\\n| * B\n\n▲ Rebase the Branch\nmaster\n| \n* New merge commit\n|\\\n| * B'\n|  \\\n|   ...\n* R\n|\\\n| * B\n| ...\n|/\n* A\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff A")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br")])]),e("h2",{attrs:{id:"force-rebase"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force-rebase"}},[t._v("#")]),t._v(" 🔹 --force-rebase")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: git - cherry-picked feature commits into new branch, reverted commits, rebase not working as expected")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22462951",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto dev HEAD~<number of commits you care about> --force-rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Resolving merge conflicts after reverting a merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67420454",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout develop\ngit revert R\ngit merge feature\n\ngit checkout feature\ngit rebase --force-rebase 1^\ngit checkout develop\ngit merge feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[t._v("#")]),t._v(" 🔹 -f")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Undo line ending changes in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21014534",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --whitespace=fix -f <last_good_commit> \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Revert merge without cancel commits done after")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52167442",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can either rewrite branch history, or revert the merge.  Each has pros and cons.\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q <--(master)\n\n▲ If you do want to do a rewrite, rebase is the simplest way.  You'll need either the IDs of commits N and O, or expressions that resolve to commits N and O.  In this example we can use master~3 for N and master~2 for O.\ngit rebase --onto master~3 master~2 master\n\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q <--(master@{1})\n        \\\n         P' -- Q` <--(master)\n\nA -- B -- C <--(branch>\n\nM -- N -- P' -- Q` <--(master)\n\n▲ And in fact, after the reflog expires that"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s exactly what will remain (if you don'")]),t._v("t do something to preserve the old commits in the meantime).  At this point, to push master you would have to do a force push.  The safest way to do that is\ngit push --force-with-lease\n\ngit checkout master\ngit revert -m 1 master~2\n\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q -- !O <--(master)\n\ngit rebase -f master~3 branch\n\nA -- B -- C -- D -- E <--(branch>\n           \\\n  M -- N -- O -- P -- Q -- !O -- R -- S <--(master)\n\ngit checkout master\ngit revert master~2\ngit merge branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git rebase with merged commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51197124",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto master feature-branch~3 feature-branch\n\ngit rebase -f feature-branch~3 feature-branch\n\ngit rebase --onto master feature-branch~3 feature-branch\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("h2",{attrs:{id:"fork-point"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fork-point"}},[t._v("#")]),t._v(" 🔹 --fork-point")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Rebase two branches onto another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54024005",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase master feature/2\n\ngit branch -f feature/1 feature/2^\n\ngit rebase --onto feature/1 feature/1@{1} feature/2\n\ngit rebase --fork-point feature/1 feature/2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: git - bring changes of one branch to another with diff parents")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69401478",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --onto anotherBranch $(git merge-base release A) A\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or")]),t._v("\ngit switch A\ngit rebase --onto anotherBranch $(git merge-base --fork-point release) A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Append ticket number to all commit messages in git history local and remote")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69432007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git switch test_branch\ngit rebase -i $(git merge-base --fork-point main)\n\ngit filter-repo --replace-message expressions.txt $(git merge-base --fork-point main)..test_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: In Git, how do you rebase from your feature branch when the source branch history has been changed?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60329662",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --fork-point origin/master\n\ngit rebase <hash-of-first-feature-commit> <your-feature-branch> --onto origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"no-fork-point"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-fork-point"}},[t._v("#")]),t._v(" 🔹 --no-fork-point")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: git pull --rebase lost commits after coworker's git push --force")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42546368",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ TL;DR: it's the fork point code\ngit rebase @{u}\n\ngit rebase --no-fork-point\n\n▲ About git pull (don't use it)\n + 5122532...6f1308f pu         -> origin/pu  (forced update)\n\n▲ Basics of git rebase\n            D   <-- master\n\n... <- C <- D   <-- master\n\n...--o--o   <-- branch\n\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\n           E'  <-- (temporary)\n          /\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\n           E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G'  <-- branch\n          /\nA--B--C--D           <-- master\n    \\\n     E--F--G         [abandoned]\n\n▲ Determining what to copy\nA--B--C--D     <-- master\n    \\\n     E--F--G   <-- branch\n\ngit checkout branch; git rebase master\n\ngit rebase --onto <newbase> <upstream>\n\n▲ The --fork-point option\ngit merge-base $arg2 $(git log -g --format=%H $arg1)\n\n...--o--B1--B2--B3--C--D    <-- upstream\n                 \\\n                  E--F--G   <-- branch\n\n...--o-------------C--D     <-- upstream\n      \\\n       B1--B2--B3           <-- upstream@{1}\n                \\\n                 E--F--G    <-- branch\n\n...--o-------------C--D     <-- upstream\n      \\\n       B1--B2--B3--E--F--G  <-- branch\n\n$ arg1=origin/next\n$ arg2=stash-exp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),t._v(" $arg2 $(git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -g")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --format")]),t._v("=%H $arg1)")]),t._v("\n3313b78c145ba9212272b5318c111cde12bfef4a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-base"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --fork")]),t._v("-point $arg1 $arg2")]),t._v("\n$ echo $?\n1\n\n▲ Git before 2.0, and conclusion\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br")])]),e("h2",{attrs:{id:"whitespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#whitespace"}},[t._v("#")]),t._v(" 🔹 --whitespace")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Undo line ending changes in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21014534",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --whitespace=fix -f <last_good_commit> \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"committer-date-is-author-date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#committer-date-is-author-date"}},[t._v("#")]),t._v(" 🔹 --committer-date-is-author-date")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: GIT: change commit date to author date")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 66    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28537098",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --committer-date-is-author-date\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Rebasing a branch including all its children")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 42    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5632027",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%(refname:short)'")]),t._v(" --contains C | \\\nxargs -n 1 \\\ngit rebase --committer-date-is-author-date --onto F C^\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to push a file to past time?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24722927",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# date YYYY-mm-dd HH:MM:SS")]),t._v("\n\ncommit="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v(" datecal="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$2"')]),t._v("\ntemp_branch="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temp-rebasing-branch"')]),t._v("\ncurrent_branch="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git rev-parse --abbrev-ref HEAD)"')]),t._v("\n\ndate_timestamp=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$datecal"')]),t._v(" +%s)\ndate_r=$(date -R -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$datecal"')]),t._v(")\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datecal=$datecal => date_timestamp=$date_timestamp date_r=$date_r"')]),t._v("\n\nif [[ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v(" ]]; then\n    exit 0\nfi\n\ngit checkout -b "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v("\nGIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_timestamp"')]),t._v(" GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_timestamp"')]),t._v(" git commit --amend --no-edit --date "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_r"')]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$current_branch"')]),t._v("\ngit rebase --autostash --committer-date-is-author-date "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v(" --onto "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v("\ngit branch -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to rebase feature branch from theme branch to development branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38653362",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --committer-date-is-author-date --onto dev T4 W`\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to add old project files midway to main branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66170061",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout main")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge Orphan I"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --allow")]),t._v("-unrelated-histories")]),t._v("\n$ GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-01-31T13:41:20'")]),t._v(" GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lost and found'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" A"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")]),t._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --committer")]),t._v("-date-is-author-date")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Git: Remove commit from history without changing anything else (dates, committers)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68404527",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --committer-date-is-author-date \\\n -x "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git config user.name \"$(git show -s --format=%an $(git rev-parse HEAD))\"'")]),t._v(" \\\n -x "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git config user.email \"$(git show -s --format=%ae $(git rev-parse HEAD))\"'")]),t._v(" \\\n @~x\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"ignore-date"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignore-date"}},[t._v("#")]),t._v(" 🔹 --ignore-date")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Change timestamps while rebasing git branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 158    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1579676",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --ignore-date\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[t._v("#")]),t._v(" 🔹 -i")]),t._v(" "),e("h2",{attrs:{id:"interactive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interactive"}},[t._v("#")]),t._v(" 🔹 --interactive")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to modify a specified commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3606    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1186549",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bbc643cd^'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --amend")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-edit")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I properly remove sensitive data pushed to a Git repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 61    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29741586",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive dba507c^\n\ngit commit --all --amend --no-edit\ngit rebase --continue\n\ngit push -f origin your_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git rebase interactive the last n commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 50    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41464876",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive <sha1>\n\ngit rebase -i cb85072\ngit rebase -i 5116d42^\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to replace a commit with another one in Git rebase?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14590183",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout new_feature\ngit rebase --interactive old_feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to run tests for all commits during a rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21560897",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive --exec "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ant rebuild test"')]),t._v(" C\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Git: Copy history of file from one repository to another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[t._v("git replace")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44782681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ More generally, if we assume paths shouldn't change and that the files you want could be anywhere in the tree, then you could use filter-branch with an --index-filter.\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rm --cached --ignore-unmatch each file or *glob* you do NOT want'")]),t._v(" --prune-empty -- all\n\ncd repo-b\ngit remote add repo-a path/to/repo-a\ngit fetch repo-a\n\n... A -- B <--(repo-a/master)\n  \\\n   (repo-a/other-branches-maybe)\n\nB' -- C -- D (master)(origin/master)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# be sure you're on master")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit-id $graft-id"')]),t._v(" >> .git/info/grafts\ngit filter-branch $graft-id..HEAD\n\n▲ A rebase might be a little simpler (assuming a certain level of consistency between the histories) but introduces the possibility that you end up modifying the tree at D.  If you do decide to try a rebase, it would be\ngit rebase --onto repo-A/master B' master\n\ngit rebase --interactive --onto repo-A/master --root master\n\ngit tag old-history repo-a/master\ngit tag new-root B'\n\ngit replace new-root old-history\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How to squash commits on Bitbucket after they have been pushed?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34881686",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start with the existing personal branch that contains all of your commits.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout {ExistingBranchName}")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new personal branch that will be squashed.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" {BranchName}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Replace {BranchName} with your new branch name.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Replace "master" with a different CEF branch as appropriate')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# (e.g. "2272", "2171", etc).')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-base {BranchName} master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" {hash}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If the branch has already been pushed to the remote repository")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you will need to add the  `--force` argument.")]),t._v("\ngit push origin {BranchName}\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or git push origin {BranchName} --force")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How to split every commit by file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff-tree.html"}},[t._v("git diff-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44269268",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The Script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env bash")]),t._v("\nset -e\n\nSHA=$(git rev-parse --short HEAD)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Change to repo root directory")]),t._v("\ncd $(git rev-parse --show-toplevel)\n\ngit reset HEAD^\n\ngit diff-tree --no-commit-id --name-only -r $SHA | while read -r f; do\n  git add "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$f"')]),t._v("\n  GIT_EDITOR="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo '0a\\n$SHA $f\\n\\n.\\nw' | ed -s\"")]),t._v(" git commit -c $SHA\ndone\n\n<original SHA> <file name>\n\n<original commit message>\n\n▲ Usage\ngit rebase --interactive --exec git-split <branch>\n\np Commit to split\nx git-split\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Use git rebase to retroactively make commits land on a different branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4696970",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i <commit 1> master     # -i is a synonym for --interactive\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Amend comment message from older commits using SHA ID")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34269929",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD~2\n\ngit rebase --interactive <your_sha>~1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to squash my changes into a single result commit and pick into master branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7213160",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive master mybranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: Amending old commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17339096",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" bffd858~1")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Squash commits after rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37459542",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive <commit-id>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Remove old commits and just keep latest commit on REMOTE")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55868179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive master # change master if it is not your base branch\n\ngit push --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Editing a past commit message")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38555583",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")])]),t._v("\n5ebe0d0 foo\n66096c8 bar\nd83d7a7 *typo*\na9f4c59 baz\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d83d7a7^'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: How to flatten merge commit during git rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46545120",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you just start the rebase, as in\ngit rebase --interactive --onto <new-parent> 2955a39^ 77a706b\n\n  P\n /\no -- X -- o -- o -- O <--(master)\n      \\\n       A -- B --- M -- D <--(branch)\n             \\   /\n               C\n\n▲ If you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re just moving branch from X to O, then you don'")]),t._v("t really need --onto; you can treat master as your upstream because the old branch point is an ancestor of the new parent.\ngit rebase -i master branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Squash all commits with commit messages that match a certain pattern")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45362115",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("chmod +x squash.sh\nGIT_EDITOR=./squash.sh git rebase --interactive $COMMIT_ID\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Rebase or Merge Git branch but Keep Deleted Files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45110449",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If my_branch is as linear as you depict - no merge commits on the branch - then you could probably get by with an interactive rebase.\ngit rebase --interactive master my_branch\n\ngit diff --diff-filter D --no-renames --name-only HEAD^\n\ngit checkout HEAD^ -- path/and/filename\n\ngit add .\ngit commit --amend\n\n▲ The above rebase command will also complete the rebasing of your work onto the tip of master.  If you don't want that - e.g. if you want to merge the work into master instead - you could do something like\ngit rebase --interactive `git merge-base my_branch master` my_branch\n\ngit checkout `git merge-base master my_branch`\ncp all/the/files/that/were/deleted some/path/where/I/can/find/them/later\n\ngit filter-branch --tree-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'cp some/path/where/I/can/find/them/later all/the/files/that/were/deleted'")]),t._v(" -- my_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How do you easily unmerge a topic branch in Subversion/git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6797425",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive --preserve-merges <hash before first merge>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How do I cleanup Git Commits messed up by Rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28180750",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch old-master master # just so you don't lose anything...\ngit checkout refactor\ngit branch -d master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git rebase --interactive D # commit D is the one in refactor branch")]),t._v("\ngit branch master G # commit G is the one in refactor branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: git merging only recent changes from one repository to another which is an unrelated snapshot (not a clone)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30763413",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git remote add external ssh://path/to/B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git fetch external")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("~/A $ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" A04"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" external/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: How do I merge without losing commit history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37198003",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive master 1.3.6\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: git: How to refresh a commit that isn't on top")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26420118",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive abc4321d^\n\ngit rebase --continue\n\ngit rebase --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: How to rebase commits in Git (Github)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34365135",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --interactive")]),t._v(" <commit_id>")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: git squash with a merged file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17507832",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git symbolic-ref HEAD refs/heads/newroot\ngit rm --cached -r .\ngit clean -f -d\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All commits should be listed then: you can squash them")]),t._v("\ngit rebase --interactive --onto newroot --root master\ngit branch -d newroot\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: GIT: How to remove a folder and its contents from Initial commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48129743",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive --root \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"r"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#r"}},[t._v("#")]),t._v(" 🔹 -r")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Git: add file to old commit being parent of a new branch already merged back?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65243353",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -i for --interactive")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# -r for --rebase-merges")]),t._v("\ngit rebase -i -r A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"rebase-merges"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#rebase-merges"}},[t._v("#")]),t._v(" 🔹 --rebase-merges")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to add old project files midway to main branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66170061",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout main")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge Orphan I"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --allow")]),t._v("-unrelated-histories")]),t._v("\n$ GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2001-01-31T13:41:20'")]),t._v(" GIT_COMMITTER_DATE=$GIT_AUTHOR_DATE git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Lost and found'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" A"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")]),t._v("-merges"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --committer")]),t._v("-date-is-author-date")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"exec"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exec"}},[t._v("#")]),t._v(" 🔹 --exec")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to run tests for all commits during a rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21560897",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive --exec "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ant rebuild test"')]),t._v(" C\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to split every commit by file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff-tree.html"}},[t._v("git diff-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44269268",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The Script\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env bash")]),t._v("\nset -e\n\nSHA=$(git rev-parse --short HEAD)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Change to repo root directory")]),t._v("\ncd $(git rev-parse --show-toplevel)\n\ngit reset HEAD^\n\ngit diff-tree --no-commit-id --name-only -r $SHA | while read -r f; do\n  git add "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$f"')]),t._v("\n  GIT_EDITOR="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"echo '0a\\n$SHA $f\\n\\n.\\nw' | ed -s\"")]),t._v(" git commit -c $SHA\ndone\n\n<original SHA> <file name>\n\n<original commit message>\n\n▲ Usage\ngit rebase --interactive --exec git-split <branch>\n\np Commit to split\nx git-split\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br")])]),e("h2",{attrs:{id:"root"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#root"}},[t._v("#")]),t._v(" 🔹 --root")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Squash the first two commits in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 850    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/598788",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root master\n\npick sha1 X\nsquash sha1 Y\npick sha1 Z\n\n git checkout <sha1_for_B>\n\n git reset --soft <sha1_for_A>\n\n git commit --amend\n\n git tag tmp\n\n git checkout master\n\n git rebase --onto tmp <sha1_for_B>\n\n git tag -d tmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I git rebase the first commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 486    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23000315",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to remove the first commit in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 432    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32765827",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git update-ref -d HEAD\n\ngit rebase -i --root\n\ngit checkout --orphan <new-branch-name>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to copy commits from one Git repo to another?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the old repo as a remote repository ")]),t._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the old repo commits")]),t._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# examine the whole tree")]),t._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),t._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check your local repo is correct")]),t._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# send your new tree (repo state) to github")]),t._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove the now-unneeded reference to oldrepo")]),t._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#create LICENSE file, edit, add content, save")]),t._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit'")]),t._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make sure there are no unsaved changes")]),t._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pull the latest version from github")]),t._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# move their master branch pointer to the one you published to github.")]),t._v("\ngit reset --hard origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to use interactive rebase on the first (root) commit of a branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 41    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30277327",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Set things up")]),t._v("\n$ mkdir testgit\n$ cd testgit\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make two commits")]),t._v("\n$ touch README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add README")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add README"')]),t._v("\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"foo\\n"')]),t._v(" > README\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"write 'foo' in README\"")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Inspect the log")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")])]),t._v("\n* 815b6ca (HEAD -> master) write "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" in README\n* 630ede6 add README\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase (interactively) the root of the current branch: ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - Substitute 'squash' for 'pick' on the second line; save and quit the editor.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# - Then write the commit message of the resulting commit; save and quit the editor.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --root")])]),t._v("\n[detached HEAD c9003cd] add README; write "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" in README\n Date: Sat May 16 17:38:43 2015 +0100\n 1 file changed, 1 insertion(+)\n create mode 100644 README\nSuccessfully rebased and updated refs/heads/master.\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Inspect the log again")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")])]),t._v("\n* c9003cd (HEAD -> master) add README; write "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'foo'")]),t._v(" in README\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Git: Copy history of file from one repository to another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-replace.html"}},[t._v("git replace")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44782681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ More generally, if we assume paths shouldn't change and that the files you want could be anywhere in the tree, then you could use filter-branch with an --index-filter.\ngit filter-branch --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git rm --cached --ignore-unmatch each file or *glob* you do NOT want'")]),t._v(" --prune-empty -- all\n\ncd repo-b\ngit remote add repo-a path/to/repo-a\ngit fetch repo-a\n\n... A -- B <--(repo-a/master)\n  \\\n   (repo-a/other-branches-maybe)\n\nB' -- C -- D (master)(origin/master)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# be sure you're on master")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit-id $graft-id"')]),t._v(" >> .git/info/grafts\ngit filter-branch $graft-id..HEAD\n\n▲ A rebase might be a little simpler (assuming a certain level of consistency between the histories) but introduces the possibility that you end up modifying the tree at D.  If you do decide to try a rebase, it would be\ngit rebase --onto repo-A/master B' master\n\ngit rebase --interactive --onto repo-A/master --root master\n\ngit tag old-history repo-a/master\ngit tag new-root B'\n\ngit replace new-root old-history\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: (yet another) modify git history to add a very first commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10102637",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git symbolic-ref HEAD refs/heads/base\n\ngit rm --cached -r .\n\ngit clean -d --force\n\ngit commit --allow-empty -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial Commit'")]),t._v("\n\ngit cherry-pick 50da9c3\n\ngit rebase --onto base --root master\n\ngit branch -d base\n\ngit branch -D c4-c5branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: Rebase entire development branch onto new master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31353842",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ First off, if the inital commit on your develop branch is suitable as the initial commit on the new master branch, then you can simply create the master branch there and you're done:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch master <sha1-of-initial-commit-on-develop>")]),t._v("\n\n▲ If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t have that luxury, then you'")]),t._v("ll need to create a new empty commit that will serve as the initial commit of master.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the new master branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --orphan")]),t._v(" master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clear the working directory (we want the initial commit to be empty)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -rf")]),t._v(" .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the initial commit on master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --allow")]),t._v("-empty"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase the entire develop branch onto the new master branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --onto")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --root")]),t._v(" develop")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch temp <common-ancestor>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <topic-branch>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase temp")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" temp")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Remove some content of a file from git history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45519115",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("make sure you have a backup\nedit thefile\ngit commit thefile -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove details"')]),t._v("\ngit rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How to rebase entire master branch of git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[t._v("git mktree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58003170",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -B feature\ngit branch -f master   $(git commit-tree -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit.'")]),t._v(" `:|git mktree`)\ngit merge -s ours --allow-unrelated-histories   master\n\ngit checkout -B feature\ngit branch -f master   $(git commit-tree -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit.'")]),t._v(" `:|git mktree`)\ngit rebase --root --onto master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: add file in initial commit without creating new commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35797924",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("% git log --oneline\n072c8fc Modification 3 to master\n9bdb3a2 Modification 2 to master\n45f0758 Modification 1 to master\n96da320 Initial revision\n\n% git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: Remove first commit in repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56030634",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Pushing Only Recent History to a New Git Repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65097589",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Create new branch from specific commit onwards")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47395389",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Update - I misread your diagrams and had mixed up the branch names as a result.  Also as torek points out, a "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"more correct"')]),t._v(" reading of your diagrams includes some ambiguities.  I"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ll keep my answer mostly as is (but with branch names straightened out) as I believe it conveys the main principles; and I'")]),t._v("ll at a bit about using rebase if you need to further edit branchC history; but for a more detailed answer, see torek's response.\nA -- B -- C -- D <--(branchD)\n\ngit branch branchC\n\ngit reset --hard HEAD~3\n\nA <--(branchD)\n \\\n  B -- C -- D <--(branchC)\n\n▲ The ambiguities in the before-and-after diagrams in the question do leave open the possibility that I've misunderstood exactly what branchC should include in its history.  If branchC is not meant to include A, then you have to rewrite B, C, and D - and you can most easily do that with git rebase -i.  After creating branchC and moving branchD you could say\ngit rebase -i branchD^ branchC\n\n▲ Here branchD^ is a possible name for \"the commit before A.  If there is such a commit, it may have other names - perhaps master, or certainly its commit ID.  If there is no such commit, then I suppose you could say\ngit rebase -i --root branchC\n\nx -- B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' -- C'")]),t._v(" -- D' <--(branchC)\n  \\\n   A <--(branchD)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: how to delete the first commit and make its immediate child the root")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45250250",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --root")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: git squash with a merged file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17507832",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git symbolic-ref HEAD refs/heads/newroot\ngit rm --cached -r .\ngit clean -f -d\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All commits should be listed then: you can squash them")]),t._v("\ngit rebase --interactive --onto newroot --root master\ngit branch -d newroot\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: GIT: How to remove a folder and its contents from Initial commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48129743",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase --interactive --root \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: need to amend first commit or add a new commit before it")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20637961",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --root")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How to start using automatically generated changelog with old commit history present")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66803485",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: Squash commits before hash")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50536954",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i --root\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"autosquash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autosquash"}},[t._v("#")]),t._v(" 🔹 --autosquash")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I easily fixup a past commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 204    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3828861",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ UPDATED ANSWER\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add ...                           # Stage a fix")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --fixup")]),t._v("=a0b1c2d3           # Perform the commit to fix broken a0b1c2d3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --autosquash")]),t._v(" a0b1c2d3~1 # Now merge fixup commit into broken commit")]),t._v("\n\n▲ ORIGINAL ANSWER\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env python")]),t._v("\nfrom subprocess import call\nimport sys\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Taken from http://stackoverflow.com/questions/377017/test-if-executable-exists-in python")]),t._v("\ndef which(program):\n    import os\n    def is_exe(fpath):\n        return os.path.exists(fpath) and os.access(fpath, os.X_OK)\n\n    fpath, fname = os.path.split(program)\n    if fpath:\n        if is_exe(program):\n            return program\n    else:\n        for path in os.environ["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"PATH"')]),t._v("].split(os.pathsep):\n            exe_file = os.path.join(path, program)\n            if is_exe(exe_file):\n                return exe_file\n\n    return None\n\nif len(sys.argv) != 2:\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Usage: git fixup <commit>"')]),t._v("\n    sys.exit(1)\n\ngit = which("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git.exe"')]),t._v(")\nif not git:\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-fixup: failed to locate git executable"')]),t._v("\n    sys.exit(2)\n\nbroken_commit = sys.argv[1]\nif call([git, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rev-parse"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--verify"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--quiet"')]),t._v(", broken_commit]) != 0:\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-fixup: %s is not a valid commit"')]),t._v(" % broken_commit\n    sys.exit(3)\n\nif call([git, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"diff"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--staged"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--quiet"')]),t._v("]) == 0:\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-fixup: cannot fixup past commit; no fix staged."')]),t._v("\n    sys.exit(4)\n\nif call([git, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"diff"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--quiet"')]),t._v("]) != 0:\n    print "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git-fixup: cannot fixup past commit; working directory must be clean."')]),t._v("\n    sys.exit(5)\n\ncall([git, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--fixup="')]),t._v(" + broken_commit])\ncall(["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"set"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GIT_EDITOR=true"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"&&"')]),t._v(", git, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rebase"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-i"')]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--autosquash"')]),t._v(", broken_commit + "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"~1"')]),t._v("], shell=True)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to keep a clean (rebased) history with 'git-flow'?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51497630",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout feature/my-super-feature\ngit rebase develop\ngit checkout develop\ngit merge feature/my-super-feature\n\ngit rebase -i --autosquash HEAD~2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to edit an existing commit in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68602780",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("<-- older -------------------------------------- newer --\x3e\n...  <-commit3  <-commit4  <-commit5  <-...  <-last-commit\n\n           E--F--G--H   [abandoned]\n          /\nA--B--C--D\n          \\\n           E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("  <-- main\n\n▲ Branch names and HEAD\n...--F--G--H   <-- main (HEAD)\n\n          I--J   <-- develop (HEAD)\n         /\n...--G--H   <-- main\n         \\\n          K--L   <-- feature\n\n▲ Detached HEAD mode\n...--E--F   <-- HEAD\n         \\\n          G--H   <-- main\n\n▲ Rebase uses detached HEAD mode\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev (HEAD)\n\npick <hash-of-J>\npick <hash-of-K>\npick <hash-of-L>\n\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev\n           \\\n            J'  <-- HEAD\n\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev\n          |\\\n          | J'  [abandoned]\n           \\\n            J\"  <-- HEAD\n\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev\n           \\\n            J\"-K'  <-- HEAD\n\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev\n           \\\n            J\"-K'  [abandoned]\n             \\\n              K\"  <-- HEAD\n\n...--G--H   <-- main\n         \\\n          I--J--K--L   <-- dev\n           \\\n            J"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-K"')]),t._v("-L'  <-- HEAD\n\n▲ This is crazy, it's too hard\n▲ Using interactive rebase and fixup/squash\ngit checkout -b dev\n\n<some hacking>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prepare for delete"')]),t._v("\n<delete some stuff>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"delete bad things"')]),t._v("\n<more hacking>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add first part of good things"')]),t._v("\n<more hacking>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add second part of good things"')]),t._v("\n\n<hacking>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add third part of good things"')]),t._v("\n\ngit commit --fixup <hash of commit #2>\n\nfixup! delete bad things\n\ngit rebase -i --autosquash main\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br")])]),e("h2",{attrs:{id:"autostash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autostash"}},[t._v("#")]),t._v(" 🔹 --autostash")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to push a file to past time?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24722927",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# date YYYY-mm-dd HH:MM:SS")]),t._v("\n\ncommit="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v(" datecal="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$2"')]),t._v("\ntemp_branch="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temp-rebasing-branch"')]),t._v("\ncurrent_branch="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git rev-parse --abbrev-ref HEAD)"')]),t._v("\n\ndate_timestamp=$(date -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$datecal"')]),t._v(" +%s)\ndate_r=$(date -R -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$datecal"')]),t._v(")\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"datecal=$datecal => date_timestamp=$date_timestamp date_r=$date_r"')]),t._v("\n\nif [[ -z "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v(" ]]; then\n    exit 0\nfi\n\ngit checkout -b "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v("\nGIT_COMMITTER_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_timestamp"')]),t._v(" GIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_timestamp"')]),t._v(" git commit --amend --no-edit --date "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$date_r"')]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$current_branch"')]),t._v("\ngit rebase --autostash --committer-date-is-author-date "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v(" --onto "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v("\ngit branch -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$temp_branch"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I update or sync a forked repository on GitHub?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4895    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7244456",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Add the remote, call it "upstream":')]),t._v("\n\ngit remote add upstream https://github.com/whoever/whatever.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fetch all the branches of that remote into remote-tracking branches")]),t._v("\n\ngit fetch upstream\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make sure that you're on your master branch:")]),t._v("\n\ngit checkout master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rewrite your master branch so that any commits of yours that")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# aren't already in upstream/master are replayed on top of that")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# other branch:")]),t._v("\n\ngit rebase upstream/master\n\ngit push -f origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to rebase local branch onto remote master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1496    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7929499",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin            # Updates origin/master\ngit rebase origin/master    # Rebases current branch onto origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: master branch and 'origin/master' have diverged, how to 'undiverge' branches'?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1136    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2452610",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git log HEAD..origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge origin/master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase origin/master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")])]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Get changes from master into branch in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 947    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5340773",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout aq\ngit rebase master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Update Git branches from master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 819    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3877000",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout b1\n\ngit merge origin/master\n\ngit push origin b1\n\ngit fetch\ngit rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: merge one local branch into another local branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 372    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38206292",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout Branch3\n\ngit merge Branch1\n\ngit checkout Branch2\ngit rebase Branch1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How do you fix a bad merge, and replay your good commits onto a fixed merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 303    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/308684",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and check out a temporary branch at the location of the bad merge")]),t._v("\ngit checkout -b tmpfix <sha1-of-merge>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove the incorrectly added file")]),t._v("\ngit rm somefile.orig\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit the amended merge")]),t._v("\ngit commit --amend\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go back to the master branch")]),t._v("\ngit checkout master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# replant the master branch onto the corrected merge")]),t._v("\ngit rebase tmpfix\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# delete the temporary branch")]),t._v("\ngit branch -d tmpfix\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How to apply unmerged upstream pull requests from other forks into my fork?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 290    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6022366",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you don't care about applying also the eventual commits that have been added between the origin and the pull request, you can just rebase the branch on which the pull request was formed\ngit rebase master otherfork/pullrequest-branch\n\n▲ If you only want the commits in the pull request, identify their SHA1 and do\ngit cherry-pick <first-SHA1> <second-SHA1> <etc.>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Git: How to rebase to a specific commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 130    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7744237",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch temp master^\ngit checkout topic\ngit rebase temp\ngit branch -d temp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v('10. Usage scenario: Git merge develop into feature branch outputs "Already up-to-date" while it\'s not')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 115    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33342393",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout develop \ngit pull \ngit checkout branch-x\ngit rebase develop\n\ngit fetch && git rebase origin/develop\n\n[alias]\n    fr = "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!f() { git fetch && git rebase origin/"')]),t._v("$1"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"; }; f"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: Git Update Local Branch with remote Master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 62    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34656923",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit pull\ngit checkout <your-branch>\ngit merge master\n\ngit checkout <your-branch>\ngit rebase master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: Easiest way to replay commits on new git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5341526",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add temp file:///path/to/old/repo/on/your/machine\n\ngit fetch temp\n\ngit checkout temp/master -b wip\n\ngit rebase master\n\ngit checkout master\ngit merge wip\n\ngit branch -d wip\ngit remote rm temp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Change branch parent")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 44    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13235534",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase BranchA\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: git: Merge Branches but Keep Commit History")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28552324",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit pull --rebase                             (1)\ngit checkout new_feature                      \n<do a bunch of commits>\ngit rebase master                             (2)\ngit checkout master\ngit merge new_feature                         (3)\ngit branch -D new_feature                     (4)\n\n> git log --oneline --all -10 --decorate\n\nd34d34c (HEAD, master) Local commit message.\nd3434r2 Local commit message.\nd234d4c Local commit message.\ner3ede3 (origin/master, origin/HEAD) Remote commit message.\nsfe3fd3 Remote commit message.\n\n> git log --oneline --all -10 --decorate\n\nfc5773d (new_feature) Local new_feature commit.\n9282838 Local new_feature commit.\nd34d34c (HEAD, master) Local commit.\nd3434r2 Local commit.\nd234d4c Local commit.\ner3ede3 (origin/master, origin/HEAD) Remote commit.\nsfe3fd3 Remote commit.\n\n> git log --oneline --all -10 --decorate\n\nfc5773d (HEAD, new_feature, master) Local new_feature commit.\n9282838 Local new_feature commit.\nd34d34c Local commit.\nd3434r2 Local commit.\nd234d4c Local commit.\ner3ede3 (origin/master, origin/HEAD) Remote commit.\nsfe3fd3 Remote commit.\n\n> git log --oneline --all -10 --decorate\n\nfc5773d (HEAD, master) Local new_feature commit 2\n9282838 Local new_feature commit.\nd34d34c Local commit.\nd3434r2 Local commit.\nd234d4c Local commit.\ner3ede3 (origin/master, origin/HEAD) Remote commit.\nsfe3fd3 Remote commit.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: How to edit the commit message of a git merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7599522",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout <sha of merge>\ngit commit --amend # edit message\ngit rebase HEAD previous_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: Rebase remote branch onto master while keeping the remote branch updated")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39921349",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch -D develop //this will remove your local develop repository\ngit fetch //update references \ngit checkout develop //change to develop branch, but because you deleted, this command will also download the origin/develop\ngit rebase -p origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Github pull request without old commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5415703",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream (url-for-upstream-repository)\ngit fetch upstream\ngit rebase upstream/master\ngit push -f origin\n(do new pull request on website)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Push a branch of a git repo to a new remote (github), hiding its history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4020819",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("o - o - o - o - o - o - o (public)\n \\       \\           \\   \\\n  x ----- x ----x---- x - x (private)\n\n▲ filter-branch\ngit branch public master   # create the public branch from current master\ngit filter-branch --tree-filter ... -- public    # filter it (remove private files with a tree filter)\n\ngit branch private-temp master\ngit filter-branch --tree-filter ... -- private-temp    # remove public files\n\ngit branch private private-temp\ngit merge public\n\no - o - o - o - o - o - o - o - o - o (public)\n                                     \\\n  x -- x -- x -- x -- x -- x -- x --- x (private)\n\ngit checkout -b private <private-SHA1>  # use the SHA1 of the first ancestor of private-temp\n                                        # you want to merge something from public into\ngit merge <public-SHA1>           # merge a corresponding commit of the public branch\ngit rebase private private-temp   # rebase private-temp to include the merge\ngit checkout private\ngit merge <private-SHA1>          # use the next SHA1 on private-temp you want to merge into\n                                  # this is a fast-forward merge\ngit merge <public-SHA1>           # merge something from public\ngit rebase private private-temp   # and so on and so on...\n\no - o - o - o - o - o - o - o - o - o (public)\n      \\              \\               \\\n  x -- x -- x -- x -- x -- x -- x --- x (private)\n\n▲ fake it\ngit checkout public\ngit reset --soft <root SHA1>\ngit commit\n\no - A' (public)\n \\\n  o - x - o - x - X - A (public@{1}, the previous position of public)\n               \\\n                x - x (private)\n\ngit checkout private\ngit merge -s ours public\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: git rebasing from local branch off remote branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16614062",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\n\ngit rebase origin/test\n\ngit push origin test\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How to efficiently rebase and push a local git branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/953034",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ensure that everything is committed")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# perhaps git commit -a is required...")]),t._v("\n\ngit rebase origin/master\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# If you don't want to push the very latest commits you might")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# want to checkout a parent or ancestor of the current commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# to test that the proposed commit passes tests, etc.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e.g. git checkout HEAD~n")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push to the remote master")]),t._v("\ngit push origin HEAD:master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you checked out a parent, go back to the original branch")]),t._v("\ngit checkout mybranch\n\ngit push origin HEAD^:master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Updating a local fork without pushing merge commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23997347",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase n3690 on top of upstream/master")]),t._v("\ngit checkout n3690\ngit rebase upstream/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# then")]),t._v("\ngit push -f \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: How to Merge two different Git repositories?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56597484",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone https://first.repo\ngit remote add second https://second.repo\n\ngit fetch second\ngit checkout second/master\ngit checkout -b second\n\ngit rebase master second\n\ngit push -u ...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: Temporarily remove feature from a Git branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17562205",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git revert <sha of commit that removed the feature>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On master branch")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Remove feature X"')]),t._v(" # Creates commit 1234567...\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now make feature branch")]),t._v("\ngit checkout -b saved-feature\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Immediately put the feature back in the feature branch")]),t._v("\ngit revert 1234567\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# When you want to sync branch with master, just use rebase.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase allows you to sync frequently, since it doesn't")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# leave behind a bunch of merge commits.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# From the feature branch:")]),t._v("\ngit rebase master # Resolve any conflicts as needed.\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# N commits later, you decide it's time to merge the feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# back in.  You can use fast-forward or non-fast-forward merge,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# it's up to you.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Using fast-forward merge with master checked out (assuming")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# feature branch was just rebased onto master):")]),t._v("\ngit merge saved-feature\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Or forcing a merge commit, if that's what you want:")]),t._v("\ngit merge --no-ff saved-feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Rebase without removing old branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55336422",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout your-old-branch\ngit checkout -b to-be-rebased\ngit rebase master\n\ngit checkout -b to-be-rebased your-old-branch\n\ngit checkout -b new-branch master\ngit cherry-pick master..your-old-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: How can I keep a git fork updated?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14534703",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream git@github.com:<OriginalUser>/<OriginalRepo>.git\n\ngit fetch upstream\ngit rebase upstream/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: How to delete merge commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33504534",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch upstream\ngit checkout master\ngit rebase upstream/master\ngit push -f origin master\n\ngit fetch upstream\ngit checkout master\ngit reset --hard upstream/master\ngit push -f origin master\n\ngit checkout feature\ngit rebase master\ngit push -f origin feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v('27. Usage scenario: "git rebase '),e("branch",[t._v('" on git svn repo changed remote tracking destination?')])],1)]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13957543",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ subgit configure --svn-url <SVNURL> project.git\n$ #adjust projectX.git/subgit/{config,authors.txt,passwd} \n$ subgit install project.git\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone project.git project/")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout new_release")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase old_release")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin new_release")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: How Git select the rebase starting point?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38686056",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("...<- o <- o <- o <- o\n            \\\n             o <- o <- o <- o\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse master")]),t._v("\n08bb3500a2a718c3c78b0547c68601cafa7a8fd9\n\n...--*--*--o--o        <-- master\n         \\\n          o--o--o--o   <-- develop\n\n          o--o          <-- master\n         /\n...--*--*--o--o--o--o   <-- develop\n\n          o--o        <-- master\n         /\n...--*--*\n         \\\n          o--o--o--o   <-- develop\n\n▲ This is the heart of the problem that rebase must solve\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch")]),t._v("\n  diff-merge-base\n  master\n  precious\n* stash-exp\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-list master..develop")]),t._v("\n\n▲ Extra wrinkle #1\n          o--o\n         /\n...--*--*\n         \\\n          o--o--o--o\n\n          o--B'\n         /\n...--*--*\n         \\\n          A--B--C--D\n\n          o--B'\n         /    \\\n...--*--*      A"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-D'\n         \\\n          A--B--C--D\n\n          o--B'          <-- master\n         /    \\\n...--*--*      A"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-D'  <-- develop\n         \\\n          A--B--C--D     [abandoned]\n\n▲ Extra wrinkle #2\n▲ What if the two branches have no common commits?\no--o--o--o   <-- master\n\no--o--o      <-- unrelated\n\no--o--o--o           <-- master\n          \\\n           o--o--o   <-- unrelated\n\no--o--o              [abandoned]\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: How to maintain (mostly) parallel branches with only a few difference")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2152967",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull\ngit checkout local\ngit rebase master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: Squash two Git commits in the middle of history without interactive rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32891410",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#/bin/bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This command fixesup one commit onto his parent")]),t._v("\nset -e\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# We need a commit from the first argument of that command")]),t._v("\ncommit=${1:?No commit given as first argument}\nstartingbranch=$(git rev-parse --abbrev-ref HEAD)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checkout the parent of the asked commit")]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v("\ngit checkout HEAD~\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge the commit into it's parent, keeping the commit message of the parent")]),t._v("\ngit merge --squash "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$commit"')]),t._v("\ngit add .\ngit add --update\ngit commit --amend --no-edit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Store the current commit")]),t._v("\nnewcommit=$(git rev-parse HEAD)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase the starting branch onto the new commit")]),t._v("\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$startingbranch"')]),t._v("\ngit rebase "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$newcommit"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: How to keep track of origin/master in my dev git branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8940346",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b myFeature\n\ngit push origin myFeature\n\ngit checkout master\ngit pull (this will just fast-forward if you don't make any local changes to master)\ngit checkout myFeature\ngit rebase master\n\ngit checkout master\ngit merge myFeature\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: How do I re-play my commits of a local Git repository, on top of a project I forked on github.com?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1458069",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull grid master:master")]),t._v("\n! [rejected]        master     -> master  (non fast forward)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Clone my forked project from github")]),t._v("\ngit clone git@github.com:program247365/mojombo.github.com.git \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Add my repo as a remote repo, with the alias 'grid'")]),t._v("\ngit remote add grid "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"path/to/remote/gitrep/with/all/history/unrelated/to/mojombo/"')]),t._v(" \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Rebase my commits on top of mojombo's")]),t._v("\ngit rebase master grid/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Switch to the local master branch ")]),t._v("\ngit checkout master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Call up my mergetool via git, to start rectifying the conflicts that emerge between my repo, and mojombo's")]),t._v("\ngit mergetool\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#Push my rebased/combined repo back to Github.com")]),t._v("\ngit push github\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: Rebase a GitHub pull request on top of my newer local commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17598706",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin refs/pull/1234/head:refs/remotes/pr/1234\n\ngit checkout pr/1234\ngit rebase master\n\ngit rebase master pr/1234\n\ngit checkout master\ngit merge --ff-only pr/1234\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("34. Usage scenario: Does git merge reapply commits onto another commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3029805",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge origin")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase origin")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("35. Usage scenario: Bitbucket - Syncing Branch with another Branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31472284",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the base branch")]),t._v("\ngit checkout v1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pull in any changes to make sure you have the latest version")]),t._v("\ngit pull\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Check out your branch")]),t._v("\ngit checkout v1_adminui\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Rebase your changes on top of the v1 changes")]),t._v("\ngit rebase v1\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Optionally push your rebased branch")]),t._v("\ngit push origin v1_adminui\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("36. Usage scenario: Change branching point in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32119176",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout BranchA\ngit reset --hard Branch2\n\ngit checkout BranchA\ngit rebase Branch2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("37. Usage scenario: how to rebase with git lfs?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37618784",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This disables smudging for the 'git clone'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and then calls 'git lfs pull' for you")]),t._v("\ngit lfs clone git@github.com:me/repoB.git\ncd repoB\ngit lfs install --skip-smudge --local # affects only this clone\n\ngit fetch repoA\ngit checkout -b temp repoA/somebranch\ngit rebase master\n\ngit lfs fetch --all repoA\ngit lfs checkout\ngit push origin temp\n\ngit lfs push --all origin temp\ngit lfs install --force --local\n\n$ GIT_LFS_SKIP_SMUDGE=1 git pull\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git lfs pull")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("38. Usage scenario: How to proceed once git origin was forcefully pushed")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18960405",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ First do (if you didn't do it already):\ngit fetch\n\ngit checkout master\n\ngit rebase origin/master\n\n▲ Alternatively if you didn't have local changes that you were planning to push, you could simply do:\ngit checkout master\ngit reset --hard origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("39. Usage scenario: Pull request contains commits from master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51617891",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ First, create a backup branch from your branch in case you screw things up. You can do that just by making a new branch from your current one. If you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re in the branch you'")]),t._v("re working on, for example, you can:\ngit checkout -b my_branch_1_backup\n\ngit checkout my_branch_1\n\ngit rebase -I commit1\n\npick commit2\npick commit3\npick commit4\n\n▲ and so on. If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t want commit3 (because it'")]),t._v("s already in master), change pick commit3 to drop commit3. There will be a list of other options in a comment in your editor. Once you've fixed up your list of commits, save and exit the editor, and do a:\ngit log\n\ngit rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("40. Usage scenario: how to rebase between two git repositories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42071297",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Go to your origin repo. Add a new remote with sandbox URL. Then rebase sandbox/feature branch into origin/master branch. Then if conflict occurs resolve it.\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go into your origin repo")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add sandbox <sanbox-repo-url>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch sandbox")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase sandbox/feature")]),t._v("\n\n▲ If Conflict occurs, then better resolve conflicts manually. You can also accept origin or sandbox changes by --theirs or --ours flag.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status        # see the conflicted files (red color)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# resolve conflicts")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --theirs")]),t._v(" <file-name>    # accept origin changes")]),t._v("\nOr,\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ours")]),t._v(" <file-name>      # accept sandbox changes   ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("41. Usage scenario: Linearize git history, preserving all commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49317256",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b workingBranch featurebranch // create a new branch and checkout to featurebranch\ngit rebase 5e0c25f // This create your linear history, instead of merge. You may have to resolve commit for each commits of featurebranch\ngit checkout master\ngit reset --hard workingBranch // You will lose the commit d667df5 (HEAD -> master) Modify merged file. If it is not wanted, cherry-pick or rebase again\ngit branch -D workingBranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("42. Usage scenario: Impossible to merge branch: refusing to merge unrelated histories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61754437",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("43. Usage scenario: In Git, how do I create a commit that's before the oldest commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6378465",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git symbolic-ref HEAD refs/heads/newbase\nrm .git/index\ngit clean -dxf\n\n<add the files to the directory>\ngit add .\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"New base commit v6.8.1"')]),t._v("\n\ngit checkout master\ngit rebase newbase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("44. Usage scenario: Merge conflicts ruin my commit message while squashing commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3605710",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase master topic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("45. Usage scenario: Two branches pull request yeilds entirely different commit histories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65866452",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\ngit checkout master\ngit rebase origin/main\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v('46. Usage scenario: "Thread safe" git pull or how to avoid ".../.git/index.lock\': File exists."')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55458519",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch && git merge\n\ngit fetch && git rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("47. Usage scenario: Working with Github repositories (merge, reset) without cloning")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16055424",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream <url-to-parent>\n\ngit fetch upstream\n\ngit merge upstream/master\n\ngit rebase upstream/master\n\ngit push upstream master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("48. Usage scenario: Git force re-merge of one branch into another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42783315",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("49. Usage scenario: How to push to git without merge files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50084769",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some comment"')]),t._v("\n\ngit fetch\n\ngit rebase\n\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("50. Usage scenario: Git rebase my forked branch on upstream master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21258021",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\n    0] local master   $ branch mybranch off master \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("    1] fork  master   $ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("    2] local master   $ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --rebase")])]),t._v("\n    3] local mybranch $ commit commit commit\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("    4] local mybranch $ git rebase master")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("    5] local master $ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ff")]),t._v("-only mybranch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("    6] local master $ git push origin")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("51. Usage scenario: gitolite setup reverted changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13470554",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("git@ve-git:~/temp$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" HEAD^")]),t._v("\ngit@ve-git:~/temp$ gitolite push origin -f\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" hooksfix origin/master")]),t._v("\n$ mkdir extra\n$ mv hooks extra\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moved hooks directory to prevent errors"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin hooksfix:master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase origin/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("52. Usage scenario: How to revert last commits on branch, merge with other branch and re-add the commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54997876",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit branch new_branch\ngit reset --hard HEAD~5\n\n    C-D-E new_branch\n   /\nA-B       master\n   \\[fork]\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-D'")]),t._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-J'")]),t._v("----X' remote/master\n\ngit checkout remote/master\ngit merge -Xours master\n\n    C-D-E new_branch\n   /\nA-B---------------------------      \n   \\[fork]                    \\\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-D'")]),t._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-J'")]),t._v("----X' remote/master, master\n\ngit checkout master\ngit rebase remote/master\n\nA-B---------------------------      \n   \\[fork]                    \\\n    C"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-D'")]),t._v("-E"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-F'")]),t._v("-G"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-H'")]),t._v("-I"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-J'")]),t._v("----X' remote/master, master\n                                \\\n                                 C-D-E new_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[e("strong",[t._v("53. Usage scenario: Merge bug fixes patches from release branch to master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60315939",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("Master\n commit1\n commit2 -> release1\n commit3\n commit4\n\n\ngit checkout release1\ngit checkout -b hotfix\n\nHotfix\n commit2\n bugfix1\n\ngit checkout release1\ngit merge hotfix\n\nRelease1\n Commit1\n commit2\n butfix1\n\ngit checkout hotfix\ngit rebase master\n\nHotfix\n commit1\n commit2\n commit3\n commit4\n bugfix1\n\ngit checkout master\ngit merge hotfix\n\nMaster\n commit1\n commit2\n commit3\n commit4\n bugfix1\n\ngit branch -d hotfix\ngit push -d origin hotfix\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[e("strong",[t._v("54. Usage scenario: Amending commit HEAD~1 for Gerrit review which shares a file with commit HEAD")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19897455",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git log --graph --decorate --oneline -n13")]),t._v("\n* e40f865 (HEAD, master) Change 2\n* 120c061 Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git branch changeA 120c061")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git branch changeB e40f865")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git log --graph --decorate --oneline -n13")]),t._v("\n* e40f865 (HEAD, master, changeB) Change 2\n* 120c061 (changeA) Change 1\n* 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git reset --hard HEAD~2")]),t._v("\nHEAD is now at 73a8f97 Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git commit --amend -a")]),t._v("\n[changeA 93837a4] Change 1\n 2 files changed, 3 insertions(+), 2 deletions(-)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git log --graph --decorate --oneline -n13")]),t._v("\n* 93837a4 (HEAD, changeA) Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git checkout changeB")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'changeB'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git log --graph --decorate --oneline -n13")]),t._v("\n* e40f865 (HEAD, changeB) Change 2\n* 120c061 Change 1\n* 73a8f97 (master) Initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git rebase 93837a4")]),t._v("\nFirst, rewinding head to replay your work on top of it...\nApplying: Change 1\nUsing index info to reconstruct a base tree...\n....\n....\nApplying: Change 2\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#git log --graph --decorate --oneline -n13")]),t._v("\n* d3fac58 (HEAD, changeB) Change 2\n* 93837a4 (changeA) Change 1\n* 73a8f97 (master) Initial commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br")])]),e("p",[e("strong",[t._v("55. Usage scenario: Git squash commits with same commit message")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64786149",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase develop\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("56. Usage scenario: How to fast-forward a branch to a commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68236688",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# while on `my-branch`")]),t._v("\ngit rebase origin/my-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("57. Usage scenario: Git Rebase introducing a merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59662846",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git init\ngit checkout -b branchA\ntouch inita testb1 testb2 testb3 testa1 testa2 testa3\ngit add inita\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitInitialA"')]),t._v("\ngit checkout -b branchB\ngit add testb1\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitB1"')]),t._v("\ngit add testb2\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitB2"')]),t._v("\ngit checkout branchA\ngit add testa1\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitA1"')]),t._v("\ngit add testa2\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitA2"')]),t._v("\n\ngit checkout branchB\ngit rebase branchA\n\ngit add testb3\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitB3"')]),t._v("\ngit checkout branchA\ngit add testa3\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commitA3"')]),t._v("\n\ngit checkout branchB\ngit rebase branchA\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br")])]),e("p",[e("strong",[t._v("58. Usage scenario: Git rebasing a branch that contains no new commits, no —force needed for pushing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54172501",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase origin/v1.0\n\ngit pull --rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("59. Usage scenario: how to merge to a local branch after checking out to a previous commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11412665",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout VISS\n\ngit checkout VISS\ngit reset --hard 98ea3c\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On the new commit you just made:")]),t._v("\ngit rebase VISS\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Now take note of what the commit ID is.  Assume I got "abc123"; then:')]),t._v("\ngit checkout VISS\ngit merge abc123\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("60. Usage scenario: avoid repeat commits when cherry-pick from master to branch, then merge from branch back to master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8586393",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase master 1.7\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("61. Usage scenario: How to merge remote master at two commits earlier than current local master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1467303",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" myBranch SHA1_before_your_commits")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master # to replay all your commits on top of this new branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" SHA1_before_your_commits")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull original-repo master")]),t._v("\n\n git push --force origin master \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("62. Usage scenario: Having a fork match the original repo when the original master branch can't be merged in?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4703896",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("63. Usage scenario: Modifying a merge commit after another commits before push")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23867107",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -p @~2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("64. Usage scenario: Contributing multiple separate features to github repository properly via fork")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37660779",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If your new feature does not require the changes you made in a previous pull request, then you can just start working on a new branch based on master:\ngit checkout -b my-next-feature origin/master\n\n▲ If your features do depend on your existing pull request, then base the new branch on your existing PR:\ngit checkout -b my-next-feature my-first-feature\n\ngit remote update\ngit rebase origin/master\ngit push -f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("65. Usage scenario: Combining merges into a single merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8603298",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git co -b temp_feature feature\ngit rebase master\n\ngit co master\ngit merge --squash feature\n\ngit branch -D feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("66. Usage scenario: Show commits affecting a file that are not in a feature branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40143064",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git log --patch --full-history A..D -- file.txt\n\ngit merge-base <mainline> <local>\n\ngit rebase master feature\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# conflicts occur")]),t._v("\ngit log --patch --full-history $(git merge-base master feature)..master -- file.txt\n\ngit config --global alias.conflict-commits "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"! git log --patch --full-history $(git merge-base $1 $2)..$1 -- $3"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("67. Usage scenario: Howto undo weird merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35435043",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --hard HEAD~1\n\ngit rebase other_branch_name\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);