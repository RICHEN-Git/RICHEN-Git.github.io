(window.webpackJsonp=window.webpackJsonp||[]).push([[130],{559:function(s,t,e){"use strict";e.r(t);var n=e(19),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-show-ref-list-references-in-a-local-repository"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-show-ref-list-references-in-a-local-repository"}},[s._v("#")]),s._v(" 📌 git show-ref - List references in a local repository")]),s._v(" "),e("h2",{attrs:{id:"head"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#head"}},[s._v("#")]),s._v(" 🔹 --head")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Shouldn't git branch --no-merged list new branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13586610",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check branches created from and merged to this branch")]),s._v("\nMASTER=refs/remotes/origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for each remote branch...")]),s._v("\nfor BRANCH in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/remotes/); do\n    # ...except the $MASTER branch and the current HEAD\n    [[ $BRANCH == $MASTER || $BRANCH =~ /HEAD$ ]] && continue\n\n    # get the hash for the head of the branch\n    BRANCH_HEAD=$(git show-ref --head --hash $BRANCH)\n\n    # returns the first shared commit among $MASTER and $BRANCH commits\n    BRANCH_POINT=$(fgrep -m 1 -f <(git rev-list --first-parent $BRANCH) \\\n                                 <(git rev-list --first-parent $MASTER))\n\n    # find the best merge point\n    BRANCH_MERGE=$(git merge-base $MASTER $BRANCH)\n\n    # determine the type of branch\n    if [[ $BRANCH_POINT == $BRANCH_HEAD ]]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: new branch without any commits"')]),s._v("\n    elif [[ $BRANCH_MERGE == $BRANCH_HEAD ]]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: fully merged into $MASTER"')]),s._v("\n    else\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: branch with unmerged changes"')]),s._v("\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("h2",{attrs:{id:"heads"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#heads"}},[s._v("#")]),s._v(" 🔹 --heads")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get list of branch heads in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8201895",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --heads -s\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I get the associated ref path for a git SHA?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-name-rev.html"}},[s._v("git name-rev")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2532432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\ngit show-ref --heads --tags -d |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\n\nC:\\Prog\\Git\\tests\\rep\\main5>git show-ref | grep f4a071 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v('\nrefs/heads/master\nrefs/remotes/origin/HEAD\nrefs/remotes/origin/master\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453\na7768453 patches~1\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453|gawk "{gsub(/~.*/,\\"\\",$2);print $2}\npatches\n\nC:\\Prog\\Git\\tests\\rep\\main5>git branch --contain 1e73e369\n  master\n* patches\n  tmp\n\n'),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--contains <commit>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to move HEAD to other branch in Git without checking out files or updating any refs?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30311232",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git symbolic-ref HEAD refs/heads/existing_branch\n\ngit config --global alias.switch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!f() { git show-ref --heads --verify "refs/heads/$1" && git symbolic-ref -m "switch to branch $1 not touching workdir" HEAD "refs/heads/$1"; }; f\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: git rebase with branches (whole tree)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17107452",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ echo `git rev-list [E] -1` `git rev-list master1 -1` > .git/info/grafts\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat master2 [other branches]")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git filter-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --tag")]),s._v("-name-filter cat `git show-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --heads")]),s._v(" | awk ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("`\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"tags"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tags"}},[s._v("#")]),s._v(" 🔹 --tags")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git Tag list, display commit sha1 hashes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 163    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8796647",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --tags\n\ngit show-ref --tags -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I get the associated ref path for a git SHA?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-name-rev.html"}},[s._v("git name-rev")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2532432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\ngit show-ref --heads --tags -d |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\n\nC:\\Prog\\Git\\tests\\rep\\main5>git show-ref | grep f4a071 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v('\nrefs/heads/master\nrefs/remotes/origin/HEAD\nrefs/remotes/origin/master\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453\na7768453 patches~1\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453|gawk "{gsub(/~.*/,\\"\\",$2);print $2}\npatches\n\nC:\\Prog\\Git\\tests\\rep\\main5>git branch --contain 1e73e369\n  master\n* patches\n  tmp\n\n'),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--contains <commit>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: List tags with commits in the same format like git branch -v")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5529735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --tags --abbrev\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname) %(objectname) %(subject)"')]),s._v(" |\n      grep /tags/ |\n      sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^refs/tags/##'")]),s._v("\n\nbase64 -d <<HERE > /tmp/so5529735.bundle\nIyB2MiBnaXQgYnVuZGxlCjU4YjA1ZmQyN2JlOTQ4NGJmOTgxNzUyZTg5ODQzYmVlN2FmZjg4NjAg\ncmVmcy9yZW1vdGVzL3EvbWFzdGVyCmI5M2QyZjVlNWFkNTJiOGFiYmVlOWY1Y2E4NDM1YTFkMjcx\nZGRiYjYgcmVmcy90YWdzL3RhZzEKYjkzZDJmNWU1YWQ1MmI4YWJiZWU5ZjVjYTg0MzVhMWQyNzFk\nZGJiNiByZWZzL3RhZ3MvdGFnMgo1OGIwNWZkMjdiZTk0ODRiZjk4MTc1MmU4OTg0M2JlZTdhZmY4\nODYwIHJlZnMvdGFncy90YWczCmIxYmU3ZTRkZTg5NDliN2JhNTE1ZTRjYWQ1ZDIxNGRjNzFkOWI2\nZDIgcmVmcy90YWdzL3RhZzQKNzc5NTI4MzY2NjQ2ZWVlZjFkODdkMzBmYTNkNzZjNzBkMDQ5M2Rm\nZiByZWZzL3RhZ3MvdGFnNQoKUEFDSwAAAAIAAAAFkA14nJXLTQrCMBBA4X1Okb1QkslPJyDiHTzB\nTDKhom0lHe+vHsHl4+PpELGREVKrOULlLFzIZScpcseWCyB2FonFRfOiIZtaLqFBT5KoJWAk/nrp\nqRLGkMg3mH1rzNnQW5d92JvoYs+HLHJdRcaDdPrFtD0v1gfnMXossz05cM7UfV3vqvLnZlQOBfMB\n6ao+qP0BWLBf0nvpSEv5gXUuiYQ77nr/iGB4nLvAOJ9xgt7EOB1Gg4ndZnwGCtoGRgYGXFwlqcUl\nXACDHwf3zyZ4nG2RyY6bQABE73wFx0RWzD5AlInSDBgwpt1gFsONpVlss8huYPDXz0xyTUklVdWt\n9Ib8ggtCS0rOSlXJyzlWRUXMK1XhZInHiqqIQo6xnFWVorywFFlHTBdD17WEIllNf1r6CjW+0ydM\nGvrXAzf4T4fx/ZqR7VfZ9rffNCewnCKKLKfSG5ZnWYrK+pJ+tHWPS+rHlzTDtCGNTESfbBOCIPSN\nvzsV4fujHfqftNlPyKRnbituOZb+ZsKQObT99P6dolrPKDQANFADU/P2sNsDAYBhbyDi9rLjg2aN\ndBxazMV4tqUjxTu0DBvyMEZ3SMPhSElwPHm7BCfMxAt9eucFPdfWYbWy+Sx7ADW924SDbBYEaZIo\nvncvnhlEzAqZdOIP6UwdiyjLVOFZx7qdPyopjgR9dVamBG+pn3zevzZJvp/LwkJ6EPHzYFku6f2z\ne5sbwVE96q7dKnfX+D5iSX4ictT6S9TZyN70kO3iBTnLyX9qMIxP0hzrI1TNxbkTG10DhXBaTuXJ\nbeP6R/WZqLA5X4EWJ1HtgH6elrmU7d07M7pjnF4OTh2LTbCZF99FjHpA8lmrFWeiAAzS8+oYmfWm\nr4XUypdQzNZ0nRrleXzaFmzbvjimpCNGgJB2NMcODkDprpVZXiLvlXp1kWf9o2lA/X8sPwAX3sJy\n8gJ3lSg2Zkbu7x2H0w+j12xw0Ek9/3ice8/SwjjBmdFkoouWmLGlkamCtoGRgQEXV2JeXn5JYklq\nChcAos4JUiB4nAMAAAAAATDs5z1PX9htU9L79152rIjAVSvV\nHERE\n\ngit clone --mirror /tmp/so5529735.bundle /tmp/so5529735.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Display latest tag in a commit with multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32746112",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-parse HEAD\n\ngit show-ref --tags --dereference\n\nSHA_HEAD=$(git rev-parse HEAD)\nALL_TAGS=$(git show-ref --tags --dereference)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$ALL_TAGS"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("$SHA_HEAD"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refs\\/tags\\// { print $2 }'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit show-ref --tags --dereference | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("$(git rev-parse HEAD)"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refs\\/tags\\// { print $2 }'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[s._v("#")]),s._v(" 🔹 -d")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git Tag list, display commit sha1 hashes")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 163    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8796647",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --tags\n\ngit show-ref --tags -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How can I get the associated ref path for a git SHA?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-name-rev.html"}},[s._v("git name-rev")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2532432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\ngit show-ref --heads --tags -d |grep yourSHA1|awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\n\nC:\\Prog\\Git\\tests\\rep\\main5>git show-ref | grep f4a071 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v('\nrefs/heads/master\nrefs/remotes/origin/HEAD\nrefs/remotes/origin/master\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453\na7768453 patches~1\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453|gawk "{gsub(/~.*/,\\"\\",$2);print $2}\npatches\n\nC:\\Prog\\Git\\tests\\rep\\main5>git branch --contain 1e73e369\n  master\n* patches\n  tmp\n\n'),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--contains <commit>")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("h2",{attrs:{id:"dereference"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dereference"}},[s._v("#")]),s._v(" 🔹 --dereference")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Display latest tag in a commit with multiple tags")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32746112",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-parse HEAD\n\ngit show-ref --tags --dereference\n\nSHA_HEAD=$(git rev-parse HEAD)\nALL_TAGS=$(git show-ref --tags --dereference)\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$ALL_TAGS"')]),s._v(" | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("$SHA_HEAD"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refs\\/tags\\// { print $2 }'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n\ngit show-ref --tags --dereference | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/'")]),s._v("$(git rev-parse HEAD)"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refs\\/tags\\// { print $2 }'")]),s._v(" | tr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[s._v("#")]),s._v(" 🔹 -s")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get list of branch heads in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 36    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8201895",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --heads -s\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Get the commit hash for a tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16818124",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref -s mylabel\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Commit directly to a bare repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[s._v("git write-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25556917",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\ncd myrepo.git\n\nMY_BRANCH=master\nMY_FILE_CONTENTS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello, world!\\n'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Note this is just a lock for this script. It's not honored by other tools.")]),s._v("\nlockfile -1 -r 10 lock || exit 1\n\nPARENT_COMMIT="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git show-ref -s "')]),s._v("$MY_BRANCH"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Empty the index, not sure if this step is necessary")]),s._v("\ngit read-tree --empty\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Load the current tree. A commit ref is fine, it'll figure it out.")]),s._v("\ngit read-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${PARENT_COMMIT}"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# Create a blob object. Some systems have "shasum" instead of "sha1sum"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Might want to check if it already exists. Left as an excercise. :)")]),s._v("\nBLOB_ID=$(printf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blob %d\\0%s"')]),s._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MY_FILE_CONTENTS"')]),s._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MY_FILE_CONTENTS"')]),s._v(" | sha1sum | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 1)\nmkdir -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"objects/${BLOB_ID:0:2}"')]),s._v("\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"blob %d\\0%s"')]),s._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MY_FILE_CONTENTS"')]),s._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$MY_FILE_CONTENTS"')]),s._v(" | perl -MCompress::Zlib -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'undef $/; print compress(<>)'")]),s._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"objects/${BLOB_ID:0:2}/${BLOB_ID:2}"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Now add it to the index.")]),s._v("\ngit update-index --add --cacheinfo 100644 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BLOB_ID"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"myfile.txt"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Create a tree from your new index")]),s._v("\nTREE_ID=$(git write-tree)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Commit it.")]),s._v("\nNEW_COMMIT=$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"My commit message"')]),s._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$TREE_ID"')]),s._v(" -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$PARENT_COMMIT"')]),s._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Update the branch")]),s._v("\ngit update-ref "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/$MY_BRANCH"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$NEW_COMMIT"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$PARENT_COMMIT"')]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Done")]),s._v("\nrm -f lock\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br")])]),e("h2",{attrs:{id:"hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash"}},[s._v("#")]),s._v(" 🔹 --hash")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Shouldn't git branch --no-merged list new branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13586610",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /usr/bin/env bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# check branches created from and merged to this branch")]),s._v("\nMASTER=refs/remotes/origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# for each remote branch...")]),s._v("\nfor BRANCH in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/remotes/); do\n    # ...except the $MASTER branch and the current HEAD\n    [[ $BRANCH == $MASTER || $BRANCH =~ /HEAD$ ]] && continue\n\n    # get the hash for the head of the branch\n    BRANCH_HEAD=$(git show-ref --head --hash $BRANCH)\n\n    # returns the first shared commit among $MASTER and $BRANCH commits\n    BRANCH_POINT=$(fgrep -m 1 -f <(git rev-list --first-parent $BRANCH) \\\n                                 <(git rev-list --first-parent $MASTER))\n\n    # find the best merge point\n    BRANCH_MERGE=$(git merge-base $MASTER $BRANCH)\n\n    # determine the type of branch\n    if [[ $BRANCH_POINT == $BRANCH_HEAD ]]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: new branch without any commits"')]),s._v("\n    elif [[ $BRANCH_MERGE == $BRANCH_HEAD ]]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: fully merged into $MASTER"')]),s._v("\n    else\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$BRANCH: branch with unmerged changes"')]),s._v("\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br")])]),e("h2",{attrs:{id:"verify"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#verify"}},[s._v("#")]),s._v(" 🔹 --verify")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to Bash Script Git Local Branch Check?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14414106",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("create_branch() {\n  branch="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1:?Provide a branch name}"')]),s._v("\n\n  if git show-ref --verify --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/$branch"')]),s._v("; then\n    echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Branch '$branch' already exists.\"")]),s._v("\n  else\n    read -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Do you really want to create branch $1 "')]),s._v(" ans\n    ...\n  fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to move HEAD to other branch in Git without checking out files or updating any refs?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30311232",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git symbolic-ref HEAD refs/heads/existing_branch\n\ngit config --global alias.switch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!f() { git show-ref --heads --verify "refs/heads/$1" && git symbolic-ref -m "switch to branch $1 not touching workdir" HEAD "refs/heads/$1"; }; f\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"abbrev"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abbrev"}},[s._v("#")]),s._v(" 🔹 --abbrev")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: List tags with commits in the same format like git branch -v")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5529735",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git show-ref --tags --abbrev\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname) %(objectname) %(subject)"')]),s._v(" |\n      grep /tags/ |\n      sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s#^refs/tags/##'")]),s._v("\n\nbase64 -d <<HERE > /tmp/so5529735.bundle\nIyB2MiBnaXQgYnVuZGxlCjU4YjA1ZmQyN2JlOTQ4NGJmOTgxNzUyZTg5ODQzYmVlN2FmZjg4NjAg\ncmVmcy9yZW1vdGVzL3EvbWFzdGVyCmI5M2QyZjVlNWFkNTJiOGFiYmVlOWY1Y2E4NDM1YTFkMjcx\nZGRiYjYgcmVmcy90YWdzL3RhZzEKYjkzZDJmNWU1YWQ1MmI4YWJiZWU5ZjVjYTg0MzVhMWQyNzFk\nZGJiNiByZWZzL3RhZ3MvdGFnMgo1OGIwNWZkMjdiZTk0ODRiZjk4MTc1MmU4OTg0M2JlZTdhZmY4\nODYwIHJlZnMvdGFncy90YWczCmIxYmU3ZTRkZTg5NDliN2JhNTE1ZTRjYWQ1ZDIxNGRjNzFkOWI2\nZDIgcmVmcy90YWdzL3RhZzQKNzc5NTI4MzY2NjQ2ZWVlZjFkODdkMzBmYTNkNzZjNzBkMDQ5M2Rm\nZiByZWZzL3RhZ3MvdGFnNQoKUEFDSwAAAAIAAAAFkA14nJXLTQrCMBBA4X1Okb1QkslPJyDiHTzB\nTDKhom0lHe+vHsHl4+PpELGREVKrOULlLFzIZScpcseWCyB2FonFRfOiIZtaLqFBT5KoJWAk/nrp\nqRLGkMg3mH1rzNnQW5d92JvoYs+HLHJdRcaDdPrFtD0v1gfnMXossz05cM7UfV3vqvLnZlQOBfMB\n6ao+qP0BWLBf0nvpSEv5gXUuiYQ77nr/iGB4nLvAOJ9xgt7EOB1Gg4ndZnwGCtoGRgYGXFwlqcUl\nXACDHwf3zyZ4nG2RyY6bQABE73wFx0RWzD5AlInSDBgwpt1gFsONpVlss8huYPDXz0xyTUklVdWt\n9Ib8ggtCS0rOSlXJyzlWRUXMK1XhZInHiqqIQo6xnFWVorywFFlHTBdD17WEIllNf1r6CjW+0ydM\nGvrXAzf4T4fx/ZqR7VfZ9rffNCewnCKKLKfSG5ZnWYrK+pJ+tHWPS+rHlzTDtCGNTESfbBOCIPSN\nvzsV4fujHfqftNlPyKRnbituOZb+ZsKQObT99P6dolrPKDQANFADU/P2sNsDAYBhbyDi9rLjg2aN\ndBxazMV4tqUjxTu0DBvyMEZ3SMPhSElwPHm7BCfMxAt9eucFPdfWYbWy+Sx7ADW924SDbBYEaZIo\nvncvnhlEzAqZdOIP6UwdiyjLVOFZx7qdPyopjgR9dVamBG+pn3zevzZJvp/LwkJ6EPHzYFku6f2z\ne5sbwVE96q7dKnfX+D5iSX4ictT6S9TZyN70kO3iBTnLyX9qMIxP0hzrI1TNxbkTG10DhXBaTuXJ\nbeP6R/WZqLA5X4EWJ1HtgH6elrmU7d07M7pjnF4OTh2LTbCZF99FjHpA8lmrFWeiAAzS8+oYmfWm\nr4XUypdQzNZ0nRrleXzaFmzbvjimpCNGgJB2NMcODkDprpVZXiLvlXp1kWf9o2lA/X8sPwAX3sJy\n8gJ3lSg2Zkbu7x2H0w+j12xw0Ek9/3ice8/SwjjBmdFkoouWmLGlkamCtoGRgQEXV2JeXn5JYklq\nChcAos4JUiB4nAMAAAAAATDs5z1PX9htU9L79152rIjAVSvV\nHERE\n\ngit clone --mirror /tmp/so5529735.bundle /tmp/so5529735.git\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br")])]),e("h2",{attrs:{id:"quiet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quiet"}},[s._v("#")]),s._v(" 🔹 --quiet")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to Bash Script Git Local Branch Check?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14414106",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("create_branch() {\n  branch="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1:?Provide a branch name}"')]),s._v("\n\n  if git show-ref --verify --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"refs/heads/$branch"')]),s._v("; then\n    echo >&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"Branch '$branch' already exists.\"")]),s._v("\n  else\n    read -p "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Do you really want to create branch $1 "')]),s._v(" ans\n    ...\n  fi\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Delete remote branches that do not locally exist")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46011471",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r --merged | grep -v master | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/origin\\///'")]),s._v(" | xargs -n 1 git push --delete origin\n\n git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:lstrip=3)'")]),s._v(" refs/remotes/origin\n\nif git show-ref --quiet refs/heads/develop; then\n    echo develop branch exists\nfi\n\ngit fetch --prune\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:lstrip=3)'")]),s._v(" refs/remotes/origin); do\n    if ! git show-ref --quiet refs/heads/${branch}; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"delete remote branch '${branch}'\"")]),s._v("\n        git push origin --delete ${branch} \n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Head commit for all remote branches using Git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3893370",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -r -v --no-abbrev\n\ngit show-ref\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);