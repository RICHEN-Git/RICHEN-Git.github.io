(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{531:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-merge-join-two-or-more-development-histories-together"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-join-two-or-more-development-histories-together"}},[t._v("#")]),t._v(" 📌 git merge - Join two or more development histories together")]),t._v(" "),e("h2",{attrs:{id:"no-commit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-commit"}},[t._v("#")]),t._v(" 🔹 --no-commit")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Make the current Git branch a master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2371    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2763118",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout better_branch\ngit merge --strategy=ours master    # keep the content of this branch, but record a merge\ngit checkout master\ngit merge better_branch             # fast-forward master up to the merge\n\ngit merge --strategy=ours --no-commit master\ngit commit          # add information to the template merge message\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to un-submodule a Git submodule?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 588    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1789374",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm --cached submodule_path # delete reference to submodule HEAD (no trailing slash)\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove submodule"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fetch the submodule commits into the main repository")]),t._v("\ngit remote add submodule_origin git://url/to/submodule/origin\ngit fetch submodule_origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start a fake merge (won't change any files, won't commit anything)")]),t._v("\ngit merge -s ours --no-commit submodule_origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do the same as in the first solution")]),t._v("\ngit rm --cached submodule_path # delete reference to submodule HEAD\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit and cleanup")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed submodule"')]),t._v("\ngit remote rm submodule_origin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Applying the changes from branch b to a, without merging or adding commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 186    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41772786",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --squash branchA\ngit reset HEAD # to unstage the changes\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: how to reset develop branch to master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 113    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18436728",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you want to make develop be identical to master, the simplest way is just to recreate the pointer:\ngit branch -f develop master\n\n▲ Or, if you already have develop checked out:\ngit reset --hard develop master\n\n▲ Note however that both of these options will get rid of any history that develop had which wasn"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t in master. If that isn'")]),t._v("t okay, you could preserve it by instead creating a commit that mirrored master's latest state:\ngit checkout develop\ngit merge --no-commit master\ngit checkout --theirs master .\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Git Interactive Merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 87    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10935340",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --no-ff branch-to-merge\n\ngit show HEAD:filename >filename.HEAD\ngit show branch-to-merge:filename >filename.branch\n\ngit show `git merge-base HEAD branch-to-merge`:filename  >filename.base\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How do I merge a sub directory in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 86    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5190916",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\ngit remote add -f infochimps git://github.com/infochimps/cluster_chef.git\n\n\ngit merge --allow-unrelated-histories -s ours --no-commit infochimps/master\n\n\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merging in infochimps cassandra'")]),t._v("\n\ngit rm -r cassandra\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Making two branches identical")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 76    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36321787",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Definition of branch (see also What exactly do we mean by branch?)\no <- * <- o <- o <- o <- o   <-- A\n      \\\n       o <- o <- o           <-- B\n\no <- * <- o <- o <- o <- o   <-- A\n      \\\n       o <- o <- o <- o      <-- B\n\ngit checkout A; git merge B\n\no--*--o--o--o--o      <-- A\n    \\\n     o---o--o---o     <-- B\n\no--*--o--o--o--o--o   <-- A\n    \\            /\n     o---o--o---*     <-- B\n\n...---o--...--o--o    <-- A\n     /       /\n...-o--...--*--o--o   <-- B\n\n▲ What git does by default with git merge <thing>\n▲ Alternative merge strategies\ngit checkout A\ngit merge --no-commit -s ours B\ngit rm -rf .         # make sure you are at the top level!\ngit checkout B -- .\ngit commit\n\n...---o--...--o--o    <-- A\n     /       /\n...-o--...--*--o--o   <-- B\n\n...---o--...--o--o--o   <-- A\n     /       /     /\n...-o--...--o--o--*     <-- B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: merging git repositories at different directory levels")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 33    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8929615",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch /home/whoever/dev/B master\n\ngit merge -s ours --no-commit FETCH_HEAD\n\ngit read-tree --prefix=src/B/ -u FETCH_HEAD\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge in the history of master from B into src/B"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: git: can I subtree merge just a subpath of a repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12048161",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add Bar /path/to/bar")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit Bar/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=public/bar"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" Bar/master:www/tools/")]),t._v("\n\n$ get fetch Bar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" subtree=public/bar Bar master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Ignore specific files when pulling from forked upstream origin")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25315991",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch upstream\n\ngit merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch && git reset file/path/not/to/be/updated && git checkout file/path/not/to/be/updated\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: GIT: how do i do a partial merge from one branch to another one?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5344979",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b C_copy C\ngit rebase --onto Y A~1 C_copy  # <= --onto [target] [source] [what]\n\ngit rebase -i HEAD~3\n\ngit checkout Y\ngit merge --no-ff [--no-commit] C_copy\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How rebase result may differ from result of a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44554714",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\nfatal() {\n    echo fatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$@"')]),t._v(" 1>&2; exit 1\n}\n\n[ -e tt ] && fatal tt already exists\n\nmkdir tt && cd tt && git init -q || fatal failed to create tt repo\n\necho README > README && git add README && git commit -q -m A || fatal A\ngit branch branch || fatal unable to make branch\necho for master > bfile && git add bfile && git commit -q -m B || fatal B\n\ngit checkout -q -b br2 branch || fatal checkout -b br2 branch\necho file for C > cfile && git add cfile && git commit -q -m C || fatal C\ngit checkout -q branch || fatal checkout branch\necho file for D > dfile && git add dfile && git commit -q -m D || fatal D\ngit merge -q --no-commit br2 && git rm -q -f cfile && git commit -q -m E ||\n    fatal E\ngit branch -D br2\ngit checkout -q master || fatal checkout master\n\necho merging branch\ngit merge --no-edit branch || fatal merge failed\necho result is: *\n\necho removing merge, replacing with rebase of branch onto master\ngit reset -q --hard HEAD^ || fatal reset failed\ngit checkout -q branch || fatal switch back to master failed\ngit rebase master || fatal rebase failed\necho result is: *\n\necho removing rebase as well so you can poke around\ngit reset --hard ORIG_HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Merge a git branch, while excluding changes to some directory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7014667",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit <branch>\ngit reset root/x\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Merge from trunk to branch but only files in the branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60939703",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --no-ff trunk\ngit diff --name-only -z --diff-filter=A @ | xargs -0 git rm -f\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: How to exclude files from merging?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38044483",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\nnothing to commit, working directory clean\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" sidebranch")]),t._v("\n... lots of coding, git committing, etc\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n... more coding and committing, etc.,\n    or various merges of other branches,\n    so that master and sidebranch are\n    actually divergent (if they are\n    not, note that merge would\n    normally do a "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast forward"')]),t._v(" here)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit sidebranch")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm path/to/ickyfile")]),t._v("\n    # we don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t want this file, it'")]),t._v("s icky!\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ours")]),t._v(" -- path/to/foo; git add path/to/foo")]),t._v("\n    # we want the current (master) version of this file,\n    # ignoring all the changes made in the side branch\n\n$ vim path/to/bar\n<make changes that come from neither master nor sidebranch>\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add path/to/bar")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: How to resolve conflicts continuously while working on a long-term feature branch, before doing the big merge to master?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25687351",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff --no-commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: git merge but keep incoming changes unstaged")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65703807",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff feature-baz")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Git subtree tags")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2124186",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours --no-commit v0.1.2 # instead of: Bproject/master (2)\ngit read-tree --prefix=dir-B/ -u v0.1.2 # instead of: Bproject/master (3)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How to resolve a git conflict by keeping all additions from both sides?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-file.html"}},[t._v("git merge-file")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46182410",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animal.hpp\\tmerge=union\\n'")]),t._v(" > .gitattributes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit mybranch")]),t._v("\nAuto-merging animal.hpp\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")])]),t._v("\n$ rm .gitattributes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge mybranch")]),t._v("\nAuto-merging animal.hpp\nCONFLICT (content): Merge conflict in animal.hpp\nAutomatic merge failed; fix conflicts and then commit the result.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :1:animal.hpp > animal.hpp.base")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :2:animal.hpp > animal.hpp.ours")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :3:animal.hpp > animal.hpp.theirs")]),t._v("\n$ mv animal.hpp.ours animal.hpp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-file"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --union")]),t._v(" animal.hpp animal.hpp.base animal.hpp.theirs")]),t._v("\n\n$ rm animal.hpp.base animal.hpp.theirs\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add animal.hpp ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: Check for files changed in several branches before merging (conflicts) into master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29258454",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master #make sure we are on master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#assuming checking all the branches but can use whatever list here")]),t._v("\nfor branch in `git branch | grep -v master`\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Conflicts for $branch"')]),t._v("\n    #do the merge and use the quiet option so nothing gets output until we want it\n    git merge -q --no-commit $branch\n    #list the conflicted files\n    git diff --name-only --diff-filter=U\n    #get rid of the changes\n    git reset --hard master\ndone\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Compare only changes in a commit with current working dir")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12009217",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit  YourDanglingBranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: How to detect a merge conflict in a Git repository work tree (non-bare)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56077655",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --no-ff $BRANCH\n\ngit diff --cached\n\ngit merge --abort\n\ngit fetch origin/master\ngit diff master origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: Merging only selected changes in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36289962",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Is it possible to merge only one sub-repository (subtree) from main repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-restore.html"}},[t._v("git restore")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63541214",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit\n\n▲ Background\n▲ git merge will merge commits and make a merge commit\n          I--J   <-- branch1 (HEAD)\n         /\n...--G--H\n         \\\n          K--L   <-- branch2\n\ngit diff --find-renames <hash-of-H> <hash-of-J>   # what we changed\n\ngit diff --find-renames <hash-of-H> <hash-of-L>   # what they changed\n\n          I--J\n         /    \\\n...--G--H      M   <-- branch1 (HEAD)\n         \\    /\n          K--L   <-- branch2\n\n▲ Using (or abusing?) --no-commit\ngit checkout branch1\ngit merge --no-commit branch2\n\ngit checkout HEAD -- subdir2 subdir3\n\ngit restore -iw --source HEAD subdir2 subdir3\n\n          I--J\n         /    \\\n...--G--H      M   <-- branch1 (HEAD)\n         \\    /\n          K--L   <-- branch2\n\n▲ Commits are the history in a repository\n          I--J\n         /    \\\n...--G--H      M   <-- branch1 (HEAD)\n         \\    /\n          K--L   <-- branch2\n\n          I--J\n         /    \\\n...--G--H      M--N   <-- branch1 (HEAD)\n         \\    /\n          K--L--O--P   <-- branch2\n\ngit merge branch2\n\n▲ Summary\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: git : how to create a merge with a known outcome")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6890330",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit ...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: "),e("code",[t._v("git checkout branch -- .")]),t._v(", without overwriting existing files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66377496",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --allow-unrelated-histories -s recursive -Xours --no-commit master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-edit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-edit"}},[t._v("#")]),t._v(" 🔹 --no-edit")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How rebase result may differ from result of a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44554714",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\nfatal() {\n    echo fatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$@"')]),t._v(" 1>&2; exit 1\n}\n\n[ -e tt ] && fatal tt already exists\n\nmkdir tt && cd tt && git init -q || fatal failed to create tt repo\n\necho README > README && git add README && git commit -q -m A || fatal A\ngit branch branch || fatal unable to make branch\necho for master > bfile && git add bfile && git commit -q -m B || fatal B\n\ngit checkout -q -b br2 branch || fatal checkout -b br2 branch\necho file for C > cfile && git add cfile && git commit -q -m C || fatal C\ngit checkout -q branch || fatal checkout branch\necho file for D > dfile && git add dfile && git commit -q -m D || fatal D\ngit merge -q --no-commit br2 && git rm -q -f cfile && git commit -q -m E ||\n    fatal E\ngit branch -D br2\ngit checkout -q master || fatal checkout master\n\necho merging branch\ngit merge --no-edit branch || fatal merge failed\necho result is: *\n\necho removing merge, replacing with rebase of branch onto master\ngit reset -q --hard HEAD^ || fatal reset failed\ngit checkout -q branch || fatal switch back to master failed\ngit rebase master || fatal rebase failed\necho result is: *\n\necho removing rebase as well so you can poke around\ngit reset --hard ORIG_HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to re-merge a branch, after a partial merge was performed")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27410108",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# redo the original merge to get the right parents and the right content")]),t._v("\ngit checkout $APM^        # checkout the original merge parent\ngit merge $APM^2          # do the correct merge with its other parent\ngit checkout -b AM        # give this work a name\n\ngit merge -s ours $APM   # $APM is correctly incorported in AM. Tell git.\n\ngit checkout master\ngit merge AM\n\ngit clone -s . ../wip  # safety play: sandbox the changes\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do the above, and when you're satisfied you've got `master` correct,")]),t._v("\ncd ../$mainrepo\ngit checkout master    # okay, incorporate the results\ngit pull               # .\nrm -rf ../wip          # (everything in wip is now also here)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# drop this as file `script` in an empty directory and")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# say `sh script` to recreate the described situation:")]),t._v("\n\nset -x\ngit init --template=\nfor f in {1..5}; do seq -ffile$f%4.0fx 10 >f$f; done\ngit add .\ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit'")]),t._v("\ngit checkout -b featureA\nsed -si s/4x/4-featureA/ f2 f3\ngit commit -am4featureA-f2f3\ngit checkout master\nsed -si s/1x/1-master/ f1 f2 f3\ngit commit -am1master-f1f2f3\ngit checkout -b featureB\nsed -si s/8x/8-featureB/ f3 f4\ngit commit -am8featureB-f3f4\ngit checkout master\ngit merge --no-commit featureA\ngit checkout HEAD f3\ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Merge branch featureA - less the f3 changes'")]),t._v("\ngit tag APM\ngit merge --no-edit featureB\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and test the given solution:")]),t._v("\n\ngit checkout -b AM APM^\ngit merge --no-edit featureA\ngit merge --no-edit -s ours APM\ngit checkout master\ngit merge --no-edit AM\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# say `rm -rf f* .git` to cleanup")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br")])]),e("p",[e("strong",[t._v('3. Usage scenario: Automatic merging from "git pull"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[t._v("git for-each-ref")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36246651",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Merge\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%(refname:short)'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/alt*'")]),t._v("); do\n  git checkout $branch && git merge --no-edit master\ndone\n\n▲ Rebase\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%(refname:short)'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'refs/heads/alt*'")]),t._v("); do\n  git checkout $branch && git rebase master\ndone\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Manually create markers like git merge with conflict from a diff")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52617338",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("branch=$(git symbolic-ref --short HEAD)                # Get the current branch name\ngit checkout --orphan temp                             # Change to a branch with no parents, so to force a merge conflict\ngit add -A                                             # Add everything there\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'temp'")]),t._v("                                   # Commit\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$branch"')]),t._v("                                 # Go back to your previous branch\n(git merge --allow-unrelated-histories temp || true)   # Merge the unrelated branches, which causes a conflict with your changes. This is done in a subshell with the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'|| true'")]),t._v(" so that it doesn"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t return an error code - I have this in a git alias, so this is necessary for me so the command isn'")]),t._v("t aborted halfway.\ngit add -A                                             # Add your conflict markers as additions to the file\nGIT_EDITOR=true git merge --continue                   # Commit. When --continue is used it doesn"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t accept the flag --no-edit, so to stop git opening an editor for the commit message, use the command '")]),t._v("true' as the editor.\ngit reset HEAD^                                        # Get rid of the last commit but keep its changes (the markers). This is needed because there is no way to get out of a conflicting merge commit but keep the conflict markers.\ngit branch -D temp                                          # Clean up\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Squash frequent merge history from main branch into one")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[t._v("git apply")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52699162",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout feature\ngit diff master > feature.patch\ngit reset --hard G\ngit branch --move trimmed_feature\ngit checkout -b feature master\ngit merge --strategy ours trimmed_feature --no-edit\ngit apply feature.patch --index\ngit commit --amend --message "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Merge branch 'master' into feature\"")]),t._v("\ngit branch -D trimmed_feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Seemingly missing changes in a Git commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69840265",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),t._v(" 4a71da0f3a^..n0.9 libavcodec/cavsdec.c")]),t._v("\n*   dd8ffc1925 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qatar/master'")]),t._v("\n|\\  \n| * 9138a130cd lavc: use avpriv_ prefix for ff_frame_rate_tab.\n| * 773375c3d0 lavc: rename ff_find_start_code to avpriv_mpv_find_start_code\n* | d912e449b6 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qatar/master'")]),t._v("\n|\\| \n| * 4a71da0f3a cavs: fix some crashes with invalid bitstreams\n* 961a1a81d8 cavsdec: check run value validity\n* 9f06c1c61e cavsdec: avoid possible crash with crafted input\n* 6481a36010 cavs: fix oCERT #2011-002 FFmpeg/libavcodec insufficient boundary check\n* faba79e080 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qatar/master'")]),t._v("\n* e10979ff56 Merge remote-tracking branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'qatar/master'")]),t._v("\n* ce5e49b0c2 replace deprecated FF_*_TYPE symbols with AV_PICTURE_TYPE_*\n* e7e2df27f8 Add ff_ prefix to data symbols of encoders, decoders, hwaccel, parsers, bsf.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -U0")]),t._v(" d912e449b6^1 d912e449b6 libavcodec/cavsdec.c")]),t._v("\ndiff --git a/libavcodec/cavsdec.c b/libavcodec/cavsdec.c\nindex fcfe06e2ce..fedee8bf72 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/libavcodec/cavsdec.c")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/libavcodec/cavsdec.c")]),t._v("\n@@ -195 +195,2 @@ static int decode_mb_i(AVSContext *h, int cbp_code) {\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-    int block, pred_mode_uv;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    unsigned pred_mode_uv;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    int block;")]),t._v("\n@@ -450,0 +452,2 @@ static inline int check_for_slice(AVSContext *h) {\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+        if (h->stc >= h->mb_height)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+            return 0;")]),t._v("\n@@ -665 +668 @@ static int cavs_decode_frame(AVCodecContext * avctx,void *data, int *data_size,\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-        if(stc & 0xFFFFFE00)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+        if((stc & 0xFFFFFE00) || buf_ptr == buf_end)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -U0")]),t._v(" d912e449b6^2 d912e449b6 libavcodec/cavsdec.c")]),t._v("\ndiff --git a/libavcodec/cavsdec.c b/libavcodec/cavsdec.c\nindex 88034068ff..fedee8bf72 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/libavcodec/cavsdec.c")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/libavcodec/cavsdec.c")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -5 +5 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("- * This file is part of Libav.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+ * This file is part of FFmpeg.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -7 +7 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("- * Libav is free software; you can redistribute it and/or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+ * FFmpeg is free software; you can redistribute it and/or")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -12 +12 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("- * Libav is distributed in the hope that it will be useful,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+ * FFmpeg is distributed in the hope that it will be useful,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -18 +18 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("- * License along with Libav; if not, write to the Free Software")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+ * License along with FFmpeg; if not, write to the Free Software")]),t._v("\n@@ -118 +118,2 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-    int i, level_code, esc_code, level, run, mask;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    int i, esc_code, level, mask;")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    unsigned int level_code, run;")]),t._v("\n@@ -126,0 +128,2 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+            if(run > 64)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+                return -1;")]),t._v("\n@@ -133 +136 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-        } else if (level_code >= 0) {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+        } else {")]),t._v("\n@@ -139,2 +141,0 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-        } else {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-            break;")]),t._v("\n@@ -168 +169 @@ static inline int decode_residual_inter(AVSContext *h) {\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-    if(cbp > 63){")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    if(cbp > 63U){")]),t._v("\n@@ -228 +229 @@ static int decode_mb_i(AVSContext *h, int cbp_code) {\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-    if(cbp_code > 63){")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+    if(cbp_code > 63U){")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout d912e449b6^1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-edit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff d912e449b6^2")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -U0")]),t._v(" d912e449b6 HEAD libavcodec/cavsdec.c")]),t._v("\ndiff --git a/libavcodec/cavsdec.c b/libavcodec/cavsdec.c\nindex fedee8bf72..1b8fedf2b1 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/libavcodec/cavsdec.c")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/libavcodec/cavsdec.c")]),t._v("\n@@ -136 +136 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-        } else {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+        } else if (level_code >= 0) {")]),t._v("\n@@ -141,0 +142,2 @@ static int decode_residual_block(AVSContext *h, GetBitContext *gb,\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+        } else {")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+            break;")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br")])]),e("h2",{attrs:{id:"ff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ff"}},[t._v("#")]),t._v(" 🔹 --ff")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: git pull from master into the development branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 984    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20103414",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout dmgr2      # gets you "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on branch dmgr2"')]),t._v("\ngit fetch origin        # gets you up to date with origin\ngit merge origin/master\n\ngit checkout dmgr2\ngit pull origin master\n\ngit fetch origin\ngit checkout master\ngit merge --ff-only origin/master\ngit checkout dmgr2\ngit merge --no-ff origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I 'overwrite', rather than 'merge', a branch on another branch in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4624383",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can use the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ours'")]),t._v(" merge strategy (this links to octopus merge, you have to scroll down to next option; deeplinking to the correct section is not possible):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout staging")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours email # Merge branches, but use our (=staging) branch head")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout email")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge staging")]),t._v("\n\n▲ I thought a bit more about this question and possible solutions. If you absolutely require the merge parents in the correct order, need to perform this action with a single command line invocation, and don't mind running plumbing commands, you can do the following:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ff")]),t._v("-only $(git commit-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Throw away branch 'A'\"")]),t._v(" -p A -p B B^{tree})\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} HEAD^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'original'")]),t._v(" | tee file1 file2 file3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" > file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch A'")]),t._v(" file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout B")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" > file2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch B'")]),t._v(" file2\n\n▲ Now, let"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s try the strategy option (doesn'")]),t._v("t really matter if we use theirs or ours for this explanation):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" ours A")]),t._v("\n$ cat file*\nA\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours A")]),t._v("\n$ cat file*\noriginal\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} merge-strategy^{tree} strategy-option^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n5b09d34a37a183723b409d25268c8cb4d073206e\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git: reset --hard now I'm stuck in the past")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8213652",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --ff-only REMOTE/BRANCH_NAME\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: branch diverged after rebase from another upstream")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6218725",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you're not making any changes and just trying to keep your fork up to date, the workflow would be (assuming you have master checked out):\ngit fetch upstream master\ngit merge --ff-only upstream/master\ngit push origin master\n\n▲ The middle command is what you are missing. If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t care about having a local branch that'")]),t._v("s up to date, then you can just (does not require master being checked out):\ngit fetch upstream master\ngit push origin upstream/master:master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h2",{attrs:{id:"no-ff"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-ff"}},[t._v("#")]),t._v(" 🔹 --no-ff")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Create a branch in Git from another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1889    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4470822",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" myFeature dev")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your message"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout dev")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff myFeature")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin dev")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin myFeature")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Git merge hotfix branch into feature branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1578    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16957483",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout feature1\ngit merge master\n\ngit checkout feature1\ngit merge --no-ff hotfix1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git Interactive Merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 87    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10935340",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --no-ff branch-to-merge\n\ngit show HEAD:filename >filename.HEAD\ngit show branch-to-merge:filename >filename.branch\n\ngit show `git merge-base HEAD branch-to-merge`:filename  >filename.base\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to make git ignore a directory while merging")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 79    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14369793",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master    \ngit merge --no-commit --no-ff development\ngit reset -- /path/to/folder # revert updates from path\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to merge all files manually in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 73    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36563486",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit merge_branch \n\ngit merge --no-commit --no-ff merge_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v('6. Usage scenario: Github Desktop: "Update from '),e("branch",[t._v('" button')])],1)]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34087005",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge <auto_text> <branch_name>"')]),t._v(" <branch_name>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Finishing a feature branch with GIT Flow")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 21    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16403826",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Difference between "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"discarding"')]),t._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merging"')]),t._v(" the feature branch:\ngit branch -d feature/my-fancy-feature\n\ngit flow feature finish my-fancy-feature\n\n▲ Difference between "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"fast-forward-merge"')]),t._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"non-fast-forward-merge"')]),t._v("\ngit merge\n\ngit merge --no-ff\n\n▲ Update\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: how can I customize git's merge commit message?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51937574",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git mergelogmsg branch-name")]),t._v("\n\n[alias]\n    mergelogmsg = "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"!f() { var=$(git symbolic-ref --short HEAD) && printf 'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n' $1 $var $1 > temp_merge_msg && git log --format=format:'%s' $var..$1 >> temp_merge_msg && printf '\\n\\nBranch %s commits:\\n' $var >> temp_merge_msg && git log --format=format:'%s' $1..$var >> temp_merge_msg && printf '\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n' >> temp_merge_msg && git log --left-right $var...$1 >> temp_merge_msg && git merge --no-ff --no-commit $1 && git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f\"")]),t._v(' \n\n[alias]\n1   mergelogmsg = "!f() { var=$(git symbolic-ref --short HEAD) && \n2        printf '),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Merge branch %s into %s\\n\\n::SUMMARY::\\nBranch %s commits:\\n'")]),t._v(" $1 $var $1 > temp_merge_msg && \n3        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%s'")]),t._v(" $var..$1 >> temp_merge_msg && \n4        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n\\nBranch %s commits:\\n'")]),t._v(" $var >> temp_merge_msg && \n5        git log --format=format:"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%s'")]),t._v(" $1..$var >> temp_merge_msg && \n6        printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n\\n* * * * * * * * * * * * * * * * * * * * * * * * *\\n::DETAILS::\\n'")]),t._v(' >> temp_merge_msg && \n7        git log --left-right $var...$1 >> temp_merge_msg && \n8        git merge --no-ff --no-commit $1 && \n9        git commit -eF temp_merge_msg; rm -f temp_merge_msg;}; f"\n')])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v('9. Usage scenario: How do I check git log for a "fast-forward" merge?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6072375",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff topic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v('10. Usage scenario: How to git merge --squash so that github "network" diagram shows the merge')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19044745",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff\ngit branch -d development\n\nmaster: o--o--o---------o\n               `o--o--o’\n\ngit checkout developement\ngit rebase -i master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to merge the Gerrit branch to another Gerrit branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24371482",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: Ignore specific files when pulling from forked upstream origin")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25315991",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch upstream\n\ngit merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch && git reset file/path/not/to/be/updated && git checkout file/path/not/to/be/updated\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: GIT: how do i do a partial merge from one branch to another one?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5344979",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b C_copy C\ngit rebase --onto Y A~1 C_copy  # <= --onto [target] [source] [what]\n\ngit rebase -i HEAD~3\n\ngit checkout Y\ngit merge --no-ff [--no-commit] C_copy\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: How to merge a PR from command line using hub?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53960346",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout develop\ngit merge --no-ff my-feature-123\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Git workflow to audit commits without rewriting history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23087040",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff devel\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: Git merge between two folders, not branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10092003",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch feature-b <commit-id-from-step-2>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature-b")]),t._v("\n\n$ rm -rf project\n$ mv ../project-with-feature-b project\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add project")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Add feature-b"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff feature-b")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: How to merge files from one branch's directory into another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29695610",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ In your case, if master is the current branch the following command will merge the contents of the dist/ directory from the dev branch into the root directory (you will have the opportunity to resolve conflicts should there be any):\ngit merge --no-ff -s recursive -X subtree=dist dev\n\n▲ If, instead, you wish to merge changes into the dist/ directory, checkout the dev branch then run:\ngit merge --no-ff -s recursive -X subtree=dist master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: how to break off a sub-sequence of git commits as a separate branch + merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4981091",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch to-merge-in C-commit-ID    # Create a branch at C")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" A-commit-ID          # Reset current branch to A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff to-merge-in         # Merge in branch. Create a merge commit.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick D-commit-ID           # Grab the commit D")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: git merge doesn't show up in commit history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20259895",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How to resolve conflicts continuously while working on a long-term feature branch, before doing the big merge to master?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25687351",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff --no-commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Git branch. How to assign a commit to a branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13598957",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you simply want to apply the changes in commit 55667788 to branch first, you can just use cherry-pick.\ngit checkout first\ngit cherry-pick 55667788\n\n▲ If you are actually after importing all commits that second has that first doesn't (including 55667788) you would merge it.\ngit checkout first\ngit merge --no-ff second\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: git merge but keep incoming changes unstaged")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65703807",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff feature-baz")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: Merge Git branches while maintaining individual branch layout")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24517240",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff develop\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Git pull request: dev into master without a new commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51229235",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" git merge --no-ff dev  \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: Finding merge commits which undo previous changes from one of the branches?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37331772",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Loop through each commit")]),t._v("\nfor ref in $(git rev-list HEAD); do\n    # Get a list of the commit's parents\n    parents="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git log --pretty=%P -n 1 $ref)"')]),t._v("\n\n    # Merge commits have 2 or more parents.  We'll ignore merge commits with\n    # more than 2 parents for now.\n    if [ $(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$parents"')]),t._v(" | wc -w) -eq 2 ]; then\n        merge_base="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git merge-base $ref^{1..2})"')]),t._v("\n        merge_diverging=1\n        merge_unchanging=0\n\n        # Loop through ref^1 and ref^2 (the two parents)\n        for i in 1 2; do\n            parent_ref="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git rev-parse $ref^$i)"')]),t._v("\n            diff_lines="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git diff $parent_ref $ref | wc -l)"')]),t._v("\n\n            # Check for merge commits where one parent is the base of the\n            # merge so we can ignore them, since a merge which doesn't diverge\n            # (i.e. made with `git merge --no-ff`) will have an empty diff on\n            # one side\n            if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$merge_base"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$parent_ref"')]),t._v(" ]; then\n                merge_diverging=0\n            fi\n\n            # Find if either side of the merge has an empty diff\n            if [ $diff_lines -eq 0 ]; then\n                merge_unchanging=1\n            fi\n        done\n\n        if [ $merge_diverging -eq 1 ] && [ $merge_unchanging -eq 1 ]; then\n            echo $ref\n        fi\n    fi\ndone\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: Show all branchs history with child branchs")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47475878",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: how to force manual merge with git instead of fast forward")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26032890",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff branchname\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: Avoid to trigger Azure Pipeline when using 'git push' from another pipeline")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62018911",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[skip ci] Merge from build agent"')]),t._v(" branch\nUpdating ed7d8f5..11d4c44\nFast-forward (no commit created; -m option ignored)\n README.md | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ngit merge --no-ff -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[skip ci] Merge from build agent"')]),t._v(" branch\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: How to achieve a squashed merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61516676",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch newBranch release/version\ngit rebase -i $(git merge-base HEAD newBranch)\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# mark all commits except the first as "`squash`"')]),t._v("\ngit merge --no-ff master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: How to cleanly reset local git repository with no remnants left")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8595759",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲  Merge & Reset Example \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --online")])]),t._v("\n695d21b add some content\n9aefcac initial commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-ff feature-123")]),t._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\nfeature-123.txt |    1 +\n1 files changed, 1 insertions(+), 0 deletions(-)\ncreate mode 100644 feature-123.txt\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" 695d21b")]),t._v("\n\n▲  The reflog \nec4b538 HEAD@{2}: merge feature-123: Merge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n695d21b HEAD@{6}: checkout: moving from feature-123 to master\nc08056a HEAD@{7}: commit: add feature 123\n695d21b HEAD@{8}: checkout: moving from master to feature-123\n695d21b HEAD@{9}: commit: add some content\n9aefcac HEAD@{10}: commit (initial): initial commit\n\n▲  Testing .. \n▲  Pushing .. \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br")])]),e("h2",{attrs:{id:"ff-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ff-only"}},[t._v("#")]),t._v(" 🔹 --ff-only")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: git pull from master into the development branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 984    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20103414",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout dmgr2      # gets you "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"on branch dmgr2"')]),t._v("\ngit fetch origin        # gets you up to date with origin\ngit merge origin/master\n\ngit checkout dmgr2\ngit pull origin master\n\ngit fetch origin\ngit checkout master\ngit merge --ff-only origin/master\ngit checkout dmgr2\ngit merge --no-ff origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I 'overwrite', rather than 'merge', a branch on another branch in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4624383",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can use the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ours'")]),t._v(" merge strategy (this links to octopus merge, you have to scroll down to next option; deeplinking to the correct section is not possible):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout staging")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours email # Merge branches, but use our (=staging) branch head")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout email")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge staging")]),t._v("\n\n▲ I thought a bit more about this question and possible solutions. If you absolutely require the merge parents in the correct order, need to perform this action with a single command line invocation, and don't mind running plumbing commands, you can do the following:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ff")]),t._v("-only $(git commit-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Throw away branch 'A'\"")]),t._v(" -p A -p B B^{tree})\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} HEAD^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'original'")]),t._v(" | tee file1 file2 file3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" > file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch A'")]),t._v(" file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout B")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" > file2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch B'")]),t._v(" file2\n\n▲ Now, let"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s try the strategy option (doesn'")]),t._v("t really matter if we use theirs or ours for this explanation):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" ours A")]),t._v("\n$ cat file*\nA\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours A")]),t._v("\n$ cat file*\noriginal\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} merge-strategy^{tree} strategy-option^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n5b09d34a37a183723b409d25268c8cb4d073206e\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git: reset --hard now I'm stuck in the past")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8213652",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --ff-only REMOTE/BRANCH_NAME\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: branch diverged after rebase from another upstream")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6218725",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you're not making any changes and just trying to keep your fork up to date, the workflow would be (assuming you have master checked out):\ngit fetch upstream master\ngit merge --ff-only upstream/master\ngit push origin master\n\n▲ The middle command is what you are missing. If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t care about having a local branch that'")]),t._v("s up to date, then you can just (does not require master being checked out):\ngit fetch upstream master\ngit push origin upstream/master:master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("h2",{attrs:{id:"log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#log"}},[t._v("#")]),t._v(" 🔹 --log")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Retaining Git Commit History in commit message when Merging branches in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31693285",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --log=1000 <other options depending on your merge>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-log"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-log"}},[t._v("#")]),t._v(" 🔹 --no-log")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Ignore specific files when pulling from forked upstream origin")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25315991",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch upstream\n\ngit merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch\n\n[alias]\n   fnm = !git fetch upstream && git merge --no-log --no-ff --no-commit upstream/branch && git reset file/path/not/to/be/updated && git checkout file/path/not/to/be/updated\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to ignore files in Git merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19069218",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\n\ngit checkout master\n\ngit merge --no-log --no-ff --no-commit dev\n\ngit checkout master &ltfiles-you-don't-want-to-merge&gt\n\n\ngit add &ltfiles-you-don't-want-to-merge&gt\n\ngit commit -a\n\n~~~ Test / Build ~~~\n\ngit push origin master \n\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("h2",{attrs:{id:"squash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#squash"}},[t._v("#")]),t._v(" 🔹 --squash")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I merge multiple commits onto another branch as a single squashed commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2498    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5309051",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit merge --squash bugfix\ngit commit\n\ngit checkout master\n\ngit merge --squash bugfix\n\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Applying the changes from branch b to a, without merging or adding commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 186    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41772786",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-commit --squash branchA\ngit reset HEAD # to unstage the changes\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: git command for making one branch like another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 117    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gui.html"}},[t._v("git gui")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[t._v("git apply")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4912267",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mv -f $3 $2\nexit 0\n\n▲ git merge --strategy=theirs Simulation #1\ngit checkout -b tmp origin/upstream\ngit merge -s ours downstream         # ignoring all changes from downstream\ngit checkout downstream\ngit merge tmp                        # fast-forward to tmp HEAD\ngit branch -D tmp                    # deleting tmp\n\n▲ git merge --strategy=theirs Simulation #2\ngit checkout -b tmp upstream\ngit merge -s ours thebranch         # ignoring all changes from downstream\ngit checkout downstream\ngit merge --squash tmp               # apply changes from tmp but not as merge.\ngit rev-parse upstream > .git/MERGE_HEAD #record upstream 2nd merge head\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rebaselined thebranch from upstream"')]),t._v(" # make the commit.\ngit branch -D tmp                    # deleting tmp\n\n▲ git merge --strategy=theirs Simulation #3\ngit merge -s ours ref-to-be-merged\ngit diff --binary ref-to-be-merged | git apply -R --index\ngit commit -F .git/COMMIT_EDITMSG --amend\n\n▲ git merge --strategy=theirs Simulation #4\ngit branch -m upstream-unstable upstream-unstable-save\ngit branch upstream-unstable upstream-remote/master\ngit merge -s ours upstream-unstable\ngit diff --binary ref-to-be-merged | git apply -R --index --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debian/*"')]),t._v("\ngit commit -F .git/COMMIT_EDITMSG --amend\n\n▲ git merge --strategy=theirs Simulation #5\ngit checkout MINE\ngit merge --no-commit -s ours HERS\ngit rm -rf .\ngit checkout HERS -- .\ngit checkout MINE -- debian # or whatever, as appropriate\ngit gui # edit commit message & click commit button\n\n▲ git merge --strategy=theirs Simulation #6\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the contents of another branch")]),t._v("\ngit read-tree -u --reset <ID>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# selectivly merge subdirectories")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e.g superseed upstream source with that from another branch")]),t._v("\ngit merge -s ours --no-commit other_upstream\ngit read-tree --reset -u other_upstream     # or use --prefix=foo/\ngit checkout HEAD -- debian/\ngit checkout HEAD -- .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'superseed upstream source'")]),t._v(" -a\n\n▲ git merge --strategy=theirs Simulation #7\ngit read-tree -u --reset upstream                 # update files and stage changes\ngit rev-parse upstream > .git/MERGE_HEAD          # setup merge commit\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Merge branch 'upstream' into mine\"")]),t._v(" # commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git rebase (Merge Squash) my feature branch onto another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 92    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9625775",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout feature_branch\ngit rebase master\ngit checkout master\ngit merge --squash feature_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to undo a git merge squash?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 30    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7460508",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you run git merge --squash <other-branch> the working tree and index are updated with what the result of the merge would be, but it doesn't create the commit.  All you need to do is to run:\ngit commit\n\n▲ However, if you change your mind before committing and just want to abort the merge, you can simply run:\ngit reset --merge\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Convert a two-parent commit into a single-parent one in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2914026",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# starting with branch-full-reordering at "Corrected GPU float measures"')]),t._v("\ngit merge --squash branch-full-reordering-wo-auxarray-wo-diver\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go on to make the "improve performance commit"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# starting with branch-full-reordering at "Corrected GPU float measures"')]),t._v("\ngit rebase branch-full-reordering branch-full-reordering-wo-auxarray-wo-diver\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# go on to make the "improve performance commit"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# recreate your topic branch")]),t._v("\ngit branch topic <SHA1 of commit "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Correct pesky bug"')]),t._v(">\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# overkill: you could also specify that as branch-full-reordering^^2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# which means the second parent of the [first] parent of the branch tip")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase the topic branch like you meant to in the first place :)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ~2 means two commits before")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# you could also just use the SHA1 of commit "Corrected GPU float measures"')]),t._v("\ngit rebase branch-full-reordering~2 topic\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase the main branch onto the topic")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# the merge will be ignored, so this will just move the "Improve performance" commit    ')]),t._v("\ngit rebase topic branch-full-reordering\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# delete the topic branch")]),t._v("\ngit branch -d topic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Can Git merge --squash preserve commit comments?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41340089",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone http://vm.bit-booster.com/bitbucket/scm/bb/rebase-example-2.git\ncd rebase-example-2\ngit checkout branch\ngit reset --hard origin/master\ngit merge --squash origin/branch\ngit commit --no-edit\n\ngit show\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 74656c51212526af49382c985419244737141217")]),t._v("\nAuthor: G. Sylvie Davies <sylvie@bit-booster.com>\nDate:   Mon Dec 26 22:07:50 2016 -0800\n\n    Squashed commit of the following:\n\n    commit 3120cbba4e94e0a81eed2f9ff42e7012cca996bf\n    Author: G. Sylvie Davies <sylvie@bit-booster.com>\n    Date:   Thu Dec 15 18:24:02 2016 -0800\n\n        b2\n\n    commit ccb522334464879b8f39824031c997b57303475d\n    Merge: 6b85efb 026bf0c\n    Author: G. Sylvie Davies <sylvie@bit-booster.com>\n    Date:   Thu Dec 15 18:13:35 2016 -0800\n\n        m\n\n    commit 6b85efbddbb74d49a096bfc54fd4df15e261b72f\n    Author: G. Sylvie Davies <sylvie@bit-booster.com>\n    Date:   Thu Dec 15 18:12:51 2016 -0800\n\n        b1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How can I squash merge when merge.ff = only?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36487638",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Answer\n▲ Discussion\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --global")]),t._v(" merge.ff=only")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --squash")]),t._v(" stash")]),t._v("\nfatal: Not possible to fast-forward, aborting.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -c")]),t._v(" merge.ff=false merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --squash")]),t._v(" stash")]),t._v("\nfatal: You cannot combine --squash with --no-ff.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -c")]),t._v(" merge.ff=true merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --squash")]),t._v(" stash")]),t._v("\nSquash commit -- not updating HEAD\nAutomatic merge went well; stopped before committing as requested\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Recovering lost changes after reverting bad merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52962156",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Introduction-y bits\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-------------o----M2---M3--------R2   <---- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <------------------- branch-F\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <branch-name>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge [options] <other-branch>")]),t._v("\n... fix up conflicts if necessary, and git commit (or git merge --continue)\n\ngit checkout <branch>\ngit revert -m 1 <hash ID of some M commit>\n\n▲ Making commits moves a branch name\nA--B--C   <-- master (HEAD)\n\nA--B--C   <-- master (HEAD)\n       \\\n        D\n\nA--B--C--D   <-- master (HEAD)\n\n▲ About merges\n          o--...--L   <-- mainline (HEAD)\n         /\n...--o--*\n         \\\n          o--...--R   <-- feature\n\ngit diff --find-renames <hash-of-*> <hash-of-L>   # what we changed\ngit diff --find-renames <hash-of-*> <hash-of-R>   # what they changed\n\n          o--...--L\n         /         \\\n...--o--*           M   <-- mainline (HEAD)\n         \\         /\n          o--...--R   <-- feature\n\n▲ When things go wrong\n▲ More-complex merge bases\n ...--sc4----M4---R1\n         \\  /\n...--M2---M3--------R2\n\n▲ Introducing the problem: what went wrong (so you can avoid it in the future)\nT0-------------o   <-- branch-T1\n \\\n F0--fc1---fc2   <--- branch-F (HEAD)\n\nT0-------------o   <-- branch-T1\n \\              \\\n F0--fc1---fc2---M1   <--- branch-F (HEAD)\n\nT0-------------o----M2   <-- branch-T1 (HEAD)\n \\              \\  /\n F0--fc1---fc2---M1   <--- branch-F\n\ngit checkout branch-T1\ngit merge branch-S\n\nS0--sc1---sc2---sc3-----sc4   <-- branch-S\n  \\\n   T0-------------o----M2   <-- branch-T1 (HEAD)\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit checkout branch-S\ngit merge --no-ff branch-T1\n\nS0--sc1---sc2---sc3-----sc4----M4   <-- branch-S\n  \\                        \\  /\n   T0-------------o----M2---M3   <-- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit diff <hash-of-sc4> <hash-of-R1>\n\n▲ Undoing a merge undoes the contents, but not the history\nT0   <-- revised-F (HEAD)\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F, revised-F (HEAD)\n\ngit checkout -b revised-F <hash of T0>   # for merge --squash method\n\ngit checkout -b revised-f branch-F^1      # for rebase -f method\n\ngit merge --squash branch-F\n\n   fc1--fc2--M1   <-- branch-F\n  /\nF0-------------F3   <-- revised-F (HEAD)\n\ngit rebase -f <hash-of-T0>\n\n  F0"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-fc1'")]),t._v("-fc2'   <-- revised-F (HEAD)\n /\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\n▲ Based on comments, here are two paths for doing the re-merge\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\ngit checkout branch-T1\ngit merge revised-F\n\ngit merge-base --all branch-T1 revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2-----M6   <---- branch-T1\n    \\      \\       \\  /                     /\n    F0--fc1-o-fc2---M1   <-- branch-F      /\n      \\                                   /\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5----M6   <-- branch-S\n  \\                        \\  /         /           /\n   T0-----o-------o----M2---M3--------R2   <------ / -- branch-T1\n    \\      \\       \\  /                           /\n    F0--fc1-o-fc2---M1   <-- branch-F            /\n      \\                                         /\n       ---------------------------------------F3   <-- revised-F\n\ngit merge-base --all branch-S revised-F\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br"),e("span",{staticClass:"line-number"},[t._v("104")]),e("br"),e("span",{staticClass:"line-number"},[t._v("105")]),e("br"),e("span",{staticClass:"line-number"},[t._v("106")]),e("br"),e("span",{staticClass:"line-number"},[t._v("107")]),e("br"),e("span",{staticClass:"line-number"},[t._v("108")]),e("br"),e("span",{staticClass:"line-number"},[t._v("109")]),e("br"),e("span",{staticClass:"line-number"},[t._v("110")]),e("br"),e("span",{staticClass:"line-number"},[t._v("111")]),e("br"),e("span",{staticClass:"line-number"},[t._v("112")]),e("br"),e("span",{staticClass:"line-number"},[t._v("113")]),e("br"),e("span",{staticClass:"line-number"},[t._v("114")]),e("br"),e("span",{staticClass:"line-number"},[t._v("115")]),e("br"),e("span",{staticClass:"line-number"},[t._v("116")]),e("br"),e("span",{staticClass:"line-number"},[t._v("117")]),e("br"),e("span",{staticClass:"line-number"},[t._v("118")]),e("br"),e("span",{staticClass:"line-number"},[t._v("119")]),e("br"),e("span",{staticClass:"line-number"},[t._v("120")]),e("br"),e("span",{staticClass:"line-number"},[t._v("121")]),e("br"),e("span",{staticClass:"line-number"},[t._v("122")]),e("br"),e("span",{staticClass:"line-number"},[t._v("123")]),e("br"),e("span",{staticClass:"line-number"},[t._v("124")]),e("br"),e("span",{staticClass:"line-number"},[t._v("125")]),e("br"),e("span",{staticClass:"line-number"},[t._v("126")]),e("br"),e("span",{staticClass:"line-number"},[t._v("127")]),e("br"),e("span",{staticClass:"line-number"},[t._v("128")]),e("br"),e("span",{staticClass:"line-number"},[t._v("129")]),e("br"),e("span",{staticClass:"line-number"},[t._v("130")]),e("br"),e("span",{staticClass:"line-number"},[t._v("131")]),e("br"),e("span",{staticClass:"line-number"},[t._v("132")]),e("br"),e("span",{staticClass:"line-number"},[t._v("133")]),e("br"),e("span",{staticClass:"line-number"},[t._v("134")]),e("br"),e("span",{staticClass:"line-number"},[t._v("135")]),e("br"),e("span",{staticClass:"line-number"},[t._v("136")]),e("br"),e("span",{staticClass:"line-number"},[t._v("137")]),e("br"),e("span",{staticClass:"line-number"},[t._v("138")]),e("br"),e("span",{staticClass:"line-number"},[t._v("139")]),e("br"),e("span",{staticClass:"line-number"},[t._v("140")]),e("br"),e("span",{staticClass:"line-number"},[t._v("141")]),e("br"),e("span",{staticClass:"line-number"},[t._v("142")]),e("br"),e("span",{staticClass:"line-number"},[t._v("143")]),e("br"),e("span",{staticClass:"line-number"},[t._v("144")]),e("br"),e("span",{staticClass:"line-number"},[t._v("145")]),e("br"),e("span",{staticClass:"line-number"},[t._v("146")]),e("br"),e("span",{staticClass:"line-number"},[t._v("147")]),e("br"),e("span",{staticClass:"line-number"},[t._v("148")]),e("br"),e("span",{staticClass:"line-number"},[t._v("149")]),e("br"),e("span",{staticClass:"line-number"},[t._v("150")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How to combine multiple commits in to one without losing history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6185857",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout review\ngit merge --squash master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: when merging git branch, how to avoid the commits logs in a branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11019462",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash <other_branch>\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v('12. Usage scenario: How to "clone" branch as one commit?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32993950",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash branchname\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: How to resolve all merge conflicts in favor of the just-popped stash?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16463359",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash -Xtheirs stash\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Squash unpushed commits automatically")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23545903",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b tempbranch origin/master\ngit merge --squash master\ngit checkout master\ngit reset --hard tempbranch\ngit branch -D tempbranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Merge a branch whose history contains secret information")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43001091",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: Git: hide commit messages on remote repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3008426",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\n                  (topic)\n                    |\n     x--x--t--t--t--t--d (devel)\n     \\\n      p--p--T (devel_pub, with T being "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git merge --squash topic"')]),t._v(")\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Push master without feature branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34723430",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash feature-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: git branch cleanup with squash for a pull request")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28075414",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --squash uglyCommitBranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: git, squashing commits on the fly")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13669302",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" git remote add newrepo url://of/your/new/repo\n git checkout -b newbranch master\n git merge --squash master \n git push -u newrepo newbranch:master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[t._v("#")]),t._v(" 🔹 -s")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to replace master branch in Git, entirely, from another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3208    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2862938",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout seotweaks\ngit merge -s ours master\ngit checkout master\ngit merge seotweaks\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to un-submodule a Git submodule?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 588    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1789374",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm --cached submodule_path # delete reference to submodule HEAD (no trailing slash)\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove submodule"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fetch the submodule commits into the main repository")]),t._v("\ngit remote add submodule_origin git://url/to/submodule/origin\ngit fetch submodule_origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start a fake merge (won't change any files, won't commit anything)")]),t._v("\ngit merge -s ours --no-commit submodule_origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do the same as in the first solution")]),t._v("\ngit rm --cached submodule_path # delete reference to submodule HEAD\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit and cleanup")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed submodule"')]),t._v("\ngit remote rm submodule_origin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Resolve conflicts using remote changes when pulling from Git remote")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 537    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4787356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you truly want to discard the commits you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ve made locally, i.e. never have them in the history again, you'")]),t._v("re not asking how to pull - pull means merge, and you don't need to merge. All you need do is this:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch from the default remote, origin")]),t._v("\ngit fetch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset your current branch (master) to origin's master")]),t._v("\ngit reset --hard origin/master\n\n▲ If on the other hand, you want to keep those commits and make it look as though you merged with origin, and cause the merge to keep the versions from origin only, you can use the ours merge strategy:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch from the default remote, origin")]),t._v("\ngit fetch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create a branch at your current master")]),t._v("\ngit branch old-master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset to origin's master")]),t._v("\ngit reset --hard origin/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# merge your old master, keeping "our" (origin/master\'s) content')]),t._v("\ngit merge -s ours old-master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Merge two Git repositories without breaking file history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 298    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14470212",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Assume the current directory is where we want the new repository to be created")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create the new repository")]),t._v("\ngit init\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Before we do a merge, we have to have an initial commit, so we'll make a dummy commit")]),t._v("\ngit commit --allow-empty -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial dummy commit"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add a remote for and fetch the old repo")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (the '--fetch' (or '-f') option will make git immediately fetch commits to the local repo after adding the remote)")]),t._v("\ngit remote add --fetch old_a <OldA repo URL>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge the files from old_a/master into new/master")]),t._v("\ngit merge old_a/master --allow-unrelated-histories\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Move the old_a repo files and folders into a subdirectory so they don't collide with the other repo coming later")]),t._v("\nmkdir old_a\ndir -exclude old_a | %{git mv $_.Name old_a}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit the move")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Move old_a files into subdir"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do the same thing for old_b")]),t._v("\ngit remote add -f old_b <OldB repo URL>\ngit merge old_b/master --allow-unrelated-histories\nmkdir old_b\ndir –exclude old_a,old_b | %{git mv $_.Name old_b}\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Move old_b files into subdir"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Bring over a feature branch from one of the old repos")]),t._v("\ngit checkout -b feature-in-progress\ngit merge -s recursive -Xsubtree=old_a old_a/feature-in-progress\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How do I merge a sub directory in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 86    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5190916",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\ngit remote add -f infochimps git://github.com/infochimps/cluster_chef.git\n\n\ngit merge --allow-unrelated-histories -s ours --no-commit infochimps/master\n\n\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merging in infochimps cassandra'")]),t._v("\n\ngit rm -r cassandra\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Making two branches identical")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 76    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36321787",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Definition of branch (see also What exactly do we mean by branch?)\no <- * <- o <- o <- o <- o   <-- A\n      \\\n       o <- o <- o           <-- B\n\no <- * <- o <- o <- o <- o   <-- A\n      \\\n       o <- o <- o <- o      <-- B\n\ngit checkout A; git merge B\n\no--*--o--o--o--o      <-- A\n    \\\n     o---o--o---o     <-- B\n\no--*--o--o--o--o--o   <-- A\n    \\            /\n     o---o--o---*     <-- B\n\n...---o--...--o--o    <-- A\n     /       /\n...-o--...--*--o--o   <-- B\n\n▲ What git does by default with git merge <thing>\n▲ Alternative merge strategies\ngit checkout A\ngit merge --no-commit -s ours B\ngit rm -rf .         # make sure you are at the top level!\ngit checkout B -- .\ngit commit\n\n...---o--...--o--o    <-- A\n     /       /\n...-o--...--*--o--o   <-- B\n\n...---o--...--o--o--o   <-- A\n     /       /     /\n...-o--...--o--o--*     <-- B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Git: Merge to master while automatically choosing to overwrite master files with branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 68    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1295232",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge master --strategy=ours\n\ngit merge -s recursive -X theirs branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: Resolve merge conflicts on pull using my changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 66    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13235977",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X ours branch_to_merge\n\ngit pull -s recursive -X ours\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: merging git repositories at different directory levels")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 33    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8929615",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch /home/whoever/dev/B master\n\ngit merge -s ours --no-commit FETCH_HEAD\n\ngit read-tree --prefix=src/B/ -u FETCH_HEAD\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge in the history of master from B into src/B"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Always use version from merged branch on conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6160701",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: Merging two very divergent branches using git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5959510",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("...---o---A---o---...---o---o---B   master\n           \\\n            o---o---...---o---C     verydifferentbranch\n\n▲ Use a Merge\n...---o---A---o---...---o---o---B\n           \\                     \\\n            o---o---...---o---C---M  master\n\ngit tag -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'describe reason for abandonment here...'")]),t._v(" \\\n    abandoned/foo-features master                   # tag abandoned branch tip\ngit checkout verydifferentbranch                    # checkout dominant branch\ngit branch -M verydifferentbranch master            # replace master\ngit merge -s ours abandoned/foo-features            # merge only other's history\ngit tag -d abandoned/foo-features                   # optional: delete the tag\ngit push wherever master tag abandoned/foo-features # publish them\n\n▲ Leave It Hanging\n...---o---A---o---...---o---o---B   (tag: abandoned/foo-features)\n           \\\n            o---o---...---o---C      master\n\ngit tag -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'describe reason for abandonment here...'")]),t._v(" \\\n    abandoned/foo-features master                    # tag abandoned branch tip\ngit branch -M verydifferentbranch master             # replace master\ngit push wherever +master tag abandoned/foo-features # publish them\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: git: can I subtree merge just a subpath of a repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12048161",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add Bar /path/to/bar")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit Bar/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=public/bar"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" Bar/master:www/tools/")]),t._v("\n\n$ get fetch Bar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" subtree=public/bar Bar master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Make remote branch take precedence during a merge conflict")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23429236",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -Xtheirs current\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: How to automatically resolve merge conflicts by selecting the remote version in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34753979",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs source_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Git: merge branch and accept HEAD for all conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10135221",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours <branch name>")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: How to merge files from one branch's directory into another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29695610",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ In your case, if master is the current branch the following command will merge the contents of the dist/ directory from the dev branch into the root directory (you will have the opportunity to resolve conflicts should there be any):\ngit merge --no-ff -s recursive -X subtree=dist dev\n\n▲ If, instead, you wish to merge changes into the dist/ directory, checkout the dev branch then run:\ngit merge --no-ff -s recursive -X subtree=dist master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: git merge branch overwriting destination")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17694039",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout dev\ngit checkout -b tmp\ngit merge -s ours master         # ignoring all changes from master\ngit checkout master\ngit merge tmp                    # fast-forward master to tmp HEAD\ngit branch -D tmp      \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Can I merge only non-conflicting changes in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12572664",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X ours remote/branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How do I back out a series of changes without screwing up history in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7248217",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch temp\ngit reset --hard rev2\ngit reset --soft temp\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),t._v("\ngit branch -d temp\n\ngit reset --hard rev2\ngit reset --soft HEAD@{1}\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),t._v("\n\ngit merge --no-ff -s ours rev2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How to configure a merge strategy?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47462046",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you run:\ngit merge --strategy mystrategy develop\n\n▲ your script will be invoked with four (!) arguments.  If you run:\ngit merge -s mystrategy -Xa -Xkcd=12 --find-renames=35 develop\n\n$ cat ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I got $# arguments..."')]),t._v("\nfor i do\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s\\n"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$i"')]),t._v("\ndone\nread junk\n$ chmod +x ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" silly"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xa")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xkcd")]),t._v("=12"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" find-renames=35 b1")]),t._v("\nI got 7 arguments...\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--kcd=12")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--find-renames=35")]),t._v("\n4f95ecf496de9dfe175e7ed4dd97972adf0ca625\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--")]),t._v("\nHEAD\n439e327bc8f8e78d74b27ae89f433451eec09111\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Git: Synchronize branch containing previously cherry-picked commits with master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15371160",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: Git subtree tags")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2124186",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours --no-commit v0.1.2 # instead of: Bproject/master (2)\ngit read-tree --prefix=dir-B/ -u v0.1.2 # instead of: Bproject/master (3)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: Binding my local repository with an existing remote repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52745729",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git push ssh://<remote-host>/<remote-path> HEAD\n\ngit fetch ssh://<remote-host>/<remote-path>\ngit merge -s ours FETCH_HEAD\ngit push ssh://<remote-host>/<remote-path> HEAD\n\ngit fetch ssh://<remote-host>/<remote-path>\ngit rebase --onto FETCH_HEAD <branch-point>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Git: how to amend an old merge (in a series of merges)?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39220910",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick --no-commit -m 1 vG\ngit stash\n\ngit merge -s ours -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gp"')]),t._v(" branch1\ngit stash pop\ngit commit --amend --no-edit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v('25. Usage scenario: Git "force push" from new local repo to remote, but keeping remote commit history')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19945528",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours origin/remote_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: How do I retrieve lost changes in a git repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18084540",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours <somebranch>\n\ngit checkout master\ngit reset --hard\ngit reset --hard <OKAY_POINT>\n\ngit push --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: git merging two branches interchangeably")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28475047",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s theirs development #first version\n\ngit merge -s ours master #second version\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: git merge: remote repo exists in a subdirectory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3632126",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -Xsubtree=dir2 upstream/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: Push modifications from a downloaded git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55266329",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours <branch>\n\ngit merge -Xours <branch>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: Update a git subtree branch with new commits from the original branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32008865",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s subtree branch_to_merge\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: Overwrite git branch while keeping history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25776199",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours master\n\ngit merge -X theirs v2Setup\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: Overwrite local changes from remote repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25711976",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master  # make sure you're on your master branch in MySite")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch Framework")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" recursive"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" theirs Framework/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: Merge strategy for whitespace only changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9261357",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -Xignore-space-change\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("34. Usage scenario: Omit files and changes from merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8467789",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("35. Usage scenario: Reverting/deleting remote commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13288500",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s ours origin/master\n\ngit push origin master -f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("36. Usage scenario: "),e("code",[t._v("git checkout branch -- .")]),t._v(", without overwriting existing files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66377496",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --allow-unrelated-histories -s recursive -Xours --no-commit master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"strategy"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strategy"}},[t._v("#")]),t._v(" 🔹 --strategy")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Make the current Git branch a master branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2371    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2763118",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout better_branch\ngit merge --strategy=ours master    # keep the content of this branch, but record a merge\ngit checkout master\ngit merge better_branch             # fast-forward master up to the merge\n\ngit merge --strategy=ours --no-commit master\ngit commit          # add information to the template merge message\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: git command for making one branch like another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 117    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gui.html"}},[t._v("git gui")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[t._v("git apply")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4912267",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mv -f $3 $2\nexit 0\n\n▲ git merge --strategy=theirs Simulation #1\ngit checkout -b tmp origin/upstream\ngit merge -s ours downstream         # ignoring all changes from downstream\ngit checkout downstream\ngit merge tmp                        # fast-forward to tmp HEAD\ngit branch -D tmp                    # deleting tmp\n\n▲ git merge --strategy=theirs Simulation #2\ngit checkout -b tmp upstream\ngit merge -s ours thebranch         # ignoring all changes from downstream\ngit checkout downstream\ngit merge --squash tmp               # apply changes from tmp but not as merge.\ngit rev-parse upstream > .git/MERGE_HEAD #record upstream 2nd merge head\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rebaselined thebranch from upstream"')]),t._v(" # make the commit.\ngit branch -D tmp                    # deleting tmp\n\n▲ git merge --strategy=theirs Simulation #3\ngit merge -s ours ref-to-be-merged\ngit diff --binary ref-to-be-merged | git apply -R --index\ngit commit -F .git/COMMIT_EDITMSG --amend\n\n▲ git merge --strategy=theirs Simulation #4\ngit branch -m upstream-unstable upstream-unstable-save\ngit branch upstream-unstable upstream-remote/master\ngit merge -s ours upstream-unstable\ngit diff --binary ref-to-be-merged | git apply -R --index --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"debian/*"')]),t._v("\ngit commit -F .git/COMMIT_EDITMSG --amend\n\n▲ git merge --strategy=theirs Simulation #5\ngit checkout MINE\ngit merge --no-commit -s ours HERS\ngit rm -rf .\ngit checkout HERS -- .\ngit checkout MINE -- debian # or whatever, as appropriate\ngit gui # edit commit message & click commit button\n\n▲ git merge --strategy=theirs Simulation #6\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the contents of another branch")]),t._v("\ngit read-tree -u --reset <ID>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# selectivly merge subdirectories")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# e.g superseed upstream source with that from another branch")]),t._v("\ngit merge -s ours --no-commit other_upstream\ngit read-tree --reset -u other_upstream     # or use --prefix=foo/\ngit checkout HEAD -- debian/\ngit checkout HEAD -- .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'superseed upstream source'")]),t._v(" -a\n\n▲ git merge --strategy=theirs Simulation #7\ngit read-tree -u --reset upstream                 # update files and stage changes\ngit rev-parse upstream > .git/MERGE_HEAD          # setup merge commit\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Merge branch 'upstream' into mine\"")]),t._v(" # commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How do I do a git merge that does nothing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23573630",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --strategy ours branch1 branch2 branch3\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Possible to force merge a feature branch in git/GitHub")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49291209",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout develop\ngit merge -X theirs feature/one\n\ngit merge --strategy-option=theirs feature/one\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to configure a merge strategy?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47462046",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you run:\ngit merge --strategy mystrategy develop\n\n▲ your script will be invoked with four (!) arguments.  If you run:\ngit merge -s mystrategy -Xa -Xkcd=12 --find-renames=35 develop\n\n$ cat ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I got $# arguments..."')]),t._v("\nfor i do\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s\\n"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$i"')]),t._v("\ndone\nread junk\n$ chmod +x ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" silly"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xa")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xkcd")]),t._v("=12"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" find-renames=35 b1")]),t._v("\nI got 7 arguments...\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--kcd=12")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--find-renames=35")]),t._v("\n4f95ecf496de9dfe175e7ed4dd97972adf0ca625\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--")]),t._v("\nHEAD\n439e327bc8f8e78d74b27ae89f433451eec09111\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: GitFlow: How to maintain previous releases?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69727920",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\ngit branch -D main # in case you have an old copy of it\ngit switch main # now you should be up to date with origin/main\ngit merge --strategy=ours hotfix/1.1.1 # bring in commits without their changes!\n\ngit fetch\ngit switch -c merge-hotfix-into-main origin/main --no-track # create a temp branch\ngit merge <last-commit-you-want-to-integrate> # take in commits and changes\ngit merge --strategy=ours hotfix/1.1.1 # bring in remaining commits without changes\ngit branch -D main # in case you have an old copy of it\ngit switch main #\ngit merge merge-hotfix-into-main --no-ff\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("h2",{attrs:{id:"x"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[t._v("#")]),t._v(" 🔹 -X")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I 'overwrite', rather than 'merge', a branch on another branch in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4624383",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can use the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ours'")]),t._v(" merge strategy (this links to octopus merge, you have to scroll down to next option; deeplinking to the correct section is not possible):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout staging")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours email # Merge branches, but use our (=staging) branch head")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout email")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge staging")]),t._v("\n\n▲ I thought a bit more about this question and possible solutions. If you absolutely require the merge parents in the correct order, need to perform this action with a single command line invocation, and don't mind running plumbing commands, you can do the following:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ff")]),t._v("-only $(git commit-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Throw away branch 'A'\"")]),t._v(" -p A -p B B^{tree})\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} HEAD^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'original'")]),t._v(" | tee file1 file2 file3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" > file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch A'")]),t._v(" file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout B")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" > file2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch B'")]),t._v(" file2\n\n▲ Now, let"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s try the strategy option (doesn'")]),t._v("t really matter if we use theirs or ours for this explanation):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" ours A")]),t._v("\n$ cat file*\nA\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours A")]),t._v("\n$ cat file*\noriginal\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} merge-strategy^{tree} strategy-option^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n5b09d34a37a183723b409d25268c8cb4d073206e\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Git: Merge to master while automatically choosing to overwrite master files with branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 68    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1295232",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge master --strategy=ours\n\ngit merge -s recursive -X theirs branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Resolve merge conflicts on pull using my changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 66    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13235977",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X ours branch_to_merge\n\ngit pull -s recursive -X ours\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Always use version from merged branch on conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6160701",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v('5. Usage scenario: Git merge: take everything from "theirs" branch')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14736615",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -X theirs private\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How to automatically resolve merge conflicts by selecting the remote version in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34753979",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs source_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How to merge files from one branch's directory into another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29695610",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ In your case, if master is the current branch the following command will merge the contents of the dist/ directory from the dev branch into the root directory (you will have the opportunity to resolve conflicts should there be any):\ngit merge --no-ff -s recursive -X subtree=dist dev\n\n▲ If, instead, you wish to merge changes into the dist/ directory, checkout the dev branch then run:\ngit merge --no-ff -s recursive -X subtree=dist master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: Merge dev into master and take all code from dev branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33260912",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit merge -X theirs dev\n\ngit checkout dev .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"undid useless changes to master"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Empty merge conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58674290",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -X ignore-space-change\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Can I merge only non-conflicting changes in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12572664",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X ours remote/branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to configure a merge strategy?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47462046",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you run:\ngit merge --strategy mystrategy develop\n\n▲ your script will be invoked with four (!) arguments.  If you run:\ngit merge -s mystrategy -Xa -Xkcd=12 --find-renames=35 develop\n\n$ cat ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"I got $# arguments..."')]),t._v("\nfor i do\n    printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%s\\n"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$i"')]),t._v("\ndone\nread junk\n$ chmod +x ~/scripts/git-merge-silly\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" silly"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xa")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xkcd")]),t._v("=12"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" find-renames=35 b1")]),t._v("\nI got 7 arguments...\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--kcd=12")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--find-renames=35")]),t._v("\n4f95ecf496de9dfe175e7ed4dd97972adf0ca625\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--")]),t._v("\nHEAD\n439e327bc8f8e78d74b27ae89f433451eec09111\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How can I 'git merge' a new file based on a tracked file of a different name?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12013203",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -X rename-threshold=100 <branch>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: Git: Synchronize branch containing previously cherry-picked commits with master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15371160",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -s recursive -X theirs origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Overwrite local changes from remote repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25711976",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master  # make sure you're on your master branch in MySite")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch Framework")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" recursive"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" theirs Framework/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("h2",{attrs:{id:"strategy-option"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strategy-option"}},[t._v("#")]),t._v(" 🔹 --strategy-option")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Possible to force merge a feature branch in git/GitHub")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49291209",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout develop\ngit merge -X theirs feature/one\n\ngit merge --strategy-option=theirs feature/one\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"q"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[t._v("#")]),t._v(" 🔹 -q")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How rebase result may differ from result of a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44554714",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\nfatal() {\n    echo fatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$@"')]),t._v(" 1>&2; exit 1\n}\n\n[ -e tt ] && fatal tt already exists\n\nmkdir tt && cd tt && git init -q || fatal failed to create tt repo\n\necho README > README && git add README && git commit -q -m A || fatal A\ngit branch branch || fatal unable to make branch\necho for master > bfile && git add bfile && git commit -q -m B || fatal B\n\ngit checkout -q -b br2 branch || fatal checkout -b br2 branch\necho file for C > cfile && git add cfile && git commit -q -m C || fatal C\ngit checkout -q branch || fatal checkout branch\necho file for D > dfile && git add dfile && git commit -q -m D || fatal D\ngit merge -q --no-commit br2 && git rm -q -f cfile && git commit -q -m E ||\n    fatal E\ngit branch -D br2\ngit checkout -q master || fatal checkout master\n\necho merging branch\ngit merge --no-edit branch || fatal merge failed\necho result is: *\n\necho removing merge, replacing with rebase of branch onto master\ngit reset -q --hard HEAD^ || fatal reset failed\ngit checkout -q branch || fatal switch back to master failed\ngit rebase master || fatal rebase failed\necho result is: *\n\necho removing rebase as well so you can poke around\ngit reset --hard ORIG_HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Check for files changed in several branches before merging (conflicts) into master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29258454",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master #make sure we are on master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#assuming checking all the branches but can use whatever list here")]),t._v("\nfor branch in `git branch | grep -v master`\ndo\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Conflicts for $branch"')]),t._v("\n    #do the merge and use the quiet option so nothing gets output until we want it\n    git merge -q --no-commit $branch\n    #list the conflicted files\n    git diff --name-only --diff-filter=U\n    #get rid of the changes\n    git reset --hard master\ndone\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("h2",{attrs:{id:"quiet"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#quiet"}},[t._v("#")]),t._v(" 🔹 --quiet")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: BitBucket -- Reviewing manual changes in a merge commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55767517",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pass the merge commit as the only argument to the script")]),t._v("\nCOMMIT="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a temporary directory where we'll use a copy of the repo")]),t._v("\nTMP_REPO="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(mktemp -d)"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Clone the original repo into the temporary directory, and setup the")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# original repo as an "alternate" using --shared')]),t._v("\ngit clone --quiet --shared . "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${TMP_REPO}"')]),t._v("\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${TMP_REPO}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Checkout the first parent of the merge commit (this is the "destination"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# commit of the merge)")]),t._v("\ngit checkout --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${COMMIT}^1"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Merge the second parent (the "source" of the merge) of the merge')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# commit into the first, creating "unmerged" state with conflicts')]),t._v("\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"GIT MERGE OUTPUT:\\n\\n"')]),t._v("\ngit merge --quiet --no-commit "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${COMMIT}^2"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stage everything in the working tree, including all unresolved conflicts")]),t._v("\ngit add .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit the changes")]),t._v("\ngit commit --quiet --message "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Commit all merge conflicts"')]),t._v("\n\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\n==================================================\\n\\n"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do a diff between the commit you just created and the original merge commit")]),t._v("\ngit diff --find-renames "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HEAD..${COMMIT}"')]),t._v("\n\nrm -rf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${TMP_REPO}"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br")])]),e("h2",{attrs:{id:"v"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[t._v("#")]),t._v(" 🔹 -v")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I determine why a Git merge deleted some lines of code?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10117266",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("GIT_MERGE_VERBOSITY=5 git merge -v master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"allow-unrelated-histories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#allow-unrelated-histories"}},[t._v("#")]),t._v(" 🔹 --allow-unrelated-histories")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I merge a sub directory in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 86    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5190916",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\ngit remote add -f infochimps git://github.com/infochimps/cluster_chef.git\n\n\ngit merge --allow-unrelated-histories -s ours --no-commit infochimps/master\n\n\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merging in infochimps cassandra'")]),t._v("\n\ngit rm -r cassandra\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Combine multiple orphan branches into one branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19208499",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout branch2\ngit rebase master\ngit checkout master\ngit merge branch2 # fast-forward master to branch2\n\ngit checkout branch3\ngit rebase master\ngit checkout master\ngit merge branch3 # fast-forward master to branch3\n\ngit merge --allow-unrelated-histories a b\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Merge commits of two repos sequentially")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57121192",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add old_repo <path or url to old_repo>\ngit fetch old_repo\n\n▲ Merge\ngit checkout master\ngit merge --allow-unrelated-histories old_repo/master\n\nO1 ...  O8 - O9 - O10\n                     \\\n                      M [master]\n                     /\nN1 ... N18 - N19 - N20 \n\n▲ Rebase\ngit checkout master\ngit rebase old_repo/master\n\nO1 ... O9 - O10 - N1 - N2 ... N20 [master]\n\ngit remote rm old_repo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: "),e("code",[t._v("git checkout branch -- .")]),t._v(", without overwriting existing files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66377496",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --allow-unrelated-histories -s recursive -Xours --no-commit master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"m"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[t._v("#")]),t._v(" 🔹 -m")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I 'overwrite', rather than 'merge', a branch on another branch in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4624383",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can use the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ours'")]),t._v(" merge strategy (this links to octopus merge, you have to scroll down to next option; deeplinking to the correct section is not possible):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout staging")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours email # Merge branches, but use our (=staging) branch head")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout email")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge staging")]),t._v("\n\n▲ I thought a bit more about this question and possible solutions. If you absolutely require the merge parents in the correct order, need to perform this action with a single command line invocation, and don't mind running plumbing commands, you can do the following:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ff")]),t._v("-only $(git commit-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Throw away branch 'A'\"")]),t._v(" -p A -p B B^{tree})\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} HEAD^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'original'")]),t._v(" | tee file1 file2 file3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial commit'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout A")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'A'")]),t._v(" > file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch A'")]),t._v(" file1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout B")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'B'")]),t._v(" > file2\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change on branch B'")]),t._v(" file2\n\n▲ Now, let"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s try the strategy option (doesn'")]),t._v("t really matter if we use theirs or ours for this explanation):\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" ours A")]),t._v("\n$ cat file*\nA\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours A")]),t._v("\n$ cat file*\noriginal\nB\noriginal\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rev-parse A^{tree} B^{tree} merge-strategy^{tree} strategy-option^{tree}")]),t._v("\n3859ea064e85b2291d189e798bfa1bff87f51f3e\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n0389f8f2a3e560b639d82597a7bc5489a4c96d44\n5b09d34a37a183723b409d25268c8cb4d073206e\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br")])]),e("p",[e("strong",[t._v('2. Usage scenario: Github Desktop: "Update from '),e("branch",[t._v('" button')])],1)]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 21    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34087005",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge <auto_text> <branch_name>"')]),t._v(" <branch_name>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How do I list all remote refs?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 19    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-remote.html"}},[t._v("git ls-remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42634501",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("commithash=...                         # the commit ID for the pull-request\nmergeinto=$(git rev-parse $branchname) # the branch we are to merge into\nprnum=...                              # get next pull request number\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create the pull request itself")]),t._v("\ngit update-ref refs/pull/$prnum/pull $commithash\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create the merge ref, if the merge succeeds")]),t._v("\ngit checkout $mergeinto\nif git merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v(" refs/pull/$prnum/pull; then\n    # merge succeeded: create the merge ref\n    git update-ref refs/pull/$prnum/merge HEAD\nelse\n    # automatic merge failed, discard it\n    git merge --abort\nfi\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git ls-remote")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Undo a git merge several commits ago")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8494967",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" 1 c5")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Git: how to amend an old merge (in a series of merges)?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39220910",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick --no-commit -m 1 vG\ngit stash\n\ngit merge -s ours -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Gp"')]),t._v(" branch1\ngit stash pop\ngit commit --amend --no-edit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Avoid to trigger Azure Pipeline when using 'git push' from another pipeline")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62018911",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[skip ci] Merge from build agent"')]),t._v(" branch\nUpdating ed7d8f5..11d4c44\nFast-forward (no commit created; -m option ignored)\n README.md | 4 ++--\n 1 file changed, 2 insertions(+), 2 deletions(-)\n\ngit merge --no-ff -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"[skip ci] Merge from build agent"')]),t._v(" branch\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n README.md | 2 +-\n 1 file changed, 1 insertion(+), 1 deletion(-)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[t._v("#")]),t._v(" 🔹 -F")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Recovering lost changes after reverting bad merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52962156",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Introduction-y bits\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-------------o----M2---M3--------R2   <---- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <------------------- branch-F\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <branch-name>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge [options] <other-branch>")]),t._v("\n... fix up conflicts if necessary, and git commit (or git merge --continue)\n\ngit checkout <branch>\ngit revert -m 1 <hash ID of some M commit>\n\n▲ Making commits moves a branch name\nA--B--C   <-- master (HEAD)\n\nA--B--C   <-- master (HEAD)\n       \\\n        D\n\nA--B--C--D   <-- master (HEAD)\n\n▲ About merges\n          o--...--L   <-- mainline (HEAD)\n         /\n...--o--*\n         \\\n          o--...--R   <-- feature\n\ngit diff --find-renames <hash-of-*> <hash-of-L>   # what we changed\ngit diff --find-renames <hash-of-*> <hash-of-R>   # what they changed\n\n          o--...--L\n         /         \\\n...--o--*           M   <-- mainline (HEAD)\n         \\         /\n          o--...--R   <-- feature\n\n▲ When things go wrong\n▲ More-complex merge bases\n ...--sc4----M4---R1\n         \\  /\n...--M2---M3--------R2\n\n▲ Introducing the problem: what went wrong (so you can avoid it in the future)\nT0-------------o   <-- branch-T1\n \\\n F0--fc1---fc2   <--- branch-F (HEAD)\n\nT0-------------o   <-- branch-T1\n \\              \\\n F0--fc1---fc2---M1   <--- branch-F (HEAD)\n\nT0-------------o----M2   <-- branch-T1 (HEAD)\n \\              \\  /\n F0--fc1---fc2---M1   <--- branch-F\n\ngit checkout branch-T1\ngit merge branch-S\n\nS0--sc1---sc2---sc3-----sc4   <-- branch-S\n  \\\n   T0-------------o----M2   <-- branch-T1 (HEAD)\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit checkout branch-S\ngit merge --no-ff branch-T1\n\nS0--sc1---sc2---sc3-----sc4----M4   <-- branch-S\n  \\                        \\  /\n   T0-------------o----M2---M3   <-- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit diff <hash-of-sc4> <hash-of-R1>\n\n▲ Undoing a merge undoes the contents, but not the history\nT0   <-- revised-F (HEAD)\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F, revised-F (HEAD)\n\ngit checkout -b revised-F <hash of T0>   # for merge --squash method\n\ngit checkout -b revised-f branch-F^1      # for rebase -f method\n\ngit merge --squash branch-F\n\n   fc1--fc2--M1   <-- branch-F\n  /\nF0-------------F3   <-- revised-F (HEAD)\n\ngit rebase -f <hash-of-T0>\n\n  F0"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-fc1'")]),t._v("-fc2'   <-- revised-F (HEAD)\n /\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\n▲ Based on comments, here are two paths for doing the re-merge\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\ngit checkout branch-T1\ngit merge revised-F\n\ngit merge-base --all branch-T1 revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2-----M6   <---- branch-T1\n    \\      \\       \\  /                     /\n    F0--fc1-o-fc2---M1   <-- branch-F      /\n      \\                                   /\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5----M6   <-- branch-S\n  \\                        \\  /         /           /\n   T0-----o-------o----M2---M3--------R2   <------ / -- branch-T1\n    \\      \\       \\  /                           /\n    F0--fc1-o-fc2---M1   <-- branch-F            /\n      \\                                         /\n       ---------------------------------------F3   <-- revised-F\n\ngit merge-base --all branch-S revised-F\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br"),e("span",{staticClass:"line-number"},[t._v("104")]),e("br"),e("span",{staticClass:"line-number"},[t._v("105")]),e("br"),e("span",{staticClass:"line-number"},[t._v("106")]),e("br"),e("span",{staticClass:"line-number"},[t._v("107")]),e("br"),e("span",{staticClass:"line-number"},[t._v("108")]),e("br"),e("span",{staticClass:"line-number"},[t._v("109")]),e("br"),e("span",{staticClass:"line-number"},[t._v("110")]),e("br"),e("span",{staticClass:"line-number"},[t._v("111")]),e("br"),e("span",{staticClass:"line-number"},[t._v("112")]),e("br"),e("span",{staticClass:"line-number"},[t._v("113")]),e("br"),e("span",{staticClass:"line-number"},[t._v("114")]),e("br"),e("span",{staticClass:"line-number"},[t._v("115")]),e("br"),e("span",{staticClass:"line-number"},[t._v("116")]),e("br"),e("span",{staticClass:"line-number"},[t._v("117")]),e("br"),e("span",{staticClass:"line-number"},[t._v("118")]),e("br"),e("span",{staticClass:"line-number"},[t._v("119")]),e("br"),e("span",{staticClass:"line-number"},[t._v("120")]),e("br"),e("span",{staticClass:"line-number"},[t._v("121")]),e("br"),e("span",{staticClass:"line-number"},[t._v("122")]),e("br"),e("span",{staticClass:"line-number"},[t._v("123")]),e("br"),e("span",{staticClass:"line-number"},[t._v("124")]),e("br"),e("span",{staticClass:"line-number"},[t._v("125")]),e("br"),e("span",{staticClass:"line-number"},[t._v("126")]),e("br"),e("span",{staticClass:"line-number"},[t._v("127")]),e("br"),e("span",{staticClass:"line-number"},[t._v("128")]),e("br"),e("span",{staticClass:"line-number"},[t._v("129")]),e("br"),e("span",{staticClass:"line-number"},[t._v("130")]),e("br"),e("span",{staticClass:"line-number"},[t._v("131")]),e("br"),e("span",{staticClass:"line-number"},[t._v("132")]),e("br"),e("span",{staticClass:"line-number"},[t._v("133")]),e("br"),e("span",{staticClass:"line-number"},[t._v("134")]),e("br"),e("span",{staticClass:"line-number"},[t._v("135")]),e("br"),e("span",{staticClass:"line-number"},[t._v("136")]),e("br"),e("span",{staticClass:"line-number"},[t._v("137")]),e("br"),e("span",{staticClass:"line-number"},[t._v("138")]),e("br"),e("span",{staticClass:"line-number"},[t._v("139")]),e("br"),e("span",{staticClass:"line-number"},[t._v("140")]),e("br"),e("span",{staticClass:"line-number"},[t._v("141")]),e("br"),e("span",{staticClass:"line-number"},[t._v("142")]),e("br"),e("span",{staticClass:"line-number"},[t._v("143")]),e("br"),e("span",{staticClass:"line-number"},[t._v("144")]),e("br"),e("span",{staticClass:"line-number"},[t._v("145")]),e("br"),e("span",{staticClass:"line-number"},[t._v("146")]),e("br"),e("span",{staticClass:"line-number"},[t._v("147")]),e("br"),e("span",{staticClass:"line-number"},[t._v("148")]),e("br"),e("span",{staticClass:"line-number"},[t._v("149")]),e("br"),e("span",{staticClass:"line-number"},[t._v("150")]),e("br")])]),e("h2",{attrs:{id:"abort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#abort"}},[t._v("#")]),t._v(" 🔹 --abort")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to undo a git merge with conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1535    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5741436",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Latest Git:\ngit merge --abort\n\n▲ Prior to version 1.7.4:\ngit reset --merge\n\n▲ Prior to version 1.6.2:\ngit reset --hard\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Abort a Git Merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 458    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44049103",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How can I preview a merge in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 321    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30516827",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Strategy 1: The safe way – merge off a temporary branch:\ngit checkout mybranch\ngit checkout -b mynew-temporary-branch\ngit merge some-other-branch\n\n▲ Strategy 2: When you definitely want to merge, but only if there aren't conflicts\ngit checkout mybranch\ngit merge some-other-branch\n\ngit merge --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to restrict merging specific branch into other branches in Gitlab?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53284942",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ How to prevent merging from a branch to another, setting up a server Git Hook\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/python")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("##")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Author: Bertrand Benoit <mailto:contact@bertrand-benoit.net>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Description: Git Hook (server-side) allowing to prevent merge from some branches to anothers")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("## Version: 0.9")]),t._v("\n\nimport sys, subprocess, re\n\nFORBIDDEN_SOURCE_BRANCH="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'testing'")]),t._v("\nFORBIDDEN_IF_NOT_DEST_BRANCH="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Considers only merge commit.")]),t._v("\nif not (len(sys.argv) >=2 and sys.argv[2] == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merge'")]),t._v("):\n    sys.exit(0)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Defines which is the source branch.")]),t._v("\nwith open(sys.argv[1], "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'r'")]),t._v(") as f:\n    mergeMessage=f.readline()\nmergeBranchExtract=re.compile("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Merge branch '([^']*)'.*$\"")]),t._v(").search(mergeMessage)\nif not mergeBranchExtract:\n    print("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Unable to extract branch to merge from message: '")]),t._v(", mergeMessage)\n    sys.exit(0) # Ensures normal merge as failback\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checks if the merge (source) branch is one of those to check.")]),t._v("\nmergeBranch=mergeBranchExtract.group(1)\nif mergeBranch != FORBIDDEN_SOURCE_BRANCH:\n  sys.exit(0) # It is NOT the forbidden source branch, so keeps on normal merge\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Defines which is the current branch.")]),t._v("\ncurrentBranchFullName=subprocess.check_output(["),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'symbolic-ref'")]),t._v(", "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'HEAD'")]),t._v("])\ncurrentBranchExtract=re.compile("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"^.*/([^/]*)\\n$"')]),t._v(").search(currentBranchFullName)\nif not currentBranchExtract:\n  print("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Unable to extract current branch from: '")]),t._v(", currentBranchFullName)\n  sys.exit(1) # Ensures normal merge as failback\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checks if the current (destination) branch is one of those to check.")]),t._v("\ncurrentBranch=currentBranchExtract.group(1)\nif currentBranch != FORBIDDEN_IF_NOT_DEST_BRANCH:\n  print("),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"FORBIDDEN: Merging from \'"')]),t._v(" + mergeBranch + "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"' to '\"")]),t._v(" + currentBranch + "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\' is NOT allowed. Contact your administrator. Now, you should use git merge --abort and keep on your work."')]),t._v(")\n  sys.exit(1) # This is exactly the situation which is forbidden\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# All is OK, so keeps on normal merge")]),t._v("\nsys.exit(0)\n\n▲ For information, you can also setup protected branches to keep them safe from some users\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: git -- how to recover from unfinished merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40668007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How to use git merge to ignore trailing whitespace?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60421395",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ >file echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch feature # create a branch, but do not switch to it")]),t._v("\n$ >file echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a '")]),t._v(" # add one blank\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add file ; git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add one blank on master'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature")]),t._v("\n$ >file echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a  '")]),t._v(" # add two blank\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add file ; git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add two blanks branch'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master ; git merge feature # you will get conflicts")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")]),t._v(" # let's try that again:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -Xignore")]),t._v("-space-at-eol feature # no conflicts, hooray!")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How to resolve a git conflict by keeping all additions from both sides?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-file.html"}},[t._v("git merge-file")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46182410",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'animal.hpp\\tmerge=union\\n'")]),t._v(" > .gitattributes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit mybranch")]),t._v("\nAuto-merging animal.hpp\nAutomatic merge went well; stopped before committing as requested\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --abort")])]),t._v("\n$ rm .gitattributes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge mybranch")]),t._v("\nAuto-merging animal.hpp\nCONFLICT (content): Merge conflict in animal.hpp\nAutomatic merge failed; fix conflicts and then commit the result.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :1:animal.hpp > animal.hpp.base")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :2:animal.hpp > animal.hpp.ours")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show :3:animal.hpp > animal.hpp.theirs")]),t._v("\n$ mv animal.hpp.ours animal.hpp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge-file"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --union")]),t._v(" animal.hpp animal.hpp.base animal.hpp.theirs")]),t._v("\n\n$ rm animal.hpp.base animal.hpp.theirs\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add animal.hpp ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How to ignore merge conflicts for identical changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34618356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --abort\ngit merge -Xignore-space-change whitespace\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Is this a merge between a branch and master?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54870031",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --abort\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"continue"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#continue"}},[t._v("#")]),t._v(" 🔹 --continue")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Recovering lost changes after reverting bad merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52962156",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Introduction-y bits\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-------------o----M2---M3--------R2   <---- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <------------------- branch-F\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <branch-name>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge [options] <other-branch>")]),t._v("\n... fix up conflicts if necessary, and git commit (or git merge --continue)\n\ngit checkout <branch>\ngit revert -m 1 <hash ID of some M commit>\n\n▲ Making commits moves a branch name\nA--B--C   <-- master (HEAD)\n\nA--B--C   <-- master (HEAD)\n       \\\n        D\n\nA--B--C--D   <-- master (HEAD)\n\n▲ About merges\n          o--...--L   <-- mainline (HEAD)\n         /\n...--o--*\n         \\\n          o--...--R   <-- feature\n\ngit diff --find-renames <hash-of-*> <hash-of-L>   # what we changed\ngit diff --find-renames <hash-of-*> <hash-of-R>   # what they changed\n\n          o--...--L\n         /         \\\n...--o--*           M   <-- mainline (HEAD)\n         \\         /\n          o--...--R   <-- feature\n\n▲ When things go wrong\n▲ More-complex merge bases\n ...--sc4----M4---R1\n         \\  /\n...--M2---M3--------R2\n\n▲ Introducing the problem: what went wrong (so you can avoid it in the future)\nT0-------------o   <-- branch-T1\n \\\n F0--fc1---fc2   <--- branch-F (HEAD)\n\nT0-------------o   <-- branch-T1\n \\              \\\n F0--fc1---fc2---M1   <--- branch-F (HEAD)\n\nT0-------------o----M2   <-- branch-T1 (HEAD)\n \\              \\  /\n F0--fc1---fc2---M1   <--- branch-F\n\ngit checkout branch-T1\ngit merge branch-S\n\nS0--sc1---sc2---sc3-----sc4   <-- branch-S\n  \\\n   T0-------------o----M2   <-- branch-T1 (HEAD)\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit checkout branch-S\ngit merge --no-ff branch-T1\n\nS0--sc1---sc2---sc3-----sc4----M4   <-- branch-S\n  \\                        \\  /\n   T0-------------o----M2---M3   <-- branch-T1\n    \\              \\  /\n    F0--fc1---fc2---M1   <-- branch-F\n\ngit diff <hash-of-sc4> <hash-of-R1>\n\n▲ Undoing a merge undoes the contents, but not the history\nT0   <-- revised-F (HEAD)\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F, revised-F (HEAD)\n\ngit checkout -b revised-F <hash of T0>   # for merge --squash method\n\ngit checkout -b revised-f branch-F^1      # for rebase -f method\n\ngit merge --squash branch-F\n\n   fc1--fc2--M1   <-- branch-F\n  /\nF0-------------F3   <-- revised-F (HEAD)\n\ngit rebase -f <hash-of-T0>\n\n  F0"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-fc1'")]),t._v("-fc2'   <-- revised-F (HEAD)\n /\nT0-----....\n \\\n  F0--fc1--fc2--M1   <-- branch-F\n\n▲ Based on comments, here are two paths for doing the re-merge\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\ngit checkout branch-T1\ngit merge revised-F\n\ngit merge-base --all branch-T1 revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2-----M6   <---- branch-T1\n    \\      \\       \\  /                     /\n    F0--fc1-o-fc2---M1   <-- branch-F      /\n      \\                                   /\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5   <-- branch-S\n  \\                        \\  /         /\n   T0-----o-------o----M2---M3--------R2   <---- branch-T1\n    \\      \\       \\  /\n    F0--fc1-o-fc2---M1   <--------------- branch-F\n      \\\n       ---------------------------------F3   <-- revised-F\n\nS0--sc1---sc2---sc3-----sc4----M4---R1---M5---sc5----M6   <-- branch-S\n  \\                        \\  /         /           /\n   T0-----o-------o----M2---M3--------R2   <------ / -- branch-T1\n    \\      \\       \\  /                           /\n    F0--fc1-o-fc2---M1   <-- branch-F            /\n      \\                                         /\n       ---------------------------------------F3   <-- revised-F\n\ngit merge-base --all branch-S revised-F\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br"),e("span",{staticClass:"line-number"},[t._v("103")]),e("br"),e("span",{staticClass:"line-number"},[t._v("104")]),e("br"),e("span",{staticClass:"line-number"},[t._v("105")]),e("br"),e("span",{staticClass:"line-number"},[t._v("106")]),e("br"),e("span",{staticClass:"line-number"},[t._v("107")]),e("br"),e("span",{staticClass:"line-number"},[t._v("108")]),e("br"),e("span",{staticClass:"line-number"},[t._v("109")]),e("br"),e("span",{staticClass:"line-number"},[t._v("110")]),e("br"),e("span",{staticClass:"line-number"},[t._v("111")]),e("br"),e("span",{staticClass:"line-number"},[t._v("112")]),e("br"),e("span",{staticClass:"line-number"},[t._v("113")]),e("br"),e("span",{staticClass:"line-number"},[t._v("114")]),e("br"),e("span",{staticClass:"line-number"},[t._v("115")]),e("br"),e("span",{staticClass:"line-number"},[t._v("116")]),e("br"),e("span",{staticClass:"line-number"},[t._v("117")]),e("br"),e("span",{staticClass:"line-number"},[t._v("118")]),e("br"),e("span",{staticClass:"line-number"},[t._v("119")]),e("br"),e("span",{staticClass:"line-number"},[t._v("120")]),e("br"),e("span",{staticClass:"line-number"},[t._v("121")]),e("br"),e("span",{staticClass:"line-number"},[t._v("122")]),e("br"),e("span",{staticClass:"line-number"},[t._v("123")]),e("br"),e("span",{staticClass:"line-number"},[t._v("124")]),e("br"),e("span",{staticClass:"line-number"},[t._v("125")]),e("br"),e("span",{staticClass:"line-number"},[t._v("126")]),e("br"),e("span",{staticClass:"line-number"},[t._v("127")]),e("br"),e("span",{staticClass:"line-number"},[t._v("128")]),e("br"),e("span",{staticClass:"line-number"},[t._v("129")]),e("br"),e("span",{staticClass:"line-number"},[t._v("130")]),e("br"),e("span",{staticClass:"line-number"},[t._v("131")]),e("br"),e("span",{staticClass:"line-number"},[t._v("132")]),e("br"),e("span",{staticClass:"line-number"},[t._v("133")]),e("br"),e("span",{staticClass:"line-number"},[t._v("134")]),e("br"),e("span",{staticClass:"line-number"},[t._v("135")]),e("br"),e("span",{staticClass:"line-number"},[t._v("136")]),e("br"),e("span",{staticClass:"line-number"},[t._v("137")]),e("br"),e("span",{staticClass:"line-number"},[t._v("138")]),e("br"),e("span",{staticClass:"line-number"},[t._v("139")]),e("br"),e("span",{staticClass:"line-number"},[t._v("140")]),e("br"),e("span",{staticClass:"line-number"},[t._v("141")]),e("br"),e("span",{staticClass:"line-number"},[t._v("142")]),e("br"),e("span",{staticClass:"line-number"},[t._v("143")]),e("br"),e("span",{staticClass:"line-number"},[t._v("144")]),e("br"),e("span",{staticClass:"line-number"},[t._v("145")]),e("br"),e("span",{staticClass:"line-number"},[t._v("146")]),e("br"),e("span",{staticClass:"line-number"},[t._v("147")]),e("br"),e("span",{staticClass:"line-number"},[t._v("148")]),e("br"),e("span",{staticClass:"line-number"},[t._v("149")]),e("br"),e("span",{staticClass:"line-number"},[t._v("150")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to resolve merge conflicts in a Git repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3208    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/163659",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config merge.tool vimdiff\ngit config merge.conflictstyle diff3\ngit config mergetool.prompt false\n\ngit mergetool\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Update Git branches from master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 819    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3877000",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout b1\n\ngit merge origin/master\n\ngit push origin b1\n\ngit fetch\ngit rebase origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Merge up to a specific commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 709    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8223166",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge <commit-id>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to copy commits from one branch to another?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 686    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2474371",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# wss-starting-point is the SHA1/branch immediately before the first commit to rebase")]),t._v("\ngit branch wss-to-rebase wss\ngit rebase --onto v2.1 wss-starting-point wss-to-rebase\ngit checkout v2.1\ngit merge wss-to-rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to keep a branch synchronized/updated with master?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 527    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16330001",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit pull\ngit checkout mobiledevicesupport\ngit merge master\n\ngit checkout master\ngit merge mobiledevicesupport\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v('6. Usage scenario: How to "pull" from a local branch into another one?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 433    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5613911",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull . master\n\ngit merge master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: Git merge two local branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 388    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25053738",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout branchA\n\ngit merge branchB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How to check for changes on remote (origin) Git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 271    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2514299",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git diff origin/master\n\ngit merge origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Rebasing remote branches in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 213    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6204804",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can force the push after the rebase if it's just you:\ngit push origin feature -f\n\n▲ However, if others are working on it, you should merge and not rebase off of master.\ngit merge master\ngit push origin feature\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: git pull on a different branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 152    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45697574",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin master:master\n\ngit merge master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: git merge different repositories?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 146    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2949855",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in proj2:")]),t._v("\ngit remote add proj1 path/to/proj1\ngit fetch proj1\ngit merge proj1/master # or whichever branch you want to merge\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How do I tell git to always select my local version for conflicted merges on a specific file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 144    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/930495",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'path/to/file merge=ours'")]),t._v(" >> .gitattributes\ngit config --global merge.ours.driver true\n\ncd f:\\prog\\git\\test\nmkdir copyMerge\\dirWithConflicts\nmkdir copyMerge\\dirWithCopyMerge\ncd copyMerge\ngit init\nInitialized empty Git repository in F:/prog/git/test/copyMerge/.git/\n\necho a > dirWithConflicts\\a.txt\necho b > dirWithCopyMerge\\b.txt\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"first commit with 2 directories and 2 files"')]),t._v("\n[master (root-commit) 0adaf8e] first commit with 2 directories and 2 files\n\ngit checkout -b myBranch\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myBranch'")]),t._v("\necho myLineForA >> dirWithConflicts\\a.txt\necho myLineForB >> dirWithCopyMerge\\b.txt\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add modification in myBranch"')]),t._v("\n[myBranch 97eac61] add modification in myBranch\n\ngit checkout master\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\ngit checkout -b hisBranch\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hisBranch'")]),t._v("\necho hisLineForA >> dirWithConflicts\\a.txt\necho hisLineForB >> dirWithCopyMerge\\b.txt\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add modification in hisBranch"')]),t._v("\n[hisBranch 658c31c] add modification in hisBranch\n\ngit checkout myBranch\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myBranch'")]),t._v("\necho b.txt merge=keepMine > dirWithCopyMerge\\.gitattributes\ngit config merge.keepMine.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"always keep mine during merge"')]),t._v("\ngit config merge.keepMine.driver "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"keepMine.sh %O %A %B"')]),t._v("\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prepare myBranch with .gitattributes merge strategy"')]),t._v("\n[myBranch ec202aa] prepare myBranch with .gitattributes merge strategy\n\ngit merge hisBranch\nsh: keepMine.sh: command not found\nfatal: Failed to execute internal merge\ngit st\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch myBranch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changed but not updated:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to update what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git checkout -- <file>..." to discard changes in working directory)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#       modified:   dirWithConflicts/a.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\ntype dirWithConflicts\\a.txt\na\n<<<<<<< HEAD:dirWithConflicts/a.txt\nmyLineForA\n=======\nhisLineForA\n>>>>>>> hisBranch:dirWithConflicts/a.txt\n\ngit config merge.keepMine.driver true\n\ngit reset --hard\nHEAD is now at ec202aa prepare myBranch with .gitattributes merge strategy\n\ngit merge hisBranch\nAuto-merging dirWithConflicts/a.txt\nCONFLICT (content): Merge conflict in dirWithConflicts/a.txt\nAuto-merging dirWithCopyMerge/b.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resolve a.txt by accepting hisBranch version"')]),t._v("\n[myBranch 77bc81f] resolve a.txt by accepting hisBranch version\n\ngit show -v 77bc81f5e\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit 77bc81f5ed585f90fc1ca5e2e1ddef24a6913a1d")]),t._v("\nMerge: ec202aa 658c31c\ngit merge hisBranch\nAlready up-to-date.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: How to push from one branch to another and checkout?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 141    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8550664",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If the local branch is called "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"demo"')]),t._v(" and you want to push to branch called "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v(" on the remote called "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web"')]),t._v(", then do the following:\ngit push web demo:master\n\n▲ If you want to merge from the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v(" branch on the remote "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"web"')]),t._v(" into your current branch, you can do the following:\ngit fetch web\ngit merge web/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Git merge from someone else's fork")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 116    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5606062",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add other-guys-repo <url to other guys repo>\n\ngit fetch other-guys-repo\n\ngit checkout my_new_branch\n\ngit merge other-guys-repo/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Updating the current branch from parent branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 106    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6836520",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: How do I fix a merge conflict due to removal of a file in a branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 94    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41364780",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("yes d | git mergetool -- the/subdirectory\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Merge two remote branches in a Git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 77    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28163903",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you have remote-tracking branches set up locally, it's as simple as:\ngit checkout production\ngit merge development\ngit push origin production\n\n▲ If you have not yet set up remote-tracking branches, you could do something like:\ngit fetch origin\ngit checkout production     # or `git checkout -b production origin/production` if you haven't set up production branch locally\ngit merge origin/development\ngit push origin production\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Merge (no branch) into master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 70    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4675769",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge abc123\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: Git merge branch into master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 60    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14605307",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge branch_1\n\ngit rebase branch_1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How to PR and merge again after reverting PR using Github Revert Button")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55936184",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do the needed changes in the feature branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" \"fixed issues in feature-branch'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create new branch tracking master branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" revert-the-revert-branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -t")]),t._v(" master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# revert the reversion commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# find it from your git log")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in linux try: 'git log | grep revert -A 5 -B 5'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert <revert-commit-hash>")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout the original feature branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature-branch")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge the revert branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge revert-the-revert-branch")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# handle merge conflicts and commit and PR")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Easiest way to replay commits on new git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5341526",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add temp file:///path/to/old/repo/on/your/machine\n\ngit fetch temp\n\ngit checkout temp/master -b wip\n\ngit rebase master\n\ngit checkout master\ngit merge wip\n\ngit branch -d wip\ngit remote rm temp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: How do you merge two git branches that are in different local repos/folders?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 46    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3402873",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# switch to repo A")]),t._v("\ncd folder_a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add repo B as a remote repository")]),t._v("\ngit remote add folderb /path/to/folder_b\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pull B's master branch into a local branch named 'b'")]),t._v("\ngit pull folderb master:b\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge b into A's master branch")]),t._v("\ngit merge b\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Switch to repo B")]),t._v("\ncd ../folder_b\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add repo A as a remote repository")]),t._v("\ngit remote add foldera /path/to/folder_a\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Pull the resulting branch into repo B's master branch")]),t._v("\ngit pull foldera master:master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: How to cherry-pick from stash in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 41    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16862384",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"stash@{0}"')]),t._v(" -m 1\n\ngit stash branch stashchanges\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changes that were stashed"')]),t._v("\ngit checkout master\ngit merge stashchanges\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: How to merge a gist on GitHub?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 39    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10688260",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone git@gist.github.com:2322786.git")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add changes git://gist.github.com/2661995.git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch changes")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge changes/master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: How to recover commit from 'detached head state'?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 38    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9041189",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge 7c09e17\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: How to solve merge conflicts across forks?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38955036",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream https://repoA\ngit fetch upstream\n\ngit checkout master\ngit merge upstream/master\n\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: Git: move specific commits to another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 35    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14697850",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout staging\ngit merge master\ngit checkout master\ngit reset --hard c7-hash\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: Pulling changes from fork parent in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 32    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54314046",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream https://github.com/gilamran/tsc-watch.git\ngit fetch upstream\ngit merge upstream/master\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: Git merge and keep separate?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 27    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4609885",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If your history goes up to H or L on master and F on branchA (that is, J and K do not yet exist), then yes, simply check out branch A and merge:\ngit checkout branchA\ngit merge H   # Use H"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s commit identifier if it'")]),t._v("s not the tip of master\n\n▲ If you have already created commit K and you want to insert a merge between it and F, then there's a bit more work to do:\ngit checkout -b temp F   # Create a new branch at commit F\ngit merge H              # Merge from commit H into the new branch\ngit cherry-pick K        # Apply the K commit to the merged commit\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# And the rest simply replaces the temp branch with branchA")]),t._v("\ngit checkout branchA\ngit reset --hard temp\ngit branch -d temp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: Git: How to keep local feature branch updated with changes made in dev?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18518954",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("λ git checkout dev\nλ git pull origin dev\nλ git checkout myfeaturebranch\nλ git merge dev\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: How do I import a third party lib into git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1698115",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b vendor    # create a vendor branch and check it out\n\nfind . -not -path *.git* -and -not -path . -delete  # delete everything but git files\ndump the 3rd party code into the project directory  # I'll leave that to you\ngit add .                              # add all the files, changes and deletions\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vendor update version X.YY'")]),t._v("   # commit it\ngit tag "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vendor X.YY'")]),t._v("                  # optional, might come in handy later\n\ngit checkout master\ngit merge vendor\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: How to move master to HEAD?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26570472",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you have pushed master to another repository, you need to merge you changes from original_idea into master:\ngit checkout master\ngit merge original_idea\n\n▲ If you have not yet pushed master to another repository, you could delete master and recreate it from original_idea.  WARNING: Everyone who was working on master will have to reset their master branch.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" experiment_1")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'experiment_1'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Here we are going to delete master.  Should be safe, since experiment_1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# was created from this point on the previous command")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" master")]),t._v("\nDeleted branch master (was 72ea01d).\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout original_idea ")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'original_idea'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now that we checked out the branch HEAD is pointing to, we can recreate master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" master")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: Getting git to never push a single commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7235494",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (no local config changes should be in master at this point)")]),t._v("\ngit checkout -b config-changes master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Make your config-related changes that you don't want to share")]),t._v("\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Made local config changes"')]),t._v("\ngit checkout -b daily-work\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Work and commit like normal")]),t._v("\n\ngit rebase --onto master config-changes daily-work\ngit checkout master\ngit merge daily-work\n\ngit checkout master\ngit pull\ngit checkout config-changes\ngit merge master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("34. Usage scenario: How do I remove git's MERGE_MSG?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13572465",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("   --edit, --no-edit\n       Invoke an editor before committing successful mechanical merge to\n       further edit the auto-generated merge message, so that the user can\n       explain and justify the merge. The --no-edit option can be used to\n       accept the auto-generated message (this is generally discouraged).\n       The --edit option is still useful if you are giving a draft message\n       with the -m option from the command line and want to edit it in the\n       editor.\n\n       Older scripts may depend on the historical behaviour of not\n       allowing the user to edit the merge log message. They will see an\n       editor opened when they run git merge. To make it easier to adjust\n       such scripts to the updated behaviour, the environment variable\n       GIT_MERGE_AUTOEDIT can be set to no at the beginning of them.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("35. Usage scenario: Git does not apply deleted files when merging an old branch into the master. How can I tell Git to apply deleted files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37122968",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ create a new repository\nmkdir test\ncd test\ngit init\n\n▲ create and add some files to master branch\necho one > 1.txt\necho two > 2.txt\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"init repo"')]),t._v("\n\n▲ create new branch and add/delete some files\ngit checkout -b new\n\necho three > 3.txt\nrm 2.txt \ngit add .\ngit status\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changes in new"')]),t._v("\n\n▲ commit some more changes in master\ngit checkout master\n\necho update >> 1.txt \ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"update master"')]),t._v("\n\ntree\n\n▲ verify files still deleted in new\ngit checkout new\n\ntree\n\n▲ merge new into master\ngit checkout master\n\ngit merge new master\n\ntree\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br")])]),e("p",[e("strong",[t._v("36. Usage scenario: Git: How to convert an existing "),e("code",[t._v("merge")]),t._v(" to a "),e("code",[t._v("merge --squash")]),t._v("?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40589438",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout main && git merge feature")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --soft")]),t._v(" HEAD~2 && git commit")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("37. Usage scenario: How do I merge back into master without losing my work on github?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5501292",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit merge <your local branch>\n\ngit push origin master\n\ngit checkout <your local branch>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("38. Usage scenario: How to make --squash default on a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37828622",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config branch.master.mergeOptions ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--squash"')]),t._v("\n\n▲ Explanation\n▲ The commit graph\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout funkybranch")]),t._v("\n\n... work work work ...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do a thing'")]),t._v("\n\n... <- C <- D <- E   <-- funkybranch\n\ngit checkout newbranch\n\n... <- C <- D <- E   <-- funkybranch, newbranch\n\n... <- C <- D <- E   <-- funkybranch, HEAD -> newbranch\n\n...--C--D--E   <-- funkybranch, HEAD -> newbranch\n\n...--C--D--E      <-- funkybranch\n            \\\n             F    <-- HEAD -> newbranch\n\n...--C--D--E--G   <-- HEAD -> funkybranch\n            \\\n             F    <-- newbranch\n\n▲ Git merge\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge newbranch")]),t._v("\n\n...--C--D--E--G--H  <-- HEAD -> funkybranch\n            \\   /\n              F     <-- newbranch\n\n▲ Merge changes the graph from a tree to a DAG\n▲ Benefits of merges\n  o--o--o--o--H--o--o--I        <-- feature2\n /             \\        \\\nA--o--B---C-----D--E-----F--G   <-- master\n \\       /        /        /\n  o--o--J--o--o--K--o--o--L     <-- feature1\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master; git merge feature1")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master; git merge feature2")]),t._v("\n\n  o--o--o--o--H--o--o           <-- feature2\n /             \\\nA--o--B---C-----D               <-- master\n \\       /\n  o--o--J--o--o--K              <-- feature1\n\n  o--o--o--o--H--o--o--I        <-- feature2\n /             \\\nA--o--B---C-----D--E            <-- master\n \\       /        /\n  o--o--J--o--o--K--o--o        <-- feature1\n\n▲ Drawbacks of merges\n▲ Squash merges\n  o--o--o                       <-- feature2\n /\nA--o--B                         <-- master\n \\ \n  o--o--J                       <-- feature1\n\n  o--o--o                       <-- feature2\n /\nA--o--B---C                     <-- master\n \\\n  o--o--J                       <-- feature1\n\n  o--o--o--o--H                 <-- feature2\n /\nA--o--B---C                     <-- master\n \\\n  o--o--J--o--o                 <-- feature1\n\n  o--o--o--o--H--o--o           <-- feature2\n /\nA--o--B---C-----D               <-- master\n \\\n  o--o--J--o--o--K              <-- feature1\n\n▲ Squash merges can work\n  o--o--o--o--H--*-o--o        <-- feature2\n /              /\nA--o--B---C----D               <-- master\n \\         \\\n  o--o--J---*--o--o--K         <-- feature1\n\n▲ So, if that all works, how about the mechanics?\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master && git merge foo")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout foo && git merge master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config branch.master.mergeOptions ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"--squash"')]),t._v("\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br")])]),e("p",[e("strong",[t._v("39. Usage scenario: Right way to merge master into dev branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39517516",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("40. Usage scenario: Git merge updated develop branch into local branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49972008",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin\ngit checkout branch_1\ngit merge origin/develop\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("41. Usage scenario: How to deal with xxx~HEAD after git merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48208268",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("% git checkout -bbranch\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'branch'")]),t._v("\n\n% git mv file.txt newname.txt\n\n% git commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rename file -> newname"')]),t._v("\n[branch d37e379] rename file -> newname\n 1 file changed, 0 insertions(+), 0 deletions(-)\n rename file.txt => newname.txt (100%)\n\n% git checkout master\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n\n% echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new file"')]),t._v(" > newname.txt\n\n% git add newname.txt\n\n% git commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"added newname in master"')]),t._v("\n[master f7bd593] added newname in master\n 1 file changed, 1 insertion(+)\n create mode 100644 newname.txt\n\n% git merge branch\nCONFLICT (rename/add): Rename file.txt->newname.txt in branch. newname.txt added in HEAD\nAdding as newname.txt~HEAD instead\nAutomatic merge failed; fix conflicts and then commit the result.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("42. Usage scenario: Git rewind master branch to specific commit in master's history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17112544",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit reset --hard f1c6f05\ngit push -f origin master\n\ngit checkout -b bug-fix-branch master\ngit cherry-pick 7661a06\n\ngit checkout master\ngit merge bug-fix-branch\ngit branch -d bug-fix-branch    # optional, maybe not desired\ngit push origin master\n\ngit checkout master\ngit revert f1c6f05..62fe9db\ngit push master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("43. Usage scenario: How can I make Gitlab runner merge code into a branch on a successful build")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42146357",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mergetomaster:\n  stage: deploy\n  image: alpine\n  only:\n   - dev\n  script:\n   - apk add --update git openssh-client\n   - mkdir ~/.ssh\n   - echo $GITLAB_DEPLOY_KEY > ~/.ssh/id_rsa\n   - chmod 400 ~/.ssh/id_rsa\n   - echo $GITLAB_PUBLIC_KEY > ~/.ssh/known_hosts\n   // Steal the identity of person that triggered the build\n   - git config --global user.email "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GITLAB_USER_EMAIL"')]),t._v("\n   - git config --global user.name "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GITLAB_USER_ID"')]),t._v("\n   - git remote set-url origin <ssh-repository-url>\n   - git checkout master\n   - git reset --hard origin/master\n   - git merge $CI_BUILD_REF\n   - git push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("44. Usage scenario: How can I re-merge commits that were reverted in github?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30341780",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit checkout -b master-with-revert-revered\ngit revert <revert commit id>\ngit checkout fixed-branch\ngit merge master-with-revert-revered\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("45. Usage scenario: Git: How can I merge changes made between two tags to another branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6075178",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge v1.9.12")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("46. Usage scenario: How can two branches be combined into a single branch based on the date of each commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5412356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b branchAB merge-base\ngit merge branchA\ngit merge branchB\ngit rebase --onto merge-base merge-base branchAB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("47. Usage scenario: No remote for the current branch - GIT")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48294117",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge anotherBranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("48. Usage scenario: How to resolve conflict in pull request?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53349179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean your local working directory with a stash or commit")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# update your local repo with the content of the remote branches")]),t._v("\ngit fetch --all --prune\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout the release_v1 branch")]),t._v("\ngit checkout release_v1 \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# update the content if required")]),t._v("\ngit pull origin release_v1 \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge the desired branch")]),t._v("\ngit merge origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the fixed conflicts and commit")]),t._v("\ngit add . && git commit \ngit push origin release_v1 \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("49. Usage scenario: Can't Push After git reset --soft HEAD^")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2016622",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote update\ngit checkout master\ngit merge origin/master\n\ngit revert HEAD (or where ever the commit you want to revert is now)\ngit commit -av\n\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("50. Usage scenario: Download only changed files git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2245606",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add upstream git://github.com/original/repo.git\n\ngit fetch upstream master\ngit merge upstream/master\n\ngit pull upstream master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("51. Usage scenario: How do I setup a staging repository in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7843015",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cd repo_B\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --bare")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add upstream URL_FOR_REPO_A")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch upstream +master:refs/heads/x_master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch master x_master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch upstream +master:refs/heads/x_master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push upstream")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone URL_FOR_REPO_A")]),t._v("\n$ cd repoDir\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add dev URL_FOR_REPO_B")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch dev")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --track")]),t._v(" master_b dev/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge master_b")]),t._v("\n$ <resolve conflicts, if any>\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n\n▲ Note 1\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git configure branch.upstream.fetch +master:refs/heads/x_master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git configure"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --add")]),t._v(" branch.upstream.fetch +branch_1_0:refs/heads/x_branch_1_0")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch upstream")]),t._v("\n\n▲ Note 2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[e("strong",[t._v("52. Usage scenario: Git: Cannot rebase onto multiple branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35844073",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git pull origin branch --rebase\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch all the remote data")]),t._v("\ngit fetch --all --prune\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# no execute a merge command")]),t._v("\ngit merge origin/branch --rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("53. Usage scenario: Avoiding a merge conflict in interactive rebase while reordering history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64179722",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ TL;DR\n▲ Long\n▲ About commits\n... <-F <-G <-H\n\n▲ A brief look at branches\n...--G--H   <-- branch1\n\n...--G--H   <-- branch1, branch2\n\n...--G--H   <-- branch1 (HEAD), branch2\n\n          I   <-- branch1 (HEAD)\n         /\n...--G--H   <-- branch2\n\n          I--J   <-- branch1\n         /\n...--G--H   <-- branch2 (HEAD)\n\n          I--J   <-- branch1\n         /\n...--G--H\n         \\\n          K--L   <-- branch2 (HEAD)\n\n▲ Merging\ngit checkout branch1 && git merge branch2\n\ngit diff --find-renames <hash-of-H> <hash-of-J>   # what we changed\n\ngit diff --find-renames <hash-of-H> <hash-of-L>   # what they changed\n\n          I--J\n         /    \\\n...--G--H      M   <-- branch1 (HEAD)\n         \\    /\n          K--L   <-- branch2\n\n▲ Copying a commit with git cherry-pick\n       I--J--K   <-- feature1\n      /\n...--H\n      \\\n       L--M--N   <-- feature2 (HEAD)\n\ngit diff <hash-of-I> <hash-of-J>\n\ngit cherry-pick <hash-of-J>\n\n       I--J--K   <-- feature1\n      /\n...--H\n      \\\n       L--M--N--J'  <-- feature2 (HEAD)\n\n▲ Rebasing without fixups or other tricks\nA--B--C--D   <-- master (HEAD)\n\n  B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-D'  <-- master (HEAD)\n /\nA--B--C--D   [abandoned]\n\nA   <-- HEAD\n \\\n  B--C--D   <-- master\n\nA--B'  <-- HEAD\n \\\n  B--C--D   <-- master\n\nA--B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("  <-- HEAD\n \\\n  B--C--D   <-- master\n\nA--B"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'-C'")]),t._v("-D'  <-- master (HEAD)\n \\\n  B--C--D   [abandoned]\n\n▲ Squash or fixup\nA--B'  <-- HEAD\n \\\n  B--C--D   <-- master\n\n  B'   [abandoned]\n /\nA--BC   <-- HEAD\n \\\n  B--C--D   <-- master\n\nA--BC--D   <-- master (HEAD)\n\n▲ But why do we get a conflict?\nA--B'  <-- HEAD\n \\\n  B--C--D   <-- master\n\n  B'   [abandoned]\n /\nA--BD   <-- HEAD\n \\\n  B--C--D   <-- master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br"),e("span",{staticClass:"line-number"},[t._v("76")]),e("br"),e("span",{staticClass:"line-number"},[t._v("77")]),e("br"),e("span",{staticClass:"line-number"},[t._v("78")]),e("br"),e("span",{staticClass:"line-number"},[t._v("79")]),e("br"),e("span",{staticClass:"line-number"},[t._v("80")]),e("br"),e("span",{staticClass:"line-number"},[t._v("81")]),e("br"),e("span",{staticClass:"line-number"},[t._v("82")]),e("br"),e("span",{staticClass:"line-number"},[t._v("83")]),e("br"),e("span",{staticClass:"line-number"},[t._v("84")]),e("br"),e("span",{staticClass:"line-number"},[t._v("85")]),e("br"),e("span",{staticClass:"line-number"},[t._v("86")]),e("br"),e("span",{staticClass:"line-number"},[t._v("87")]),e("br"),e("span",{staticClass:"line-number"},[t._v("88")]),e("br"),e("span",{staticClass:"line-number"},[t._v("89")]),e("br"),e("span",{staticClass:"line-number"},[t._v("90")]),e("br"),e("span",{staticClass:"line-number"},[t._v("91")]),e("br"),e("span",{staticClass:"line-number"},[t._v("92")]),e("br"),e("span",{staticClass:"line-number"},[t._v("93")]),e("br"),e("span",{staticClass:"line-number"},[t._v("94")]),e("br"),e("span",{staticClass:"line-number"},[t._v("95")]),e("br"),e("span",{staticClass:"line-number"},[t._v("96")]),e("br"),e("span",{staticClass:"line-number"},[t._v("97")]),e("br"),e("span",{staticClass:"line-number"},[t._v("98")]),e("br"),e("span",{staticClass:"line-number"},[t._v("99")]),e("br"),e("span",{staticClass:"line-number"},[t._v("100")]),e("br"),e("span",{staticClass:"line-number"},[t._v("101")]),e("br"),e("span",{staticClass:"line-number"},[t._v("102")]),e("br")])]),e("p",[e("strong",[t._v("54. Usage scenario: Discard commits to master that have been pushed upstream")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17675307",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --hard HEAD@{1}\n\ngit checkout master_branch\n\ngit pull origin master\n\ngit merge feature_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("55. Usage scenario: Transfer code from one computer to another via Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20961947",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch incomplete-code\ngit checkout incomplete-code\ngit commit -a\ngit push origin incomplete-code\n\ngit clone <repo address>\ngit checkout incomplete-code\n\ngit checkout develop\ngit merge incomplete-code\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("56. Usage scenario: Git how to update local repository and keep my changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43206176",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git stash\ngit pull\ngit stash pop\n\ngit checkout -b my-new-branch\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my changes"')]),t._v("\ngit pull --rebase origin master # this will get the updates and place your changes on top of it\n\ngit mergetool\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("57. Usage scenario: Update develop branch from the master branch without losing any changes in develop")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57162962",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge master into develop")]),t._v("\ngit checkout develop\ngit merge master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rebase develop on top of master")]),t._v("\ngit checkout develop\ngit rebase master\n\ngit checkout develop\ngit pull #or git pull --rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("58. Usage scenario: Merge two TFS branches with git tfs")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9181154",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge tfs/feature_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("59. Usage scenario: How can I know in git if a branch has been already rebased onto master?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34337939",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git log --oneline --cherry master...some-branch\n\ngit checkout master~0\ngit merge some-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("60. Usage scenario: Maintaining a clone of a git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39806460",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone https://github.com/foo/bar.git")]),t._v("\n$ cd bar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote rename origin upstream")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add origin https://ourbitbucket.org/foo/bar.git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --tags")]),t._v(" origin master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull upstream master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" upstream/master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout my-branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout my-branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("strong",[t._v("61. Usage scenario: GIT how to merge master into branch cloned with -single-branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47153993",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In local my-branch")]),t._v("\ngit remote add upstream <repo URL> -f\ngit merge upstream/master\n\ngit remote add upstream <repo URL> -t master -f\n\ngit remote rm upstream\ngit remote add upstream <repo URL> -t master -f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("62. Usage scenario: In Git, how do you apply a commit of bug fix to the other newer branches?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3312341",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" git checkout -b bugfixB <SHA1 of B>\n # fix things, add changes\n git commit\n\n # for each branch...\n git checkout releaseA\n git merge bugfixB\n git checkout releaseB\n git merge bugfixB\n git checkout master\n git merge bugfixB\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("63. Usage scenario: How do you undo changes committed to main line from a feature branch but keep the branch up to date?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17808150",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge feature")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" feature-revert afb600fe")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m1")]),t._v(" HEAD")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge feature-revert")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature-revert")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert HEAD")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge feature-revert")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" feature-revert")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("64. Usage scenario: multiple git repositories cloned into the same directory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13549233",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd /var/www/  \ngit clone /home/repo/.git newsite\ngit remote add mod1 /home/modules/mod1/.git  \ngit remote add mod2 /home/moudles/mod2/.git  \n\ncd newsite\ngit merge mod1/master\ngit merge mod2/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("65. Usage scenario: If I made a local copy of an open source project to work on, how do I merge new changes from the developers into my code?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19350825",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add suckless http://git.suckless.org/dwm\n\ngit checkout -b new\ngit pull suckless master\n\ngit checkout master\ngit merge new\n\ngit branch -d new\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("66. Usage scenario: replace remote repository with local repo, but keep commit history of remote")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32911121",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"starting over"')]),t._v("\n\ngit remote add origRepo oldUrl\ngit fetch origRepo\n\ngit checkout -b tempBranch\ngit reset --hard origRepo/master\ngit merge master\ngit push origRepo tempBranch\n\ngit fetch\ngit checkout master\ngit merge origin/tempBranch\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("67. Usage scenario: Reorder commits one of which is a merge")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42281237",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --hard C\ngit merge D\ngit cherry-pick B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("68. Usage scenario: How to fork part of a monorepo and still be able to merge upstream commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[t._v("gitk")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51419015",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\ngit branch -m upstream\n\ngit checkout upstream\ngit subtree split -P <subdirectory path> -b master\n\ngit checkout upstream\ngit pull\n\ngitk master upstream-patch\n\ngit checkout master\ngit merge upstream-patch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("69. Usage scenario: Pulling from a remote branch to a local branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15343497",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout [branch]    \n\ngit pull [repo] [branch]\n\ngit pull origin master\n\ngit fetch [repo] [branch]\ngit merge [repo]/[branch]\n\ngit fetch origin master\ngit merge origin/master #the local copy of the master branch in origin repo\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v('70. Usage scenario: "Thread safe" git pull or how to avoid ".../.git/index.lock\': File exists."')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55458519",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch && git merge\n\ngit fetch && git rebase\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("71. Usage scenario: How do I replay the changes from the origin repo into my fork on Github?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21773764",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ There's a Github Guide for this.\ngit remote add upstream https://github.com/<otheruser>/<repo>.git\ngit fetch upstream\n\n▲ Option a) If you like merging:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# assuming you're on master")]),t._v("\ngit merge upstream/master\ngit push origin # assuming origin is your fork\n\n▲ Option b) If you'd rather rebase:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# assuming you're on master")]),t._v("\ngit rebase upstream/master\ngit push origin # this might fail with a "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'non-fast-forward'")]),t._v(" error\n    # in which case, insert --force after the word "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'push'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("72. Usage scenario: Merge commit from Master-branch to another branch, but not to merge two branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24682635",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge master new_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("73. Usage scenario: Git - transferring all commits to another branch and creating a new master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12077848",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch --move master develop\ngit checkout --orphan master\ngit rm -rf . ;# abandon the staged, orphaned changes\necho README > README ;# put something in this working directory\ngit add README && git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit of <my_project>"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --orphan")]),t._v(" master")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout develop && git checkout master")]),t._v("\nerror: pathspec "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" did not match any file(s) known to git.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --orphan")]),t._v(" master")]),t._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge develop")]),t._v("\nfatal: Non-fast-forward commit does not make sense into an empty head\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge develop")]),t._v("\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n README | 1 +\n 1 file changed, 1 insertion(+)\n create mode 100644 README\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --graph")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")])]),t._v("\n*   867a1f9 Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'develop'")]),t._v("\n|\\  \n| * 22df145 README\n* 15ba82a Initial commit of test project\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br")])]),e("p",[e("strong",[t._v("74. Usage scenario: Git: Squash feature branch and merge commit, rebase on master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64517560",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from X :")]),t._v("\ngit reset --soft o    # <- the parent commit of a and b\ngit commit            # this will create "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b + X'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# then rebase :")]),t._v("\ngit rebase M\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from commi M :")]),t._v("\ngit merge X\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fix possible merge conflicts")]),t._v("\n\ngit reset --soft M\ngit commit    # commit the content of the merge\n              # as a single regular commit on top of M\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v('75. Usage scenario: How do I make Git use "theirs" merge strategy by default?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34115906",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merget master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("76. Usage scenario: How can I rebase 3 commits with one merge of master into one commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44667137",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("pick Commit 1: Remove unused routes for the projects controller\npick Commit 2: Add PR request changes and modify similar_by_tags_route\npick Commit 3: Merge Master and resolve git merge conflicts\npick Commit 4: Reinsert rubocop disablement for project.rb\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("77. Usage scenario: How to merge hot fix on branch to master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16199441",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b Jbranch B\ngit cherry-pick J\ngit checkout -B branch I\ngit merge Jbranch\ngit checkout -B master G\ngit merge Jbranch\ngit branch -d Jbranch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("78. Usage scenario: Detect merge conflict between two git diff without having access to the original repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65912529",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone -ns . `mktemp -d`; cd $_\ngit reset -q         # load just the index\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# note that when I do the above on the full linux history, a 2.8GB repo on my box, ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the clone and index reload, the result occupies about 6MB total Basically nothing.")]),t._v("\n\ngit merge trunk\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("79. Usage scenario: Git commands to save current files in temporary branch without committing to master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48511158",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git stash\ngit checkout -b messybranch\ngit stash apply\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"commit"')]),t._v("\ngit push origin messybranch\ngit checkout master // clean master\n\ngit merge messybranch\n\ngit cherry-pick #commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("80. Usage scenario: Git: Pulling from Remote by Tag")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12628705",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mkdir myrepo\ncd !$\ngit init\necho one > one.txt\ngit add -A\ngit commit "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my first commit"')]),t._v("\ngit tag v1.0\necho two > two.txt\ngit add -A\ngit commit "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my second commit"')]),t._v("\ngit tag v2.0\n\ncd ..\nmkdir centralrepo\ncd !$\ngit init --bare # don't want to have a working directory here\ncd -\n\nmkdir coworkerrepo\ncd !$\ngit init\n\ncd ../myrepo\ngit remote add origin ../centralrepo\n\ncd ../coworkerrepo\ngit remote add origin ../centralrepo\n\ncd - # useful shortcut for flipping between two dirs (works for git checkout and branches too)\ngit push origin master \n\ngit push origin v1.0\ngit push origin v2.0\n\ngit push origin --tags\n\ngit remote -v show origin\n\ncd -\ngit fetch # will update tracking branches and tags\ngit merge origin/master # fast-forward master branch to what the remote tracking branch is pointing to\n\ngit pull origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br")])]),e("p",[e("strong",[t._v('81. Usage scenario: "Amend latest commit" in Sourcetree, creates unrelated error')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50809827",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ An amend last commit would by default trigger an "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"behind its remote counterpart"')]),t._v(" error on git push, if that mast commit was previously pushed.\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-x--x--x (master, origin/master)")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-x--x--X' (master)")]),t._v("\n     \\\n      x   (origin/master)\n\n▲ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"can\'t pull from unrelated histories"')]),t._v(" can happen if the remote repository has only one commit: changing the local one means: no common ancestor.\n(If not, read "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"“refusing to merge unrelated histories” failure while pulling to recovered repository"')]),t._v(")\nYou can pull allowing for unrelated history to be merged\ngit pull origin master --allow-unrelated-histories\ngit merge origin origin/master\n\n▲ ... or you can simply, if you are the only one working on the remote repo, force the push.\ngit push --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("82. Usage scenario: Clone GitHub Repository and Merge All Pull Requests")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41926958",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/usr/bin/env bash")]),t._v("\n\nset -e\n\ngit clone https://github.com/Sumi-Interactive/SIAlertView\ncd SIAlertView\n\ngit config --add remote.origin.fetch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"+refs/pull/*/head:refs/remotes/origin/pr/*"')]),t._v("\ngit fetch\n\nfor branch in $(git branch -r); do\n    [[ $branch =~ origin/pr/ ]] && git merge $branch\ndone\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("83. Usage scenario: Git Merge Conflicts Adds the remote changes too as Local changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[t._v("git merge-base")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66043137",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Setting up for a merge\n... <-F <-G <-H   <--branch\n\n...--G--H   <-- main\n\n...--G--H   <-- dev, main\n\n...--G--H   <-- dev (HEAD), main\n\n          I   <-- dev (HEAD)\n         /\n...--G--H   <-- main\n\n          I--J   <-- dev (HEAD)\n         /\n...--G--H   <-- main\n\n          I--J   <-- dev (HEAD)\n         /\n...--G--H   <-- main\n         \\\n          K--L   <-- origin/fred\n\n▲ How merge works\n          I--J   <-- dev (HEAD)\n         /\n...--G--H\n         \\\n          K--L   <-- origin/fred\n\n▲ git mergetool\n▲ Doing things by hand\n▲ If you've accidentally resolved a file\n▲ Merging individual files with overrides\ngit show HEAD:path/to/file\n\ngit show MERGE_HEAD:path/to/file\n\ngit merge-base --all HEAD MERGE_HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br")])]),e("p",[e("strong",[t._v("84. Usage scenario: Revert merge without cancel commits done after")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52167442",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can either rewrite branch history, or revert the merge.  Each has pros and cons.\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q <--(master)\n\n▲ If you do want to do a rewrite, rebase is the simplest way.  You'll need either the IDs of commits N and O, or expressions that resolve to commits N and O.  In this example we can use master~3 for N and master~2 for O.\ngit rebase --onto master~3 master~2 master\n\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q <--(master@{1})\n        \\\n         P' -- Q` <--(master)\n\nA -- B -- C <--(branch>\n\nM -- N -- P' -- Q` <--(master)\n\n▲ And in fact, after the reflog expires that"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s exactly what will remain (if you don'")]),t._v("t do something to preserve the old commits in the meantime).  At this point, to push master you would have to do a force push.  The safest way to do that is\ngit push --force-with-lease\n\ngit checkout master\ngit revert -m 1 master~2\n\nA -- B -- C <--(branch>\n           \\\n  M -- N -- O -- P -- Q -- !O <--(master)\n\ngit rebase -f master~3 branch\n\nA -- B -- C -- D -- E <--(branch>\n           \\\n  M -- N -- O -- P -- Q -- !O -- R -- S <--(master)\n\ngit checkout master\ngit revert master~2\ngit merge branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("85. Usage scenario: Git how to revert a commit but remember the work?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14974675",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch project_upgrade\n\ngit reset --hard <SHA of original commit>\n\ngit merge project_upgrade\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("86. Usage scenario: Represent a Git merge in former commits (fake a merge)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24967112",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch temp\ngit reset --hard E\nGIT_AUTHOR_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v(" GIT_COMMIT_DATE="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"..."')]),t._v(" git merge Z\ngit cherry-pick G..K\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("87. Usage scenario: How to pull changes from a pull request thats already checkout?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56159309",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin <SOURCE> \ngit fetch origin <DEST>\ngit checkout <DEST>         # You will now be in DEST branch\ngit pull                    # Update copy of base branch\ngit merge origin/<SOURCE>   # Merge changes from SOURCE to DEST\ngit push origin <DEST>      # Push the update DEST branch \n\ngit fetch origin            # Fetch all branches, both SOURCE and DEST\ngit checkout <SOURCE>       # Create a local copy of the SOURCE branch\ngit pull                    # You now have the changes to merge\ngit checkout <DEST>         # You will now be in DEST branch\ngit pull                    # Update copy of base branch\ngit merge <SOURCE>          # Merge changes from SOURCE to DEST\ngit push origin <DEST>      # Push the update DEST branch \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("88. Usage scenario: Name of branch in pull request on GitHub")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13526833",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(">> git checkout master         # make sure we're on master\n>> git branch oldmaster        # create a new branch, just to be safe\n>> git reset --hard HEAD~100   # roll back 100 commits\n>> git fetch upstream          # fetch newest changes from upstream\n>> git merge upstream/master   # merge the main master branch into your local one\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("89. Usage scenario: Auto - Increment patch version on master while merging branches to master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65025150",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# An example hook script to verify what is about to be committed.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Called by "git merge" with no arguments.  The hook should')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exit with non-zero status after issuing an appropriate message to")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stderr if it wants to stop the merge commit.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# To enable this hook, rename this file to "pre-merge-commit".')]),t._v("\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Bumping Service version"')]),t._v("\n\nOLD_VERSION=$(cat version.txt | grep -o "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"=.*"')]),t._v(" | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'= '")]),t._v(")\nNEW_NUM=$(( $(echo $OLD_VERSION | grep -o "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\.[0-9]*$"')]),t._v(" | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(") + 1 ))\nLAST_NUM=$(echo $OLD_VERSION | grep -o "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\.[0-9]*$"')]),t._v(" | tr -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(")\nNEW_VERSION=$(echo $OLD_VERSION | tr $LAST_NUM $NEW_NUM)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# More conversions to bump the version if needed")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# more code code code")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# ...")]),t._v("\n\nsed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/\\(^version = \\).*/\\1'")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$NEW_VERSION"')]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/'")]),t._v(" ~/service/version/file/txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("90. Usage scenario: Local Gitlab installation doesn't show all commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37043315",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git add/commit first")]),t._v("\ngit branch tmp\ngit checkout master\ngit merge tmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("91. Usage scenario: How do I merge a pull request into a feature branch of my github project?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28258007",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" my-feature")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull https://github.com/user/fork.git")]),t._v("\n\n$ # make changes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my minor changes"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge my-feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("92. Usage scenario: Fixing history on GIT repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28178610",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n$ make-some-change; git add ...; git commit -m message\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch origin # and let's assume this brings in a new commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge origin/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("93. Usage scenario: How can one make git first parent consistent without rebasing?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39738632",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" origin/master  # reset to newly-fetched master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge topic_branch          # redo the merge")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin HEAD            # re-push the merge")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v('94. Usage scenario: How do I get git to resolve merge conflicts by putting "ours first, then theirs"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33662787",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("10:58:26 tims@thor ~/git/merge_conflict_example (master) $ git merge origin/branch1")]),t._v("\nAuto-merging test.txt\n[...]\nMerge made by the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'recursive'")]),t._v(" strategy.\n test.txt | 1 +\n 1 file changed, 1 insertion(+)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("95. Usage scenario: How do I merge locally a master and a fork in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7717741",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch formtastic\ngit merge master\n\ngit branch formtastic\ngit rebase -i master\n\ngit branch master\ngit merge formtastic\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("96. Usage scenario: Git: How to merge local branch with remote tracking automatically without fetching")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[t._v("git for-each-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4049664",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nhead=$(git symbolic-ref HEAD) || exit\nhead=${head#refs/heads/}\nmerge=$(git config --get branch.$head.merge) || { echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"no tracking branch"')]),t._v("; exit 1; }\nremote=$(git config --get branch.$head.remote) || remote=origin\ngit merge $remote/${merge#refs/heads/}\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# alternatively, as in Aristotle's answer:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# head=$(git symbolic-ref HEAD) || exit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# upstream=$(git for-each-ref --format='%(upstream:short)' \"$head\"")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# [ -z "$upstream" ] && { echo "no tracking branch"; exit 1; }')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git merge $upstream")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("97. Usage scenario: merging branch into master after a previous commit merged master then reverted it")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56138327",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout --detach feature-branch\ngit merge master "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge latest changes from master"')]),t._v("\ngit reset --soft master # here is where the trick happens. after this command, all the changes that are related to the feature should be on index\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Feature X: here is what the feature is about or what the change is about"')]),t._v(" # this revision has the whole thing on a single unique revision after master. No relation to the previous branch\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if you like the results, move the feature pointer")]),t._v("\ngit branch -f feature-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("98. Usage scenario: GIT: how to merge changes, which were earlier removed from the merged commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52116444",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Unfortunately, your shortcut misused "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"merge"')]),t._v(".  When you try to merge two branches, get conflicts, manually resolve them, and then commit the merge, you are telling Git that the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"correct"')]),t._v(" way of combining these two branches (and all the commits made on those two branches) is the way you chose to manually resolve the commit.  If you "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"re-merge"')]),t._v(" from develop, Git won"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t overrule your manual conflict resolution because you'")]),t._v("ve already told Git what the correct merge is, and it won"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t try to contradict you (well, unless it gets really confused).  Git can'")]),t._v("t tell the difference between changes you made that were necessary to resolve the two merges versus changes that you wanted to "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"save for later"')]),t._v(".\ngit tag bad_merge 8354cbeb\ngit log bad_merge  # !! double check that this points to the bad merge !!\n\ngit checkout -b fix_merge bad_merge\n\ngit reset HEAD^\n\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fix_merge: add first feature to master'")]),t._v("\n\n▲ Now, we"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re going to do a somewhat complicated rebase.  (This is the step that would be unnecessary if you didn'")]),t._v("t have any commits on master since the bad merge.)\ngit checkout master\ngit branch master_backup   # make a copy in case something goes wrong\ngit rebase --onto fix_merge bad_merge master\n\n▲ This is more or less where you"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'d be if you'")]),t._v("d cherry picked the first feature from develop, except it's all been cherry picked in a single commit instead of multiple commits.  Now, if you merge develop into master:\ngit checkout master    # probably already there, but make sure\ngit merge develop\n\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("99. Usage scenario: How to merge commits till a certain point")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21794041",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$> git log\n[...]\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[t._v("commit c5960dbe4674ae72f80cbe1ed5eb0cc690062c7a")]),t._v("\nAuthor: (...)\nDate:   Mon Nov 18 11:42:58 2013 +0100\n\nthis is a commit message!\n[...]\n\n$> git merge <commit-id>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("100. Usage scenario: How to find if a branch is a locally tracked branch or user created local branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2887304",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout test2\ngit fetch test2 test2 \ngit merge test2/test2\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#fix conflicts")]),t._v("\ngit commit\n\ngit config --get-regexp branch..*\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("101. Usage scenario: Git Merge two repositories that are years apart with thousands of conflicts")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27604499",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add Blocal\ngit fetch\ngit merge  <some old commit in Blocal/master>\n\ngit merge Blocal/master\n\ngit branch --track B/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("102. Usage scenario: Git merge- Already up-to-date: hard reset?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41482063",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch origin                 # update origin/master to the remote\ngit checkout master              # switch to local master branch\ngit reset --hard origin/master   # reset local master to origin/master\n\ngit merge dateReceived\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("103. Usage scenario: Prevent merging branch into master if it contains commits with specific text")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69475305",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# An example hook script to verify what is about to be committed.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Called by "git merge" with no arguments.  The hook should')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# exit with non-zero status after issuing an appropriate message to")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# stderr if it wants to stop the merge commit.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# To enable this hook, rename this file to "pre-merge-commit".')]),t._v("\n\n. git-sh-setup\ntest -x "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_DIR/hooks/pre-commit"')]),t._v(" &&\n        exec "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_DIR/hooks/pre-commit"')]),t._v("\n:\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("104. Usage scenario: git reset or rebase - remove commits from past")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44281410",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b branchY <commit id for C>\ngit cherry-pick <commit id for A1>\n\ngit checkout master\ngit merge branchY\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("105. Usage scenario: How do I reset my master to be a copy of rails master")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4258170",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log  #find version you want, let")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s say it'")]),t._v("s 8cdb9\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" 8cdb9     #master is now at version before you made changes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge myFixBranch1   #assuming myFixBranch1 is a branch that you still want the changes from")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull upstream master    #if you want to update to latest rails code")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("106. Usage scenario: How do I force pull when I can't get rid of local changes AND without losing local commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22759584",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch <remote>\ngit checkout <local-branch>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Merge changes")]),t._v("\ngit merge <remote>/<remote-branch>\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Or rebase")]),t._v("\ngit rebase <remote>/<remote-branch>\n\ngit checkout -- .\ngit reset --hard B\ngit merge <remote> <branch>\ngit cherry-pick LC1 LC2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);