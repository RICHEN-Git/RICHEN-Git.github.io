(window.webpackJsonp=window.webpackJsonp||[]).push([[87],{516:function(e,t,s){"use strict";s.r(t);var n=s(19),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("📖 "+e._s(e.$page.readingTime.text)+"    🔡 "+e._s(e.$page.readingTime.words)),s("br")])]),e._v(" "),s("h1",{attrs:{id:"git-merge-tree-show-three-way-merge-without-touching-index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-merge-tree-show-three-way-merge-without-touching-index"}},[e._v("#")]),e._v(" 📌 git merge-tree - Show three-way merge without touching index")]),e._v(" "),s("h2",{attrs:{id:"none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[e._v("#")]),e._v(" 🔹None")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: How to detect conflicts between branches in the bare git repository")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 4    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[e._v("git merge-base")]),e._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/49578237",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)],1)],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("function testconflict() {\n    foo=$1\n    bar=$2\n    mergebase=$(git merge-base $foo $bar)\n    if [ "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$mergebase"')]),e._v(" = "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('""')]),e._v(" ];then\n        #in case foo and bar have no common ancestor, use the empty tree as the merge base\n        mergebase=4b825dc642cb6eb9a060e54bf8d69288fbee4904\n    fi\n    #test if the output has conflict markers of "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"merge"')]),e._v(" style\n    git merge-tree $mergebase $foo $bar | xargs | \n        if grep -oe "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'<<<<<<<.*=======.*>>>>>>>'")]),e._v(";then\n            echo conflict\n        else\n            echo no conflict\n        fi \n}\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);