(window.webpackJsonp=window.webpackJsonp||[]).push([[94],{521:function(s,t,a){"use strict";a.r(t);var e=a(19),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),a("br")])]),s._v(" "),a("h1",{attrs:{id:"git-name-rev-find-symbolic-names-for-given-revs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-name-rev-find-symbolic-names-for-given-revs"}},[s._v("#")]),s._v(" 📌 git name-rev - Find symbolic names for given revs")]),s._v(" "),a("h2",{attrs:{id:"refs"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#refs"}},[s._v("#")]),s._v(" 🔹 --refs")]),s._v(" "),a("p",[a("strong",[s._v("1. Usage scenario: How can I refer to the branch when both a branch and a tag point to the same commit?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/63036000",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)])],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git name-rev --name-only --refs=refs/heads/\\*\n\ngit name-rev --name-only --exclude=refs/tags/\\*\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"exclude"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#exclude"}},[s._v("#")]),s._v(" 🔹 --exclude")]),s._v(" "),a("p",[a("strong",[s._v("1. Usage scenario: How can I refer to the branch when both a branch and a tag point to the same commit?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/63036000",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)])],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git name-rev --name-only --refs=refs/heads/\\*\n\ngit name-rev --name-only --exclude=refs/tags/\\*\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"stdin"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdin"}},[s._v("#")]),s._v(" 🔹 --stdin")]),s._v(" "),a("p",[a("strong",[s._v("1. Usage scenario: How to show first commit by 'git log'?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 365    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/5189296",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("▲ Short answer\ngit rev-list --max-parents=0 HEAD\n\n▲ Explanation\ngit rev-list --max-parents=0 HEAD\n\ngit rev-list --parents HEAD | egrep "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^[a-f0-9]{40}$"')]),s._v("\n\ngit rev-list --parents HEAD | egrep "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^[a-f0-9]{40}$"')]),s._v(" | git name-rev --stdin\n\n▲ Bonus\ngit config --global alias.first "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rev-list --max-parents=0 HEAD"')]),s._v("\n\ngit first\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h2",{attrs:{id:"name-only"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#name-only"}},[s._v("#")]),s._v(" 🔹 --name-only")]),s._v(" "),a("p",[a("strong",[s._v("1. Usage scenario: How to find all unmerged commits in master grouped by the branches they were created in?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/15768236",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git branch --no-merged master\n\ngit rev-list branch1 --not master --no-merges\n\ngit name-rev --name-only revisionHash1\n\ngit rev-list --all --not master --no-merges | xargs -L1 git name-rev | grep -oE "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[0-9a-f]{40}\\s[^\\~\\^]*'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("2. Usage scenario: How to tell git branch name from commit hash?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/43266422",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config remote.upstream.url")]),s._v("\nhttps://github.com/RobotLocomotion/drake.git\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git log"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --oneline")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" 5")]),s._v("\n7530a95 Merge pull request #5743 from soonho-tri/pr-reformat-mathematical_program\nebc8f25 Suppresses console output of speed_bump.obj genrule. (#5726)\nd8b9a0b Merge pull request #5735 from david-german-tri/namespaces\n79e10e8 Remove redundant "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'symbolic::'")]),s._v(" prefix from mathematical_program code\nb68b590 Clean up mathematical_program code by adding using std::*\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev HEAD")]),s._v("\nHEAD master\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev 79e10e8")]),s._v("\n79e10e8 master^2\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev HEAD~20")]),s._v("\nHEAD~20 remotes/origin/issue/5646_return_binding~3\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev HEAD")]),s._v("\nHEAD tags/last_sha_with_original_matlab~313\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only HEAD~20")]),s._v("\ntags/last_sha_with_original_matlab~333\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[a("strong",[s._v("3. Usage scenario: Print symbolic name for HEAD")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/27660482",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("▲ What git name-rev does\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only <commit-ish>")]),s._v("\n\n▲ Case in which HEAD is not detached\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only HEAD")]),s._v("\n\nmyref\n\n▲ Case in which HEAD is detached\n<ref>~<n>\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev HEAD")]),s._v("\n\nmaster~2\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set things up")]),s._v("\n$ mkdir test\n$ cd test\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create a commit")]),s._v("\n$ touch README.md\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add README.md")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"add README"')]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# detach the HEAD (make it point directly to the tip of master, instead of to master itself)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout $(git rev-parse master)")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create a second commit (while in detached-HEAD state)")]),s._v("\n$ printf "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"foo\\n"')]),s._v(" > README.md\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -am")]),s._v(" ")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"write 'foo' in README\"")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# attempt to find a symbolic name for HEAD ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git name-rev"),a("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only HEAD")]),s._v("\nundefined\n\nA [master]\n \\\n  B [HEAD]\n\n▲ Conclusion\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br")])]),a("p",[a("strong",[s._v("4. Usage scenario: How to check if git merge problems have been fixed?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/41249851",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git diff -S "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<<<<<<< HEAD"')]),s._v(" -S "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"======="')]),s._v(" -S "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('">>>>>>> $(git name-rev --name-only MERGE_HEAD)"')]),s._v(" HEAD\n\ngit name-rev --name-only MERGE_HEAD\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[a("strong",[s._v("5. Usage scenario: How can I commit specific directory to a different than a working branch on git?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/7212309",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("ORIG_HEAD="),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git name-rev --name-only HEAD)"')]),s._v(" git checkout gh-pages && mv publish/* . && git commit -am "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"automatic update"')]),s._v(" && git checkout "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$ORIG_HEAD"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[a("strong",[s._v("6. Usage scenario: How can I refer to the branch when both a branch and a tag point to the same commit?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/63036000",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)])],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git name-rev --name-only --refs=refs/heads/\\*\n\ngit name-rev --name-only --exclude=refs/tags/\\*\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"none"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),a("p",[a("strong",[s._v("1. Usage scenario: How can I get the associated ref path for a git SHA?")])]),s._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),a("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/2532432",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),a("OutboundLink")],1)],1)],1)]),s._v(" "),a("p",[a("strong",[s._v("Example:")])]),s._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[s._v("git show-ref |grep yourSHA1|awk "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\ngit show-ref --heads --tags -d |grep yourSHA1|awk "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v("\n\nC:\\Prog\\Git\\tests\\rep\\main5>git show-ref | grep f4a071 | awk "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{print $2}"')]),s._v('\nrefs/heads/master\nrefs/remotes/origin/HEAD\nrefs/remotes/origin/master\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453\na7768453 patches~1\n\nC:\\Prog\\Git\\tests\\rep\\main5>git name-rev a7768453|gawk "{gsub(/~.*/,\\"\\",$2);print $2}\npatches\n\nC:\\Prog\\Git\\tests\\rep\\main5>git branch --contain 1e73e369\n  master\n* patches\n  tmp\n\n'),a("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--contains <commit>")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);