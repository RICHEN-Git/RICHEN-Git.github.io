(window.webpackJsonp=window.webpackJsonp||[]).push([[110],{538:function(t,e,s){"use strict";s.r(e);var a=s(19),n=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),s("br")])]),t._v(" "),s("h1",{attrs:{id:"git-reflog-manage-reflog-information"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-reflog-manage-reflog-information"}},[t._v("#")]),t._v(" 📌 git reflog - Manage reflog information")]),t._v(" "),s("h2",{attrs:{id:"all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" 🔹 --all")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: How can I quickly grab just the git reflog from the last day?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/46126026",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog --since="),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"2 days ago"')]),t._v(" --all\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h2",{attrs:{id:"none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Undoing a git rebase")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 5065    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/135614",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n\ngit reset --hard HEAD@{2}\n\ngit reset --hard "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"HEAD@{2}"')]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("2. Usage scenario: How can I move HEAD back to a previous location? (Detached head) & Undo commits")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 551    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/34519716",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ First of all what is HEAD?\n▲ detached HEAD\n▲ A few options on how to recover from a detached HEAD:\n▲ git checkout\ngit checkout <commit_id>\ngit checkout -b <new branch> <commit_id>\ngit checkout HEAD~X // x is the number of commits to go back\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Checkout a given commit.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Doing so will result in a `detached HEAD` which mean that the `HEAD`")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# is not pointing to the latest so you will need to checkout branch")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in order to be able to update the code.")]),t._v("\ngit checkout <commit-id>\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a new branch forked to the given commit")]),t._v("\ngit checkout -b <branch name>\n\n▲ git reflog\ngit reflog\ngit checkout HEAD@{...}\n\n▲ git reset --hard <commit_id>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This will destroy any local modifications.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Don't do it if you have uncommitted work you want to keep.")]),t._v("\ngit reset --hard 0d1d7fc32\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Alternatively, if there's work to keep:")]),t._v("\ngit stash\ngit reset --hard 0d1d7fc32\ngit stash pop\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# This saves the modifications, then reapplies that patch after resetting.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You could get merge conflicts if you've modified things which were")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# changed since the commit you reset to.")]),t._v("\n\n▲ git revert <sha-1>\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add a new commit with the undo of the original one.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# The <sha-1> can be any commit(s) or commit range")]),t._v("\ngit revert <sha-1>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br"),s("span",{staticClass:"line-number"},[t._v("24")]),s("br"),s("span",{staticClass:"line-number"},[t._v("25")]),s("br"),s("span",{staticClass:"line-number"},[t._v("26")]),s("br"),s("span",{staticClass:"line-number"},[t._v("27")]),s("br"),s("span",{staticClass:"line-number"},[t._v("28")]),s("br"),s("span",{staticClass:"line-number"},[t._v("29")]),s("br"),s("span",{staticClass:"line-number"},[t._v("30")]),s("br"),s("span",{staticClass:"line-number"},[t._v("31")]),s("br"),s("span",{staticClass:"line-number"},[t._v("32")]),s("br"),s("span",{staticClass:"line-number"},[t._v("33")]),s("br"),s("span",{staticClass:"line-number"},[t._v("34")]),s("br"),s("span",{staticClass:"line-number"},[t._v("35")]),s("br"),s("span",{staticClass:"line-number"},[t._v("36")]),s("br"),s("span",{staticClass:"line-number"},[t._v("37")]),s("br"),s("span",{staticClass:"line-number"},[t._v("38")]),s("br")])]),s("p",[s("strong",[t._v("3. Usage scenario: What happens to git commits created in a detached HEAD state?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 222    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/9984260",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n\ngit branch new-branch ba5a739\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("4. Usage scenario: How to undelete a branch on github?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 73    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/16398983",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n\ngit checkout fd0e4da \n\ngit checkout HEAD@{14}\n\ngit branch my-recovered-branch\n\ngit push origin my-recovered-branch:my-recovered-branch\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("strong",[t._v("5. Usage scenario: How do I get the deleted-branch back in Git?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 72    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/5543479",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("// log of detailed commits by users\n$> git log\n\n// reference log compared to the current HEAD\n$> git reflog\n\n$> git checkout -b my_new_branch HEAD@{5}\n\n$> git checkout -b my_new_branch d93c27b\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("strong",[t._v("6. Usage scenario: How to re-commit a past commit if someone overwrote my commit")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 57    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/52177334",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ You can do that typing the following commands:\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick <")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ID'")]),t._v(">\n\n▲ Now check if anything is still remaining by:\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n\n▲ If anything is in unstaged commit, then add it by the following commands and commit:\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" //Any other option or the name of the file with the path that you want to commit")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your message here for that commit"')]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br")])]),s("p",[s("strong",[t._v("7. Usage scenario: Git reflog a specific branch?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 37    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/40210979",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog show production\n\ngit log -g --abbrev-commit --pretty=oneline production\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("8. Usage scenario: find out when a git branch was created (not the first commit to that branch)")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 35    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/18278195",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v(":: git reflog show --date=iso bar\n7d9b83d bar@{2013-08-16 12:23:28 -0400}: branch: Created from master\n\n:: git co -b bar\nSwitched to a new branch "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bar'")]),t._v("\n:: git reflog show --date=iso bar\nd6970ef bar@{2013-08-16 12:30:50 -0400}: branch: Created from HEAD\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("9. Usage scenario: Git - recover intermediate commits after squash")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/36058504",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git init .\ntouch Foo1 Foo2 Foo3\ngit add Foo1\ngit commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Adding Foo1'")]),t._v("\ngit add Foo2\ngit commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Adding Foo2'")]),t._v("\ngit add Foo3\ngit commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Adding Foo3'")]),t._v("\ngit log # Observe all three commits\ngit rebase -i --root # Squash commits\n\ngit reflog \n    87a5159 HEAD@{0}: rebase -i (finish): returning to refs/heads/master\n    87a5159 HEAD@{1}: rebase -i (squash): Adding Foo1\n    a0eecf4 HEAD@{2}: rebase -i (squash): # This is a combination of 2 commits.\n    4142aa5 HEAD@{3}: rebase -i (pick): Adding Foo1\n    85ad082 HEAD@{4}: rebase -i (pick): Adding Foo1\n    cbc3a0c HEAD@{5}: rebase -i (start): checkout cbc3a0c02d1899dcfcc614afc07b3a5a502af56f\n    71697f7 HEAD@{6}: commit: Adding Foo3\n\ngit checkout HEAD@{6} # get back original commits, with head detached.\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br")])]),s("p",[s("strong",[t._v("10. Usage scenario: Lost my commit in GIT. Can you accidentally delete commits?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/2496001",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git log -g\n\ngit reflog\n\ngit branch foundit HEAD@{n}  # replace n with the correct number\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("p",[s("strong",[t._v("11. Usage scenario: How to retrieve git pull history")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/47322504",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("vonc@VONCAVN7 D:\\git\\git\n> git reflog --date=iso|grep pull\n3ec7d702a HEAD@{2017-09-10 17:42:57 +0200}: pull --no-commit origin master: Fast-forward\nb3622a4ee HEAD@{2017-08-12 10:36:08 +0200}: pull: Fast-forward\n97e2ff464 HEAD@{2017-06-17 18:43:28 +0200}: pull: Fast-forward\n8d1b10321 HEAD@{2017-06-08 20:36:08 +0200}: pull: Fast-forward\n10c78a162 HEAD@{2017-05-21 21:22:58 +0200}: pull: Fast-forward\nb06d36431 HEAD@{2017-05-14 07:36:49 +0200}: pull: checkout b06d3643105c8758ed019125a4399cb7efdcce2c\n1d1bdafd6 HEAD@{2016-12-22 00:36:52 +0100}: pull --no-commit origin master: checkout 1d1bdafd64266e5ee3bd46c6965228f32e4022ea\n3ab228137 HEAD@{2016-11-12 08:25:02 +0100}: pull: checkout 3ab228137f980ff72dbdf5064a877d07bec76df9\n2632c897f HEAD@{2016-08-20 21:52:51 +0200}: pull: checkout 2632c897f74b1cc9b5533f467da459b9ec725538\n2376d3178 HEAD@{2016-08-13 09:19:54 +0200}: pull: checkout 2376d31787760af598db23bb3982a57419854e5c\nf8f7adce9 HEAD@{2016-07-31 13:34:44 +0200}: pull: checkout f8f7adce9fc50a11a764d57815602dcb818d1816\nab7797dbe HEAD@{2016-06-22 11:53:20 +0200}: pull: checkout ab7797dbe95fff38d9265869ea367020046db118\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br")])]),s("p",[s("strong",[t._v("12. Usage scenario: Get a List of all Pushes with Git")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/8791295",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v(" git reflog show origin/master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("13. Usage scenario: How to recover lost commits after git submodule update and checkout?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 22    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/19055123",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("> git reflog\n6b0da0d HEAD@{0}: rebase finished: returning to refs/heads/master\n6b0da0d HEAD@{1}: pull --rebase --progress --prune --recurse-submodules=on-demand origin: check\nd55ecfb HEAD@{2}: checkout: moving from fed7916169d740644dbbd9ea48e2d2cd510ce32d to master\nfed7916 HEAD@{3}: commit: more secret stuff.\n818bf20 HEAD@{4}: commit: incredible stuff I am doing, hopefully won't end up in limbo.\n...etc...\n\n> git merge fed7916\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br")])]),s("p",[s("strong",[t._v("14. Usage scenario: How to reset rebase squash?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/40368285",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ There is no "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unsquashing"')]),t._v(" in Git normally. I am not familiar with your tool, so my answer applies for the Git command line. If you're on Windows, you probably have Git bash installed, and the tool may have a direct way of launching the Git commandline.\ngit tag unsquash-backup\n\n▲ First check if ORIG_HEAD is set to something you like. This should be the last state you had before a rebase.\ngit show ORIG_HEAD\n\n▲ If you see that it is the state you want to go back to, just do\ngit reset --hard ORIG_HEAD\ngit rebase --abort\n\n▲ If ORIG_HEAD is no longer what you want, you should use git reflog, which is the usual way of getting yourself out of trouble in Git if you"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ve done something you shouldn'")]),t._v("t have.\ngit reflog\n\ngit log HEAD@{8}\n\ngit reset --hard HEAD@{8}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br")])]),s("p",[s("strong",[t._v("15. Usage scenario: Retrieving branch names from within a post-checkout hook")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/25590292",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# $6 = previous branch, $8 is next branch")]),t._v("\ngit reflog | awk "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'NR==1{ print $6 \" -> \" $8; exit }'")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("16. Usage scenario: Recover git commits to (no branch)")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/12274441",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\n734713b... HEAD@{0}: commit: fixed refs handling, added gc auto, updated\nd921970... HEAD@{1}: merge phedders/rdocs: Merge made by recursive.\n1c002dd... HEAD@{2}: commit: added some blame and merge stuff\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("17. Usage scenario: How to list local git branches by order of last visited date")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/41872395",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog | grep -o "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkout: moving from .* to "')]),t._v(" |\\\n    sed -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/checkout: moving from //'")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/ to $//'")]),t._v(" | head -20\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# inspect reflog :")]),t._v("\ngit reflog |\\\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# keep messages matching 'checkout: ...'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# using -o to keep only this specific portion of the message")]),t._v("\ngrep -o "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"checkout: moving from .* to "')]),t._v(" |\\\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove parts which are not a branch (or commit, or anything) name :")]),t._v("\nsed -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/checkout: moving from //'")]),t._v(" -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/ to $//'")]),t._v("  |\\\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# keep only last 20 entries")]),t._v("\nhead -20\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br")])]),s("p",[s("strong",[t._v("18. Usage scenario: how to know which commit was last checked out?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/41646102",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog   ")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout -            # back to last checkout   ")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("19. Usage scenario: Reverting one of the commits in a squashed commit?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/52172190",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog branch_for_pr\n\ngit checkout branch_for_pr\ngit revert work_branch~2\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("20. Usage scenario: How to view git checkout tags history?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/32898590",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog --date=iso\n\ngit reflog | grep commit # find the lost commit\ngit cherry-pick HEAD@{4}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("21. Usage scenario: Get sha of the last commit before pull")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/17524740",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog --oneline | grep -m 1 "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"pull "')]),t._v(" | cut -d"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" -f1)\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("22. Usage scenario: Cancel git rebase if already pushed with force")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/51387823",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog feature-branch\n\ngit reset --hard {commitRef}\ngit push -f // this will push your branch back to how it was before rebase\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("23. Usage scenario: restore lost commit by a known folder name")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/4215762",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog -- path/to/the/affected/folder\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("24. Usage scenario: git checkout "),s("commit",{attrs:{hash:""}})],1)]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/58437630",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("25. Usage scenario: Git repository broken after moving files and directories")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/6422341",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ Try git reflog to see whether it still knows your proper "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'last'")]),t._v(" head, chances are it has it:\n git log HEAD@{0}\n\n git log HEAD@{1}\n\n▲ If you want to go back there, \n git checkout -b rescue HEAD@{0} # or whatever head it was\n\n▲ To create a rescue branch. If you"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'re sure enough it is the right version (and you don'")]),t._v("t have any uncommit changes you wanted to keep):\n git reset --hard HEAD@{0} # or whatever head it was\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[s("strong",[t._v("26. Usage scenario: How did I appear to lose data during a rebase?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/15278272",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("27. Usage scenario: How can I see the list of all commits that affect a specific file with git (including orphaned or dangling commits)")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/17196511",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog -- <file>\n\ngit merge <commit_id>\n\ngit reset --hard <commit_id>\n\ngit cherry-pick -n <commit_id>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("28. Usage scenario: How to undo git pull and retaining uncommitted changes")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/52669959",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git stash save "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"saving my uncommitted changes so I don\'t lose them when I reset"')]),t._v("\ngit reset --hard revision-where-branch-was-before-pulling # check git log or git reflog to see the ID you want\ngit stash pop # get my changes back on my working tree\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("29. Usage scenario: How to know which tag was checked out previously")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/21936543",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\n676699a HEAD@{0}: checkout: moving from\n        695326c489285ed5678ac04d58289bcb24019bb9 to tag2\n695326c HEAD@{1}: checkout: moving from master to tag1\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("p",[s("strong",[t._v("30. Usage scenario: Get latest code after cheking out old commit?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/24760218",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("31. Usage scenario: Git: after performing a commit, show the date of the last push to each remote")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/15050830",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git config core.logAllRefUpdates true\n\ngit reflog --date=local master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[s("strong",[t._v("32. Usage scenario: How to checkout a specific commit and save in another folder")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/34807456",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog   # get the sha or reflog shortname  of your desire commit, for example 29b89f9 \ngit branch branch_name 29b89f9    \ngit checkout branch_name\n\ngit checkout master\ngit branch -d branch_name\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("33. Usage scenario: how to find the deleted branches in remote repo")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/63577214",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git reflog\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("34. Usage scenario: Time of commit pushed to remote")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/19359134",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog origin/master | head"),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -5")])]),t._v("\ned9877e refs/remotes/origin/master@{0}: pull origin: fast-forward\nb63e5ed refs/remotes/origin/master@{1}: fetch origin: fast-forward\n51cabd3 refs/remotes/origin/master@{2}: fetch origin: fast-forward\n19e1764 refs/remotes/origin/master@{3}: fetch origin: fast-forward\n5414418 refs/remotes/origin/master@{4}: update by push\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("p",[s("strong",[t._v("35. Usage scenario: Get commit messages of feature branch after merge")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/45119441",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ You can, for the simple case, list commits accessible from testbranch, but not from develop:\ngit log testbranch ^develop --no-merges --pretty=oneline\n\n▲ If testbranch has been merged back to develop, especially in a fast-forward manner, an empty result is expected.\nMeaning: once a branch has been fast forwarded into another, there is no stating point anymore:\nd---d--t--t--t (testbranch)\n    |\n(develop)\n\ngit checkout develop\ngit merge testbranch\n\nd--d--t--t--t (testbranch, develop)\n\n▲ If you did branch out with testbranch yourself (that is, in your local repo) not too long ago (less than 90 days), you can check out the git reflog output, to get back a trace of the new testbranch event at <sha1>.\nSee "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"How do I check git log for a “fast-forward” merge?"')]),t._v(".\nTry:\ngit reflog show testbranch\n\ngit log develop ^<sha1>\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br")])])])}),[],!1,null,null,null);e.default=n.exports}}]);