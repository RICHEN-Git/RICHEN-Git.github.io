(window.webpackJsonp=window.webpackJsonp||[]).push([[58],{485:function(s,t,e){"use strict";e.r(t);var a=e(19),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-for-each-ref-output-information-on-each-ref"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-for-each-ref-output-information-on-each-ref"}},[s._v("#")]),s._v(" 📌 git for-each-ref - Output information on each ref")]),s._v(" "),e("h2",{attrs:{id:"count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#count"}},[s._v("#")]),s._v(" 🔹 --count")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list git tags with the dates of the original commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51830793",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("vonc@voncav:/mnt/d/git/git$ \n\ngit for-each-ref --count=3 --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(*authordate) %(*refname)'")]),s._v("\n\nThu Jun 21 10:00:06 2018 -0700 refs/tags/v2.18.0^{}\nWed Jun 13 12:57:07 2018 -0700 refs/tags/v2.18.0-rc2^{}\nMon Jun 4 21:41:41 2018 +0900 refs/tags/v2.18.0-rc1^{}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Get the id of the last git commit on any branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44558725",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname)'")]),s._v(" --count=1\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I see the most recent tagged commits in my repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1986539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --count")]),s._v("=3"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --sort")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" refs/tags |\n  while read sha1 objtype refname; do\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$refname - $sha1"')]),s._v("\n    GIT_PAGER=cat git log -1 $sha1\n    echo\n  done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Get latest tag of repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30206882",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --count=1 --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/tags\n\ngit describe --abbrev=0 --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"sort"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sort"}},[s._v("#")]),s._v(" 🔹 --sort")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I list all tags in my Git repository by the date they were created?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 223    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6270112",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=creatordate --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname) %(creatordate)'")]),s._v(" refs/tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list only active / recently changed branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 35    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11144311",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate:short) %(refname)'")]),s._v(" refs/heads refs/remotes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: show git branches with date of last commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44494345",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:short)%(color:reset))'")]),s._v("\n\n[alias]\n       branchcommits = !git for-each-ref --sort=committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:short)%(color:reset))'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to change git branch output order")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6630277",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Temporary alternative\ngit log --no-walk --date-order --oneline --decorate \\\n       $(git rev-list --branches --no-walk)\n\n4934e92 (HEAD, origin/testing, origin/HEAD, testing) reviewed INSTALL file as per #1331\n6215be7 (origin/maint, maint) reviewed INSTALL file as per #1331\n1e5e121 (origin/emmanuel, emmanuel) buffers: adjust the size in zfsfuse_stat\ne96783e (origin/compress, compress) buffers: adjust the size in zfsfuse_stat\nf6e2c6c (origin/unstable, unstable) revert the fatal condition again\ndd52720 (origin/master-lucid, master-lucid) lucid\n3b32fa7 (tag: 0.7.0, origin/master, master) panic revocation of 0.7.0-0 package necessitates an update\n6eaa64f (origin/maint-0.6.9, maint-0.6.9) Replace remount by drop_caches (on rollback)\n\n▲ The correct (unfortunately broken?) approach...\ngit for-each-ref --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*committerdate'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" refs/heads/\n\ncompress\nemmanuel\nmaint\nmaint-0.6.9\nmaster\nmaster-lucid\ntesting\nunstable\n\n▲ Alias\n[alias]\nbranch2 = git for-each-ref --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*committerdate'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" refs/heads/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: get the second most recent git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49133366",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-taggerdate --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname)'")]),s._v(" refs/tags | sed -n 2p  \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to list git tags with the dates of the original commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51830793",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("vonc@voncav:/mnt/d/git/git$ \n\ngit for-each-ref --count=3 --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(*authordate) %(*refname)'")]),s._v("\n\nThu Jun 21 10:00:06 2018 -0700 refs/tags/v2.18.0^{}\nWed Jun 13 12:57:07 2018 -0700 refs/tags/v2.18.0-rc2^{}\nMon Jun 4 21:41:41 2018 +0900 refs/tags/v2.18.0-rc1^{}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How can I see the most recent tagged commits in my repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1986539",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --count")]),s._v("=3"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --sort")]),s._v("=")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" refs/tags |\n  while read sha1 objtype refname; do\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$refname - $sha1"')]),s._v("\n    GIT_PAGER=cat git log -1 $sha1\n    echo\n  done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to invoke "),e("code",[s._v("git show")]),s._v(" only for the latest fetched branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41979732",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate refs/remotes/origin\n\ngit for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(objectname)"')]),s._v(" refs/remotes/origin | head -5 \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Get latest tag of repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-describe.html"}},[s._v("git describe")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30206882",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --count=1 --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/tags\n\ngit describe --abbrev=0 --tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: Get List of merged branches on github along with branch creator")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65364977",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate\n\ngit for-each-ref --no-merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"format"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#format"}},[s._v("#")]),s._v(" 🔹 --format")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Remove refs/original/heads/master from git repo after filter-branch --tree-filter?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 347    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7654880",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git update-ref -d refs/original/refs/heads/master\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n 1 git update-ref -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to remove unreferenced blobs from my Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 248    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14728706",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git remote rm origin\nrm -rf .git/refs/original/ .git/refs/remotes/ .git/*_HEAD .git/logs/\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/original/ | xargs -n1 --no-run-if-empty git update-ref -d\n\ngit tag | xargs git tag -d\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I list all tags in my Git repository by the date they were created?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 223    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6270112",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=creatordate --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname) %(creatordate)'")]),s._v(" refs/tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Undo git reset --hard with uncommitted files in the staging area")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 191    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7376959",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fsck --cache --unreachable $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(objectname)"')]),s._v(")\n\ngit show 907b308\n\ngit fsck --cache --unreachable $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(objectname)"')]),s._v(") > all\n\ngit fsck --cache --unreachable $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(objectname)"')]),s._v(") \\\n  $(egrep commit all | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 3)\n\ngit show b21700b09c0bc0fc848f67dd751a9e4ea5b4133b\ngit show de629830603289ef159268f443da79968360913a\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to iterate through all git branches using bash script")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 177    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3847586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --shell \\\n  --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --oneline %(refname) ^origin/master'")]),s._v(" \\\n  refs/heads/\n\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" ^origin/master\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/other'")]),s._v(" ^origin/master\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/pu'")]),s._v(" ^origin/master\n\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/heads/); do\n    git log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" ^origin/master\ndone\n\nbranches=()\neval "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"")]),s._v("\nfor branch in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branches[@]}"')]),s._v("; do\n    # …\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to find the current git branch in detached HEAD state")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 51    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6064223",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log -n 1 --pretty=%d HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# or equivalently:")]),s._v("\ngit show -s --pretty=%d HEAD\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname) %(refname:short)'")]),s._v(" refs/heads | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/^$(git rev-parse HEAD)/ {print \\$2}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to list only active / recently changed branches in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 35    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11144311",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate:short) %(refname)'")]),s._v(" refs/heads refs/remotes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: List git tag names, dates and messages")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 28    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26563410",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short) %(taggerdate) %(subject) %(body)"')]),s._v(" refs/tags\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: List all local git branches without an asterisk")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 28    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51697007",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How can I list all lightweight tags?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[s._v("git show-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21032332",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/tags/\n\ngit show-ref --tags\n\ngit for-each-ref refs/tags/ --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objecttype) %(refname:short)'")]),s._v(" |\n    while read ty name; do [ $ty = commit ] && echo $name; done\n\ngit for-each-ref refs/tags/ --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objecttype) %(refname:short)'")]),s._v(" |\n    while read ty name; do [ $ty = tag ] && echo $name; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: Git - list remote branches with their author names")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53053513",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v("\n\ngit for-each-ref --sort=committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" refs/remotes\n\ngit for-each-ref --sort=committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(committerdate) %09 %(authorname) %09 %(refname)"')]),s._v(" refs/remotes\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("12. Usage scenario: show git branches with date of last commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44494345",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:short)%(color:reset))'")]),s._v("\n\n[alias]\n       branchcommits = !git for-each-ref --sort=committerdate refs/heads/ --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) - %(authorname) (%(color:green)%(committerdate:short)%(color:reset))'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("13. Usage scenario: How to get a list of incoming commits on git push for a new branch in a hook")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4531905",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list $new_sha1 $(git for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^%(refname:short)'")]),s._v(" refs/heads/)\n\ngit rev-list $new_sha1 ^master ^foo ^bar ^baz\n\nif ! [ $old_sha1 = 0000000000000000000000000000000000000000 ] ; then\n    excludes=( ^$old_sha1 )\nelse\n    excludes=( $(git for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^%(refname:short)'")]),s._v(" refs/heads/) )\nfi\n\ngit rev-list $new_sha1 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${excludes[@]}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v('14. Usage scenario: Wildcards in branch names specification in "git merge"')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5202924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin/share/*bran*\n\ngit merge $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin/share/)\n\ngit merge origin/share/branch1\ngit merge origin/share/branch2\ngit merge origin/share/another-branch\n\nfor c in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname)"')]),s._v(" refs/remotes/origin/share/)\ndo\n    git merge $c || break\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("15. Usage scenario: Sourcetree: Find out if a branch is merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34413416",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" refs/heads/); do\n  if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" ]; then\n    t=$(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" --merged "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(" refs/heads/|grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("|grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(")\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${t}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n      echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("\n    else\n      t=$(git branch --contains "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(")\n      if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${t}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("    \n      fi\n    fi\n  fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("16. Usage scenario: find out who created a branch on a remote git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53535353",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" | sort\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("17. Usage scenario: Using git subtree merging, while also merging in all branches of all merged subtrees")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2139427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.;s.remotes.tags/all.')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\ngit for-each-ref --shell --format \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --force --track -l all/%(refname:short) %(refname:short)'")]),s._v(" refs/remotes \\\n  | sh\n\nmkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.remotes.heads/all.')\"")]),s._v("\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.g')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("18. Usage scenario: By given name of a Git remote-tracking branch how to find which local branch tracks it?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65220872",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(if:equals=upstream/develop)%(upstream:short)%(then)%(refname:short)%(end)"')]),s._v(" refs/heads | sort -u\n\ngit config --global alias.who-tracks "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git for-each-ref --format=\"%(if:equals=upstream/$1)%(upstream:short)%(then)%(refname:short)%(end)\" refs/heads | sort -u; }; f'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then when you need it :")]),s._v("\ngit who-tracks develop\ngit who-tracks another/branch\n\ngit config --global alias.who-tracks "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'!f() { git for-each-ref --format=\"%(if:equals=$1)%(upstream:short)%(then)%(refname:short)%(end)\" refs/heads | sort -u; }; f'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# then when you need it :")]),s._v("\ngit who-tracks upstream/develop\ngit who-tracks origin/another/branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br")])]),e("p",[e("strong",[s._v("19. Usage scenario: Change naming convention of tags inside a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24246368",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit for-each-ref --shell --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ref=%(refname:short)"')]),s._v(" refs/tags | \\\nwhile read entry\ndo\n\n    # assign tag name to $ref variable\n    eval "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$entry"')]),s._v("\n\n    # test if $ref starts with v\n    ref2="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref#v}"')]),s._v("\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref2}"')]),s._v(" ]]; then\n\n        # rename/delete tag\n        git push origin refs/tags/${ref}:refs/tags/${ref2} :refs/tags/${ref}\n        git tag -d ${ref}\n    fi\n\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("20. Usage scenario: Show most recent commit on each remote branch on origin using "),e("code",[s._v("git for-each-ref")]),s._v(" and "),e("code",[s._v("git log")])])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34704396",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for ref in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'origin/'")]),s._v(")\ndo\n    git --no-pager log $ref -n 1 --oneline\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("21. Usage scenario: How to update a file across all branches in a Git repository")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45075092",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\nif [ $# != 1 ]; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"usage: $0 <filename>"')]),s._v("\n    exit;\nfi\n\nbranches=`git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads/\\*`\ncurr_branch=`git rev-parse --abbrev-ref HEAD`\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# echo "curr_branch:"$curr_branch')]),s._v("\n\nfilename=$1\nfile_in_repo=`git ls-files ${filename}`\n\nif [ ! "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$file_in_repo"')]),s._v(" ]; then\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"file not added in current branch"')]),s._v("\n    exit\nfi\n\nfor branch in ${branches[@]}; do\n    if [[ ${branch} != ${curr_branch} ]]; then\n        git checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("\n        git checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${curr_branch}"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$filename"')]),s._v("\n        git commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Added $filename in $branch from $curr_branch"')]),s._v("\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n    fi\ndone\ngit checkout "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${curr_branch}"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br")])]),e("p",[e("strong",[s._v("22. Usage scenario: get the second most recent git tag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49133366",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-taggerdate --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname)'")]),s._v(" refs/tags | sed -n 2p  \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("23. Usage scenario: Create new git repo from already existing repo's subdirectory")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6687726",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("for branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/remotes/origin | grep -v HEAD); do\n  git checkout -b $(basename $branch) $branch\n  git filter-branch -f --subdirectory-filter subdirectory HEAD -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("24. Usage scenario: Branch tracked from a remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55090264",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(if:equals=toto/hello)%(upstream:short)%(then)%(refname:short)%(else)%(end)'")]),s._v(" refs/heads\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(if:equals=toto/hello)%(push:short)%(then)%(refname:short)%(else)%(end)'")]),s._v(" refs/heads\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("25. Usage scenario: How to list all tags from commits, which are not contained in any branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/64621160",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Tags aren"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t from commits, they just point to commits.  But your question does have an answer—it'")]),s._v("s just phrased a bit oddly.  The more accurate phrasing leads us to the answers:\ngit for-each-ref refs/tags\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref refs/tags")]),s._v("\n04c6e9e9ca34226db095bbaa1218030f99f0b7c6 commit refs/tags/a\nd5aef6e4d58cfe1549adef5b436f3ace984e8c86 tag    refs/tags/b\n\n▲ This isn"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'t a solution yet but it'")]),s._v("s getting us there.  The next thing we"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'d like to do is find out whether the target of an annotated tag is a commit object, and if so, find the commit object'")]),s._v("s hash.  It turns out that git for-each-ref itself can do this, using the --format directive %(*objecttype) and %(*objectname).  Annoyingly, these %(*...) directives produce nothing when the tag is a lightweight tag, which requires a bit of gimmickry:\ngit for-each-ref \\\n    --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname) %(objecttype) %(objectname) %(*objecttype) %(*objectname)'")]),s._v(" \\\n    refs/tags\n\n▲ This produces as its output a series of lines of either three or five columns each.  The first three columns are the reference name, the object type (which might be "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag"')]),s._v("), the initial tag hash ID, and then if the last two columns are present, the target type and final target ID.  We need to feed these to a shell script:\ngit for-each-ref \\\n    --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname) %(objecttype) %(objectname) %(*objecttype) %(*objectname)'")]),s._v(" \\\n    refs/tags |\n    while read name dtype dobj itype iobj; do\n        ...\n    done\n\n    if [ $dtype = tag ]; then\n        otype=$itype obj=$iobj\n    else\n        otype=$dtype obj=$dobj\n    fi\n\n    [ $otype == commit ] || continue\n\n    n=$(git for-each-ref refs/heads --contains $obj | wc -l)\n\n    if [ $n -eq 0 ]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag $name keeps $obj alive"')]),s._v("\n    fi\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short) %(objecttype) %(objectname) %(*objecttype) %(*objectname)'")]),s._v(" refs/tags |\nwhile read name dtype dobj itype iobj; do\n    if [ $dtype = tag ]; then\n        otype=$itype obj=$iobj\n    else\n        otype=$dtype obj=$dobj\n    fi\n    [ $otype == commit ] || continue\n    n=$(git for-each-ref refs/heads --contains $obj | wc -l)\n    if [ $n -eq 0 ]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tag $name keeps $obj alive"')]),s._v("\n    fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br")])]),e("p",[e("strong",[s._v("26. Usage scenario: How to list git tags with the dates of the original commits")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51830793",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("vonc@voncav:/mnt/d/git/git$ \n\ngit for-each-ref --count=3 --sort="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-*authordate'")]),s._v(" --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(*authordate) %(*refname)'")]),s._v("\n\nThu Jun 21 10:00:06 2018 -0700 refs/tags/v2.18.0^{}\nWed Jun 13 12:57:07 2018 -0700 refs/tags/v2.18.0-rc2^{}\nMon Jun 4 21:41:41 2018 +0900 refs/tags/v2.18.0-rc1^{}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("27. Usage scenario: How remove directory/files from all branches in a repo? (as new commit in each)")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40271678",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("28. Usage scenario: Git colors: How do I set colors for the upstream branch "),e("em",[s._v("status")]),s._v(" in “git branch -vv”?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51617937",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref \\\n    --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short) '")]),s._v("\\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(if:equals=gone)%(upstream:track,nobracket)%(then)'")]),s._v("\\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(color:red)%(end)%(upstream:track)%(color:black)'")]),s._v(" \\\n    refs/heads/\n\ngit for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short) %(if:equals=gone)%(upstream:track,nobracket)%(then)%(color:red)%(end)%(upstream:track)%(color:black)'")]),s._v(" refs/heads/\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("29. Usage scenario: How to invoke "),e("code",[s._v("git show")]),s._v(" only for the latest fetched branches?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41979732",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --sort=-committerdate refs/remotes/origin\n\ngit for-each-ref --sort=-committerdate --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(objectname)"')]),s._v(" refs/remotes/origin | head -5 \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("30. Usage scenario: How to get only git revisions that are branch heads?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55391064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(objectname:short)'")]),s._v(" refs/remotes/origin/merge-requests/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("31. Usage scenario: How to get the author name of a Git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43994704",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" | sort -k5n -k2M -k3n -k4n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("32. Usage scenario: Get List of merged branches on github along with branch creator")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65364977",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate\n\ngit for-each-ref --no-merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("33. Usage scenario: Git: Determine if all local commits exist in the upstream regardless of branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8208353",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname:short)'")]),s._v(" refs/heads |\nwhile read branch; do\n    # see if $branch is safe, using your trivial method\n    check_branch $branch\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"shell"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[s._v("#")]),s._v(" 🔹 --shell")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to iterate through all git branches using bash script")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 177    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3847586",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --shell \\\n  --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git log --oneline %(refname) ^origin/master'")]),s._v(" \\\n  refs/heads/\n\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/master'")]),s._v(" ^origin/master\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/other'")]),s._v(" ^origin/master\ngit log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/heads/pu'")]),s._v(" ^origin/master\n\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/heads/); do\n    git log --oneline "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$branch"')]),s._v(" ^origin/master\ndone\n\nbranches=()\neval "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"")]),s._v("\nfor branch in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branches[@]}"')]),s._v("; do\n    # …\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Using git subtree merging, while also merging in all branches of all merged subtrees")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[s._v("git remote")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2139427",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("mkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.;s.remotes.tags/all.')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\ngit for-each-ref --shell --format \\\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git branch --force --track -l all/%(refname:short) %(refname:short)'")]),s._v(" refs/remotes \\\n  | sh\n\nmkdir $COLLECTION_REPO && cd $COLLECTION_REPO &&\ngit init\ngit remote add alpha <url/path-to-alpha-repo>\ngit remote add bravo <url/path-to-bravo-repo>\ngit remote add charlie <url/path-to-charlie-repo>\nfor r in $(git remote); do\n    git config remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.remotes.heads/all.')\"")]),s._v("\n    git config --add remote.$r.fetch \\\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git config remote.$r.fetch | sed -e 's.heads.tags.g')\"")]),s._v("\n    git config remote.$r.tagopt --no-tags\ndone\n\ngit remote update\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Change naming convention of tags inside a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24246368",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\n\ngit for-each-ref --shell --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ref=%(refname:short)"')]),s._v(" refs/tags | \\\nwhile read entry\ndo\n\n    # assign tag name to $ref variable\n    eval "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$entry"')]),s._v("\n\n    # test if $ref starts with v\n    ref2="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref#v}"')]),s._v("\n    if [[ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${ref2}"')]),s._v(" ]]; then\n\n        # rename/delete tag\n        git push origin refs/tags/${ref}:refs/tags/${ref2} :refs/tags/${ref}\n        git tag -d ${ref}\n    fi\n\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I find the most recent tag across all branches in a git repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47506393",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#list all the tags ")]),s._v("\ngit for-each-ref --shell refs/tags |\n  awk '{\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#transform the object name into the commit date as a Unix epoch timestamp ")]),s._v("\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git log -1 --pretty=%cd --date=unix "')]),s._v("$1 | getline $1;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#if the tag does not refer to a commit, ignore it")]),s._v("\n    if($0 ~ /^[0-9a-f]/) print;\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#sort by the timestamp reversely, from the youngest to the oldest")]),s._v("\n  }' | sort -r |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get the first youngest tag")]),s._v("\n  head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" |\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#get all the tags that point at this tag in case there are multiple youngest tags, ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#with a side effect to remove "refs/tags/"')]),s._v("\n  xargs -i git tag --points-at {}\n\ngit for-each-ref --shell refs/tags | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{\"git log -1 --pretty=%cd --date=unix \"$1 | getline $1;if($0 ~ /^[0-9a-f]/) print;}'")]),s._v(" | sort -r |head -1 | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $NF}'")]),s._v(" | xargs -i git tag --points-at {}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to merge all branches with the master branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[s._v("git pull")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26389910",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\ngit checkout master\ngit pull\n\nbranches=()\neval "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(git for-each-ref --shell --format='branches+=(%(refname))' refs/heads/)\"")]),s._v("\n\nfor branch in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branches[@]}"')]),s._v("; do\n   branch=`expr substr $branch 12 100`\n   git checkout $branch\n   git merge master\ndone\n\ngit checkout master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Flatten old GIT branches to master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[s._v("git cherry-pick")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31271224",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git cherry-pick $(git for-each-ref -- --glob refs/heads | cut -d\\  -f1)\n\ngit for-each-ref --shell --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git cherry-pick %(refname)"')]),s._v(" refs/heads |sh \n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"points-at"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#points-at"}},[s._v("#")]),s._v(" 🔹 --points-at")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I get all symbolic names from a Git commit hash?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[s._v("git tag")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/62504960",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --points-at=HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git init")]),s._v("\n$ touch a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git add a")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" a")]),s._v("\n[master (root-commit) eb3222d] a\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" branch1")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'branch1'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -b")]),s._v(" branch2")]),s._v("\nSwitched to a new branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'branch2'")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag tag1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag tag2")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git tag"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -a")]),s._v(" tag3"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -m")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"annotated tag"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --points")]),s._v("-at=HEAD")]),s._v("\neb3222db1821633a54ccd0a6434e883c4cb71b98 commit refs/heads/branch1\neb3222db1821633a54ccd0a6434e883c4cb71b98 commit refs/heads/branch2\neb3222db1821633a54ccd0a6434e883c4cb71b98 commit refs/heads/master\neb3222db1821633a54ccd0a6434e883c4cb71b98 commit refs/tags/tag1\neb3222db1821633a54ccd0a6434e883c4cb71b98 commit refs/tags/tag2\n0dbba96f519c2ad1b470f97171230004addff896 tag    refs/tags/tag3\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I find if a git SHA points to a branch HEAD?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32988371",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --points-at <branch_name>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"merged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#merged"}},[s._v("#")]),s._v(" 🔹 --merged")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Sourcetree: Find out if a branch is merged")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/34413416",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nfor branch in $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" refs/heads/); do\n  if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" ]; then\n    t=$(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%(refname:short)"')]),s._v(" --merged "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(" refs/heads/|grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("|grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(")\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${t}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n      echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("\n    else\n      t=$(git branch --contains "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$1"')]),s._v(" | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v(")\n      if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${t}"')]),s._v(" != "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${branch}"')]),s._v("    \n      fi\n    fi\n  fi\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Get List of merged branches on github along with branch creator")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65364977",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate\n\ngit for-each-ref --no-merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"no-merged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-merged"}},[s._v("#")]),s._v(" 🔹 --no-merged")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Get List of merged branches on github along with branch creator")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65364977",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref --merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate\n\ngit for-each-ref --no-merged=HEAD --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(committerdate) %09 %(authorname) %09 %(refname)'")]),s._v(" --sort=committerdate | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'refs/remotes/origin/'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"contains"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#contains"}},[s._v("#")]),s._v(" 🔹 --contains")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find all refs that contain a commit in their history in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32987802",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ To add to torek's answer, git 2.7 (Q4 2015) will offer a more complete version of git for-each-ref, which now support the --contains\ngit for-each-ref --contains <SHA1>\n\n* kn/for-each-tag-branch:\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  parse-options.h: add macros for "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  parse-option: rename parse_opt_with_commit()\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--merged'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--no-merged'")]),s._v(" options\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--merged'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--no-merged'")]),s._v(" options\n  ref-filter: add parse_opt_merge_filter()\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--points-at'")]),s._v(" option\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--points-at'")]),s._v(" option  \n\n▲ Note that starting Git 2.13 (Q2 2017), git for-each-ref --no-contains <SHA1> is finally supported!\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Getting a list of all children of a given commit")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24231679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --ancestry-path --graph --decorate --oneline ^A \\\n   --all $(git fsck --unreachable --no-reflogs | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'$2==\"commit\" {print $3}'")]),s._v(")\n\ngit for-each-ref --contains A\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"no-contains"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-contains"}},[s._v("#")]),s._v(" 🔹 --no-contains")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find all refs that contain a commit in their history in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32987802",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ To add to torek's answer, git 2.7 (Q4 2015) will offer a more complete version of git for-each-ref, which now support the --contains\ngit for-each-ref --contains <SHA1>\n\n* kn/for-each-tag-branch:\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  parse-options.h: add macros for "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--contains'")]),s._v(" option\n  parse-option: rename parse_opt_with_commit()\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--merged'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--no-merged'")]),s._v(" options\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--merged'")]),s._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--no-merged'")]),s._v(" options\n  ref-filter: add parse_opt_merge_filter()\n  for-each-ref: add "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--points-at'")]),s._v(" option\n  ref-filter: implement "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--points-at'")]),s._v(" option  \n\n▲ Note that starting Git 2.13 (Q2 2017), git for-each-ref --no-contains <SHA1> is finally supported!\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Estimate the size of a Git repository before cloning it")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28679647",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref refs/size | while read . . ref; do git update-ref --delete $ref; done\nset -- $(du -sh .git/objects)\ngit update-ref refs/size/$1-as-of-$(date +%Y%m%dT%H%M%S%Z) HEAD\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: list all downstream local branches in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58577117",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git for-each-ref refs/heads\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Get default remote push and default remote branch")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47540120",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("$ cat .git/config\n...\n[remote "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),s._v("]\n    url = https://where.do.we.come/from\n    fetch = refs/heads/*:refs/remote/origin/*\n[remote "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello-world"')]),s._v("]\n    url = https://hello.world/git\n    fetch = refs/heads/*:refs/remote/origin/*\n    pushURL = hello.world:git\n    push = refs/heads/*:refs/heads/*\n[branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("]\n    remote = origin\n    pushRemote = hello-world\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref \\")]),s._v("\n  --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(upstream) %(upstream:remotename) %(push:remotename)'")]),s._v(" \\\n  refs/heads/master\nrefs/remotes/origin/master origin hello-world\n\n$ cat .git/config\n...\n[remote "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"origin"')]),s._v("]\n    url = https://where.do.we.come/from\n    fetch = refs/heads/*:refs/remote/origin/*\n[branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("]\n    remote = origin\n    merge = refs/heads/master\n[branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"develop/with/topics"')]),s._v("]\n    remote = origin\n    merge = refs/heads/develop/with/topics\n...\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git for-each-ref \\")]),s._v("\n    --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(push) %(push:remoteref)'")]),s._v(" \\\n    refs/heads\nrefs/remotes/origin/master refs/heads/master\nrefs/remotes/origin/develop/with/topics refs/heads/develop/with/topics\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Make a git alias to remove all local merged branches")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38723530",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("[alias]\n  branch-clear = !git for-each-ref ... | ...\n\n[alias]\n  branch-clear = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { git for-each-ref ... | ...; }; f"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);