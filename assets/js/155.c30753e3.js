(window.webpackJsonp=window.webpackJsonp||[]).push([[155],{583:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-write-tree-create-a-tree-object-from-the-current-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-write-tree-create-a-tree-object-from-the-current-index"}},[t._v("#")]),t._v(" 📌 git write-tree - Create a tree object from the current index")]),t._v(" "),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Remove commits before specific commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 29    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-gc.html"}},[t._v("git gc")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3063486",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b oldroot X\nTREE=`git write-tree`\nCOMMIT=`echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Killed history"')]),t._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$TREE"')]),t._v("`\ngit checkout -b newroot "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$COMMIT"')]),t._v("\ngit rebase --onto newroot oldroot master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# repeat for other branches than master that should use the new initial commit")]),t._v("\ngit checkout master\ngit branch -D oldroot\ngit branch -D newroot\ngit gc # WARNING: if everything's done right, this will actually delete your history from the repo!\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Commit directly to a bare repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[t._v("git show-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[t._v("git update-index")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25556917",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\ncd myrepo.git\n\nMY_BRANCH=master\nMY_FILE_CONTENTS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, world!\\n'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note this is just a lock for this script. It's not honored by other tools.")]),t._v("\nlockfile -1 -r 10 lock || exit 1\n\nPARENT_COMMIT="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git show-ref -s "')]),t._v("$MY_BRANCH"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Empty the index, not sure if this step is necessary")]),t._v("\ngit read-tree --empty\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load the current tree. A commit ref is fine, it'll figure it out.")]),t._v("\ngit read-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${PARENT_COMMIT}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Create a blob object. Some systems have "shasum" instead of "sha1sum"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Might want to check if it already exists. Left as an excercise. :)")]),t._v("\nBLOB_ID=$(printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blob %d\\0%s"')]),t._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | sha1sum | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" -f 1)\nmkdir -p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objects/${BLOB_ID:0:2}"')]),t._v("\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blob %d\\0%s"')]),t._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | perl -MCompress::Zlib -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undef $/; print compress(<>)'")]),t._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objects/${BLOB_ID:0:2}/${BLOB_ID:2}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now add it to the index.")]),t._v("\ngit update-index --add --cacheinfo 100644 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$BLOB_ID"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myfile.txt"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a tree from your new index")]),t._v("\nTREE_ID=$(git write-tree)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit it.")]),t._v("\nNEW_COMMIT=$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My commit message"')]),t._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$TREE_ID"')]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$PARENT_COMMIT"')]),t._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update the branch")]),t._v("\ngit update-ref "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refs/heads/$MY_BRANCH"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$NEW_COMMIT"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$PARENT_COMMIT"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Done")]),t._v("\nrm -f lock\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: compute git hash of all "),e("em",[t._v("uncommitted")]),t._v(" code")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23816428",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u && git write-tree && git reset\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Autofixup consecutive commits of same message and author (of the complete repo)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26354448",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\nauthor="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"')]),t._v("\nmsg="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat)"')]),t._v("\ntree="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\nparents=()\nshift\nwhile getopts "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":p:"')]),t._v(" opt; do\n    case $opt in\n        p)\n            parents=(${parents[*]} $OPTARG)\n            ;;\n        ?)\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid option: -$OPTARG"')]),t._v(" >&2\n            exit 1\n            ;;\n    esac\ndone\n\n\ncreate_parents_option() {\n    parentsstring="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    for parent in $@; do\n        parentsstring+="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-p $parent "')]),t._v("\n    done\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$parentsstring"')]),t._v("\n}\n\nget_msg() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%B"')]),t._v(" $1\n}\n\nget_author() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%aN <%aE>"')]),t._v(" $1\n}\n\nsquash_commit() {\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$author"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_author $1)"')]),t._v(" ] && [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$msg"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_msg $1)"')]),t._v(" ]; then\n        git read-tree -m --aggressive ${1}^{tree} $tree >/dev/null\n        tree=$(git write-tree)\n        parents=($(git log --format=%P -1 $1))\n    fi\n}\n\nif [[ ${#parents[@]} == 1 ]]; then\n    squash_commit ${parents[0]}\nfi\n\ngit commit-tree $tree $(create_parents_option ${parents[@]}) -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$msg"')]),t._v("\n\ngit filter-branch --commit-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat /path/to/the/script)"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);