(window.webpackJsonp=window.webpackJsonp||[]).push([[157],{585:function(s,t,e){"use strict";e.r(t);var n=e(19),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"gitweb-git-web-interface-web-frontend-to-git-repositories"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#gitweb-git-web-interface-web-frontend-to-git-repositories"}},[s._v("#")]),s._v(" 📌 gitweb - Git web interface (web frontend to Git repositories)")]),s._v(" "),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: cloning repository from gitweb")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-bundle.html"}},[s._v("git bundle")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20211104",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If enabled in the gitweb.conf, gitweb can serve "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"snapshots"')]),s._v(" (in zip or tag.gz format), but this isn't the full history of the repository: it is only a compressed archive of any tree or commit, as produced by git-archive.\nhttp://<gitweburl>/gitweb.cgi?p=<repo>.git;a=snapshot;h=HEAD\n\n▲ If there is any command, it needs to be executed on the server.\nFor instance, you can ask for a bundle (git bundle):\ncd /path/to/bare/repo\ngit bundle create ../repo.bundle --all\n\ncd /path/to/repo.bundle\ngit clone repo.bundle\ncd repo\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: git-shell - New repositories")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-version.html"}},[s._v("git version")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[s._v("git clone")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21283587",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Repository Setup & Essentials\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Create git user account")]),s._v("\nsudo adduser --shell $(which git-shell) --gecos "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git version control'")]),s._v(" --disabled-password git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Add git user to the appropriate groups")]),s._v("\nsudo usermod -a -G www-data git\nsudo usermod -a -G developers git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Setup authorized_keys file for access")]),s._v("\nsudo mkdir -p /home/git/.ssh\nsudo touch /home/git/.ssh/authorized_keys\nsudo chmod 600 /home/git/.ssh/authorized_keys\nsudo chmod 700 /home/git/.ssh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Copy the git-shell-commands to get limited shell access")]),s._v("\nsudo cp -r /usr/share/doc/git/contrib/git-shell-commands /home/git/\nsudo chmod 750 /home/git/git-shell-commands/*\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Fix permissions")]),s._v("\nsudo chown -R git:git /home/git/\n\ncat ~/.ssh/id_rsa.pub | sudo tee -a /home/git/.ssh/authorized_keys\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"AllowUsers git"')]),s._v(" | sudo tee -a /etc/ssh/sshd_config\nsudo service ssh restart\n\nsudo mkdir -p /home/repo\nsudo chown -R git:www-data /home/repo\n\n▲ Create a HelloWorld Repository\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Create the directory (always end with .git)")]),s._v("\nsudo mkdir /home/repo/helloworld.git\ncd /home/repo/helloworld.git\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Initialize a bare repository")]),s._v("\nsudo git --bare init\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Some meta-data")]),s._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World Repository. Testing system configuration"')]),s._v(" | sudo tee /home/repo/helloworld.git/description\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[gitweb]"')]),s._v(" | sudo tee -a /home/repo/helloworld.git/config\necho -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\towner = \\\\"')]),s._v("Rami Al-Ghanmi\\\\"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" | sudo tee -a /home/repo/helloworld.git/config\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#Fix ownership of repository")]),s._v("\nsudo chown -R git:www-data /home/repo/helloworld.git\n\ngit clone git@$(hostname):/home/repo/helloworld.git\ncd helloworld\nwget https://raw.github.com/gist/3205222/HelloWorld.cpp\ngit add HelloWorld.cpp\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Initial commit with HelloWorld in C++"')]),s._v("\ngit push origin master\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git format patch limit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[s._v("git format-patch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3811881",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v(" $ git format-patch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -3")])]),s._v("\n 0001-gitweb-Prepare-for-splitting-gitweb.txt\n 0002-gitweb-Create-Gitweb-Git-module.txt\n Skipping merge commit: Merge branch "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'maint'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);