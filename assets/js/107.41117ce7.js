(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{534:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-read-tree-reads-tree-information-into-the-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-read-tree-reads-tree-information-into-the-index"}},[t._v("#")]),t._v(" 📌 git read-tree - Reads tree information into the index")]),t._v(" "),e("h2",{attrs:{id:"m"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[t._v("#")]),t._v(" 🔹 -m")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to move files from one git repo to another preserving history using "),e("code",[t._v("git format-patch")]),t._v("and "),e("code",[t._v("git am")])])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[t._v("git mktree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28840897",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make a throwaway sandbox to play in:")]),t._v("\ngit clone -s . /tmp/deleteme\ncd !$\ngit checkout -b sliced\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do it")]),t._v("\ngit filter-branch --subdirectory-filter your/subdir\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and if the result looks good:")]),t._v("\ngit push origin sliced\n\ngit filter-branch --index-filter '\n        git read-tree --prefix=des/ti/nation/    $GIT_COMMIT:source/subdir\n        git read-tree -m                         $GIT_COMMIT    `git mktree </dev/null`\n'\n\n    git read-tree --prefix=destination/subdir/ $GIT_COMMIT:source/subdir\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How do I checkout a single folder from git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-version.html"}},[t._v("git version")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4162397",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --version")])]),t._v("\ngit version 1.7.0.4\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone http://github.com/mongodb/mongo.git")]),t._v("\n$ cd mongo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git config core.sparsecheckout true")]),t._v("\n$ echo jstests >.git/info/sparse-checkout \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" HEAD")]),t._v("\n$ ls\njstests\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Autofixup consecutive commits of same message and author (of the complete repo)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26354448",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\nauthor="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"')]),t._v("\nmsg="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat)"')]),t._v("\ntree="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\nparents=()\nshift\nwhile getopts "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":p:"')]),t._v(" opt; do\n    case $opt in\n        p)\n            parents=(${parents[*]} $OPTARG)\n            ;;\n        ?)\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid option: -$OPTARG"')]),t._v(" >&2\n            exit 1\n            ;;\n    esac\ndone\n\n\ncreate_parents_option() {\n    parentsstring="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    for parent in $@; do\n        parentsstring+="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-p $parent "')]),t._v("\n    done\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$parentsstring"')]),t._v("\n}\n\nget_msg() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%B"')]),t._v(" $1\n}\n\nget_author() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%aN <%aE>"')]),t._v(" $1\n}\n\nsquash_commit() {\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$author"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_author $1)"')]),t._v(" ] && [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$msg"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_msg $1)"')]),t._v(" ]; then\n        git read-tree -m --aggressive ${1}^{tree} $tree >/dev/null\n        tree=$(git write-tree)\n        parents=($(git log --format=%P -1 $1))\n    fi\n}\n\nif [[ ${#parents[@]} == 1 ]]; then\n    squash_commit ${parents[0]}\nfi\n\ngit commit-tree $tree $(create_parents_option ${parents[@]}) -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$msg"')]),t._v("\n\ngit filter-branch --commit-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat /path/to/the/script)"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to track revision history of revision history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23746356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from the top:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and commit the empty skeleton")]),t._v("\ngit init book\ncd !$\nmkdir -p sect{1,2,3}\ntouch {.,!$}/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy in any initial content here")]),t._v("\ngit add .\ngit ls-files -s # to see exactly what you've done so far\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now git is directly tracking content in each section, and commands in the ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parent will _ignore_ the existence of any nested repositories you subsequently ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create, but not there worktrees (because of the existing tracked content). viz.:")]),t._v("\n\n( cd sect1\n  git init \n  git add . \n  git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n  git branch publishing-history\n)\n^1^2\n^2^3\n\ncd ..\ngit add -A .\ngit commit\npublished=`git rev-parse HEAD`\n\nfor section in sect*; do\n    cd $section\n    git update-ref refs/heads/publishing-history $(\n        # log where the checked-out commit was published\n        git commit-tree \\\n                  -p publishing-history \\\n                  -p `git rev-parse HEAD` \\\n                  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"## published in main repository commit $published ##"')]),t._v(" \\\n                HEAD^{tree}  # just `HEAD:` will work too\n    )\n    cd ..\ndone\n\ngit symbolic-ref HEAD refs/heads/newmaster\n\ncd ../main\ngit read-tree --empty\nfor repo in sect{1,2,3}; do\n    ( cd ../$repo\n      tag -f fetchme HEAD^{tree}\n    )\n    git fetch ../sect1 fetchme\n    git read-tree -m --prefix=sect1 FETCH_HEAD\ndone\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br")])]),e("h2",{attrs:{id:"reset"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset"}},[t._v("#")]),t._v(" 🔹 --reset")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to disable sparse checkout after enabled?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36195275",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Undoing sparse checkout"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the full tree back")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(" > $SC_FILE\ngit config core.sparsecheckout true\ngit read-tree --reset -u HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wipe out all traces of sparse checkout support")]),t._v("\nrm $SC_FILE\ngit config core.sparsecheckout false\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/info/sparse-checkout\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/modules/<MODULEPATH>/info/sparse-checkout\ngit read-tree -mu HEAD\ngit config core.sparseCheckout false\n\ngit read-tree --dry-run HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v('2. Usage scenario: Git - Can\'t Push - "! [remote rejected] master -> master (Working directory has unstaged changes)"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51236225",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\nset -ex\ngit read-tree --reset -u HEAD "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to get back before a git stash -k followed by a git stash pop?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60858281",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git read-tree --reset -u stash    # reset index and work tree to the stashed work tree\ngit read-tree stash^2             # reset the index to the stashed index\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#u"}},[t._v("#")]),t._v(" 🔹 -u")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I merge a sub directory in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 86    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5190916",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\ngit remote add -f infochimps git://github.com/infochimps/cluster_chef.git\n\n\ngit merge --allow-unrelated-histories -s ours --no-commit infochimps/master\n\n\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merging in infochimps cassandra'")]),t._v("\n\ngit rm -r cassandra\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: merging git repositories at different directory levels")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 33    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8929615",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch /home/whoever/dev/B master\n\ngit merge -s ours --no-commit FETCH_HEAD\n\ngit read-tree --prefix=src/B/ -u FETCH_HEAD\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge in the history of master from B into src/B"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git merge submodule into parent tree cleanly and preserving commit history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23328223",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add site https://ajf-@bitbucket.org/ajf-/site.git\ngit remote add wpsite https://ajf-@bitbucket.org/ajf-/wpsite.git\n\ngit fetch --all\n\ngit checkout -b site-branch site/some_branch\ngit checkout -b wpsite-branch wpsite/some_other_branch\n\ngit checkout master\n\ngit checkout -b new-superproject master\n\ngit read-tree --prefix=site/ -u site-branch\ngit read-tree --prefix=wpsite/ -u wpsite-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to disable sparse checkout after enabled?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36195275",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Undoing sparse checkout"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the full tree back")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(" > $SC_FILE\ngit config core.sparsecheckout true\ngit read-tree --reset -u HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wipe out all traces of sparse checkout support")]),t._v("\nrm $SC_FILE\ngit config core.sparsecheckout false\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/info/sparse-checkout\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/modules/<MODULEPATH>/info/sparse-checkout\ngit read-tree -mu HEAD\ngit config core.sparseCheckout false\n\ngit read-tree --dry-run HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: git revert back to certain commit without changing history and creating a new commit like git revert")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49391871",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Be careful with the word "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"revert"')]),t._v("\nA <-B <-C   <-- master (HEAD)\n\n▲ Git does not have a user command to revert to, but it's easy\n$ echo new file > newfile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add newfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add new file'")]),t._v("\n\nA <-B <-C <-D   <-- master (HEAD)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <hash-of-A> -- .")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -r")]),t._v(" -- .")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout <hash> -- .")]),t._v("\n\n▲ Minor: a shortcut\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" <hash>")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[e("strong",[t._v('6. Usage scenario: Git - Can\'t Push - "! [remote rejected] master -> master (Working directory has unstaged changes)"')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51236225",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\nset -ex\ngit read-tree --reset -u HEAD "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: git: can I subtree merge just a subpath of a repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12048161",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add Bar /path/to/bar")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit Bar/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=public/bar"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" Bar/master:www/tools/")]),t._v("\n\n$ get fetch Bar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" subtree=public/bar Bar master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How do I add/upgrade/downgrade a remote Git project in my repository without using submodules?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14718080",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -r")]),t._v(" webroot/wordpress")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/index.php'")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/license.txt'")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/readme.html'")]),t._v("\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=webroot/wordpress/"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" wordpress/3.5.1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Updated to WordPress 3.5.1"')]),t._v("\n[master 9665ad7] Updated to WordPress 3.5.1\n 44 files changed, 406 insertions(+), 176 deletions(-)\n rewrite webroot/wordpress/wp-admin/js/post.min.js (81%)\n rewrite webroot/wordpress/wp-includes/js/media-editor.min.js (99%)\n rewrite webroot/wordpress/wp-includes/js/media-views.min.js (89%)\n...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How can I add a specific folder when using git subtree?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40323805",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add my-library <my-library-url>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch my-library")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" my-library-branch my-library/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=<desired/library/dir>"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" my-library-branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merged library project as subdirectory"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How to get back before a git stash -k followed by a git stash pop?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60858281",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git read-tree --reset -u stash    # reset index and work tree to the stashed work tree\ngit read-tree stash^2             # reset the index to the stashed index\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"dry-run"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dry-run"}},[t._v("#")]),t._v(" 🔹 --dry-run")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to disable sparse checkout after enabled?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 20    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36195275",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Undoing sparse checkout"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get the full tree back")]),t._v("\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*"')]),t._v(" > $SC_FILE\ngit config core.sparsecheckout true\ngit read-tree --reset -u HEAD\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Wipe out all traces of sparse checkout support")]),t._v("\nrm $SC_FILE\ngit config core.sparsecheckout false\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/info/sparse-checkout\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/*"')]),t._v(" > .git/modules/<MODULEPATH>/info/sparse-checkout\ngit read-tree -mu HEAD\ngit config core.sparseCheckout false\n\ngit read-tree --dry-run HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("h2",{attrs:{id:"aggressive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#aggressive"}},[t._v("#")]),t._v(" 🔹 --aggressive")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Autofixup consecutive commits of same message and author (of the complete repo)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26354448",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n\nauthor="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$GIT_AUTHOR_NAME <$GIT_AUTHOR_EMAIL>"')]),t._v("\nmsg="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat)"')]),t._v("\ntree="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$1"')]),t._v("\nparents=()\nshift\nwhile getopts "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('":p:"')]),t._v(" opt; do\n    case $opt in\n        p)\n            parents=(${parents[*]} $OPTARG)\n            ;;\n        ?)\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Invalid option: -$OPTARG"')]),t._v(" >&2\n            exit 1\n            ;;\n    esac\ndone\n\n\ncreate_parents_option() {\n    parentsstring="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v("\n    for parent in $@; do\n        parentsstring+="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-p $parent "')]),t._v("\n    done\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$parentsstring"')]),t._v("\n}\n\nget_msg() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%B"')]),t._v(" $1\n}\n\nget_author() {\n    git log -1 --format="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%aN <%aE>"')]),t._v(" $1\n}\n\nsquash_commit() {\n    if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$author"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_author $1)"')]),t._v(" ] && [ "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$msg"')]),t._v(" == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"x$(get_msg $1)"')]),t._v(" ]; then\n        git read-tree -m --aggressive ${1}^{tree} $tree >/dev/null\n        tree=$(git write-tree)\n        parents=($(git log --format=%P -1 $1))\n    fi\n}\n\nif [[ ${#parents[@]} == 1 ]]; then\n    squash_commit ${parents[0]}\nfi\n\ngit commit-tree $tree $(create_parents_option ${parents[@]}) -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$msg"')]),t._v("\n\ngit filter-branch --commit-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(cat /path/to/the/script)"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br")])]),e("h2",{attrs:{id:"prefix"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#prefix"}},[t._v("#")]),t._v(" 🔹 --prefix")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I merge a sub directory in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 86    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5190916",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("\ngit remote add -f infochimps git://github.com/infochimps/cluster_chef.git\n\n\ngit merge --allow-unrelated-histories -s ours --no-commit infochimps/master\n\n\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'merging in infochimps cassandra'")]),t._v("\n\ngit rm -r cassandra\ngit read-tree --prefix=cassandra/ -u infochimps/master:cookbooks/cassandra\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: merging git repositories at different directory levels")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 33    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8929615",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch /home/whoever/dev/B master\n\ngit merge -s ours --no-commit FETCH_HEAD\n\ngit read-tree --prefix=src/B/ -u FETCH_HEAD\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge in the history of master from B into src/B"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git merge submodule into parent tree cleanly and preserving commit history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23328223",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add site https://ajf-@bitbucket.org/ajf-/site.git\ngit remote add wpsite https://ajf-@bitbucket.org/ajf-/wpsite.git\n\ngit fetch --all\n\ngit checkout -b site-branch site/some_branch\ngit checkout -b wpsite-branch wpsite/some_other_branch\n\ngit checkout master\n\ngit checkout -b new-superproject master\n\ngit read-tree --prefix=site/ -u site-branch\ngit read-tree --prefix=wpsite/ -u wpsite-branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: git: can I subtree merge just a subpath of a repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 11    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12048161",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add Bar /path/to/bar")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -s")]),t._v(" ours"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit Bar/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=public/bar"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" Bar/master:www/tools/")]),t._v("\n\n$ get fetch Bar\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -X")]),t._v(" subtree=public/bar Bar master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How do I add/upgrade/downgrade a remote Git project in my repository without using submodules?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14718080",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -r")]),t._v(" webroot/wordpress")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/index.php'")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/license.txt'")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'webroot/wordpress/readme.html'")]),t._v("\n...\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=webroot/wordpress/"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" wordpress/3.5.1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Updated to WordPress 3.5.1"')]),t._v("\n[master 9665ad7] Updated to WordPress 3.5.1\n 44 files changed, 406 insertions(+), 176 deletions(-)\n rewrite webroot/wordpress/wp-admin/js/post.min.js (81%)\n rewrite webroot/wordpress/wp-includes/js/media-editor.min.js (99%)\n rewrite webroot/wordpress/wp-includes/js/media-views.min.js (89%)\n...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How to move files from one git repo to another preserving history using "),e("code",[t._v("git format-patch")]),t._v("and "),e("code",[t._v("git am")])])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[t._v("git mktree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28840897",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make a throwaway sandbox to play in:")]),t._v("\ngit clone -s . /tmp/deleteme\ncd !$\ngit checkout -b sliced\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do it")]),t._v("\ngit filter-branch --subdirectory-filter your/subdir\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# and if the result looks good:")]),t._v("\ngit push origin sliced\n\ngit filter-branch --index-filter '\n        git read-tree --prefix=des/ti/nation/    $GIT_COMMIT:source/subdir\n        git read-tree -m                         $GIT_COMMIT    `git mktree </dev/null`\n'\n\n    git read-tree --prefix=destination/subdir/ $GIT_COMMIT:source/subdir\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How can I add a specific folder when using git subtree?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40323805",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add my-library <my-library-url>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch my-library")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" my-library-branch my-library/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git read-tree"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --prefix")]),t._v("=<desired/library/dir>"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" my-library-branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merged library project as subdirectory"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: I need to checkout single folder from a Bitbucket Git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20724229",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd /tmp\ngit clone --depth=1 --bare git@myhosted_repo/project.git\n\n(cd project.git && git branch master)\n\nmkdir /tmp/workdir\ncd /tmp/workdir\ngit init .\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the shallow clone as a remote")]),t._v("\ngit remote add --fetch shallow /tmp/project.git\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# read a subtree from the remote, shallow branch")]),t._v("\ngit read-tree --prefix somedir -u shallow/master:testcases/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How to track revision history of revision history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23746356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from the top:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and commit the empty skeleton")]),t._v("\ngit init book\ncd !$\nmkdir -p sect{1,2,3}\ntouch {.,!$}/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy in any initial content here")]),t._v("\ngit add .\ngit ls-files -s # to see exactly what you've done so far\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now git is directly tracking content in each section, and commands in the ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parent will _ignore_ the existence of any nested repositories you subsequently ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create, but not there worktrees (because of the existing tracked content). viz.:")]),t._v("\n\n( cd sect1\n  git init \n  git add . \n  git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n  git branch publishing-history\n)\n^1^2\n^2^3\n\ncd ..\ngit add -A .\ngit commit\npublished=`git rev-parse HEAD`\n\nfor section in sect*; do\n    cd $section\n    git update-ref refs/heads/publishing-history $(\n        # log where the checked-out commit was published\n        git commit-tree \\\n                  -p publishing-history \\\n                  -p `git rev-parse HEAD` \\\n                  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"## published in main repository commit $published ##"')]),t._v(" \\\n                HEAD^{tree}  # just `HEAD:` will work too\n    )\n    cd ..\ndone\n\ngit symbolic-ref HEAD refs/heads/newmaster\n\ncd ../main\ngit read-tree --empty\nfor repo in sect{1,2,3}; do\n    ( cd ../$repo\n      tag -f fetchme HEAD^{tree}\n    )\n    git fetch ../sect1 fetchme\n    git read-tree -m --prefix=sect1 FETCH_HEAD\ndone\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br")])]),e("h2",{attrs:{id:"empty"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#empty"}},[t._v("#")]),t._v(" 🔹 --empty")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Commit directly to a bare repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show-ref.html"}},[t._v("git show-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[t._v("git update-index")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25556917",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\ncd myrepo.git\n\nMY_BRANCH=master\nMY_FILE_CONTENTS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Hello, world!\\n'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Note this is just a lock for this script. It's not honored by other tools.")]),t._v("\nlockfile -1 -r 10 lock || exit 1\n\nPARENT_COMMIT="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git show-ref -s "')]),t._v("$MY_BRANCH"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('")"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Empty the index, not sure if this step is necessary")]),t._v("\ngit read-tree --empty\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Load the current tree. A commit ref is fine, it'll figure it out.")]),t._v("\ngit read-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"${PARENT_COMMIT}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# Create a blob object. Some systems have "shasum" instead of "sha1sum"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Might want to check if it already exists. Left as an excercise. :)")]),t._v("\nBLOB_ID=$(printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blob %d\\0%s"')]),t._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | sha1sum | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),t._v(" -f 1)\nmkdir -p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objects/${BLOB_ID:0:2}"')]),t._v("\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"blob %d\\0%s"')]),t._v(" $(echo -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | wc -c) "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$MY_FILE_CONTENTS"')]),t._v(" | perl -MCompress::Zlib -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'undef $/; print compress(<>)'")]),t._v(" > "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"objects/${BLOB_ID:0:2}/${BLOB_ID:2}"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now add it to the index.")]),t._v("\ngit update-index --add --cacheinfo 100644 "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$BLOB_ID"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"myfile.txt"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Create a tree from your new index")]),t._v("\nTREE_ID=$(git write-tree)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit it.")]),t._v("\nNEW_COMMIT=$(echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My commit message"')]),t._v(" | git commit-tree "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$TREE_ID"')]),t._v(" -p "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$PARENT_COMMIT"')]),t._v(")\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Update the branch")]),t._v("\ngit update-ref "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"refs/heads/$MY_BRANCH"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$NEW_COMMIT"')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$PARENT_COMMIT"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Done")]),t._v("\nrm -f lock\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Can I completely remove the history of all files in selected subdirs of my repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6391528",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git filter-branch -f --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git read-tree --empty && git reset -q \"${GIT_COMMIT}\" -- first_directory_to_keep second_directory_to_keep'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git clone only a subdirectory, at the root of the current directory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30244250",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If ~/apps/appname/public is on a shared filesystem, and your webserver doesn't alter the checked-out files, you can maintain a dedicated index of its contents and just use git read-tree -um to update the filesystem from any commit you like:\n( \n  export GIT_INDEX_FILE=/path/to/repo/.git/appname-public-manifest\n  export GIT_WORK_TREE=~/apps/appname/public\n  git read-tree -um `git write-tree` master:folder3/subc\n)\n\n▲ If there"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s nothing in that directory already there'")]),t._v("s no need to initialize, otherwise \n( \n  export GIT_INDEX_FILE=/path/to/repo/.git/appname-public-manifest\n  export GIT_WORK_TREE=~/apps/appname/public\n  git read-tree --empty   # start from nothing\n  git add .               # index what's there now\n)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to track revision history of revision history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23746356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from the top:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and commit the empty skeleton")]),t._v("\ngit init book\ncd !$\nmkdir -p sect{1,2,3}\ntouch {.,!$}/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy in any initial content here")]),t._v("\ngit add .\ngit ls-files -s # to see exactly what you've done so far\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now git is directly tracking content in each section, and commands in the ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parent will _ignore_ the existence of any nested repositories you subsequently ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create, but not there worktrees (because of the existing tracked content). viz.:")]),t._v("\n\n( cd sect1\n  git init \n  git add . \n  git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n  git branch publishing-history\n)\n^1^2\n^2^3\n\ncd ..\ngit add -A .\ngit commit\npublished=`git rev-parse HEAD`\n\nfor section in sect*; do\n    cd $section\n    git update-ref refs/heads/publishing-history $(\n        # log where the checked-out commit was published\n        git commit-tree \\\n                  -p publishing-history \\\n                  -p `git rev-parse HEAD` \\\n                  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"## published in main repository commit $published ##"')]),t._v(" \\\n                HEAD^{tree}  # just `HEAD:` will work too\n    )\n    cd ..\ndone\n\ngit symbolic-ref HEAD refs/heads/newmaster\n\ncd ../main\ngit read-tree --empty\nfor repo in sect{1,2,3}; do\n    ( cd ../$repo\n      tag -f fetchme HEAD^{tree}\n    )\n    git fetch ../sect1 fetchme\n    git read-tree -m --prefix=sect1 FETCH_HEAD\ndone\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br")])]),e("h2",{attrs:{id:"q"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#q"}},[t._v("#")]),t._v(" 🔹 -q")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Can I completely remove the history of all files in selected subdirs of my repo?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[t._v("git filter-branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6391528",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git filter-branch -f --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git read-tree --empty && git reset -q \"${GIT_COMMIT}\" -- first_directory_to_keep second_directory_to_keep'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Update the root directory of a branch from the subdirectory of another")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[t._v("git mktree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10591668",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("true | git mktree | xargs git commit-tree | xargs git branch gh-pages\n\ngit checkout gh-pages\ngit read-tree master:html\ngit commit -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gh-pages documentation'")]),t._v("\ngit push origin gh-pages\ngit checkout master\n\ngit commit-tree -p gh-pages -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" master:html \\\n| xargs git update-ref refs/heads/gh-pages\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Git - How do I squash changes to ignored files without losing those changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25152642",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# knobs")]),t._v("\nDEV_MODULES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mocha chai bower coffeelint"')]),t._v("\nBUILT_FILES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules build"')]),t._v("\nDATE=$(date)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean out stuff we don't care about")]),t._v("\nnpm uninstall $DEV_MODULES\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# record current checkout plus "$BUILT_FILES" to `build` branch')]),t._v("\ngit add --all --force $BUILT_FILES\nbuild=`git rev-parse -q --verify build`\ngit update-ref refs/heads/build $(\n        git commit-tree ${build:+-p $build} -p HEAD \\\n                -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build as of $DATE"')]),t._v(" \\\n                `git write-tree`\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset index to HEAD")]),t._v("\ngit reset  # `git read-tree HEAD` will have the same effect, perhaps more quietly\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);