(window.webpackJsonp=window.webpackJsonp||[]).push([[77],{511:function(s,t,e){"use strict";e.r(t);var n=e(19),a=Object(n.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-ls-files-show-information-about-files-in-the-index-and-the-working-tree"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-ls-files-show-information-about-files-in-the-index-and-the-working-tree"}},[s._v("#")]),s._v(" 📌 git ls-files - Show information about files in the index and the working tree")]),s._v(" "),e("h2",{attrs:{id:"c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[s._v("#")]),s._v(" 🔹 -c")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to remove files that are listed in the .gitignore but still on the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 613    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13541721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm --cached file1 file2 dir/file3\n\ngit rm --cached `git ls-files -i -c --exclude-from=.gitignore`\n\ngit ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached  \n\ngit ls-files -i -c --exclude-from=.gitignore | %{git rm --cached $_}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"cached"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cached"}},[s._v("#")]),s._v(" 🔹 --cached")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to remove files that are listed in the .gitignore but still on the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 613    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13541721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm --cached file1 file2 dir/file3\n\ngit rm --cached `git ls-files -i -c --exclude-from=.gitignore`\n\ngit ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached  \n\ngit ls-files -i -c --exclude-from=.gitignore | %{git rm --cached $_}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"d"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[s._v("#")]),s._v(" 🔹 -d")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Merging two branches, how do I accept one branch for all conflicts")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50994582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout branchA\ngit merge -X theirs branchB\n\n▲ Merge essentials\n          o--o--A   <-- branchA\n         /\n...--o--*\n\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\n          o--o--A   <-- branchA\n         /\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\ngit diff --find-renames <hash-of-*> <hash-of-A>\ngit diff --find-renames <hash-of-*> <hash-of-B>\n\n          o--o--A\n         /       \\\n...--o--*         M   <-- branchA (HEAD)\n         \\       /\n          o--o--B   <-- branchB\n\n▲ High level conflicts\ngit checkout --ours README.txt\n\ngit checkout --theirs README.txt\n\ngit checkout branchA -- README.txt\n\ngit checkout branchB -- README.txt\n\ngit rm README.txt\n\ngit ls-files -u | cut -d$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" -f 2 | uniq | xargs git checkout branchB --\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to limit file size on commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39578014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nhard_limit=$(git config hooks.filesizehardlimit)\nsoft_limit=$(git config hooks.filesizesoftlimit)\n: ${hard_limit:=10000000}\n: ${soft_limit:=500000}\n\nlist_new_or_modified_files()\n{\n    git diff --staged --name-status|sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^D/ d; /^D/! s/.\\s\\+//'")]),s._v("\n}\n\nunmunge()\n{\n    local result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1#\\"}"')]),s._v("\n    result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${result%\\"}"')]),s._v("\n    env echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$result"')]),s._v("\n}\n\ncheck_file_size()\n{\n    n=0\n    while read -r munged_filename\n    do\n        f="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(unmunge "')]),s._v("$munged_filename"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n        h=$(git ls-files -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v("|cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 2)\n        s=$(git cat-file -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$h"')]),s._v(")\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $hard_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"')]),s._v("\n            n=$((n+1))\n        elif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $soft_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARNING: soft size limit ($soft_limit) exceeded: $munged_filename ($s)"')]),s._v("\n        fi\n    done\n\n    [ $n -eq 0 ]\n}\n\nlist_new_or_modified_files | check_file_size\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizesoftlimit 100000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizehardlimit 4000000")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git delete file with a special characters in name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29286175",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o --exclude=standard -z | xargs -0 rm\n\ngit ls-files -o --exclude=standard -z | read -r -d $"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" -a files\nfor i in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${files[@]}"')]),s._v("; do rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"deleted"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deleted"}},[s._v("#")]),s._v(" 🔹 --deleted")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Stage only deleted files with git add")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 96    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45959365",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ If you have a mix of modified and deleted files and only want to stage deleted files to the index, you can use git ls-files as a filter.\ngit ls-files --deleted | xargs git add\n\n▲ If you only want this to apply to part of the file tree, give one or more subdirectories as arguments to ls-files:\ngit ls-files --deleted -- lib/foo | xargs git add\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"m"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#m"}},[s._v("#")]),s._v(" 🔹 -m")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How many files have changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33080072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -m -z | awk -v RS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'END { print NR }'")]),s._v("\n\ngit ls-files -m | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Git alias to squash all commits with a particular commit message")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8228577",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.wip "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'!f() { git add -A; git ls-files --deleted -z | xargs -0 -r git rm; s=`git show --format=%s HEAD | head -1`; if [ "wip" = "$s" ]; then git commit --amend -m "wip"; else git commit -m "wip"; fi;}; f\'')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"modified"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#modified"}},[s._v("#")]),s._v(" 🔹 --modified")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list all unchanged (tracked) files?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31448015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("( git ls-files --modified ; git ls-files ) | sort | uniq -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How an I make "),e("code",[s._v("git ls-files")]),s._v(" work in subdirectories?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56144986",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git -C $(git rev-parse --show-toplevel) ls-files --modified\n\n> git -C ../ ls-files --modified\nfile.txt\n> git -C $(git rev-parse --show-toplevel) ls-files --modified # wrt git toplevel no matter how deep you are in the tree\nfile.txt\n> git ls-files --modified ../\n../file.txt\n> git ls-files --modified $(git rev-parse --show-cdup) # wrt git toplevel no matter how deep you are in the tree\n../file.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"o"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#o"}},[s._v("#")]),s._v(" 🔹 -o")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list files ignored by git that are currently staged or committed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 112    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9370094",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.showtrackedignored "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls-files -i --exclude-standard"')]),s._v("\n\ngit showtrackedignored\n\n▲ Bug in git ls-files\n▲ Alternative approach\ngit config --global alias.showtrackedignored '!\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${GIT_PREFIX}"')]),s._v(" &&\nuntracked_list=$(git rev-parse --git-dir)/ignored-untracked.txt &&\ngit ls-files -o -i --exclude-standard >"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nGIT_INDEX_FILE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" git ls-files -o -i --exclude-standard | grep -Fvxf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nrm -rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v("'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to list all not versioned files and directories in a Git working copy?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16067334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o\n\ngit ls-files -o --directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Show untracked files as git diff")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33254748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -o")])]),s._v("\n\ngit ls-files -o --exclude-standard | xargs git add; git diff --staged\n^                                  ^                ^\nls all untracked files             pipe to add      diff the staged files\n\ngit ls-files -o --exclude-standard -z | xargs -O git add; git diff --staged\n^                                   v ^        v        ^\nls all untracked files              | pipe to  |        diff the staged files\n                                    | add      |\n                                     \\__________>-> Use Null as Output/Input delimeter\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: how show the diff from my current working directory and my last commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14035138",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o | xargs cat\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: List untracked files only by specific file type")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68232115",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.py"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to list empty folders when "),e("code",[s._v("git ls-files --others")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54443766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o --directory\n\ngit ls-files -o --directory --no-empty-directory\n\ngit ls-files -o --no-empty-directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How to get "),e("code",[s._v("git commit --verbose")]),s._v(" output via "),e("code",[s._v("git diff")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46478005",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"others"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#others"}},[s._v("#")]),s._v(" 🔹 --others")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to make quick backup of untracked files which I want to delete by git clean?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 34    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5211854",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard -z | xargs -0 tar rvf ~/backup-untracked.tar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git move all untracked files and folders to directory out of git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48497708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd $Git_Repo\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\n\ncd $Git_Repo\nIFS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v("\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\nunset IFS\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How does one show untracked files in current directory only (ignoring subdirectories)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5741439",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" # on Windows, with msysgit\n git ls-files --others -x */*\n\n # on Unix (Cygwin or Ubuntu), quotes are necessary around the pattern\n git ls-files --others -x "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*/*"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: how to take a backup of untracked files in the git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33407122",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to exclude files for pushing")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15196056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n./assets/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: git deleted a branch, but changes still staged on master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7389921",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard HEAD\n\ngit ls-files --exclude-standard --others --directory -z | xargs -0 rm -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Ignore file removed from local git repo that should stay in other repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35058975",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\nlibraries/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get the absolute path of all files in a Git repository with submodules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-submodule.html"}},[s._v("git submodule")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52193568",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git submodule foreach --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'a=$(printf "$(git ls-files --others --exclude-standard --full-name|sed "s~^~$(pwd)/~")"; printf x); a=${a%x}; echo "$a"\'')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to list all untracked git files matching a certain pattern (and delete them)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49785790",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\.css$"')]),s._v(" | xargs rm\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[s._v("#")]),s._v(" 🔹 -i")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to remove files that are listed in the .gitignore but still on the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 613    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13541721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm --cached file1 file2 dir/file3\n\ngit rm --cached `git ls-files -i -c --exclude-from=.gitignore`\n\ngit ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached  \n\ngit ls-files -i -c --exclude-from=.gitignore | %{git rm --cached $_}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Resync git repo with new .gitignore file")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 428    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7076075",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# rm all files")]),s._v("\ngit rm -r --cached .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add all files as per new .gitignore")]),s._v("\ngit add .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# now, commit for new .gitignore to apply")]),s._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('".gitignore is now working"')]),s._v("\n\ngit rm --cached `git ls-files -i --exclude-standard`\n\ngit rm --cached --ignore-unmatch `git ls-files -i --exclude-standard`\n\ngit rm --cached "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<path.to.remaining.file>"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to list files ignored by git that are currently staged or committed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 112    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9370094",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.showtrackedignored "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls-files -i --exclude-standard"')]),s._v("\n\ngit showtrackedignored\n\n▲ Bug in git ls-files\n▲ Alternative approach\ngit config --global alias.showtrackedignored '!\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${GIT_PREFIX}"')]),s._v(" &&\nuntracked_list=$(git rev-parse --git-dir)/ignored-untracked.txt &&\ngit ls-files -o -i --exclude-standard >"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nGIT_INDEX_FILE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" git ls-files -o -i --exclude-standard | grep -Fvxf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nrm -rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v("'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: git deleted a branch, but changes still staged on master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7389921",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard HEAD\n\ngit ls-files --exclude-standard --others --directory -z | xargs -0 rm -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"ignored"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignored"}},[s._v("#")]),s._v(" 🔹 --ignored")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h2",{attrs:{id:"s"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#s"}},[s._v("#")]),s._v(" 🔹 -s")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Get the current commit id of specified submodule")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32327200",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd /path/to/parent/repo\ngit ls-files -s yourSubmodule\n\ncd /path/to/repo/parentFolder/of/submodule\n\ngit ls-tree @ yourSubmodule\ngit rev-parse @:./yourSubmodule\n\ngit rev-parse HEAD:path-to-your-sub-module\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to limit file size on commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39578014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nhard_limit=$(git config hooks.filesizehardlimit)\nsoft_limit=$(git config hooks.filesizesoftlimit)\n: ${hard_limit:=10000000}\n: ${soft_limit:=500000}\n\nlist_new_or_modified_files()\n{\n    git diff --staged --name-status|sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^D/ d; /^D/! s/.\\s\\+//'")]),s._v("\n}\n\nunmunge()\n{\n    local result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1#\\"}"')]),s._v("\n    result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${result%\\"}"')]),s._v("\n    env echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$result"')]),s._v("\n}\n\ncheck_file_size()\n{\n    n=0\n    while read -r munged_filename\n    do\n        f="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(unmunge "')]),s._v("$munged_filename"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n        h=$(git ls-files -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v("|cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 2)\n        s=$(git cat-file -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$h"')]),s._v(")\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $hard_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"')]),s._v("\n            n=$((n+1))\n        elif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $soft_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARNING: soft size limit ($soft_limit) exceeded: $munged_filename ($s)"')]),s._v("\n        fi\n    done\n\n    [ $n -eq 0 ]\n}\n\nlist_new_or_modified_files | check_file_size\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizesoftlimit 100000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizehardlimit 4000000")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to handle nested git repositories?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-tree.html"}},[s._v("git ls-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37243167",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -s|grep ^16            # ls-files -s output: mode id stage path\n\ngit ls-tree -r $id|grep ^16         # ls-tree -r output:  mode type id path\n\ngit rev-parse :path/to/it           # from index i.e. last add/checkout/reset/etc \ngit rev-parse $id:path/to/it        # from $id, e.g. `master` or `3fac3`\n\n(cd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$submodule"')]),s._v("; git rev-parse HEAD)\n\n(id=`git rev-parse :"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$submodule"')]),s._v("` && cd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$submodule"')]),s._v(" && git checkout $id)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Cant discard file changes in GIT")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[s._v("git hash-object")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30697562",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git hash-object path/to/filename\ngit hash-object --no-filter path/to/filename\ngit ls-files -s path/to/filename\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to track revision history of revision history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[s._v("git init")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[s._v("git commit-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[s._v("git symbolic-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[s._v("git update-ref")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[s._v("git read-tree")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[s._v("git fetch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23746356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# from the top:")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create and commit the empty skeleton")]),s._v("\ngit init book\ncd !$\nmkdir -p sect{1,2,3}\ntouch {.,!$}/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copy in any initial content here")]),s._v("\ngit add .\ngit ls-files -s # to see exactly what you've done so far\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial skeleton'")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# now git is directly tracking content in each section, and commands in the ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# parent will _ignore_ the existence of any nested repositories you subsequently ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create, but not there worktrees (because of the existing tracked content). viz.:")]),s._v("\n\n( cd sect1\n  git init \n  git add . \n  git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'initial skeleton'")]),s._v("\n  git branch publishing-history\n)\n^1^2\n^2^3\n\ncd ..\ngit add -A .\ngit commit\npublished=`git rev-parse HEAD`\n\nfor section in sect*; do\n    cd $section\n    git update-ref refs/heads/publishing-history $(\n        # log where the checked-out commit was published\n        git commit-tree \\\n                  -p publishing-history \\\n                  -p `git rev-parse HEAD` \\\n                  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"## published in main repository commit $published ##"')]),s._v(" \\\n                HEAD^{tree}  # just `HEAD:` will work too\n    )\n    cd ..\ndone\n\ngit symbolic-ref HEAD refs/heads/newmaster\n\ncd ../main\ngit read-tree --empty\nfor repo in sect{1,2,3}; do\n    ( cd ../$repo\n      tag -f fetchme HEAD^{tree}\n    )\n    git fetch ../sect1 fetchme\n    git read-tree -m --prefix=sect1 FETCH_HEAD\ndone\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: files that have not been changed show up in unstaged list after git stash")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[s._v("git hash-object")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30707901",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git hash-object path/to/your/file\ngit hash-object --no-filter path/to/your/file\ngit ls-files -s path/to/your/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to fix branches of partial directory structure in SVN to Git migration")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge-base.html"}},[s._v("git merge-base")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15481085",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Initial situation\nproject1/\nproject2/\nproject3/\nproject4/\n\nproject3/\n\n.project\nsrc/\ntest/\n\n▲ Step 1: Rewrite branch to move all contents into subdirectory (if needed)\ngit filter-branch --index-filter \\\n    'git ls-files -s | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s-\\t\\"*-&project3/-"')]),s._v(" |\n        GIT_INDEX_FILE=$GIT_INDEX_FILE.new \\\n            git update-index --index-info &&\n     mv "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE.new"')]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_INDEX_FILE"')]),s._v("' \\\n     master..project3-production-branch\n\n▲ Step 2: Rewrite branch to restore other projects\nbranch="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project3-production-branch"')]),s._v("\nparent=`git merge-base $branch master` # or replace master with trunk if needed\npaths="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"project1 project2 project4"')]),s._v("\ngit filter-branch -f --index-filter \\\n"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git reset -q $parent -- $paths"')]),s._v(" --tag-name-filter cat -- \\\n$parent..$branch\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br")])]),e("h2",{attrs:{id:"stage"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#stage"}},[s._v("#")]),s._v(" 🔹 --stage")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to add chmod permissions to file in Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 454    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40979016",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git update-index --chmod=+x path/to/file\n\ngit update-index --chmod=-x path/to/file\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --stage")])]),s._v("\n100644 aee89ef43dc3b0ec6a7c6228f742377692b50484 0       .gitignore\n100755 0ac339497485f7cc80d988561807906b2fd56172 0       my_executable_script.sh\n\ngit config core.fileMode false\n\ngit update-index --chmod=-x path/to/file\ngit update-index --chmod=+x path/to/file\n\ngit add --chmod=+x path/to/file\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Check commit size before pushing to git remote")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51315927",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/sh")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pre-commit hook: check for large files")]),s._v("\nTMP=$(mktemp)\ntrap "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rm -f $TMP"')]),s._v(" 0 1 2 3 15\nMAX_FILE_SIZE=1048576 # 1 MB\nstatus=0\ngit ls-files --stage > $TMP\nwhile read mode hash stage path; do\n    objsize=$(git cat-file -s $hash)\n    if [ $objsize -gt $MAX_FILE_SIZE ]; then\n        echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"file too big: '$path' as staged exceeds $MAX_FILE_SIZE bytes\"")]),s._v(" 1>&2\n        status=1\n    fi\ndone < $TMP\nexit $status\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How do I get the sha for the parent commits while in a conflicted merge state?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20109064",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ For example, if I attempt to merge a branch that creates a conflict on a.txt:\n% git merge br\nAuto-merging a.txt\nCONFLICT (content): Merge conflict in a.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n\n% git ls-files --stage\n100644 6041e76b484cbe25004efdf4e5faf3396d6f95a6 1       a.txt\n100644 0b6a7cf8dc44738a17d322c315ded9265f38a3fa 2       a.txt\n100644 67244df04c82140ad8e763a52daa670878b9d574 3       a.txt\n\n▲ If you want a simple way to get the hash for a single entry, you can use git revision syntax to refer to an item at a stage.  To get the hash for the conflicting file in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"their"')]),s._v(" branch (being merged in):\n% git rev-parse :3:a.txt\n67244df04c82140ad8e763a52daa670878b9d574\n\n% echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"resolved!"')]),s._v(" > a.txt\n% git add a.txt\n\n% git ls-files --stage a.txt\n100644 8a1c1b8cc46d9c722630b3bf561ecde155554831 0       a.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Git submodule's commit matching a tag in the main repo")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19290653",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --stage | grep 160000\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v('5. Usage scenario: resolve all "changed-by them" or "deleted by the them" during rebase')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54726185",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --stage\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#directory"}},[s._v("#")]),s._v(" 🔹 --directory")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list all not versioned files and directories in a Git working copy?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 12    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16067334",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o\n\ngit ls-files -o --directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: git deleted a branch, but changes still staged on master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7389921",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard HEAD\n\ngit ls-files --exclude-standard --others --directory -z | xargs -0 rm -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to list empty folders when "),e("code",[s._v("git ls-files --others")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54443766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o --directory\n\ngit ls-files -o --directory --no-empty-directory\n\ngit ls-files -o --no-empty-directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"no-empty-directory"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-empty-directory"}},[s._v("#")]),s._v(" 🔹 --no-empty-directory")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list empty folders when "),e("code",[s._v("git ls-files --others")]),s._v("?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54443766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o --directory\n\ngit ls-files -o --directory --no-empty-directory\n\ngit ls-files -o --no-empty-directory\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#u"}},[s._v("#")]),s._v(" 🔹 -u")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git found out number of conflicts / list of conflicts in working folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11014518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --unmerged")])]),s._v("\n100755 f50c20668c7221fa6f8beea26b7a8eb9c0ae36e4 1       path/to/conflicted_file\n100755 d0f6000e67d81ad1909500a4abca6138d18139fa 2       path/to/conflicted_file\n100755 4cb5ada73fbe1c314f68c905a62180c8e93af3ba 3       path/to/conflicted_file\n\n[alias]\n    conflicts = !git ls-files --unmerged | cut -f2 | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Merging two branches, how do I accept one branch for all conflicts")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50994582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout branchA\ngit merge -X theirs branchB\n\n▲ Merge essentials\n          o--o--A   <-- branchA\n         /\n...--o--*\n\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\n          o--o--A   <-- branchA\n         /\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\ngit diff --find-renames <hash-of-*> <hash-of-A>\ngit diff --find-renames <hash-of-*> <hash-of-B>\n\n          o--o--A\n         /       \\\n...--o--*         M   <-- branchA (HEAD)\n         \\       /\n          o--o--B   <-- branchB\n\n▲ High level conflicts\ngit checkout --ours README.txt\n\ngit checkout --theirs README.txt\n\ngit checkout branchA -- README.txt\n\ngit checkout branchB -- README.txt\n\ngit rm README.txt\n\ngit ls-files -u | cut -d$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" -f 2 | uniq | xargs git checkout branchB --\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to list all unchanged (tracked) files?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31448015",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("( git ls-files --modified ; git ls-files ) | sort | uniq -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"unmerged"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#unmerged"}},[s._v("#")]),s._v(" 🔹 --unmerged")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git found out number of conflicts / list of conflicts in working folder")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11014518",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --unmerged")])]),s._v("\n100755 f50c20668c7221fa6f8beea26b7a8eb9c0ae36e4 1       path/to/conflicted_file\n100755 d0f6000e67d81ad1909500a4abca6138d18139fa 2       path/to/conflicted_file\n100755 4cb5ada73fbe1c314f68c905a62180c8e93af3ba 3       path/to/conflicted_file\n\n[alias]\n    conflicts = !git ls-files --unmerged | cut -f2 | sort -u\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to see the change during a 'merge conflict' in git rebase")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1497773",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show HEAD:path/to/file")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show branch:path/to/file")]),s._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --unmerged")]),s._v("  ")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ...")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show :1:path/to/file")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show :2:path/to/file")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"k"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#k"}},[s._v("#")]),s._v(" 🔹 -k")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to get the working copy size in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22159111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("du -k `git ls-files` | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{total += $1} END {print total}'")]),s._v("\n\ngit ls-files -z | xargs -0 du -k | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{total += $1} END {print total}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"z"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#z"}},[s._v("#")]),s._v(" 🔹 -z")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to make quick backup of untracked files which I want to delete by git clean?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 34    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5211854",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard -z | xargs -0 tar rvf ~/backup-untracked.tar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Show untracked files as git diff")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33254748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -o")])]),s._v("\n\ngit ls-files -o --exclude-standard | xargs git add; git diff --staged\n^                                  ^                ^\nls all untracked files             pipe to add      diff the staged files\n\ngit ls-files -o --exclude-standard -z | xargs -O git add; git diff --staged\n^                                   v ^        v        ^\nls all untracked files              | pipe to  |        diff the staged files\n                                    | add      |\n                                     \\__________>-> Use Null as Output/Input delimeter\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to make a pre-commit hook that prevents non-UTF-8 file encodings")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3149435",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\ngit ls-files -z -- |\nxargs -0 sh -c '\n\n    e="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v("\n    for f; do\n        if ! git show :"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v(" |\n             iconv -f UTF-8 -t UTF-8 >/dev/null 2>&1; then\n            e=1\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Not UTF-8: $f"')]),s._v("\n            #exit 255 # to abort after first non-UTF-8 file\n        fi\n    done\n    test -z "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$e"')]),s._v("\n\n' -\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How do I run a command on all files from git ls-files?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41085442",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/usr/bin/env bash")]),s._v("\ngit ls-files -z \\*.py | xargs -0 pep8 --ignore=E402 --max-line-length=120\nif [ $? -ne 0 ]; then\n    >&2 echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== PEP8 errors need to be solved ==="')]),s._v("\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"=== PEP8 check ok ==="')]),s._v("\nfi\npytest\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How can I commit only deletes with Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[s._v("git commit")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7273237",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --deleted -z | xargs -0 git rm\ngit commit\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Git delete file with a special characters in name")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29286175",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -o --exclude=standard -z | xargs -0 rm\n\ngit ls-files -o --exclude=standard -z | read -r -d $"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" -a files\nfor i in "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${files[@]}"')]),s._v("; do rm "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$i"')]),s._v("; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to get the working copy size in git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22159111",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("du -k `git ls-files` | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{total += $1} END {print total}'")]),s._v("\n\ngit ls-files -z | xargs -0 du -k | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{total += $1} END {print total}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: How many files have changed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33080072",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -m -z | awk -v RS="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\0'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'END { print NR }'")]),s._v("\n\ngit ls-files -m | wc -l\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"x"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#x"}},[s._v("#")]),s._v(" 🔹 -x")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How does one show untracked files in current directory only (ignoring subdirectories)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5741439",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v(" # on Windows, with msysgit\n git ls-files --others -x */*\n\n # on Unix (Cygwin or Ubuntu), quotes are necessary around the pattern\n git ls-files --others -x "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*/*"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"exclude"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exclude"}},[s._v("#")]),s._v(" 🔹 --exclude")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to make quick backup of untracked files which I want to delete by git clean?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 34    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5211854",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard -z | xargs -0 tar rvf ~/backup-untracked.tar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git move all untracked files and folders to directory out of git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48497708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd $Git_Repo\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\n\ncd $Git_Repo\nIFS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v("\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\nunset IFS\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Show untracked files as git diff")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33254748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -o")])]),s._v("\n\ngit ls-files -o --exclude-standard | xargs git add; git diff --staged\n^                                  ^                ^\nls all untracked files             pipe to add      diff the staged files\n\ngit ls-files -o --exclude-standard -z | xargs -O git add; git diff --staged\n^                                   v ^        v        ^\nls all untracked files              | pipe to  |        diff the staged files\n                                    | add      |\n                                     \\__________>-> Use Null as Output/Input delimeter\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Clean Git Repository using gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30359405",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Only the last commit\ngit rm --cached -r .\ngit add .\n\n▲ All commits (entire history)\ngit ls-files --exclude-standard --others --directory --ignored\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\nfor f in `git ls-files --exclude-standard --others --directory --ignored`\ndo\n    git filter-branch --force --index-filter "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git rm --cached --ignore-unmatch '$f'\"")]),s._v(" --prune-empty --tag-name-filter cat -- --all\ndone\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: How to make .gitignore ignore compiled files with no extension?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7616104",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --other")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --exclude")]),s._v("-standard")]),s._v("\ntest\n$ echo test > .gitignore\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --other")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --exclude")]),s._v("-standard")]),s._v("\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to exclude files for pushing")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15196056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n./assets/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: Ignore file removed from local git repo that should stay in other repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35058975",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\nlibraries/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Ignored GIT files deleted on pull")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10705002",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -ic --exclude-standard \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'${p;s,.*,*** '")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0"')]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refusing commit with tracked files marked as ignored in the standard excludes lists,;q1}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to list all untracked git files matching a certain pattern (and delete them)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49785790",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\.css$"')]),s._v(" | xargs rm\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"exclude-from"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exclude-from"}},[s._v("#")]),s._v(" 🔹 --exclude-from")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to remove files that are listed in the .gitignore but still on the repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 613    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13541721",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rm --cached file1 file2 dir/file3\n\ngit rm --cached `git ls-files -i -c --exclude-from=.gitignore`\n\ngit ls-files -i -c --exclude-from=.gitignore | xargs git rm --cached  \n\ngit ls-files -i -c --exclude-from=.gitignore | %{git rm --cached $_}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to exclude files for pushing")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15196056",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n./assets/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: Ignore file removed from local git repo that should stay in other repos")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35058975",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\nlibraries/*\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"exclude-standard"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#exclude-standard"}},[s._v("#")]),s._v(" 🔹 --exclude-standard")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Git command to show which specific files are ignored by .gitignore")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 804    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[s._v("git check-ignore")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/467053",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git check-ignore *\ngit check-ignore -v *\n\ngit check-ignore **/*\n\ngit check-ignore -v $(find . -type f -print)\n\nfind . -not -path "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'./.git/*'")]),s._v(" | git check-ignore --stdin\n\ngit ls-files -i\n\ngit ls-files -i --exclude-from=[Path_To_Your_Global].gitignore\n\n$ cat .git/ignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore objects and archives, anywhere in the tree.")]),s._v("\n*.[oa]\n$ cat Documentation/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ignore generated html files,")]),s._v("\n*.html\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# except foo.html which is maintained by hand")]),s._v("\n!foo.html\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --ignored")]),s._v(" \\")]),s._v("\n    --exclude="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Documentation/*.[0-9]'")]),s._v(" \\\n    --exclude-from=.git/ignore \\\n    --exclude-per-directory=.gitignore\n\nF:\\prog\\git\\test\\.git\\info>type exclude\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# git ls-files --others --exclude-from=.git/info/exclude")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Lines that start with '#' are comments.")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# For a project mostly in C, the following would be a good set of")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exclude patterns (uncomment them if you want to use them):")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *.[oa]")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# *~")]),s._v("\n\ngit ls-files --ignored --exclude-from=.git/info/exclude\ngit ls-files -i --exclude-from=.git/info/exclude\n\ngit ls-files --others --ignored --exclude-standard\ngit ls-files -o -i --exclude-standard\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list files ignored by git that are currently staged or committed?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 112    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9370094",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git config --global alias.showtrackedignored "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ls-files -i --exclude-standard"')]),s._v("\n\ngit showtrackedignored\n\n▲ Bug in git ls-files\n▲ Alternative approach\ngit config --global alias.showtrackedignored '!\ncd "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${GIT_PREFIX}"')]),s._v(" &&\nuntracked_list=$(git rev-parse --git-dir)/ignored-untracked.txt &&\ngit ls-files -o -i --exclude-standard >"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nGIT_INDEX_FILE="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" git ls-files -o -i --exclude-standard | grep -Fvxf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v(" &&\nrm -rf "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${untracked_list}"')]),s._v("'\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to make quick backup of untracked files which I want to delete by git clean?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 34    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5211854",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard -z | xargs -0 tar rvf ~/backup-untracked.tar\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I tell git to ignore LibreOffice lock files?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19212291",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -ix "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.~lock*'")]),s._v("\ngit ls-files -ic --exclude-standard\n\ngit rm --cached path/to/it\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: Git move all untracked files and folders to directory out of git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 18    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48497708",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("cd $Git_Repo\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\n\ncd $Git_Repo\nIFS=$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\n'")]),s._v("\nfor file in $(git ls-files --others --exclude-standard); do mkdir -p ../backup/$(dirname $file) ; mv $file ../backup/$file ; done\nunset IFS\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Show untracked files as git diff")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-add.html"}},[s._v("git add")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33254748",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -o")])]),s._v("\n\ngit ls-files -o --exclude-standard | xargs git add; git diff --staged\n^                                  ^                ^\nls all untracked files             pipe to add      diff the staged files\n\ngit ls-files -o --exclude-standard -z | xargs -O git add; git diff --staged\n^                                   v ^        v        ^\nls all untracked files              | pipe to  |        diff the staged files\n                                    | add      |\n                                     \\__________>-> Use Null as Output/Input delimeter\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: How to make .gitignore ignore compiled files with no extension?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7616104",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --other")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --exclude")]),s._v("-standard")]),s._v("\ntest\n$ echo test > .gitignore\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --other")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --exclude")]),s._v("-standard")]),s._v("\n$\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("8. Usage scenario: git deleted a branch, but changes still staged on master")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[s._v("git reset")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7389921",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout master\ngit reset --hard HEAD\n\ngit ls-files --exclude-standard --others --directory -z | xargs -0 rm -i\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[e("strong",[s._v("9. Usage scenario: Ignored GIT files deleted on pull")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10705002",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -ic --exclude-standard \\\n| sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'${p;s,.*,*** '")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$0"')]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' refusing commit with tracked files marked as ignored in the standard excludes lists,;q1}'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("strong",[s._v("10. Usage scenario: How to get the absolute path of all files in a Git repository with submodules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-submodule.html"}},[s._v("git submodule")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52193568",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git submodule foreach --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'a=$(printf "$(git ls-files --others --exclude-standard --full-name|sed "s~^~$(pwd)/~")"; printf x); a=${a%x}; echo "$a"\'')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("11. Usage scenario: How to list all untracked git files matching a certain pattern (and delete them)?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49785790",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --others --exclude-standard | grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\.css$"')]),s._v(" | xargs rm\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"v"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[s._v("#")]),s._v(" 🔹 -v")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I make git ignore future revisions to a file?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 176    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[s._v("git update-index")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39776107",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git update-index --skip-worktree default_values.txt\n\ngit update-index --no-skip-worktree default_values.txt\n\ngit ls-files -v . | grep ^S\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list files ignored with 'skip-worktree'")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 97    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42363882",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ Use the following command if on *nix (Linux, Mac):\ngit ls-files -v . | grep ^S\n\n▲ or, if on Windows, you can use:\ngit ls-files -v . | findstr "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^S"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Git: List all files with assume-unchanged flag")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16196945",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("% git ls-files -v\nh a.txt\nH b.txt\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[s._v("#")]),s._v(" 🔹 -f")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Merging two branches, how do I accept one branch for all conflicts")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[s._v("git merge")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[s._v("git checkout")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50994582",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git checkout branchA\ngit merge -X theirs branchB\n\n▲ Merge essentials\n          o--o--A   <-- branchA\n         /\n...--o--*\n\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\n          o--o--A   <-- branchA\n         /\n...--o--*\n         \\\n          o--o--B   <-- branchB\n\ngit diff --find-renames <hash-of-*> <hash-of-A>\ngit diff --find-renames <hash-of-*> <hash-of-B>\n\n          o--o--A\n         /       \\\n...--o--*         M   <-- branchA (HEAD)\n         \\       /\n          o--o--B   <-- branchB\n\n▲ High level conflicts\ngit checkout --ours README.txt\n\ngit checkout --theirs README.txt\n\ngit checkout branchA -- README.txt\n\ngit checkout branchB -- README.txt\n\ngit rm README.txt\n\ngit ls-files -u | cut -d$"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\t'")]),s._v(" -f 2 | uniq | xargs git checkout branchB --\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to limit file size on commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39578014",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nhard_limit=$(git config hooks.filesizehardlimit)\nsoft_limit=$(git config hooks.filesizesoftlimit)\n: ${hard_limit:=10000000}\n: ${soft_limit:=500000}\n\nlist_new_or_modified_files()\n{\n    git diff --staged --name-status|sed -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^D/ d; /^D/! s/.\\s\\+//'")]),s._v("\n}\n\nunmunge()\n{\n    local result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${1#\\"}"')]),s._v("\n    result="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${result%\\"}"')]),s._v("\n    env echo -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$result"')]),s._v("\n}\n\ncheck_file_size()\n{\n    n=0\n    while read -r munged_filename\n    do\n        f="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(unmunge "')]),s._v("$munged_filename"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('")"')]),s._v("\n        h=$(git ls-files -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$f"')]),s._v("|cut -d"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 2)\n        s=$(git cat-file -s "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$h"')]),s._v(")\n        if [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $hard_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR: hard size limit ($hard_limit) exceeded: $munged_filename ($s)"')]),s._v("\n            n=$((n+1))\n        elif [ "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$s"')]),s._v(" -gt $soft_limit ]\n        then\n            env echo -E 1>&2 "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARNING: soft size limit ($soft_limit) exceeded: $munged_filename ($s)"')]),s._v("\n        fi\n    done\n\n    [ $n -eq 0 ]\n}\n\nlist_new_or_modified_files | check_file_size\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizesoftlimit 100000")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git config hooks.filesizehardlimit 4000000")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("h2",{attrs:{id:"full-name"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#full-name"}},[s._v("#")]),s._v(" 🔹 --full-name")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to find which files have not changed since commit?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24870024",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --full-name | grep -v "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$(git diff --name-only <REF>)"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to get the absolute path of all files in a Git repository with submodules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-submodule.html"}},[s._v("git submodule")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52193568",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git submodule foreach --quiet "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'a=$(printf "$(git ls-files --others --exclude-standard --full-name|sed "s~^~$(pwd)/~")"; printf x); a=${a%x}; echo "$a"\'')]),s._v(" | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^\\s*$/d'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"debug"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#debug"}},[s._v("#")]),s._v(" 🔹 --debug")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: finding out the last modified time of all modified files in git")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31015463",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --debug")])]),s._v("\nyaml_parse.py\n  ctime: 1434026542:225611371\n  mtime: 1433442706:0\n  dev: 34   ino: 17436117\n  uid: 33156    gid: 4720\n  size: 5065    flags: 0\n\n$ cvttime 1433442706\n1433442706 = 2015-06-04 Thu 18:31:46 +0000 (UTC)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"eol"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#eol"}},[s._v("#")]),s._v(" 🔹 --eol")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git: How do I revert all files where the only change is a modified timestamp?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40056042",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files --eol\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);