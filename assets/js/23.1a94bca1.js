(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{451:function(e,t,s){"use strict";s.r(t);var n=s(19),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),s("p",[e._v("📖 "+e._s(e.$page.readingTime.text)+"    🔡 "+e._s(e.$page.readingTime.words)),s("br")])]),e._v(" "),s("h1",{attrs:{id:"git-check-ignore-debug-gitignore-exclude-files"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-check-ignore-debug-gitignore-exclude-files"}},[e._v("#")]),e._v(" 📌 git check-ignore - Debug gitignore / exclude files")]),e._v(" "),s("h2",{attrs:{id:"v"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#v"}},[e._v("#")]),e._v(" 🔹 -v")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: Track file inside ignored directory")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 39    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[e._v("git add")]),e._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/26190177",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)],1)],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("▲ To add to "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('".gitignore exclude folder but include specific subfolder"')]),e._v(", one good way to debug those .gitignore file is to use git check-ignore (Git 1.8.4+):\ngit check-ignore -v my_folder/my_file.md\n\n▲ Of course, you can force adding a file ignored (git add -f my_folder/my_file.md), but that is not the point of this answer.\nThe point is to explain why adding !my_folder/my_file.md in .gitignore doesn't work with git 2.6 or less.\n▲ Note that with git 2.9.x/2.10 (mid 2016?), it might be possible to re-include a file if a parent directory of that file is excluded if there is no wildcard in the path re-included.\n▲ So here, with git 2.8+, this would work:\n/my_folder\n!my_folder/my_file.md\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br")])]),s("p",[s("strong",[e._v("2. Usage scenario: How to add a folder to the .gitignore")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 29    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[e._v("git add")]),e._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[e._v("git rm")]),e._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[e._v("git commit")]),e._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/38674523",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)],1)],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("▲ If you want to ignore folder, you need a trailing slash:\nbower_components/\n\n▲ Then check if the rule apply with git check-ignore -v (the -v is important if you want to see the exact .gitignore file and line which causes a file to be ignored)\ngit check-ignore -v -- bower_components/afile\n\n▲ If that does not apply, then remove the content of that folder from the history of that repo:\ngit rm --cached -r -- bower_components/\ngit add .\ngit commit -m "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"Remove bower_components folder"')]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("p",[s("strong",[e._v("3. Usage scenario: how to check if a file is git ignored")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/46714389",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[e._v("$ git check-ignore"),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v(" -v")]),e._v(" build")]),e._v("\nC:/Users/username/gitignore:23:**/build*       build\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br")])]),s("p",[s("strong",[e._v("4. Usage scenario: How do I track only specific files using .gitignore?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/38673917",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- afile\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v('5. Usage scenario: How "git stash -A" exclude .gitignore content?')])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/43383729",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- afile\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("6. Usage scenario: Un-ignoring a file in an ignored directory in git")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/37202749",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- afile\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("7. Usage scenario: Git missing files and folders on repository")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/50663245",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- path/to/your/ignored/file\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("8. Usage scenario: gitignore pattern to include all directories with a specific sub directory")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/49708739",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- an/ignored/element\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("9. Usage scenario: How can I .gitignore all files in directory except those starting with pattern?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/38185005",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("> git check-ignore -v modules/mycompany-faq/questions/ssl-or-https.md\n\n/Users/mike/.gitignore_global:28:modules    modules/mycompany-foo/somefile.md\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br")])]),s("p",[s("strong",[e._v("10. Usage scenario: How to remove storage folder from .gitignore file?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/53146102",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- a/file/in/the/repo\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("11. Usage scenario: I did a beginner project creating a calculator, and pushed to Github. Where do I locate my code?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/57985248",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- a/source/file\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("12. Usage scenario: How do I whitelist a directory in .gitignore and blacklist a file inside it in ~/.gitignore?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/64329737",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v feedme/.exrc\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[e._v("*"),s("em",[e._v("13. Usage scenario: "),s("em",[e._v(".aar files been ignored by git")])])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/40054425",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token command"}},[e._v("$ git check-ignore"),s("span",{pre:!0,attrs:{class:"token parameter"}},[e._v(" -v")]),e._v(" path-to-an-aar")]),e._v("\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("p",[s("strong",[e._v("14. Usage scenario: git exclude everything except specific folder and its content")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/53532642",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore -v -- afile\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"verbose"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verbose"}},[e._v("#")]),e._v(" 🔹 --verbose")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: How to I remove files from .gitignore?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/29687635",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("git check-ignore --verbose <some_file>\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br")])]),s("h2",{attrs:{id:"stdin"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#stdin"}},[e._v("#")]),e._v(" 🔹 --stdin")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: Show all ignored files in git")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 19    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[e._v("git add")]),e._v(", "),s("RouterLink",{attrs:{to:"/richen/git-status.html"}},[e._v("git status")]),e._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/24621695",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)],1)],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("find . -type f  | git check-ignore --stdin\n\nwhile read glob ; do\n    if [ -d "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$glob"')]),e._v(" ] ; then\n        # Be aware of the fact that even out of an ignored \n        # folder a file could have been added using git add -f \n        find "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$glob"')]),e._v(" -type f -exec \\\n            bash -c "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FILE={};[ \\$(git status -s \\$FILE) == "')]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('" ] && echo \\$FILE"')]),e._v(" \\;\n    else\n        for file in "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$glob"')]),e._v(" ; do\n            # Again, be aware of files which add been added using -f\n            bash -c "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"FILE={};[ \\$(git status -s \\$FILE) == "')]),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('" ] && echo \\$FILE"')]),e._v(" \\;\n        done\n    fi\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Pipe stderr to /dev/null since .gitignore might contain entries for non ")]),e._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# existing files which would trigger an error message when passing them to find")]),e._v("\ndone < .gitignore 2>/dev/null | sort\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br"),s("span",{staticClass:"line-number"},[e._v("11")]),s("br"),s("span",{staticClass:"line-number"},[e._v("12")]),s("br"),s("span",{staticClass:"line-number"},[e._v("13")]),s("br"),s("span",{staticClass:"line-number"},[e._v("14")]),s("br"),s("span",{staticClass:"line-number"},[e._v("15")]),s("br"),s("span",{staticClass:"line-number"},[e._v("16")]),s("br"),s("span",{staticClass:"line-number"},[e._v("17")]),s("br")])]),s("h2",{attrs:{id:"non-matching"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#non-matching"}},[e._v("#")]),e._v(" 🔹 --non-matching")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: inotify: Watch files changes except for files in .gitignore?")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/57345781",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)])],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("inotifywait --event close_write --monitor --recursive . |\n  while read -r directory events filename; do\n    echo "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"directory events filename: \\"${directory}\\" \\"${events}\\" \\"${filename}\\""')]),e._v("\n    if ! echo "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"$directory"')]),e._v(" | grep -Eq "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'^\\.\\/\\.git'")]),e._v(" &&\n       ! git check-ignore --non-matching --verbose "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v('"${directory}/${filename}"')]),e._v(" >/dev/null 2>&1\n    then\n      echo "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'will build'")]),e._v("\n      ./build\n    fi\n  done\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br"),s("span",{staticClass:"line-number"},[e._v("8")]),s("br"),s("span",{staticClass:"line-number"},[e._v("9")]),s("br"),s("span",{staticClass:"line-number"},[e._v("10")]),s("br")])]),s("h2",{attrs:{id:"no-index"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#no-index"}},[e._v("#")]),e._v(" 🔹 --no-index")]),e._v(" "),s("p",[s("strong",[e._v("1. Usage scenario: backup all gitignored files from a working copy")])]),e._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[e._v("💯Score: 1    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[e._v("git checkout")]),e._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/51499755",target:"_blank",rel:"noopener noreferrer"}},[e._v("Details"),s("OutboundLink")],1)],1)],1)]),e._v(" "),s("p",[s("strong",[e._v("Example:")])]),e._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[e._v("▲ First, you need to tell it if you want to search subdirectories.  If you just say git check-ignore * then it will only search the current directory.  Instead you might want\ngit check-ignore * **/*\n\n▲ The worse news is, if any non-excluded paths exist inside a/b/ (e.g. because they were added before the path was ignored, or because they were added with -f), then a/b/ is not listed, and it still doesn't search under a/b/ to find if more specific paths really are excluded.  This seems to me like a bug.  As a partial work-around, you can say\ngit check-ignore --no-index **/* *\n\ngit checkout -- a/b\n")])]),e._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[e._v("1")]),s("br"),s("span",{staticClass:"line-number"},[e._v("2")]),s("br"),s("span",{staticClass:"line-number"},[e._v("3")]),s("br"),s("span",{staticClass:"line-number"},[e._v("4")]),s("br"),s("span",{staticClass:"line-number"},[e._v("5")]),s("br"),s("span",{staticClass:"line-number"},[e._v("6")]),s("br"),s("span",{staticClass:"line-number"},[e._v("7")]),s("br")])])])}),[],!1,null,null,null);t.default=a.exports}}]);