(window.webpackJsonp=window.webpackJsonp||[]).push([[60],{487:function(t,s,a){"use strict";a.r(s);var e=a(19),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),a("br")])]),t._v(" "),a("h1",{attrs:{id:"git-format-patch-prepare-patches-for-e-mail-submission"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-format-patch-prepare-patches-for-e-mail-submission"}},[t._v("#")]),t._v(" 📌 git format-patch - Prepare patches for e-mail submission")]),t._v(" "),a("h2",{attrs:{id:"b"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#b"}},[t._v("#")]),t._v(" 🔹 -b")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: Git: How to create a Patch file showing only the changes?")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/63279742",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch -b -1 61a19d82038aca3c5d6d54b38d2739ac075fef84\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"o"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#o"}},[t._v("#")]),t._v(" 🔹 -o")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: Apply patches created with git log -p")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/14592810",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch -o <output_directory> <from_revision>..<to_revision> -- file-of-interest.txt\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("2. Usage scenario: Applying commits from one subtree to another in same repo")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/19328727",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("mkdir patches\ngit format-patch -o patches master..my_featureA_branch\n\ngit am patches/* -p3 --directory=repo/featureB\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[a("strong",[t._v("3. Usage scenario: how to extract commit patches from a git repository")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/39724924",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch -o patches --root HEAD\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("4. Usage scenario: Git merge in a branch that was previously merged")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/14737772",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("mkdir alreadyapplied.patches\ngit format-patch -o alreadyapplied.patches master..alreadyapplied\n\ngit checkout -b wip master\ngit am alreadapplied.patches\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (do whatever's necessary to deal with conflicts here)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (rebase wip here if the conflict resolution has taken")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# long enough that the wip branch has gotten behind master)")]),t._v("\ngit checkout -B master wip\ngit branch -d wip    \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br")])]),a("h2",{attrs:{id:"n"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[t._v("#")]),t._v(" 🔹 -n")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: How do I simply create a patch from my latest git commit?")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 322    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/9396390",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch -n HEAD^\n\ngit show HEAD > some-patch0001.patch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[a("strong",[t._v("2. Usage scenario: git log patch without commit message")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/57334179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch --stdout HEAD^..HEAD | sed -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^Date:/p;/^diff --git/,$p'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"k"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#k"}},[t._v("#")]),t._v(" 🔹 -k")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: Git: Pulling a rebased branch")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 34    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/16781301",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("▲ My recommendation (or, "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"what I would do if I were Mr Orange"')]),t._v(") is, start with git fetch.  Now I'll have this in my repo, which is what Mr Blond had after his rebase and just before he ran "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git push -f"')]),t._v(".\nM1  - M2 - M3\n   \\         \\\n    \\         \\\n     A1 - A2   A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v("\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v("\n\n▲ (with my local label pointing to A3 rather than A2; or A4 or A5, etc, depending on how many changes I have applied.)  Now all I have to do is rebase my A3 (and A4 if needed, etc) onto A2'.  One obvious direct way:\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")])]),t._v("\n  master\n* A\n  remotes/origin/master\n  remotes/origin/A\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch new_A remotes/origin/A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" new_A")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" new_A remotes/origin/A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git format-patch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -k")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --stdout")]),t._v(" A3..A | git am"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -3")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -k")])]),t._v("\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v(" - A3'\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v(" -- M\n                 \\_______________/\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" A old_A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" new_A A")]),t._v("\n\n▲ and then, if old_A can be abandoned entirely:\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" old_A")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("p",[a("strong",[t._v("2. Usage scenario: How can I pull in changes to a file from a subdirectory in another git repository")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/13848166",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git remote add project_b /path/to/project_b/\ngit fetch project_b\n\ngit cherry-pick project_b/master\n\ngit --git-dir=/path/to/project_b/.git format-patch -k -1 \\\n"),a("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--stdout <commit SHA> somefile.cpp | git am -3 -k")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("p",[a("strong",[t._v("3. Usage scenario: merging two git repositories, one a git-cvs clone, one git-svn clone")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/4061985",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("cd $NEWREPO\ngit checkout -b my-changes $SPROUT_POINT\n\n(cd $OLDREPO; git format-patch -k --stdout R1..R2) | (cd $NEWREPO; git am -k)\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("h2",{attrs:{id:"stdout"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#stdout"}},[t._v("#")]),t._v(" 🔹 --stdout")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: Git: Pulling a rebased branch")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 34    🔗Associated commands: [ "),a("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),a("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/16781301",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)],1)],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("▲ My recommendation (or, "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"what I would do if I were Mr Orange"')]),t._v(") is, start with git fetch.  Now I'll have this in my repo, which is what Mr Blond had after his rebase and just before he ran "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git push -f"')]),t._v(".\nM1  - M2 - M3\n   \\         \\\n    \\         \\\n     A1 - A2   A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v("\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v("\n\n▲ (with my local label pointing to A3 rather than A2; or A4 or A5, etc, depending on how many changes I have applied.)  Now all I have to do is rebase my A3 (and A4 if needed, etc) onto A2'.  One obvious direct way:\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -a")])]),t._v("\n  master\n* A\n  remotes/origin/master\n  remotes/origin/A\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch new_A remotes/origin/A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" new_A")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" new_A remotes/origin/A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git format-patch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -k")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --stdout")]),t._v(" A3..A | git am"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -3")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -k")])]),t._v("\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v(" - A3'\n\nM1  ---- M2 ---- M3\n   \\               \\\n    \\               \\\n     A1 - A2 - A3    A1"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("' - A2'")]),t._v(" -- M\n                 \\_______________/\n\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" A old_A")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" new_A A")]),t._v("\n\n▲ and then, if old_A can be abandoned entirely:\n"),a("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" old_A")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br"),a("span",{staticClass:"line-number"},[t._v("37")]),a("br"),a("span",{staticClass:"line-number"},[t._v("38")]),a("br"),a("span",{staticClass:"line-number"},[t._v("39")]),a("br")])]),a("p",[a("strong",[t._v("2. Usage scenario: Git archive all changes except first commit")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/8356486",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch --stdout firstCommitSHA1.. > aPatch\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[a("strong",[t._v("3. Usage scenario: git log patch without commit message")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/57334179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch --stdout HEAD^..HEAD | sed -n "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/^Date:/p;/^diff --git/,$p'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h2",{attrs:{id:"root"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#root"}},[t._v("#")]),t._v(" 🔹 --root")]),t._v(" "),a("p",[a("strong",[t._v("1. Usage scenario: Create Git patches for two files across several renames")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/43751727",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch sha1 -- file1 file2 ...\n\ngit format-patch --root sha1 -- file1 file2 ...\n\ngit format-patch --root HEAD -- /src/init/Price.cs /src/init/PriceValue.cs /src/moved/PriceValue.cs /src/init/PriceTests.cs /src/init/PriceValueTests.cs /src/moved/PriceValueTests.cs\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("2. Usage scenario: how to extract commit patches from a git repository")])]),t._v(" "),a("blockquote",[a("p",[a("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),a("a",{attrs:{href:"https://stackoverflow.com/questions/39724924",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),a("OutboundLink")],1)])],1)]),t._v(" "),a("p",[a("strong",[t._v("Example:")])]),t._v(" "),a("div",{staticClass:"language-git line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-git"}},[a("code",[t._v("git format-patch -o patches --root HEAD\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);