(window.webpackJsonp=window.webpackJsonp||[]).push([[79],{506:function(s,e,t){"use strict";t.r(e);var n=t(19),a=Object(n.a)({},(function(){var s=this,e=s.$createElement,t=s._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),t("br")])]),s._v(" "),t("h1",{attrs:{id:"git-ls-tree-list-the-contents-of-a-tree-object"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#git-ls-tree-list-the-contents-of-a-tree-object"}},[s._v("#")]),s._v(" 📌 git ls-tree - List the contents of a tree object")]),s._v(" "),t("h2",{attrs:{id:"d"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#d"}},[s._v("#")]),s._v(" 🔹 -d")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How to find the commit(s) that point to a git tree object?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/41090798",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  set these:")]),s._v("\nsearchfor=4e8f805dd45088219b5662bd3d434eb4c5428ec0\n\nstartpoints="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("  # branch names or HEAD or whatever\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can use rev-list limiters too, e.g., origin/master..master")]),s._v("\n\ngit rev-list $startpoints |\n    while read commithash; do\n        if git ls-tree -d -r --full-tree $commithash | grep $searchfor; then\n            echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -- found at $commithash"')]),s._v("\n        fi\n    done\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[t("strong",[s._v("2. Usage scenario: How to check if a dir exist in a given branch on a given remote")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/21244403",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -d origin/master:<remote_dir><remote_subdir>\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"r"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#r"}},[s._v("#")]),s._v(" 🔹 -r")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How can I make git show a list of the files that are being tracked?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 757    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/15606995",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("▲ If you want to list all the files currently being tracked under the branch master, you could use this command:\ngit ls-tree -r master --name-only\n\n▲ If you want a list of files that ever existed (i.e. including deleted files):\ngit log --pretty=format: --name-only --diff-filter=A | sort - | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("2. Usage scenario: List files in local git repo?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 605    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/8533413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --full-tree -r --name-only HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("3. Usage scenario: Splitting a set of files within a git repo into their own repository, preserving relevant history")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/6006679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git filter-branch \\\n    --prune-empty \\\n    --index-filter '\n        git ls-tree -z -r --name-only --full-tree $GIT_COMMIT \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/pyfedpkg$"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/fedpkg"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^git-changelog"')]),s._v(" \\\n        | xargs -0 -r git rm --cached -r\n    ' \\\n    -- \\\n    --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("4. Usage scenario: how do I find a list of files committed to a git branch?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 41    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/8965167",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --name-only -r <branch_name> \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("5. Usage scenario: How to list files in specific revision in "),t("code",[s._v("git")]),s._v("?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 19    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/5215205",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v(" git ls-tree -r --name-only $REV\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("6. Usage scenario: Find and extract file from Git stash")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/13692875",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git rev-list --walk-reflogs stash # (long option)\ngit rev-list -g stash # (short option)\n\nfor sha in $(git rev-list -g stash); \ndo \n     git ls-tree -r $sha:; \ndone |\n   grep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$SOMEFILENAME"')]),s._v(" | \n   sort --unique\n\n$ for sha in $(git rev-list -g stash); do git ls-tree -r $sha:; done | grep numeric.js | sort -u\n100644 blob f1c9a61910ae1bbd562615444a45688b93e9d808    LSPO.Web/DaVinci/JScript/numeric.js\n\nkompare numeric.js <(git cat-file -p f1c9a61910ae1bbd562615444a45688b93e9d808)\n\ngit diff stash@{3} -- numeric.js \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("p",[t("strong",[s._v("7. Usage scenario: List all files in a given remote GIT repository and branch")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/48502464",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r master --name-only\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("8. Usage scenario: Git: check whether file exists in some version")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/18481039",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r HEAD~1 --name-only\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("9. Usage scenario: Checking for duplicate file (contents) in git?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/5783433",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r HEAD\n\ngit ls-tree -r HEAD |\n    sort -t "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -k 3 |\n        perl -ne "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'$1 && / $1\\t/ && print "\\e[0;31m" ; / ([0-9a-f]{40})\\t/; print "$_\\e[0m"\'')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("10. Usage scenario: Git: How to check which files exist (and their content) in a shared (bare) repository?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 7    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/7938114",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r master\n\ngit show master:docs/README\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("11. Usage scenario: Retrieve a path of a file in specific commit in Git")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/56248264",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r --full-tree cb85815bc1 | grep GuiCommonElements.java\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("12. Usage scenario: Renaming files vs pull request squash merge")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/60512339",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-tree"),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -r")]),s._v(" HEAD")]),s._v("\n[snippage]\n100644 blob 41b718c29e1b9fc2981d7d14a3d25e69c31a3030    version.c\n100644 blob 7c62e80577154d79bec050424945eb500d262a0f    version.h\n100644 blob 069ee94a4d79422ea659a7ebe3923662f0626afa    versioncmp.c\n100644 blob bb010f7a2b3c1090bc9c62f613cede7bbda86e97    walker.c\n[snippage]\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("13. Usage scenario: git diff two branches and show only unmodified files")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/57088352",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r develop | grep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\sblob\\s'")]),s._v(" | grep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.xml$'")]),s._v(" | awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3,$4}'")]),s._v(" > foo.txt\ngit ls-tree -r NewFeature | grep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\sblob\\s'")]),s._v(" | grep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'.xml$'")]),s._v(" | awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $3,$4}'")]),s._v(" >> foo.txt\nsort foo.txt | uniq -d | awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{print $2}'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[t("strong",[s._v("14. Usage scenario: git, show list of files if somebody clone particular tag")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/13668664",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r --name-only tagName\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("15. Usage scenario: How to access and compare which file was change in git pre receive hook")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/68888844",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\noldrev=$1\nnewrev=$2\nrefname=$3\nz40=0000000000000000000000000000000000000000\n\necho "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'start git pre receive checking...............'")]),s._v("\nwhile read oldrev newrev refname; do\n    # Get a list of all objects in the new revision\n    objects=`git ls-tree --full-name -r ${newrev}`\n    echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"in loop"')]),s._v("\n    # Get the file names, without directory, of the files that have been modified\n    # between the new revision and the old revision\n    \n    if [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$oldrev"')]),s._v(" = $z40 ] ; then\n                # handle the case when new branch was create\n        oldrev="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4b825dc642cb6eb9a060e54bf8d69288fbee4904"')]),s._v("\n    fi\n\n    if [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$newrev"')]),s._v(" = $z40 ]; then\n                # handle the case when branch was deleted\n        newrev="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4b825dc642cb6eb9a060e54bf8d69288fbee4904"')]),s._v("\n    fi\n        # get file name\n    objects=`git ls-tree --full-name -r ${newrev}`\n    \n    git diff --name-only $oldrev $newrev | while read file; do\n        \n                # grep file name, find the file that I need\n        object=`echo -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${objects}"')]),s._v(" | egrep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\s)${file}\\$"')]),s._v(" | egrep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'application.properties$'")]),s._v(" | awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $3 }'")]),s._v("`\n        # If it's not present, then continue to the the next itteration\n        if [ -z ${object} ]; \n        then \n            echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not application.properties : ${file}"')]),s._v("\n            continue; \n        fi\n                # get the file that I want\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get change file: ${file}"')]),s._v("\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get remote refname: ${refname}"')]),s._v("\n                # check the remote banch\n        if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(  echo $refname | egrep 'release$'  )\"")]),s._v("; then\n                echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ref不是release."')]),s._v("\n                                # checkout the file content\n                if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$( git show $newrev:$file | egrep 'dev' )\"")]),s._v("; then\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties file didn\'t have dev, please check it"')]),s._v("\n                        exit 1\n                else\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties file got dev, yes! "')]),s._v("\n                        exit 0\n                fi\n\n        else\n                echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote ref is release."')]),s._v("\n                if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$( git show $newrev:$file | egrep 'prod' )\"")]),s._v("; then\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties has no prod，please check"')]),s._v("\n                        exit 1\n                else\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties got prod, yes"')]),s._v("\n                        exit 0\n                fi\n\n        fi\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"out put changed config file"')]),s._v("\n        #  git show $newrev:$file\n    done\ndone\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br")])]),t("h2",{attrs:{id:"t"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#t"}},[s._v("#")]),s._v(" 🔹 -t")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How to list the change history of the directory tree in git")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 11    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/7093873",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("for rev in $(git rev-list FIRST_REV..LAST_REV)\ndo\n  git ls-tree -r -t $rev | grep tree | cut -f 2\ndone\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/sh")]),s._v("\nfor r in $(git rev-list FIRST_REV..LAST_REV) \ndo \n    git ls-tree -r -t $r | grep tree | cut -f 2\ndone | sort -u\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("h2",{attrs:{id:"l"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[s._v("#")]),s._v(" 🔹 -l")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: Limiting file size in git repository")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/9126745",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Script to limit the size of a push to git repository.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Git repo has issues with big pushes, and we shouldn't have a real need for those")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# eis/02.02.2012")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --- Safety check, should not be run from command line")]),s._v("\nif [ -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_DIR"')]),s._v(" ]; then\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Don\'t run this script from the command line."')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" (if you want, you could supply GIT_DIR then run"')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"  $0 <ref> <oldrev> <newrev>)"')]),s._v(" >&2\n        exit 1\nfi\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Test that tab replacement works, issue in some Solaris envs at least")]),s._v("\ntestvariable=`echo -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),s._v(" | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\s//'")]),s._v("`\nif [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$testvariable"')]),s._v(" != "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Environment check failed - please contact git hosting."')]),s._v(" >&2\n        exit 1\nfi\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# File size limit is meant to be configured through 'hooks.filesizelimit' setting")]),s._v("\nfilesizelimit=$(git config hooks.filesizelimit)\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If we haven't configured a file size limit, use default value of about 100M")]),s._v("\nif [ -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$filesizelimit"')]),s._v(" ]; then\n        filesizelimit=100000000\nfi\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Reference to incoming checkin can be found at $3")]),s._v("\nrefname=$3\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# With this command, we can find information about the file coming in that has biggest size")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We also normalize the line for excess whitespace")]),s._v("\nbiggest_checkin_normalized=$(git ls-tree --full-tree -r -l $refname | sort -k 4 -n -r | head -1 | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^ *//;s/ *$//;s/\\s\\{1,\\}/ /g'")]),s._v(" )\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Based on that, we can find what we are interested about")]),s._v("\nfilesize=`echo $biggest_checkin_normalized | cut -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f4,4`\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Actual comparison")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To cancel a push, we exit with status code 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is also a good idea to print out some info about the cause of rejection")]),s._v("\nif [ $filesize -gt $filesizelimit ]; then\n\n        # To be more user-friendly, we also look up the name of the offending file\n        filename=`echo $biggest_checkin_normalized | cut -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f5,5`\n\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error: Too large push attempted."')]),s._v(" >&2\n        echo  >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"File size limit is $filesizelimit, and you tried to push file named $filename of size $filesize."')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Contact configuration team if you really need to do this."')]),s._v(" >&2\n        exit 1\nfi\n\nexit 0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("h2",{attrs:{id:"long"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#long"}},[s._v("#")]),s._v(" 🔹 --long")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How can I see how much a directory has added to a git repos total size?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/49451584",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash -e")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# work over each commit and append all files in tree to $tempFile")]),s._v("\ntempFile=$(mktemp)\nfor commitSHA1 in $(git rev-list --all); do\n    git ls-tree -r --long "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$commitSHA1"')]),s._v(" >>"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$tempFile"')]),s._v("\ndone\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# sort files by SHA1, de-dupe list and finally re-sort by filesize")]),s._v("\nsort --key 3 "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$tempFile"')]),s._v(" | \\\n    uniq | \\\n    sort --key 4 --numeric-sort --reverse\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# remove temp file")]),s._v("\nrm "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$tempFile"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"z"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#z"}},[s._v("#")]),s._v(" 🔹 -z")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: Splitting a set of files within a git repo into their own repository, preserving relevant history")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/6006679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git filter-branch \\\n    --prune-empty \\\n    --index-filter '\n        git ls-tree -z -r --name-only --full-tree $GIT_COMMIT \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/pyfedpkg$"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/fedpkg"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^git-changelog"')]),s._v(" \\\n        | xargs -0 -r git rm --cached -r\n    ' \\\n    -- \\\n    --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("h2",{attrs:{id:"name-only"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#name-only"}},[s._v("#")]),s._v(" 🔹 --name-only")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How can I make git show a list of the files that are being tracked?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 757    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/15606995",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("▲ If you want to list all the files currently being tracked under the branch master, you could use this command:\ngit ls-tree -r master --name-only\n\n▲ If you want a list of files that ever existed (i.e. including deleted files):\ngit log --pretty=format: --name-only --diff-filter=A | sort - | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/^$/d'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[t("strong",[s._v("2. Usage scenario: List files in local git repo?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 605    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/8533413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --full-tree -r --name-only HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("3. Usage scenario: Splitting a set of files within a git repo into their own repository, preserving relevant history")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/6006679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git filter-branch \\\n    --prune-empty \\\n    --index-filter '\n        git ls-tree -z -r --name-only --full-tree $GIT_COMMIT \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/pyfedpkg$"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/fedpkg"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^git-changelog"')]),s._v(" \\\n        | xargs -0 -r git rm --cached -r\n    ' \\\n    -- \\\n    --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("4. Usage scenario: How to list versioned files in git?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 41    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/1441361",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --name-only HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("5. Usage scenario: how do I find a list of files committed to a git branch?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 41    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/8965167",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --name-only -r <branch_name> \n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("6. Usage scenario: List all files in a given remote GIT repository and branch")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/48502464",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r master --name-only\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("7. Usage scenario: Git: check whether file exists in some version")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/18481039",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r HEAD~1 --name-only\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("8. Usage scenario: git, show list of files if somebody clone particular tag")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/13668664",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r --name-only tagName\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("h2",{attrs:{id:"full-name"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#full-name"}},[s._v("#")]),s._v(" 🔹 --full-name")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: How to get the path of a file relative to the Git repository root?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 33    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/16951268",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("$ cd lib\n"),t("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-files"),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-name test.c")]),s._v("\nlib/test.c\n\n$ cd lib\n"),t("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git ls-tree"),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --full")]),s._v("-name"),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --name")]),s._v("-only HEAD test.c")]),s._v("\nlib/test.c\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[t("strong",[s._v("2. Usage scenario: How to access and compare which file was change in git pre receive hook")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/68888844",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\noldrev=$1\nnewrev=$2\nrefname=$3\nz40=0000000000000000000000000000000000000000\n\necho "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'start git pre receive checking...............'")]),s._v("\nwhile read oldrev newrev refname; do\n    # Get a list of all objects in the new revision\n    objects=`git ls-tree --full-name -r ${newrev}`\n    echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"in loop"')]),s._v("\n    # Get the file names, without directory, of the files that have been modified\n    # between the new revision and the old revision\n    \n    if [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$oldrev"')]),s._v(" = $z40 ] ; then\n                # handle the case when new branch was create\n        oldrev="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4b825dc642cb6eb9a060e54bf8d69288fbee4904"')]),s._v("\n    fi\n\n    if [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$newrev"')]),s._v(" = $z40 ]; then\n                # handle the case when branch was deleted\n        newrev="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"4b825dc642cb6eb9a060e54bf8d69288fbee4904"')]),s._v("\n    fi\n        # get file name\n    objects=`git ls-tree --full-name -r ${newrev}`\n    \n    git diff --name-only $oldrev $newrev | while read file; do\n        \n                # grep file name, find the file that I need\n        object=`echo -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"${objects}"')]),s._v(" | egrep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"(\\s)${file}\\$"')]),s._v(" | egrep "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'application.properties$'")]),s._v(" | awk "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'{ print $3 }'")]),s._v("`\n        # If it's not present, then continue to the the next itteration\n        if [ -z ${object} ]; \n        then \n            echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"not application.properties : ${file}"')]),s._v("\n            continue; \n        fi\n                # get the file that I want\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get change file: ${file}"')]),s._v("\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"get remote refname: ${refname}"')]),s._v("\n                # check the remote banch\n        if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$(  echo $refname | egrep 'release$'  )\"")]),s._v("; then\n                echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ref不是release."')]),s._v("\n                                # checkout the file content\n                if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$( git show $newrev:$file | egrep 'dev' )\"")]),s._v("; then\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties file didn\'t have dev, please check it"')]),s._v("\n                        exit 1\n                else\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties file got dev, yes! "')]),s._v("\n                        exit 0\n                fi\n\n        else\n                echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"remote ref is release."')]),s._v("\n                if test -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"$( git show $newrev:$file | egrep 'prod' )\"")]),s._v("; then\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties has no prod，please check"')]),s._v("\n                        exit 1\n                else\n                        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"properties got prod, yes"')]),s._v("\n                        exit 0\n                fi\n\n        fi\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"out put changed config file"')]),s._v("\n        #  git show $newrev:$file\n    done\ndone\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br"),t("span",{staticClass:"line-number"},[s._v("60")]),t("br"),t("span",{staticClass:"line-number"},[s._v("61")]),t("br"),t("span",{staticClass:"line-number"},[s._v("62")]),t("br"),t("span",{staticClass:"line-number"},[s._v("63")]),t("br"),t("span",{staticClass:"line-number"},[s._v("64")]),t("br"),t("span",{staticClass:"line-number"},[s._v("65")]),t("br"),t("span",{staticClass:"line-number"},[s._v("66")]),t("br"),t("span",{staticClass:"line-number"},[s._v("67")]),t("br")])]),t("h2",{attrs:{id:"full-tree"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#full-tree"}},[s._v("#")]),s._v(" 🔹 --full-tree")]),s._v(" "),t("p",[t("strong",[s._v("1. Usage scenario: List files in local git repo?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 605    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/8533413",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --full-tree -r --name-only HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("2. Usage scenario: Splitting a set of files within a git repo into their own repository, preserving relevant history")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 50    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-filter-branch.html"}},[s._v("git filter-branch")]),s._v(", "),t("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[s._v("git rm")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/6006679",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git filter-branch \\\n    --prune-empty \\\n    --index-filter '\n        git ls-tree -z -r --name-only --full-tree $GIT_COMMIT \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/pyfedpkg$"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^src/fedpkg"')]),s._v(" \\\n        | grep -z -v "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"^git-changelog"')]),s._v(" \\\n        | xargs -0 -r git rm --cached -r\n    ' \\\n    -- \\\n    --all\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("3. Usage scenario: Git: list all tracked files")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 29    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/32827149",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree --full-tree -r --name-only HEAD\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[t("strong",[s._v("4. Usage scenario: Limiting file size in git repository")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/9126745",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#!/bin/bash")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Script to limit the size of a push to git repository.")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Git repo has issues with big pushes, and we shouldn't have a real need for those")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# eis/02.02.2012")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --- Safety check, should not be run from command line")]),s._v("\nif [ -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$GIT_DIR"')]),s._v(" ]; then\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Don\'t run this script from the command line."')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" (if you want, you could supply GIT_DIR then run"')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"  $0 <ref> <oldrev> <newrev>)"')]),s._v(" >&2\n        exit 1\nfi\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Test that tab replacement works, issue in some Solaris envs at least")]),s._v("\ntestvariable=`echo -e "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\\t"')]),s._v(" | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/\\s//'")]),s._v("`\nif [ "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$testvariable"')]),s._v(" != "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" ]; then\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Environment check failed - please contact git hosting."')]),s._v(" >&2\n        exit 1\nfi\n\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# File size limit is meant to be configured through 'hooks.filesizelimit' setting")]),s._v("\nfilesizelimit=$(git config hooks.filesizelimit)\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# If we haven't configured a file size limit, use default value of about 100M")]),s._v("\nif [ -z "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"$filesizelimit"')]),s._v(" ]; then\n        filesizelimit=100000000\nfi\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Reference to incoming checkin can be found at $3")]),s._v("\nrefname=$3\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# With this command, we can find information about the file coming in that has biggest size")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# We also normalize the line for excess whitespace")]),s._v("\nbiggest_checkin_normalized=$(git ls-tree --full-tree -r -l $refname | sort -k 4 -n -r | head -1 | sed "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'s/^ *//;s/ *$//;s/\\s\\{1,\\}/ /g'")]),s._v(" )\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Based on that, we can find what we are interested about")]),s._v("\nfilesize=`echo $biggest_checkin_normalized | cut -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f4,4`\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Actual comparison")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# To cancel a push, we exit with status code 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# It is also a good idea to print out some info about the cause of rejection")]),s._v("\nif [ $filesize -gt $filesizelimit ]; then\n\n        # To be more user-friendly, we also look up the name of the offending file\n        filename=`echo $biggest_checkin_normalized | cut -d "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f5,5`\n\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Error: Too large push attempted."')]),s._v(" >&2\n        echo  >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"File size limit is $filesizelimit, and you tried to push file named $filename of size $filesize."')]),s._v(" >&2\n        echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Contact configuration team if you really need to do this."')]),s._v(" >&2\n        exit 1\nfi\n\nexit 0\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br")])]),t("p",[t("strong",[s._v("5. Usage scenario: How to find the commit(s) that point to a git tree object?")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 15    🔗Associated commands: [ "),t("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/41090798",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)],1)],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#! /bin/sh")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  set these:")]),s._v("\nsearchfor=4e8f805dd45088219b5662bd3d434eb4c5428ec0\n\nstartpoints="),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"master"')]),s._v("  # branch names or HEAD or whatever\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# you can use rev-list limiters too, e.g., origin/master..master")]),s._v("\n\ngit rev-list $startpoints |\n    while read commithash; do\n        if git ls-tree -d -r --full-tree $commithash | grep $searchfor; then\n            echo "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('" -- found at $commithash"')]),s._v("\n        fi\n    done\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("p",[t("strong",[s._v("6. Usage scenario: Retrieve a path of a file in specific commit in Git")])]),s._v(" "),t("blockquote",[t("p",[t("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),t("a",{attrs:{href:"https://stackoverflow.com/questions/56248264",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),t("OutboundLink")],1)])],1)]),s._v(" "),t("p",[t("strong",[s._v("Example:")])]),s._v(" "),t("div",{staticClass:"language-git line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-git"}},[t("code",[s._v("git ls-tree -r --full-tree cb85815bc1 | grep GuiCommonElements.java\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);