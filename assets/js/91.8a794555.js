(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{519:function(t,e,s){"use strict";s.r(e);var r=s(19),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),s("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),s("br")])]),t._v(" "),s("h1",{attrs:{id:"git-mktree-build-a-tree-object-from-ls-tree-formatted-text"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#git-mktree-build-a-tree-object-from-ls-tree-formatted-text"}},[t._v("#")]),t._v(" 📌 git mktree - Build a tree-object from ls-tree formatted text")]),t._v(" "),s("h2",{attrs:{id:"missing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#missing"}},[t._v("#")]),t._v(" 🔹 --missing")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Git: get a hash of the current state of the working tree?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-hash-object.html"}},[t._v("git hash-object")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-diff-index.html"}},[t._v("git diff-index")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/31197054",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\n{   git diff-index --name-only HEAD\n    git ls-files -o --exclude-standard\n} \\\n| while read path; do\n    test -f "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$path"')]),t._v(" && printf "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100644 blob %s\\t$path\\n"')]),t._v(" $(git hash-object -w "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$path"')]),t._v(");\n    test -d "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$path"')]),t._v(" && printf "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"160000 commit %s\\t$path\\n"')]),t._v(" $(cd "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$path"')]),t._v("; git rev-parse HEAD);\ndone | sed "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s,/,\\\\,g'")]),t._v(" | git mktree --missing\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br")])]),s("h2",{attrs:{id:"none"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),s("p",[s("strong",[t._v("1. Usage scenario: Update the root directory of a branch from the subdirectory of another")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/10591668",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("true | git mktree | xargs git commit-tree | xargs git branch gh-pages\n\ngit checkout gh-pages\ngit read-tree master:html\ngit commit -m"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'gh-pages documentation'")]),t._v("\ngit push origin gh-pages\ngit checkout master\n\ngit commit-tree -p gh-pages -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" master:html \\\n| xargs git update-ref refs/heads/gh-pages\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br")])]),s("p",[s("strong",[t._v("2. Usage scenario: create tree without using staging area")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/27283328",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)])],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("echo -e "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"100644 blob 83baae618...\\ttest.txt"')]),t._v(" | git mktree\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[s("strong",[t._v("3. Usage scenario: How to rebase entire master branch of git repo")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/58003170",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("git checkout -B feature\ngit branch -f master   $(git commit-tree -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit.'")]),t._v(" `:|git mktree`)\ngit merge -s ours --allow-unrelated-histories   master\n\ngit checkout -B feature\ngit branch -f master   $(git commit-tree -m "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit.'")]),t._v(" `:|git mktree`)\ngit rebase --root --onto master\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("p",[s("strong",[t._v("4. Usage scenario: How can I check out only a part of a git repository during a bamboo build?")])]),t._v(" "),s("blockquote",[s("p",[s("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),s("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-add.html"}},[t._v("git add")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),s("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),s("a",{attrs:{href:"https://stackoverflow.com/questions/10457397",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),s("OutboundLink")],1)],1)],1)]),t._v(" "),s("p",[s("strong",[t._v("Example:")])]),t._v(" "),s("div",{staticClass:"language-git line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-git"}},[s("code",[t._v("▲ Easiest is probably to have whoever's hosting the repo tag and commit the particular tree you want.  For instance,\ngit tag quickie $(git commit-tree $(git rev-parse HEAD:path/to/dir) </dev/null)\n\ngit fetch upstream quickie\n\n▲ If you want the upstream repo to automatically track a subtree on a branch, you can do (a suitably decrypted version of) something like this:\nsed -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'s,^[^ ]* [^ ]* refs/heads/master$,git update-ref refs/heads/master-subtree -m "Auto-tracking master" $(git commit-tree master:subtree -m "Auto-tracking master subtree" $(test -r refs/heads/master-subtree \\&\\& echo -p refs/heads/master-subtree)),p\'')]),t._v(" | sh -x\n\nmkdir ~/tryitout && cd ~/tryitout && git init foo && git init bar --bare\ncat >bar/hooks/post-receive <<"),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EOF'")]),t._v("\nsed -n "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'s,^[^ ]* [^ ]* refs/heads/master$,git update-ref refs/heads/master-subtree -m "Auto-tracking master" $(git commit-tree master:subtree -m "Auto-tracking master subtree" $(test -r refs/heads/master-subtree \\&\\& echo -p refs/heads/master-subtree)),p\'')]),t._v(" | sh -x\nEOF\nchmod a+x bar/hooks/post-receive\ncd foo\nmkdir subtree && touch subtree/oooo && git add . && git commit -am-\ngit push ../bar master\n\n▲ If you're sharing a filesystem with the other repo, you can do this:\ngit clone --no-checkout /path/to/local/repo/.git subtree\ncd subtree\ngit commit-tree origin/rev:subtree </dev/null | xargs git checkout -B peek\n\ngit mktree </dev/null | xargs git commit-tree | xargs git checkout -b empty\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])])])}),[],!1,null,null,null);e.default=a.exports}}]);