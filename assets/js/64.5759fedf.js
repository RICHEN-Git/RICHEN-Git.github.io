(window.webpackJsonp=window.webpackJsonp||[]).push([[64],{494:function(s,t,e){"use strict";e.r(t);var a=e(19),n=Object(a.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("📖 "+s._s(s.$page.readingTime.text)+"    🔡 "+s._s(s.$page.readingTime.words)),e("br")])]),s._v(" "),e("h1",{attrs:{id:"git-grep-print-lines-matching-a-pattern"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-grep-print-lines-matching-a-pattern"}},[s._v("#")]),s._v(" 📌 git grep - Print lines matching a pattern")]),s._v(" "),e("h2",{attrs:{id:"cached"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cached"}},[s._v("#")]),s._v(" 🔹 --cached")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to list all text (non-binary) files in a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 27    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24350112",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached -Il "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list all files tracked by Git excluding submodules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51758365",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How grep through your staged files prior to committing?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53535821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"debugger"')]),s._v(" $(git diff --cached --name-only)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I find modified lines that match a certain pattern with Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20931736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'What You are looking for'")]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.typeOfFile'")]),s._v("\ngit grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"What You are looking for"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.typeOfFile'")]),s._v("\n\nC:\\Users\\VonC\\prog\\go\\src\\github.com\\VonC\\asciidocgo>\ngit grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"testa"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.go"')]),s._v("\nabstractNode.go:3:testa\n^^^^^^^^^^^^^^^ |\n  (file name)   --\x3e (line number)\n\nggb.sh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# runs git grep on a pattern, and then uses git blame to who did it")]),s._v("\nggb() {\n    git grep -n $1 | while IFS=: read i j k; do git blame -L $j,$j $i | cat; done\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[s._v("#")]),s._v(" 🔹 -i")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Do you rebase onto, with (or some other preposition) another branch?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[s._v("git rebase")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/58667226",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("D:\\git\\git>git grep -i "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rebase with"')]),s._v("\nDocumentation/git-pull.txt:When set to `preserve` (deprecated in favor of `merges`), rebase with the\nDocumentation/git-rebase.txt:- Start an interactive rebase with `git rebase -i <commit>^`, ...\nDocumentation/git-rebase.txt:- Continue the rebase with `git rebase --continue`.\n...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to smoothly rename a Phoenix Project?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43301711",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_OTP | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_OTP/$NEW_OTP/g"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_NAME | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_NAME/$NEW_NAME/g"')]),s._v("\n\n$ mv lib/$CURRENT_OTP lib/$NEW_OTP\n$ mv lib/$CURRENT_OTP.ex lib/$NEW_OTP.ex\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: Find commits that refer to specific LFS object")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-for-each-ref.html"}},[s._v("git for-each-ref")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69287365",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git rev-list  \\\n        $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/heads refs/tags) \\\n        --not $(git for-each-ref --format="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'%(refname)'")]),s._v(" refs/remotes/origin)\n\nalias doit="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'git for-each-ref --format=\"%(refname)\"'")]),s._v("\nsearch=$( git rev-list  \\\n                $(doit refs/heads refs/tags) --not $(doit refs/remotes/origin)\n)\ngit grep -i B41C79ADE3 $search -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':(attr:filter=lfs)*'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("h2",{attrs:{id:"w"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#w"}},[s._v("#")]),s._v(" 🔹 -w")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How do I exclude files from git ls-files?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 39    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53083343",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git ls-files -- . "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':!:*.md'")]),s._v("\n\ngit ls-files -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.js'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':!:*.min.js'")]),s._v("\n\ngit grep -w funcname -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.js'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("':!:*.min.js'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"word-regexp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#word-regexp"}},[s._v("#")]),s._v(" 🔹 --word-regexp")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Finding SHA1 in git for file version containing a given line containing a given string")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[s._v("git log")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20479599",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git log --format=format:%H -- sha1_file.c | \\\n  xargs -I SHA1 env GIT_PAGER=cat \\\n  git grep --word-regexp --line-num check_sha1_signature SHA1 -- sha1_file.c\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("h2",{attrs:{id:"e"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#e"}},[s._v("#")]),s._v(" 🔹 -E")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git grep main repo and specific submodules")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18036643",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ REDO: I had hacked together a bash script with that script to do the paging (mentioned at the bottom), but noticed that your example already prefixed the search path. I modified your alias a little bit and now find that this works for me:\n[alias]\n    gpx = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { list=$1; shift; for r in . $list; do ( cd $r; git grep $@ | perl -pe \\"s|^|$r/|\\"; ); done ;}; f"')]),s._v("\n\ngit --no-pager gpx "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo submodules/bar'")]),s._v(" --color=always -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v(" | less -R\n\n[alias]\n   gpxp = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { list=$1; shift; for r in . $list; do ( cd $r; git --no-pager grep --color=always $@ | perl -pe \\"s|^|$r/|\\"; ); done | less -R ;}; f"')]),s._v("\n\ngit gpxp "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo submodules/bar'")]),s._v(" -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v("\n\n▲ If you wish to constrain iteration to foo and something/bar, in your supermodule you can do\ngit config scm.focusGroup "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo something/bar'")]),s._v("\n\ngit --no-pager submodule-ext foreach -t -r -c -k git grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expression'")]),s._v("\n\n▲ Or if you install with aliases,\ngit --no-pager tsfer -c -k git grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expression'")]),s._v("\n\n▲ If your expression is complex, something like looking for function calls "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v(", you will need to enclose the entire expression in double quotes:\ngit --no-pager tsferp -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git grep -E '\\w+\\(\\w*\\)'\"")]),s._v("\n\n▲ If escaping is a huge issue and you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'re using bash, you export a function to use in the iteration (the extension script I modified is using bash, rather than Git'")]),s._v("s standard /bin/sh)\ngreppage() {\n    git grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some(really)?complex.*\\(expression\\)'")]),s._v("\n}\nexport -f greppage\ngit --no-pager tsfer -c -k greppage\n\ngit --no-pager sube -q foreach -t -r -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo [ \\$name ]'\\n'; git grep --color=always -E '\\w+\\(\\w*\\)'; echo '\\n\\n'\"")]),s._v(" | less -R\n\ngit-greps() { git --no-pager sube -q foreach -t -r -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git grep --color=always $(git rev-parse --sq-quote "')]),s._v("$@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('") | perl -pe \\"s|^|\\$name/|\\""')]),s._v(" | less -R; }\n\ngit-greps -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Search git for a code pattern using git grep")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49760677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a | tr -d \\* | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/->/d'")]),s._v(" | xargs git grep -E -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"\\Wt\\('.*'\\)\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[s._v("#")]),s._v(" 🔹 -F")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Find my lines in repository by specific pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42946624",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TODO"')]),s._v(" | awk -F: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{system("git blame -f -L "$2","$2" "$1)}\'')]),s._v(" |grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[s._v("#")]),s._v(" 🔹 -n")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How can I search a word in Git repo over the whole history?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9522988",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep -n "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"XYZ"')]),s._v(" $(git rev-list --all)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"l"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l"}},[s._v("#")]),s._v(" 🔹 -l")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep (search) committed code in the Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2199    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2929502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\ngit grep <regexp>\n\ngit grep -e <regexp1> [--or] -e <regexp2>\n\ngit grep -l -e <regexp1> --and -e <regexp2>\n\ngit grep -l --all-match -e <regexp1> -e <regexp2>\n\ngit diff --unified=0 | grep <pattern>\n\ngit grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list <rev1>..<rev2>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How to list all files tracked by Git excluding submodules?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51758365",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached -l "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to smoothly rename a Phoenix Project?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43301711",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_OTP | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_OTP/$NEW_OTP/g"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_NAME | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_NAME/$NEW_NAME/g"')]),s._v("\n\n$ mv lib/$CURRENT_OTP lib/$NEW_OTP\n$ mv lib/$CURRENT_OTP.ex lib/$NEW_OTP.ex\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"files-with-matches"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#files-with-matches"}},[s._v("#")]),s._v(" 🔹 --files-with-matches")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: File names only using Git grep")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 23    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48970924",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v(" --files-with-matches\nfatal: option "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--files-with-matches'")]),s._v(" must come before non-option arguments\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" --files")]),s._v("-with-matches ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo'")]),s._v("\n<list of matching files>\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("h2",{attrs:{id:"name-only"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#name-only"}},[s._v("#")]),s._v(" 🔹 --name-only")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How grep through your staged files prior to committing?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53535821",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"debugger"')]),s._v(" $(git diff --cached --name-only)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"l-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#l-2"}},[s._v("#")]),s._v(" 🔹 -L")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Find my lines in repository by specific pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42946624",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TODO"')]),s._v(" | awk -F: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{system("git blame -f -L "$2","$2" "$1)}\'')]),s._v(" |grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"c"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#c"}},[s._v("#")]),s._v(" 🔹 -c")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Find all binary files in git HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30690662",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("diff <(git grep -Ic "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(") <(git grep -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(") | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^>'")]),s._v(" | cut -d : -f 1 | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 2-\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"color"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#color"}},[s._v("#")]),s._v(" 🔹 --color")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: git grep main repo and specific submodules")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[s._v("git config")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[s._v("git rev-parse")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18036643",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("▲ REDO: I had hacked together a bash script with that script to do the paging (mentioned at the bottom), but noticed that your example already prefixed the search path. I modified your alias a little bit and now find that this works for me:\n[alias]\n    gpx = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { list=$1; shift; for r in . $list; do ( cd $r; git grep $@ | perl -pe \\"s|^|$r/|\\"; ); done ;}; f"')]),s._v("\n\ngit --no-pager gpx "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo submodules/bar'")]),s._v(" --color=always -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v(" | less -R\n\n[alias]\n   gpxp = "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"!f() { list=$1; shift; for r in . $list; do ( cd $r; git --no-pager grep --color=always $@ | perl -pe \\"s|^|$r/|\\"; ); done | less -R ;}; f"')]),s._v("\n\ngit gpxp "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo submodules/bar'")]),s._v(" -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v("\n\n▲ If you wish to constrain iteration to foo and something/bar, in your supermodule you can do\ngit config scm.focusGroup "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'foo something/bar'")]),s._v("\n\ngit --no-pager submodule-ext foreach -t -r -c -k git grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expression'")]),s._v("\n\n▲ Or if you install with aliases,\ngit --no-pager tsfer -c -k git grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'expression'")]),s._v("\n\n▲ If your expression is complex, something like looking for function calls "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v(", you will need to enclose the entire expression in double quotes:\ngit --no-pager tsferp -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"git grep -E '\\w+\\(\\w*\\)'\"")]),s._v("\n\n▲ If escaping is a huge issue and you"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'re using bash, you export a function to use in the iteration (the extension script I modified is using bash, rather than Git'")]),s._v("s standard /bin/sh)\ngreppage() {\n    git grep -E "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'some(really)?complex.*\\(expression\\)'")]),s._v("\n}\nexport -f greppage\ngit --no-pager tsfer -c -k greppage\n\ngit --no-pager sube -q foreach -t -r -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"echo [ \\$name ]'\\n'; git grep --color=always -E '\\w+\\(\\w*\\)'; echo '\\n\\n'\"")]),s._v(" | less -R\n\ngit-greps() { git --no-pager sube -q foreach -t -r -c -k "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"git grep --color=always $(git rev-parse --sq-quote "')]),s._v("$@"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('") | perl -pe \\"s|^|\\$name/|\\""')]),s._v(" | less -R; }\n\ngit-greps -nIE "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'\\w+\\(\\w*\\)'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br")])]),e("h2",{attrs:{id:"f-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f-2"}},[s._v("#")]),s._v(" 🔹 -f")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: Find all binary files in git HEAD")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 26    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30690662",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("diff <(git grep -Ic "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(") <(git grep -c "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(") | grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^>'")]),s._v(" | cut -d : -f 1 | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("' '")]),s._v(" -f 2-\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: Find my lines in repository by specific pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42946624",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -n")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"TODO"')]),s._v(" | awk -F: "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{system("git blame -f -L "$2","$2" "$1)}\'')]),s._v(" |grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"The Author Name"')]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"e-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#e-2"}},[s._v("#")]),s._v(" 🔹 -e")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep (search) committed code in the Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2199    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2929502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\ngit grep <regexp>\n\ngit grep -e <regexp1> [--or] -e <regexp2>\n\ngit grep -l -e <regexp1> --and -e <regexp2>\n\ngit grep -l --all-match -e <regexp1> -e <regexp2>\n\ngit diff --unified=0 | grep <pattern>\n\ngit grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list <rev1>..<rev2>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("p",[e("strong",[s._v('2. Usage scenario: How do I git grep for a string including a ">"?')])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 10    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47891554",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-[>]upload'")]),s._v("\n\ngit grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'[-][>]upload'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How can I search a bare Git repo for a string in the contents of the current revision?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[s._v("git ls-files")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8055356",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep -e textstring HEAD\n\ngit ls-files|xargs -I% -n 1 git cat-file -p HEAD:%|grep textstring\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How can I find modified lines that match a certain pattern with Git?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-blame.html"}},[s._v("git blame")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20931736",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'What You are looking for'")]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.typeOfFile'")]),s._v("\ngit grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"What You are looking for"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.typeOfFile'")]),s._v("\n\nC:\\Users\\VonC\\prog\\go\\src\\github.com\\VonC\\asciidocgo>\ngit grep --cached -n -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"testa"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"*.go"')]),s._v("\nabstractNode.go:3:testa\n^^^^^^^^^^^^^^^ |\n  (file name)   --\x3e (line number)\n\nggb.sh\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# runs git grep on a pattern, and then uses git blame to who did it")]),s._v("\nggb() {\n    git grep -n $1 | while IFS=: read i j k; do git blame -L $j,$j $i | cat; done\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How to smoothly rename a Phoenix Project?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43301711",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_OTP | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_OTP/$NEW_OTP/g"')]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -l")]),s._v(" $CURRENT_NAME | xargs sed"),e("span",{pre:!0,attrs:{class:"token parameter"}},[s._v(" -i")]),s._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"s/$CURRENT_NAME/$NEW_NAME/g"')]),s._v("\n\n$ mv lib/$CURRENT_OTP lib/$NEW_OTP\n$ mv lib/$CURRENT_OTP.ex lib/$NEW_OTP.ex\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Search git for a code pattern using git grep")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[s._v("git branch")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/49760677",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git branch -a | tr -d \\* | sed "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/->/d'")]),s._v(" | xargs git grep -E -e "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("\"\\Wt\\('.*'\\)\"")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"and"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#and"}},[s._v("#")]),s._v(" 🔹 --and")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep (search) committed code in the Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2199    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2929502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\ngit grep <regexp>\n\ngit grep -e <regexp1> [--or] -e <regexp2>\n\ngit grep -l -e <regexp1> --and -e <regexp2>\n\ngit grep -l --all-match -e <regexp1> -e <regexp2>\n\ngit diff --unified=0 | grep <pattern>\n\ngit grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list <rev1>..<rev2>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h2",{attrs:{id:"or"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#or"}},[s._v("#")]),s._v(" 🔹 --or")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep (search) committed code in the Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2199    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2929502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\ngit grep <regexp>\n\ngit grep -e <regexp1> [--or] -e <regexp2>\n\ngit grep -l -e <regexp1> --and -e <regexp2>\n\ngit grep -l --all-match -e <regexp1> -e <regexp2>\n\ngit diff --unified=0 | grep <pattern>\n\ngit grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list <rev1>..<rev2>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h2",{attrs:{id:"all-match"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all-match"}},[s._v("#")]),s._v(" 🔹 --all-match")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to grep (search) committed code in the Git history")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2199    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[s._v("git diff")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2929502",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list --all -- lib/util) -- lib/util\n\ngit grep <regexp>\n\ngit grep -e <regexp1> [--or] -e <regexp2>\n\ngit grep -l -e <regexp1> --and -e <regexp2>\n\ngit grep -l --all-match -e <regexp1> -e <regexp2>\n\ngit diff --unified=0 | grep <pattern>\n\ngit grep <regexp> $(git rev-list --all)\n\ngit grep <regexp> $(git rev-list <rev1>..<rev2>)\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[s._v("#")]),s._v(" 🔹None")]),s._v(" "),e("p",[e("strong",[s._v("1. Usage scenario: How to git grep only a set of file extensions")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 17    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33186697",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"MyFunc"')]),s._v(" -- "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.cpp'")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.h'")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("2. Usage scenario: How do I verify removal of sensitive data from a git repository?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[s._v("git rev-list")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[s._v("git fsck")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5302782",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git fsck --no-reflogs | awk "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("'/dangling commit/{print $3}'")]),s._v(" | while read sha1;\n  do git grep foo $sha1; done\n\ngit rev-list --objects --all | while read sha path;\n  do git show $sha | grep baz; done\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[e("strong",[s._v("3. Usage scenario: How to make git grep show at the top instead of the bottom of the terminal screen?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2362144",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("GIT_PAGER="),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(" git grep ...\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("4. Usage scenario: How to: find string in GitHub repo?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46633194",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep string_to_look_for")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("strong",[s._v("5. Usage scenario: How do I see the commit sha when I use git grep?")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[s._v("git cat-file")]),s._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[s._v("git push")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37691766",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep asdf")]),s._v("\nDocumentation/rev-list-options.txt:  ``asdf"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(", and a file `quux` exists with con\nt/t5516-fetch-push.sh:  test_must_fail git push >.git/bar --porcelain asdfasdfas\nt/t9100-git-svn-basic.sh:       echo asdf > dir &&\nt/t9132-git-svn-broken-symlink.sh:asdf\nt/t9132-git-svn-broken-symlink.sh:test_expect_success SYMLINKS '"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v(' is a symli\nt/t9132-git-svn-broken-symlink.sh:      (cd x && test xasdf = x"$(git cat-file b\n\n'),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep asdf HEAD^ HEAD~3")]),s._v("\nHEAD^:Documentation/rev-list-options.txt:  ``asdf"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(", and a file `quux` exists wi\nHEAD^:t/t5516-fetch-push.sh:    test_must_fail git push >.git/bar --porcelain as\nHEAD^:t/t9100-git-svn-basic.sh: echo asdf > dir &&\nHEAD^:t/t9132-git-svn-broken-symlink.sh:asdf\nHEAD^:t/t9132-git-svn-broken-symlink.sh:test_expect_success SYMLINKS '"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v(' is a\nHEAD^:t/t9132-git-svn-broken-symlink.sh:        (cd x && test xasdf = x"$(git ca\nHEAD~3:Documentation/rev-list-options.txt:  ``asdf'),e("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),s._v(", and a file `quux` exists w\nHEAD~3:t/t5516-fetch-push.sh:   test_must_fail git push >.git/bar --porcelain as\nHEAD~3:t/t9100-git-svn-basic.sh:        echo asdf > dir &&\nHEAD~3:t/t9132-git-svn-broken-symlink.sh:asdf\nHEAD~3:t/t9132-git-svn-broken-symlink.sh:test_expect_success SYMLINKS '"),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"bar"')]),s._v(' is \nHEAD~3:t/t9132-git-svn-broken-symlink.sh:       (cd x && test xasdf = x"$(git ca\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br")])]),e("p",[e("strong",[s._v("6. Usage scenario: Find commit with specific git note")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[s._v("git show")]),s._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52204890",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)],1)],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git grep Testing refs/notes/commits")]),s._v("\nrefs/notes/commits:fad066950ba73c309e80451d0d0f706e45adf5a8:This is a test - Testing\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[s._v("$ git show fad0669")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token commit-sha1"}},[s._v("commit fad066950ba73c309e80451d0d0f706e45adf5a8")]),s._v("\nAuthor: Mark Adelsberger <adelsbergerm@xxx>\nDate:   Thu Sep 6 07:51:15 2018 -0500\n\n    1\n\nNotes:\n    This is a test - Testing\n\ndiff --git a/file1 b/file1\nindex e69de29..038d718 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[s._v("--- a/file1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+++ b/file1")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[s._v("@@ -0,0 +1 @@")]),s._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[s._v("+testing")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br")])]),e("p",[e("strong",[s._v("7. Usage scenario: filter a "),e("code",[s._v("git grep")]),s._v(" search on more than one pattern")])]),s._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[s._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41328011",target:"_blank",rel:"noopener noreferrer"}},[s._v("Details"),e("OutboundLink")],1)])],1)]),s._v(" "),e("p",[e("strong",[s._v("Example:")])]),s._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[s._v("git grep xyz -- *.py *.yml\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])])}),[],!1,null,null,null);t.default=n.exports}}]);