(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{448:function(t,s,e){"use strict";e.r(s);var n=e(19),a=Object(n.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-add-add-file-contents-to-the-index"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-add-add-file-contents-to-the-index"}},[t._v("#")]),t._v(" 📌 git add - Add file contents to the index")]),t._v(" "),e("h2",{attrs:{id:"f"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#f"}},[t._v("#")]),t._v(" 🔹 -f")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I add files without dots in them (all extension-less files) to the gitignore file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 150    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19023985",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -f -- myFile\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to track directories but not their files with Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 123    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5091158",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ touch upload/.placeholder\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" upload/.placeholder")]),t._v("\n\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add upload/.placeholder")]),t._v("\nThe following paths are ignored by one of your .gitignore files:\nupload\nUse -f if you really want to add them.\nfatal: no files added\n\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git rm --cached ..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   upload/.placeholder")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\n$ touch upload/images/.placeholder\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" upload/images/.placeholder")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Add previously ignored directory to Git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 63    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23296404",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add html/support/\n\ngit add -f html/support/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: .gitignore: track a single file in an ignored directory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/29919371",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -f parent/child/child-02/file.txt \ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"added file.txt"')]),t._v("\n\ntest $ mkdir repo && cd repo && git init\nrepo $ mkdir -p parent/child/child-02\nrepo $ touch file parent/file parent/child/file parent/child/child-02/file.txt\nrepo $ cat .gitignore \nparent/child/*\n!parent/child/child-02\nparent/child/child-02/*\n!parent/child/child-02/file.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("repo $ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("repo $ git status")]),t._v("\n        new file:   .gitignore\n        new file:   file\n        new file:   parent/child/child-02/file.txt\n        new file:   parent/file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to add files ignored by a git ignore rule")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31503291",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cat .gitignore \n*.a\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --ignored")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   .gitignore")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ignored files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add -f <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   bar.a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   foo.a")]),t._v("\nnothing added to commit but untracked files present (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add foo.a")]),t._v("\nThe following paths are ignored by one of your .gitignore files:\nfoo.a\nUse -f if you really want to add them.\nfatal: no files added\n$\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" foo.a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git rm --cached <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   foo.a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   .gitignore")]),t._v("\n$  git status --ignored\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git rm --cached <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   foo.a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   .gitignore")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Ignored files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add -f <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   bar.a")]),t._v("\n$\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: Prohibiting external files in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10084823",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("C:\\prog\\git\\tests\\multipleRepos\\r2a>git add -f ..\\r1\\f1r1\nfatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'..\\r1\\f1r1'")]),t._v(" is outside repository\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How can I ignore everything in a git repository subdirectory except a single file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51410691",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -f mod/README.md\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: git ignore everything but some subdirectories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6056224",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -f package1/package1-2.2.1/debian\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Cloning a github repository with .gitignore")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47441524",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -f index.js\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"force"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#force"}},[t._v("#")]),t._v(" 🔹 --force")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Unignore subdirectories of ignored directories in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 39    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5262024",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Even if you add something to .gitignore, you can force git to add it to the index\ngit add --force uploads/rubbish/stuff/KEEP_ME/\n\n▲ However, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"KEEP_ME"')]),t._v(" seems to be a directory and git usually doesnt like empty folder, so you should can add a "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"placeholder"')]),t._v("-holder file instead, if the folder is empty\ngit add --force uploads/rubbish/stuff/KEEP_ME/.keep_me\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to INCLUDE lib files inside [/Libs/x64/Release] folder in a Git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[t._v("git check-ignore")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23821733",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You would need to use:\ngit add --force Libs\n\ngit check-ignore -v /path/to/an/element\n\n▲ For instance, in your case try (git 1.8.2+):\nLibs/**/*\n!Libs/x64/Release/\n\n▲ Note that with git 2.9.x/2.10 (mid 2016?), it might be possible to re-include a file if a parent directory of that file is excluded if there is no wildcard in the path re-included.\n▲ That means, with git 2.9+, this could have worked:\n/Libs\n!/Libs/x64/Release\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Git - How do I squash changes to ignored files without losing those changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25152642",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# knobs")]),t._v("\nDEV_MODULES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mocha chai bower coffeelint"')]),t._v("\nBUILT_FILES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules build"')]),t._v("\nDATE=$(date)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean out stuff we don't care about")]),t._v("\nnpm uninstall $DEV_MODULES\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# record current checkout plus "$BUILT_FILES" to `build` branch')]),t._v("\ngit add --all --force $BUILT_FILES\nbuild=`git rev-parse -q --verify build`\ngit update-ref refs/heads/build $(\n        git commit-tree ${build:+-p $build} -p HEAD \\\n                -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build as of $DATE"')]),t._v(" \\\n                `git write-tree`\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset index to HEAD")]),t._v("\ngit reset  # `git read-tree HEAD` will have the same effect, perhaps more quietly\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git ignore all but one file in a folder?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41267877",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --force json/0.json\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"i"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#i"}},[t._v("#")]),t._v(" 🔹 -i")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to stage only part of a new file with git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 454    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6440500",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N new_file\ngit add -i  # or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add -p'")]),t._v(" if you prefer\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-N, --intent-to-add")]),t._v("\n    Record only the fact that the path will be added later.  An entry\n    for the path is placed in the index with no content.  This is useful\n    for, among other things, showing the unstaged content of such files\n    with git diff and committing them with git commit -a.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: git selective revert local changes from a file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 92    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1109191",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -i\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"tmp"')]),t._v("\n\ngit reset --hard HEAD\n\ngit reset --mixed HEAD^\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Merge specific change in a commit from another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50761448",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick -n <commit-id>\n\ngit reset HEAD -- path/to/other/file\ngit checkout -- path/to/other/file\n\ngit reset HEAD -- path/to/file\ngit add -i path/to/file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("h2",{attrs:{id:"interactive"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#interactive"}},[t._v("#")]),t._v(" 🔹 --interactive")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I add all the files and none of the directories during initial git add?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16992590",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --interactive\n\nfind . -depth 1 -and ! -type d -exec git add {} \\;\n\nebg@tsuki(26)$ find . -depth  1 -and ! -type d -print\n./a\n./b\nebg@tsuki(27)$ find . -depth  1 -and ! -type d -exec git add {} \\;\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("ebg@tsuki(28)$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git rm --cached <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   a")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   b")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   c/")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br")])]),e("h2",{attrs:{id:"p"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#p"}},[t._v("#")]),t._v(" 🔹 -p")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to stage only part of a new file with git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 454    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6440500",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N new_file\ngit add -i  # or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add -p'")]),t._v(" if you prefer\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-N, --intent-to-add")]),t._v("\n    Record only the fact that the path will be added later.  An entry\n    for the path is placed in the index with no content.  This is useful\n    for, among other things, showing the unstaged content of such files\n    with git diff and committing them with git commit -a.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to split last commit into two in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 339    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1440200",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD^")]),t._v("\nmyfile: locally modified\n$ cat myfile\n1\nsomething\nsomething else\nsomething again\n2\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" myfile")]),t._v("\ndiff --git a/myfile b/myfile\nindex 93db4cb..2f113ce 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -1,3 +1,5 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+1")]),t._v("\n something\n something else\n something again\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+2")]),t._v("\nStage this hunk [y,n,a,d,/,s,e,?]? s    # split this section into two!\nSplit into 2 hunks.\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -1,3 +1,4 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+1")]),t._v("\n something\n something else\n something again\nStage this hunk [y,n,a,d,/,j,J,g,e,?]? y  # yes, I want to stage this\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -1,3 +2,4 @@")]),t._v("\n something\n something else\n something again\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+2")]),t._v("\nStage this hunk [y,n,a,d,/,K,g,e,?]? n   # no, I don't want to stage this\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Added first line"')]),t._v("\n[master cef3d4e] Added first line\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Added last line"')]),t._v("\n[master 5e284e6] Added last line\n 1 files changed, 1 insertions(+), 0 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -n2")]),t._v(" | cat")]),t._v("\nCommit 5e284e652f5e05a47ad8883d9f59ed9817be59d8\nAuthor: ...\nDate: ...\n\n    Added last line\n\nDiff --git a/myfile b/myfile\nIndex f9e1a67..2f113ce 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -2,3 +2,4 @@")]),t._v("\n something\n something else\n something again\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+2")]),t._v("\n\nCommit cef3d4e0298dd5d279a911440bb72d39410e7898\nAuthor: ...\nDate: ...\n\n    Added first line\n\nDiff --git a/myfile b/myfile\nIndex 93db4cb..f9e1a67 100644\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("--- a/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+++ b/myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token coord"}},[t._v("@@ -1,3 +1,4 @@")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token inserted"}},[t._v("+1")]),t._v("\n something\n something else\n something again\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br"),e("span",{staticClass:"line-number"},[t._v("56")]),e("br"),e("span",{staticClass:"line-number"},[t._v("57")]),e("br"),e("span",{staticClass:"line-number"},[t._v("58")]),e("br"),e("span",{staticClass:"line-number"},[t._v("59")]),e("br"),e("span",{staticClass:"line-number"},[t._v("60")]),e("br"),e("span",{staticClass:"line-number"},[t._v("61")]),e("br"),e("span",{staticClass:"line-number"},[t._v("62")]),e("br"),e("span",{staticClass:"line-number"},[t._v("63")]),e("br"),e("span",{staticClass:"line-number"},[t._v("64")]),e("br"),e("span",{staticClass:"line-number"},[t._v("65")]),e("br"),e("span",{staticClass:"line-number"},[t._v("66")]),e("br"),e("span",{staticClass:"line-number"},[t._v("67")]),e("br"),e("span",{staticClass:"line-number"},[t._v("68")]),e("br"),e("span",{staticClass:"line-number"},[t._v("69")]),e("br"),e("span",{staticClass:"line-number"},[t._v("70")]),e("br"),e("span",{staticClass:"line-number"},[t._v("71")]),e("br"),e("span",{staticClass:"line-number"},[t._v("72")]),e("br"),e("span",{staticClass:"line-number"},[t._v("73")]),e("br"),e("span",{staticClass:"line-number"},[t._v("74")]),e("br"),e("span",{staticClass:"line-number"},[t._v("75")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: Undo part of unstaged changes in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 288    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1981868",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can use git checkout -p, which lets you choose individual hunks from the diff between your working copy and index to revert. Likewise, git add -p allows you to choose hunks to add to the index, and git reset -p allows you to choose individual hunks from the diff between the index and HEAD to back out of the index.\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" file/to/partially/revert")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or ...")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" .")]),t._v("\n\n▲ If you wish to snapshot your git repository beforehand to preserve these changes before reverting them, I like to do:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash; git stash apply")]),t._v("\n\n▲ If you use that often, you might want to alias it:\n[alias]\n    checkpoint = !git stash; git stash apply\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: 'git add --patch' to include new files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 103    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45640990",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N .\ngit add -p\n\nalias gapan="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add --intent-to-add . && git add --patch'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Selectively merging "),e("em",[t._v("parts")]),t._v(" of a file with git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 16    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19523586",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git merge --no-ff --no-commit changed    # Merge in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'changed'")]),t._v(" but don't commit\ngit reset <path/to/your/file>            # Reset the stage state but not \n                                         # the working version of the file\ngit add -p <path/to/your/file>           # Start adding in interactive mode\n\n(Git will prompt you for each hunk; you can split hunks up if necessary.)\n\ngit commit                               # Finally commit the merge with only\n                                         # the bits you chose to stage\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How can I apply only some of a git stash?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15212903",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git stash pop\n\ngit add -p\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Partial stashed commit"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How can I make an individual commit message for each file (or even each part of a file) that has changed since the last commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37842053",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you want to add a whole file, then use\ngit add file.txt\n\n▲ If you have separate changes within the same document that you want in separate commits, use a patch for selecting hunks\ngit add -p\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: git diff just the first file (of all unstaged changes)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40749454",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -p\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How do I revert only specific lines from a specific file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15693624",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --soft HEAD^\ngit reset HEAD fileA\ngit add -p fileA\n...\ncommit here\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Can git split a commit that was upstream using a revert?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19943520",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("A--B--C--D--E--F (master origin/master)\n      ^- WTF Commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" split-n-fix C")]),t._v("\n\nA--B--C--D--E--F (master origin/master)\n      ^ (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert C")]),t._v("\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-commit C")]),t._v("\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R--(dirty) (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit")]),t._v("\n(repeat till finished)\n\nA--B--C--D--E--F (master origin/master)\n       \\\n        R--C1--C2--C3--C4 (split-n-fix)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge split-n-fix")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -d")]),t._v(" split-n-fix")]),t._v("\n\nA--B--C--D--E--F----------M (master origin/master)\n       \\                 /\n        R--C1--C2--C3--C4\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How do I use a pager for long git add --patch hunks?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63688649",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("ap = !"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"VISUAL=\\"VISUAL=\'$VISUAL\' bash -c \'set -m; less -K -+F \\\\\\"\\\\$1\\\\\\"\' --\\" git add -p \\"$@\\" #"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"patch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#patch"}},[t._v("#")]),t._v(" 🔹 --patch")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Reverting part of a commit with git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 256    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4796144",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -n")]),t._v(" $bad_commit    # Revert the commit, but don't commit the changes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD .             # Unstage the changes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --patch")]),t._v(" .            # Add whatever changes you want")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit                   # Commit those changes")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Using GIT, how can I selectively merge changes from one commit on another 'fork'?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 119    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1405189",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git cherry-pick SHA1 --no-commit\ngit add --patch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: 'git add --patch' to include new files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 103    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45640990",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N .\ngit add -p\n\nalias gapan="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add --intent-to-add . && git add --patch'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How do I debug a large git commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/19427969",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("  git checkout <bad commit SHA1> -b CULPRIT\n\n  git reset HEAD^ --mixed\n\n  git add --patch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"edit"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#edit"}},[t._v("#")]),t._v(" 🔹 --edit")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to edit the last git commit as a patch file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff-index.html"}},[t._v("git diff-index")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[t._v("git reflog")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff-files.html"}},[t._v("git diff-files")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/57376433",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ I'm not sure if it is possible in a single command, but almost:\ngit reset -N HEAD~\ngit add --edit\ngit commit --reuse-message=ORIG_HEAD\n\n▲ NOTE: since only git add --edit needs for interaction, you could even just chain the commands on one line and create a bash or git alias for it if desired:\ngit reset -N HEAD~ && git add --edit && git commit --reuse-message=ORIG_HEAD\n\n▲ If you don't do anything with these changes; then calling the above commands twice will always show you the changes from your very first commit:\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"very first commit"')]),t._v("\ngit reset -N HEAD~\ngit add --edit # edit very first commit as patch\ngit commit --reuse-message=ORIG_HEAD\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# you now have some unstaged changes lying around.")]),t._v("\ngit reset HEAD~ # undo second commit\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the unstaged changes that are lying around now ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# are a combination of second commit and the unstaged changes")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# that were still lying around.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# That combination = content of very first commit")]),t._v("\ngit add --edit # edit that combination\ngit commit --reuse-message=ORIG_HEAD\n\n▲ If you would like a full command that you can continue applying; you could include the throwing away of changes:\ngit reset -N HEAD~ && git add --edit && git commit --reuse-message=ORIG_HEAD && git checkout -- :/\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\nset -e # exit on first error\nif ! git diff-files --quiet\nthen\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your git repository is not clean: you have unstaged changes."')]),t._v("\n    exit 1\nfi\nif ! git diff-index --quiet --cached HEAD --\nthen\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your git repository is not clean: you have staged changes."')]),t._v("\n    exit 1\nfi\ngit reset -N HEAD~\ngit add --edit\ngit commit --reuse-message=ORIG_HEAD\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# supposing that this edit is really what you wanted, we can throw away leftovers")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# if work was lost, in can be recovered using git reflog")]),t._v("\ngit checkout -- :/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br")])]),e("h2",{attrs:{id:"u"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#u"}},[t._v("#")]),t._v(" 🔹 -u")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Removing multiple files from a Git repo that have already been deleted from disk")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2335    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1402793",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ For Git 1.x\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")])]),t._v("\n\n▲ For Git 2.0\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" :/")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" .")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Add all files to a commit except a single file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1015    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4475506",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u\ngit reset -- main/dontcheckmein.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to remove multiple deleted files in Git repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 659    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12229588",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How do I merge a binary file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2089754",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u\ngit reset -- dontcommit.dat\ngit commit\n\ngit checkout --ours binary.dat\ngit add binary.dat\n\ngit checkout --theirs binary.dat\ngit add binary.dat\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Git: How to re-stage the staged files in a pre-commit hook")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26911078",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git diff --name-only --cached\n\ngit diff --name-only --cached | xargs -l git add\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stash unstaged changes")]),t._v("\ngit stash -q --keep-index\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Edit your project files here")]),t._v("\n...\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Stage updated files")]),t._v("\ngit add -u\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Re-apply original unstaged changes")]),t._v("\ngit stash pop -q\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How do you remove files from one and only one branch in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28331872",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout master\n\ngit checkout -b new_branch\n\nrm foo.txt\nrm foo2.txt\n\ngit add -u\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed foo and foo2"')]),t._v("\ngit push origin new_branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: For git, how to stage all the changes, including deletion, in a sub-directory by one command?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12898432",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u -- name-of-subdirectory\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: After resolving conflicts how to 'git add' all the resolved files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24940270",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How to fix Untracked files while pushing a repository on GitHub")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/54009991",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add src/app/pages src/app/services\n\ngit add src\n\ngit add -u # git add updated files\n\ngit add -a\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Git undo changes to files which match regex in particular changeset")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16366727",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --soft HEAD^\ngit reset $(git diff --cached --name-only -- "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'*Test.java'")]),t._v(")\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is the first commit, that does not contain the *Test.java"')]),t._v("\ngit add -u .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is the second commit, of just the *Test.java files"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: Autodeleting files from repository I've deleted manually from a working folder")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17219020",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -u\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"a"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#a"}},[t._v("#")]),t._v(" 🔹 -A")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How can I stage and commit all files, including newly added files, using a single command?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 630    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2419270",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A && git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your Message"')]),t._v("\n\n▲ Edit based on @thefinnomenon's answer below\ngit config --global alias.coa "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"!git add -A && git commit -m"')]),t._v("\n\ngit coa "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"A bunch of horrible changes"')]),t._v("\n\n▲ Explanation\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Git add all files modified, deleted, and untracked?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 320    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3498076",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\n\ngit add -A .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to re-commit a past commit if someone overwrote my commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 57    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[t._v("git reflog")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52177334",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ You can do that typing the following commands:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git cherry-pick <")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ID'")]),t._v(">\n\n▲ Now check if anything is still remaining by:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n\n▲ If anything is in unstaged commit, then add it by the following commands and commit:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" //Any other option or the name of the file with the path that you want to commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Your message here for that commit"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git cloning into current directory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 35    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30556538",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git init\ngit remote add origin <remote_url>\ngit fetch --all --prune\ngit checkout master\ngit add -A .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Adding my files..."')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: git-add only whitespace changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 35    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[t._v("git apply")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27489273",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\ngit diff --cached -w | git apply --cached -R\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: How to rebase after a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 18    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/48913154",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("(1) git checkout feature\n(2) git merge master\n(3) git reset A\n(4) git add -A  # This stages all working copy changes\n(5) git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Every change between A and J"')]),t._v("\n\ngit rebase master\n\ngit checkout master\ngit read-tree -u -m feature\n\ngit diff master > feature.patch\ngit checkout master\npatch -p1 < feature.patch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: git add adding ignored files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-check-ignore.html"}},[t._v("git check-ignore")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32545286",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cat .gitignore \n/node_modules/*\n!/node_modules/foo\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git check-ignore"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")]),t._v(" node_modules/")]),t._v("\n.gitignore:1:/node_modules/*    node_modules/\n             ^ positive pattern => ignored\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git check-ignore"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -v")]),t._v(" node_modules/foo")]),t._v("\n.gitignore:2:!/node_modules/foo node_modules/foo\n             ^ negative pattern => not ignored\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git reset HEAD <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   node_modules/foo")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: git undo deleted files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 12    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23333223",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd /root/of/your/repo\ngit checkout HEAD -- .\n\ngit add -A .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: Merge svn repo with git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10307381",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# checkout the SVN source")]),t._v("\n$ svn checkout svn://svnversion/trunk\n$ cd /into/svn/checkout\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('".svn/"')]),t._v(" > .gitignore\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .gitignore; git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial .gitignore'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now you have a master branch; create your import-svn branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" import-svn")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Add *everything* from the SVN checkout")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial SVN'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now get the GIT developed stuff")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" import-git master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add original-git /path/to/git-developed-repository")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull original-git master         # or whatever branch your git developers used.")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Now you've got two branches 'import-svn' and 'import-git'; DIFF and MERGE as you please")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# You don't need the remote anymore.")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote rm original-git")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" git-merge-svn import-git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --name")]),t._v("-status import-svn")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge import-svn")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" git-rebase-svn import-git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase import-svn")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff git-rebase-svn..git-merge-svn")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: How to undo commit, put into new branch then do a PR?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44992661",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --soft")]),t._v(" HEAD~1      # undo the last commit and keep the changes in working tree   ")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" feature      # create and checkout to new ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feature'")]),t._v(" branch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v("                   # add the changes ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'message'")]),t._v("      # commit \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin HEAD         # push to remote ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'feature'")]),t._v(" branch\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin HEAD")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" HEAD~1")]),t._v("\n\nOr, (reset the local "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" with "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'origin/master'")]),t._v(")\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch origin")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" origin/master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: Git doesn't remove files from remote")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18604950",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How do I back out a series of changes without screwing up history in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7248217",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch temp\ngit reset --hard rev2\ngit reset --soft temp\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),t._v("\ngit branch -d temp\n\ngit reset --hard rev2\ngit reset --soft HEAD@{1}\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"this commit makes all the changes so that the tree at rev7 looks like the tree at rev2"')]),t._v("\n\ngit merge --no-ff -s ours rev2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: How to update the directory in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31041863",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("Directory-A->  <====== there: git add -A .\n   directory a\n     file b\n     file c\n   directory b\n   file a\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Move git repository to a subdirectory in the same path while preserving all of its history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44191117",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cp -r .git* path/to/project_root/\n$ cd path/to/project_root/\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" .")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Import changes from ftp to git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13458934",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout ftp\nmkdir /tmp/ftp\ncd /tmp/ftp\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get fresh copy of code from ftp server")]),t._v("\nGIT_DIR=~-/.git git add -A\nGIT_DIR=~-/.git git commit\ncd ~-\ngit reset --hard\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v('16. Usage scenario: How to achieve a private branch in git that "floats" when merging with upstream?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8661172",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git fetch\ngit rebase --onto latesttag previoustag yourbranch\n\ngit add -A\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: How can I add a git submodule with the same name as an old, deleted git directory?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22590563",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm -rf built\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# or, if built isn't in the working tree")]),t._v("\ngit rm --cached -rf built\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove built"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Initializing repository from an existing one")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27568833",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout --orphan <branch_name>\ngit add -A                           // Add all files \ngit commit\ngit branch -D master                 // Deletes the master branch\ngit branch -m master                 // Rename the current branch to master\ngit remote set-url origin <URL>      // Set the remote URL to new repo before pushing\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: How can I delete files or folders on github?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8409044",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: how to move an existing git repository to an outer directory of a new project")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-submodule.html"}},[t._v("git submodule")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/32537065",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd /path/to/python_proj\nmkdir python_proj\ngit mv * python_proj\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reorg"')]),t._v("\ncp files for django\ngit add -A .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"django"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# rename root folder in django_proj")]),t._v("\n\ncd /path/to/django_proj\ngit add -A .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"all django files, except python proj"')]),t._v("\ngit submodule add /url/of/python_proj\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"new python_proj submodule "')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: How to pull a specific commit from a remote branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33739992",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# (Optionally) Save your work to a 'temp' branch, in case you want to come back to it:")]),t._v("\ngit checkout -b temp\ngit add -A .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"WIP"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Get back to your branch, and reset it to 'xyz':")]),t._v("\ngit checkout <branchname>\ngit fetch origin\ngit reset --hard xyz\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: Map remote repository to an existing directory with files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31828858",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone https://github.com/yiisoft/yii2-debug.git\ncd yii2-debug\ngit checkout -b mychanges <branch-or-tag-you-originally-downloaded>\ncd ..\nmv yii2-debug/.git modified-version\ncd modified-version\ngit add -A # see note below\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my changes"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: How do I restart a git project, and keep its history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31914159",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd /path/to/new/git/repo\ngit add --work-tree=/path/to/old/git/repo add -A .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Merging from commit to feature branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/gitk.html"}},[t._v("gitk")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20193412",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### Ensure everything is commited")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" .")]),t._v("\n$ commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My message"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git merge master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("### Inspect the situation")]),t._v("\n$ gitk --all\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: migrating existing project to git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8433045",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v('26. Usage scenario: How to recover from "unordered stage entries in index" error in git')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47972180",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("rm .git/index\ngit add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: Move and rename multiple files using git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22525721",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: How to update an existing code repository with an updated solution? Git Hub")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22922121",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you are receiving an issue, something around the lines of "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"error ref spec remote does not exist"')]),t._v(" or something - it's because you spelled your name wrong in the remote!\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add originNew https://github.com/BrianJVarley/College_Kinect_Project.git")]),t._v("\n\n▲ If you see that it still says "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changes to be committed: ./KinectKickboxingBVversion1"')]),t._v(" then it might have something to do with recursion.  Try a:\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" KinectKickboxingBVversion1")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: how to do all of operation to the multiple files that are updated, created and deleted at one time")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7075739",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: merging 3 source versioned trees into 1")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2653338",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd 1.0.0.1\ngit init .\ngit add -A\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0.1"')]),t._v("\ngit tag 1.0.0.1 -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.0.1"')]),t._v(" \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: How to track revision history of revision history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-symbolic-ref.html"}},[t._v("git symbolic-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23746356",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# from the top:")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and commit the empty skeleton")]),t._v("\ngit init book\ncd !$\nmkdir -p sect{1,2,3}\ntouch {.,!$}/.gitignore\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy in any initial content here")]),t._v("\ngit add .\ngit ls-files -s # to see exactly what you've done so far\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now git is directly tracking content in each section, and commands in the ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# parent will _ignore_ the existence of any nested repositories you subsequently ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create, but not there worktrees (because of the existing tracked content). viz.:")]),t._v("\n\n( cd sect1\n  git init \n  git add . \n  git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial skeleton'")]),t._v("\n  git branch publishing-history\n)\n^1^2\n^2^3\n\ncd ..\ngit add -A .\ngit commit\npublished=`git rev-parse HEAD`\n\nfor section in sect*; do\n    cd $section\n    git update-ref refs/heads/publishing-history $(\n        # log where the checked-out commit was published\n        git commit-tree \\\n                  -p publishing-history \\\n                  -p `git rev-parse HEAD` \\\n                  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"## published in main repository commit $published ##"')]),t._v(" \\\n                HEAD^{tree}  # just `HEAD:` will work too\n    )\n    cd ..\ndone\n\ngit symbolic-ref HEAD refs/heads/newmaster\n\ncd ../main\ngit read-tree --empty\nfor repo in sect{1,2,3}; do\n    ( cd ../$repo\n      tag -f fetchme HEAD^{tree}\n    )\n    git fetch ../sect1 fetchme\n    git read-tree -m --prefix=sect1 FETCH_HEAD\ndone\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: How do I merge from master into project, discarding all project commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13803416",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout Project1")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff HEAD..master | patch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p1")]),t._v(" ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -A")]),t._v(" .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit-tree `git write-tree`"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" master"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -p")]),t._v(" Project1 \\")]),t._v("\n      -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge to clean Master at v1.2"')]),t._v("\n0c5290081989cc28ff3977fbfe3951db7b7778b0\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" 0c5290081989cc28ff3977fbfe3951db7b7778b0")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: How do I remove 'git' from the start of my Git aliases?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/22108245",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("doskey add=git add -A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#all"}},[t._v("#")]),t._v(" 🔹 --all")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to move the current working branch to master branch in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 74    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clean.html"}},[t._v("git clean")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/7188232",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you want to have in master exactly the same files state as in other_branch and save history - do the following (and note the period at the end):\ngit checkout master\ngit checkout other_branch .\n\ngit add --all\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"* copy other_branch to master working tree"')]),t._v("\n\n▲ Note: untracked (unindexed) files (directories) from other_branch will remain, if they are not tracked by master. To remove those untracked files (directories):\ngit clean -fd\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How to squash 7 pushed commits into one in to 1 in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 26    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50302458",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset --soft HEAD~7\ngit add --all\ngit commit\ngit push --force\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How to remove git related data from a git clone?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27307594",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("rm -rf .git # Delete all git information\ngit init # Recreate an empty repo\ngit add --all # Re-add all the files to the index\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial fork from example.com/repo.git'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: Git - How do I squash changes to ignored files without losing those changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-read-tree.html"}},[t._v("git read-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/25152642",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# knobs")]),t._v("\nDEV_MODULES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mocha chai bower coffeelint"')]),t._v("\nBUILT_FILES="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"node_modules build"')]),t._v("\nDATE=$(date)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean out stuff we don't care about")]),t._v("\nnpm uninstall $DEV_MODULES\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# record current checkout plus "$BUILT_FILES" to `build` branch')]),t._v("\ngit add --all --force $BUILT_FILES\nbuild=`git rev-parse -q --verify build`\ngit update-ref refs/heads/build $(\n        git commit-tree ${build:+-p $build} -p HEAD \\\n                -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"build as of $DATE"')]),t._v(" \\\n                `git write-tree`\n)\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# reset index to HEAD")]),t._v("\ngit reset  # `git read-tree HEAD` will have the same effect, perhaps more quietly\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: Git push not delete file from repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31211597",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --all\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("6. Usage scenario: gitolite setup reverted changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13470554",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("git@ve-git:~/temp$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" HEAD^")]),t._v("\ngit@ve-git:~/temp$ gitolite push origin -f\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" hooksfix origin/master")]),t._v("\n$ mkdir extra\n$ mv hooks extra\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --all")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"moved hooks directory to prevent errors"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin hooksfix:master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase origin/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("7. Usage scenario: How do I see a diff from untracked, unstaged, staged and committed changes all against the remote?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51412680",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --all -N :/\ngit --no-pager diff origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How can I restage moved files that were reset in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/23499277",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --all\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"no-all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#no-all"}},[t._v("#")]),t._v(" 🔹 --no-all")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to get winmerge to show diff for new file in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40063859",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -N")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-all .")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: How can you stage all non-deleted files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46281857",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --no-all .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"ignore-removal"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ignore-removal"}},[t._v("#")]),t._v(" 🔹 --ignore-removal")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to prevent git from staging deleted files with git add .?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/65258589",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --ignore-removal .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h2",{attrs:{id:"n"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#n"}},[t._v("#")]),t._v(" 🔹 -N")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to stage only part of a new file with git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 454    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6440500",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N new_file\ngit add -i  # or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add -p'")]),t._v(" if you prefer\n\n"),e("span",{pre:!0,attrs:{class:"token deleted"}},[t._v("-N, --intent-to-add")]),t._v("\n    Record only the fact that the path will be added later.  An entry\n    for the path is placed in the index with no content.  This is useful\n    for, among other things, showing the unstaged content of such files\n    with git diff and committing them with git commit -a.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: 'git add --patch' to include new files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 103    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45640990",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N .\ngit add -p\n\nalias gapan="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add --intent-to-add . && git add --patch'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How do I see a diff from untracked, unstaged, staged and committed changes all against the remote?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/51412680",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add --all -N :/\ngit --no-pager diff origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("h2",{attrs:{id:"intent-to-add"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#intent-to-add"}},[t._v("#")]),t._v(" 🔹 --intent-to-add")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: 'git add --patch' to include new files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 103    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45640990",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add -N .\ngit add -p\n\nalias gapan="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git add --intent-to-add . && git add --patch'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("h2",{attrs:{id:"renormalize"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#renormalize"}},[t._v("#")]),t._v(" 🔹 --renormalize")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to remove files from repository listed in .gitignore without changing whitespace")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/68673681",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config --global core.autocrlf false\n\ngit config --global core.autocrlf false\ngit add --renormalize .\ngit add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("h2",{attrs:{id:"chmod"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#chmod"}},[t._v("#")]),t._v(" 🔹 --chmod")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How to add chmod permissions to file in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 454    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-update-index.html"}},[t._v("git update-index")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40979016",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git update-index --chmod=+x path/to/file\n\ngit update-index --chmod=-x path/to/file\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git ls-files"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --stage")])]),t._v("\n100644 aee89ef43dc3b0ec6a7c6228f742377692b50484 0       .gitignore\n100755 0ac339497485f7cc80d988561807906b2fd56172 0       my_executable_script.sh\n\ngit config core.fileMode false\n\ngit update-index --chmod=-x path/to/file\ngit update-index --chmod=+x path/to/file\n\ngit add --chmod=+x path/to/file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("h2",{attrs:{id:"none"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#none"}},[t._v("#")]),t._v(" 🔹None")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: How do I undo the most recent local commits in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 25619    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/927386",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Something terribly misguided"')]),t._v(" # (0: Your Accident)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset HEAD~                              # (1)")]),t._v("\n[ edit files as necessary ]                    # (2)\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .                                    # (3)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -c")]),t._v(" ORIG_HEAD                      # (4)")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("2. Usage scenario: Move existing, uncommitted work to a new branch in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4116    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-switch.html"}},[t._v("git switch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1394804",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Update 2020 / Git 2.23\ngit switch -c <new-branch>\n\n▲ Before Update 2020 / Git 2.23\ngit checkout -b <new-branch>\n\ngit add <files>\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<Brief description of this commit>"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("3. Usage scenario: How can I Remove .DS_Store files from a Git repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2872    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/107921",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("find . -name .DS_Store -print0 | xargs -0 git rm -f --ignore-unmatch\n\ngit add .gitignore\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'.DS_Store banished!'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("4. Usage scenario: How to view file diff in git before commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 852    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10039758",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you want to see what you haven't git added yet:\ngit diff myfile.txt\n\n▲ or if you want to see already added changes\ngit diff --cached myfile.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("5. Usage scenario: How to un-submodule a Git submodule?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 588    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1789374",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm --cached submodule_path # delete reference to submodule HEAD (no trailing slash)\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"remove submodule"')]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Fetch the submodule commits into the main repository")]),t._v("\ngit remote add submodule_origin git://url/to/submodule/origin\ngit fetch submodule_origin\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Start a fake merge (won't change any files, won't commit anything)")]),t._v("\ngit merge -s ours --no-commit submodule_origin/master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Do the same as in the first solution")]),t._v("\ngit rm --cached submodule_path # delete reference to submodule HEAD\ngit rm .gitmodules             # if you have more than one submodules,\n                               # you need to edit this file instead of deleting!\nrm -rf submodule_path/.git     # make sure you have backup!!\ngit add submodule_path         # will add files instead of commit reference\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Commit and cleanup")]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"removed submodule"')]),t._v("\ngit remote rm submodule_origin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v('6. Usage scenario: How to get "their" changes in the middle of conflicting Git rebase?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 555    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13621563",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout --ours foo/bar.java\ngit add foo/bar.java\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v('7. Usage scenario: How do I "commit" changes in a git submodule?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 496    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5542964",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cd path/to/submodule\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add <stuff>")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"comment"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n\n$ cd /main/project\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add path/to/submodule")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"updated my submodule"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("8. Usage scenario: How do I do an initial push to a remote repository with Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 441    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2337373",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mkdir my_project\ncd my_project\ntouch .gitignore\ngit init\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Initial commit"')]),t._v("\ngit remote add origin youruser@yourserver.com:/path/to/my_project.git\ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("9. Usage scenario: How do I add files and folders into GitHub repos?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 406    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8775855",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   README")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git reset HEAD <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   README")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n\nnothing added to commit but untracked files present (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Added README'")]),t._v("\n[master 6402a2e] Added README\n  0 files changed, 0 insertions(+), 0 deletions(-)\n  create mode 100644 README\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -u")]),t._v(" origin master")]),t._v("\nCounting objects: 4, done.\nDelta compression using up to 2 threads.\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 267 bytes, done.\nTotal 3 (delta 1), reused 0 (delta 0)\nTo xxx@xxx.com:xxx/xxx.git\n   292c57a..6402a2e  master -> master\nBranch master set up to track remote branch master from origin.\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull origin master")]),t._v("\nremote: Counting objects: 12, done.\nremote: Compressing objects: 100% (4/4), done.\nremote: Total 8 (delta 4), reused 7 (delta 3)\nUnpacking objects: 100% (8/8), done.\nFrom xxx.com:xxx/xxx\n * branch            master     -> FETCH_HEAD\nUpdating e0ef362..6402a2e\nFast-forward\n public/javascript/xxx.js |    5 ++---\n 1 files changed, 2 insertions(+), 3 deletions(-)\n create mode 100644 README\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[e("strong",[t._v("10. Usage scenario: Git undo changes in some files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 297    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/933344",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ There are three basic ways to do this depending on what you have done with the changes to the file A. If you have not yet added the changes to the index or committed them, then you just want to use the checkout command - this will change the state of the working copy to match the repository:\ngit checkout A\n\n▲ If you added it to the index already, use reset:\ngit reset A\n\n▲ If you had committed it, then you use the revert command:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# the -n means, do not commit the revert yet")]),t._v("\ngit revert -n <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now make sure we are just going to commit the revert to A")]),t._v("\ngit reset B\ngit commit\n\n▲ If on the other hand, you had committed it, but the commit involved rather a lot of files that you do not also want to revert, then the above method might involve a lot of "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reset B"')]),t._v(" commands. In this case, you might like to use this method:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# revert, but do not commit yet")]),t._v("\ngit revert -n <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clean all the changes from the index")]),t._v("\ngit reset\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# now just add A")]),t._v("\ngit add A\ngit commit\n\n▲ Another method again, requires the use of the rebase -i command. This one can be useful if you have more than one commit to edit:\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# use rebase -i to cherry pick the commit you want to edit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# specify the sha1 of the commit before the one you want to edit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# you get an editor with a file and a bunch of lines starting with "pick"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# change the one(s) you want to edit to "edit" and then save the file')]),t._v("\ngit rebase -i <sha1>\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# now you enter a loop, for each commit you set as "edit", you get to basically redo that commit from scratch')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# assume we just picked the one commit with the erroneous A commit")]),t._v("\ngit reset A\ngit commit --amend\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# go back to the start of the loop")]),t._v("\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("11. Usage scenario: How to amend older Git commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 252    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8825163",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rebase -i HEAD^^^\n\ngit add .\ngit rebase --continue\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("12. Usage scenario: How to copy commits from one Git repo to another?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 235    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37474065",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# add the old repo as a remote repository ")]),t._v("\ngit remote add oldrepo https://github.com/path/to/oldrepo\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# get the old repo commits")]),t._v("\ngit remote update\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# examine the whole tree")]),t._v("\ngit log --all --oneline --graph --decorate\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy (cherry-pick) the commits from the old repo into your new local one")]),t._v("\ngit cherry-pick sha-of-commit-one\ngit cherry-pick sha-of-commit-two\ngit cherry-pick sha-of-commit-three\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# check your local repo is correct")]),t._v("\ngit log\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# send your new tree (repo state) to github")]),t._v("\ngit push origin master\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# remove the now-unneeded reference to oldrepo")]),t._v("\ngit remote remove oldrepo\n\n▲ 1. Update and rebase your local copy\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#create LICENSE file, edit, add content, save")]),t._v("\ngit add LICENSE\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Initial commit'")]),t._v("\n\ngit rebase -i --root\n\ngit log\n\n▲ 2. Force push your new repo state to github\ngit push -f origin master\n\n▲ 3. Synchronize collaborators to github\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make sure there are no unsaved changes")]),t._v("\ngit status \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# pull the latest version from github")]),t._v("\ngit fetch  \n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# move their master branch pointer to the one you published to github.")]),t._v("\ngit reset --hard origin/master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[e("strong",[t._v("13. Usage scenario: How to do a GitHub pull request")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 204    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14680805",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone https://github.com/tim-peterson/dwolla-php.git")]),t._v("\n$ cd dwolla-php\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add upstream https://github.com/Dwolla/dwolla-php.git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch upstream")]),t._v("\n// make your changes to this newly cloned, local repo \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1st commit to dwolla'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("14. Usage scenario: Git add all subdirectories")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 118    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14620946",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("15. Usage scenario: Git Copy a folder from master branch to another branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 108    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17999980",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout work")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'work'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master -- utils")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add utils")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Adding 'utils' directory from 'master' branch.\"")]),t._v("\n[work 9fcd968] Adding "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utils'")]),t._v(" directory from "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v(" branch.\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 utils/file\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rm"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -r")]),t._v(" utils")]),t._v("\nrm "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utils/file'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"Removing 'utils' directory.\"")]),t._v("\n[master c786f95] Removing "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'utils'")]),t._v(" directory.\n 1 file changed, 0 insertions(+), 0 deletions(-)\n delete mode 100644 utils/file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("16. Usage scenario: Git: File Rename")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 98    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3921179",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mv oldname newname\ngit add newname\ngit rm oldname\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("17. Usage scenario: Remove specific commit")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 82    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-revert.html"}},[t._v("git revert")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3207170",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cat >myfile <<EOF\nline 1\njunk\njunk\njunk\njunk\nline 2\njunk\njunk\njunk\njunk\nline 3\nEOF\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add myfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initial check-in"')]),t._v("\n 1 files changed, 11 insertions(+), 0 deletions(-)\n create mode 100644 myfile\n\n$ perl -p -i -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/line 2/this is the second line/;'")]),t._v(" myfile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changed line 2 to second line"')]),t._v("\n[master d6cbb19] changed line 2\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n$ perl -p -i -e "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s/line 3/this is the third line/;'")]),t._v(" myfile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changed line 3 to third line"')]),t._v("\n[master dd054fe] changed line 3\n 1 files changed, 1 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git revert d6cbb19")]),t._v("\nFinished one revert.\n[master 2db5c47] Revert "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"changed line 2"')]),t._v("\n 1 files changed, 1 insertions(+), 1 deletions(-)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br")])]),e("p",[e("strong",[t._v("18. Usage scenario: Moving a git repository up one hierarchy level")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 81    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5408577",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd <git repo root>\nmkdir webroot\ngit mv <all your files> webroot\ngit commit --all -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("\"moved all existing files to new 'webroot' directory\"")]),t._v("\n\ngit add assets\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"added assets to the repo"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("19. Usage scenario: Easy way to clean up un-staged deleted files in Git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 76    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10914622",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes not staged for commit:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add/rm <file>..." to update what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git checkout -- <file>..." to discard changes in working directory)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file5")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git reset HEAD <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file2")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file3")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file4")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   deleted:    file5")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br")])]),e("p",[e("strong",[t._v("20. Usage scenario: How do I create a master branch in a bare Git repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 75    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/27636368",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# initialize your bare repo")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --bare")]),t._v(" test-repo.git")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# clone it and cd to the clone's root directory")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone test-repo.git/ test-clone")]),t._v("\nCloning into "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'test-clone'")]),t._v("...\nwarning: You appear to have cloned an empty repository.\ndone.\n$ cd test-clone\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make an initial commit in the clone")]),t._v("\n$ touch README.md\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add . ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add README"')]),t._v("\n[master (root-commit) 65aab0e] add README\n 1 file changed, 0 insertions(+), 0 deletions(-)\n create mode 100644 README.md\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push to origin (i.e. your bare repo)")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\nCounting objects: 3, done.\nWriting objects: 100% (3/3), 219 bytes | 0 bytes/s, done.\nTotal 3 (delta 0), reused 0 (delta 0)\nTo /Users/jubobs/test-repo.git/\n * [new branch]      master -> master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br")])]),e("p",[e("strong",[t._v("21. Usage scenario: Forking a sub directory of a repository on GitHub and making it part of my own repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 71    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24577293",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Setting up a repository\ngit clone https://github.com/xbmc/xbmc.git\ncd xbmc\n\ngit branch -m upstream-master\n\ngit subtree split --prefix=addons/skin.confluence -b upstream-skin\ngit checkout upstream-skin\n\ngit remote rename origin upstream\n\ngit remote add origin https://github.com/tbekolay/xbmc-skin.git\ngit fetch origin\ngit push -u origin upstream-skin\n\ngit checkout -b master\ngit push -u origin master\n\n▲ Making changes to your repositories\ngit checkout master\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My XBMC Skin"')]),t._v(" > README\ngit add README\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Added README"')]),t._v("\ngit push\n\n▲ Receiving upstream commits\ngit checkout upstream-master\ngit pull\n\ngit subtree split --prefix=addons/skin.confluence \\\n  --onto upstream-skin -b upstream-skin\n\ngit checkout master\ngit rebase upstream-skin\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br")])]),e("p",[e("strong",[t._v("22. Usage scenario: Stage all but one folder")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 66    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20160533",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .\ngit reset -- somefolder_to_exclude\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("23. Usage scenario: git: How do you add an external directory to the repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 63    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2399108",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mv /home/some/directory /htdocs/directory\nln -s /htdocs/directory /home/some/\ngit add ./directory\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("24. Usage scenario: Ignore new commits for git submodule")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 61    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/14422494",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$ cd /path/to/master/\n$ rm -rf book\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone https://user@bitbucket.org/user/repo.git book")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add book")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"book"')]),t._v(" >> .gitignore\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("25. Usage scenario: git: How do I recursively add all files in a directory subtree that match a glob pattern?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 60    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/2222998",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add documentation/\\*.screen")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'documentation/*.screen'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add *.screen")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("26. Usage scenario: Git add a folder with spaces in the name")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 59    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/38378698",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Folder A'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("27. Usage scenario: How can I get Git to follow symlinks?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 45    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/86459",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v(" git add /bar/foo/baz\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("28. Usage scenario: How to completely clear git repository, without deleting it")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 43    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28578674",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ if you want to erase your whole history and start over again:\ncd <repo>\nrm -rf .git\ngit init\n\n▲ If you want to remove both files and history:\ncd <repo>\nrm -rf *\ngit init\n\n▲ if you are linked with a remote repository\nif you want to start over again, but don't really mind some old history remaining; there is a quick way:\ngit pull\ngit rm -r *\ngit commit\ngit push\n\n▲ now your repository is empty again, you'll only have some old history remaining. if you also want to clean up all your history; that takes a little more work (and note that this will cause trouble for anyone else linked to that same remote repository):\ngit checkout <first commit hash>\ngit rm -r *\ntouch README\ngit add README\ngit commit --amend\ngit push -f\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("29. Usage scenario: How can I sync documentation with Github Pages?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 37    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/16389663",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/bash")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('### The following block runs after commit to "master" branch')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("###")]),t._v("\nif [ `git rev-parse --abbrev-ref HEAD` == "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"master"')]),t._v(" ]; then\n\n    # Layout prefix is prepended to each markdown file synced\n    ###################################################################\n    LAYOUT_PREFIX="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'---\\r\\nlayout: index\\r\\n---\\r\\n\\r\\n'")]),t._v("\n\n    # Switch to gh-pages branch to sync it with master\n    ###################################################################\n    git checkout gh-pages\n\n    # Sync the README.md in master to index.md adding jekyll header\n    ###################################################################\n    git checkout master -- README.md\n    echo -e $LAYOUT_PREFIX > index.md\n    cat README.md >> index.md\n    rm README.md\n    git add index.md\n    git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sync README.md in master branch to index.md in gh-pages"')]),t._v("\n\n    # Sync the markdown files in the docs/* directory\n    ###################################################################\n    git checkout master -- docs\n    FILES=docs/*\n    for file in $FILES\n    do\n        echo -e $LAYOUT_PREFIX | cat - "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$file"')]),t._v(" > temp && mv temp "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$file"')]),t._v("\n    done\n\n    git add docs\n    git commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Sync docs from master branch to docs gh-pages directory"')]),t._v("\n\n    # Uncomment the following push if you want to auto push to\n    # the gh-pages branch whenever you commit to master locally.\n    # This is a little extreme. Use with care!\n    ###################################################################\n    # git push origin gh-pages\n\n    # Finally, switch back to the master branch and exit block\n    git checkout master\nfi\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br")])]),e("p",[e("strong",[t._v("30. Usage scenario: Git: How to make outer repository and embedded repository work as common/standalone repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 32    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47031933",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In local test repo")]),t._v("\nrm -rf test2\ngit clone https://github.com/eromoe/test2\ngit add test2/\ngit commit -am "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'add files from test2 repo to test repo'")]),t._v("\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("31. Usage scenario: How to convert a file tracked by git to git-lfs?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 32    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cat-file.html"}},[t._v("git cat-file")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47200501",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("C:\\Temp\\LFS>dir\n Volume in drive C is Windows\n Volume Serial Number is A442-238A\n\n Directory of C:\\Temp\\LFS\n\n11/09/2017  11:12 AM    <DIR>          .\n11/09/2017  11:12 AM    <DIR>          ..\n10/20/2017  01:22 PM            48,517 VSTS.png\n               1 File(s)         48,517 bytes\n               2 Dir(s)  284,988,436,480 bytes free\n\nC:\\Temp\\LFS>git status\nOn branch master\nnothing to commit, working tree clean\n\nC:\\Temp\\LFS>git status\nOn branch master\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n        modified:   VSTS.png\n\nUntracked files:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include in what will be committed)\n\n        .gitattributes\n\nno changes added to commit (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" and/or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git commit -a"')]),t._v(")\n\nC:\\Temp\\LFS>git add VSTS.png\n\nC:\\Temp\\LFS>git cat-file blob :0:VSTS.png\nversion https://git-lfs.github.com/spec/v1\noid sha256:6075cd5130bdbe29a037cba93dc22158d1443b22b2ffb6acb0d1d541838f26b9\nsize 48517\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br")])]),e("p",[e("strong",[t._v("32. Usage scenario: can I save space in a git repo by squashing commits?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 28    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/26080279",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ The git object model\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone ssh://host.dom.ain/hundredfile.git method1")]),t._v("\n[clone messages]\n$ cd method1\n$ for i in $(jot 100); do  # note: jot 100 => print list of values 1, 2, ... 100\n>   make_change_to file$i.txt; git add file$i.txt; git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"change $i"')]),t._v("\n> done\n[100 commit results come out here]\n\n$ cd .. # up out of the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"method1"')]),t._v(" repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git clone ssh://host.dom.ain/hundredfile.git method2")]),t._v("\n[clone messages]\n$ cd method2\n\n$ for i in $(jot 100); do\n>   make_change_to file$i.txt; git add file$i.txt\n> done\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'change all'")]),t._v("\n[one commit result comes out here]\n\n▲ Git is like the Borg: it tries to add to its collective\n▲ Eventually, "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unreferenced"')]),t._v(" objects are garbage-collected\n▲ Git packs objects\n▲ The bottom line\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br")])]),e("p",[e("strong",[t._v("33. Usage scenario: How do I import a third party lib into git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 24    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1698115",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b vendor    # create a vendor branch and check it out\n\nfind . -not -path *.git* -and -not -path . -delete  # delete everything but git files\ndump the 3rd party code into the project directory  # I'll leave that to you\ngit add .                              # add all the files, changes and deletions\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vendor update version X.YY'")]),t._v("   # commit it\ngit tag "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Vendor X.YY'")]),t._v("                  # optional, might come in handy later\n\ngit checkout master\ngit merge vendor\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("34. Usage scenario: Recover files that were added to the index but then removed by a git reset")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 23    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reflog.html"}},[t._v("git reflog")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10783950",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'added all files'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" HEAD^")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reflog")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("35. Usage scenario: how to push this modified file to github repository")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 22    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35560234",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git status \n\ngit add <file path>\n\n git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"< your message>"')]),t._v("\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"<your message>"')]),t._v(" <file_path 1> <file_path2>\n\ngit push <origin> <branch_name>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("36. Usage scenario: Restore git files deleted after git merge --abort")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 17    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-grep.html"}},[t._v("git grep")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[t._v("git fsck")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/39469723",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you did indeed run git add test.txt at some point, and this action was recent enough, there should still be some trace of the content of the file stored within git :\ngit fsck --full --unreachable --no-reflog\n\ngit fsck --full --unreachable --no-reflog | grep blob\n\nunreachable blob 08bf360988858a012dab3af4e0b0ea5f370a2ae8\nunreachable blob 21bf7ea93f9f9cc2b3ecbed0e5ed4fa45c75eb89\nunreachable blob 08c12ef37075732cf4645269ab5687ba6ba68943\n...\n\n▲ If you remember a specific string in your file, you can try to narrow your research by using git grep <string> <hash> :\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fsck"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --full")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --unreachable")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --no")]),t._v("-reflog | grep blob | awk ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'{ print $3 }'")]),t._v(" > list.txt\n$ cat list.txt | while read blob; do\n  if git grep -q "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"string"')]),t._v(" $blob; then\n    echo $blob\n  fi\ndone\n\ngit show $blob\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br")])]),e("p",[e("strong",[t._v("37. Usage scenario: How Do I Run Prettier Only on Files That I Want to Commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47610566",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("{\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"scripts"')]),t._v(": {\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"precommit"')]),t._v(": "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v("\n  },\n  "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"lint-staged"')]),t._v(": {\n    "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"*.js"')]),t._v(": [\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"prettier --write"')]),t._v(",\n      "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v("\n    ]\n  }\n}\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("38. Usage scenario: How to save the current state of my staging area?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 15    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/15040570",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temporary"')]),t._v(" # save current stage are as an actual commit\ngit commit unrelated_files -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"The other feature"')]),t._v("\ngit stash # hide the rest\ngit rebase -i HEAD~2 # change the order of two last commits\ngit reset HEAD^ # rollback the "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"temporary"')]),t._v(" commit\ngit add . # add everything from that commit back to staging\ngit stash pop # and return back all initially unstaged stuff\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("39. Usage scenario: In Git how can I stage a file I have just diffed without manually specifying the file?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 14    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/4956075",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add !$\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("40. Usage scenario: How to fix conflicts in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 13    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mergetool.html"}},[t._v("git mergetool")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47590528",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Solving git conflict using text editor.\ngit add . or git add "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"your_file"')]),t._v("\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Merge conflicts resolved"')]),t._v("\n\n▲ Solving git conflict your GUI\ngit config merge.tool meld \n\ngit mergetool -t meld\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("41. Usage scenario: How to interactively add untracked file in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 10    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/33367270",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes to be committed:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git rm --cached <file>..." to unstage)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   new file:   file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Changes not staged for commit:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to update what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git checkout -- <file>..." to discard changes in working directory)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   modified:   file")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("42. Usage scenario: How to stop tracking ignored file in Android Studio")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 9    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/46284886",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git status --ignored\n\ngit rm -r --cached .\ngit add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("43. Usage scenario: Switching branches safely in git")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/6117269",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WIP (description here)'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout mybranch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# do work")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")])]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Finish WIP (description here)'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" HEAD~2    # See instructions for rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -i")]),t._v(" elsewhere")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash save ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WIP (descriptino here)'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout my_branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git stash pop")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v("44. Usage scenario: How rebase result may differ from result of a merge?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/44554714",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#! /bin/sh")]),t._v("\n\nfatal() {\n    echo fatal: "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$@"')]),t._v(" 1>&2; exit 1\n}\n\n[ -e tt ] && fatal tt already exists\n\nmkdir tt && cd tt && git init -q || fatal failed to create tt repo\n\necho README > README && git add README && git commit -q -m A || fatal A\ngit branch branch || fatal unable to make branch\necho for master > bfile && git add bfile && git commit -q -m B || fatal B\n\ngit checkout -q -b br2 branch || fatal checkout -b br2 branch\necho file for C > cfile && git add cfile && git commit -q -m C || fatal C\ngit checkout -q branch || fatal checkout branch\necho file for D > dfile && git add dfile && git commit -q -m D || fatal D\ngit merge -q --no-commit br2 && git rm -q -f cfile && git commit -q -m E ||\n    fatal E\ngit branch -D br2\ngit checkout -q master || fatal checkout master\n\necho merging branch\ngit merge --no-edit branch || fatal merge failed\necho result is: *\n\necho removing merge, replacing with rebase of branch onto master\ngit reset -q --hard HEAD^ || fatal reset failed\ngit checkout -q branch || fatal switch back to master failed\ngit rebase master || fatal rebase failed\necho result is: *\n\necho removing rebase as well so you can poke around\ngit reset --hard ORIG_HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br")])]),e("p",[e("strong",[t._v("45. Usage scenario: Repository with submodules after rewriting history of submodule")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 8    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37894462",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rev-list --all \\\n  | while read commit\n do\n ...\n\ncd parent/repo\ncd asubmodule\ngit fetch\n\ncd parent/repo/asubmodule\ngit checkout <new SHA1>\ncd ..\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Record new SHA1 for asubmodule"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("46. Usage scenario: How do I select git ignore Node.js AFTER I've already created a repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52650142",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm -r --cached . \ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Removed all files that are in the .gitignore'")]),t._v(" \ngit push origin master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("47. Usage scenario: How can I move the root of my git repository up one level? (without moving subfolders)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45922143",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd .../scripts\nmv kronos/.git .\ngit add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("48. Usage scenario: How to push a git ignored folder to a subtree branch?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/40178818",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("STATUS="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$(git status)"')]),t._v("\n\nif [[ $STATUS == *"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"nothing to commit, working tree clean"')]),t._v("* ]]\nthen\n    sed -i "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('""')]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/gh-pages/d'")]),t._v(" ./.gitignore\n    git add .\n    git commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Edit .gitignore to publish"')]),t._v("\n    git push origin `git subtree split --prefix gh-pages master`:gh-pages --force\n    git reset HEAD~\n    git checkout .gitignore\nelse\n    echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Need clean working directory to publish"')]),t._v("\nfi\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("49. Usage scenario: How to migrate multiple repositories into a mono-repo while maintaining commit history?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 7    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50038324",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In local repo1 ")]),t._v("\nmkdir project1\nmv * project1\ngit add .\ngit command -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'move files into project1 folder'")]),t._v("\ngit push\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In local repo2")]),t._v("\nmkdir project2\nmv * project2\ngit add .\ngit command -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'move files into project2 folder'")]),t._v("\ngit push\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# In local repo1")]),t._v("\ngit remote add repo2 <URL for repo2> -f\ngit pull repo2 master --allow-unrelated-histories\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("50. Usage scenario: How to you revert a staged file with changes, preserving the changes to when it was staged?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fsck.html"}},[t._v("git fsck")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17660888",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init foo")]),t._v("\nInitialized empty Git repository in foo/.git/\n$ cd foo\n$ echo blah > foo.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add foo.txt")]),t._v("\n$ echo blarg > foo.txt\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add foo.txt")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fsck"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --dangling")])]),t._v("\nChecking object directories: 100% (256/256), done.\ndangling blob 907b308167f0880fb2a5c0e1614bb0c7620f9dc3\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git show 907b308167f0880fb2a5c0e1614bb0c7620f9dc3")]),t._v("\nblah\n$\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br")])]),e("p",[e("strong",[t._v("51. Usage scenario: Copy changes from an external untracked directory to separate Git working copy")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24402712",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git --work-tree=/path/to/cvs/project --git-dir==/path/to/your/repo/.git status\ngit --work-tree=/path/to/cvs/project --git-dir==/path/to/your/repo/.git add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v('52. Usage scenario: How do I track "dot" configuration files in my home directory with git?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 6    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/31841738",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("Untracked files:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include in what will be committed)\n\n  ../../.bash_login\n  ../../.bash_profile\n  ../../.bashrc\n  ../../.gitignore\n  ../../.pryrc\n  ../../.zshrc\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("53. Usage scenario: How to resolve Git merge conflict")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9574423",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git status\n\ngit add the/file/i/fixed.txt\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("54. Usage scenario: move to another branch and 'saving' current changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41071707",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If you have changes in Branch A:\nwhile in branch A, do \ngit stash save "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hint_to_what_stash_contains"')]),t._v(" \n\ngit stash apply\n\n▲ If you have multiple stashes, you can list them and choose which stash to apply.\ngit stash list\ngit stash apply stash@\\{<STASH_NUMBER>\\}\n\ngit checkout brancha\nedit files\ngit add <file(s)>\ngit commit --amend # You can also change the commit message if you want.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br")])]),e("p",[e("strong",[t._v("55. Usage scenario: Git - Update current branch from master without committing current branch changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30599654",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ If there are conflicts, then you are better off stashing your work before pulling your branch in.  That can be accomplished thus:\ngit add . && git stash save\ngit pull\ngit stash pop\n\n▲ If you don"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'t want to deal with merging, then you can rebase your branch instead, which doesn'")]),t._v("t require that you save off your work (but will prompt you for conflicts):\ngit pull --rebase\n\n▲ If there are no conflicts, then you can simply pull the branch in.\ngit pull\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("56. Usage scenario: git exclude everything in folder except a subdirectory")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24781688",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("Untracked files:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add <file>..."')]),t._v(" to include in what will be committed)\n\n  node_modules/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("57. Usage scenario: How to add a git repository as a shared dependency of another git repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 5    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/3350472",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\ngit --git-dir=~/eagle/.git log -1 --pretty=format:%H >.eagle_rev\ngit add .eagle_rev\n\ngit config alias.update-eagle "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'!git --git-dir=~/eagle/.git --work-tree=~/eagle checkout -q $(<.eagle_rev)'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("58. Usage scenario: Git: Managing Branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8825373",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make sure your notion of the remote is up to date")]),t._v("\ngit fetch origin\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# create and check out a branch, at the same place as the remote master branch")]),t._v("\ngit checkout -b origin-master origin/master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# merge your local master")]),t._v("\ngit merge master\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# test, edit away, hack hack hack")]),t._v("\ngit add ...\ngit commit ...\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# push back to origin")]),t._v("\ngit push origin origin-master:master\n\n git checkout -b master-merging master\n git fetch origin\n git merge origin/master\n # test, hack, commit, push...\n git push origin master-merging:master\n\n git checkout -b master-merging master\n git fetch origin\n git merge origin/master~20    # 20 commits before origin/master\n # test, hack, commit\n git merge origin/master~10    # 10 commits before origin/master\n # test, hack, commit\n git merge origin/master\n # test, hack, commit, push...\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br")])]),e("p",[e("strong",[t._v("59. Usage scenario: Git cherry pick files, from Directory A to Directory B")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-format-patch.html"}},[t._v("git format-patch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mv.html"}},[t._v("git mv")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-am.html"}},[t._v("git am")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9550391",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\nInitialized empty Git repository in /tmp/gitt/.git/\n$ mkdir olddir\n$ cp /home/vi/code/_/ucontext.cpp olddir/ucontext.cpp\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"initial commit"')]),t._v("\n[master (root-commit) c0bf371] initial commit\n 1 files changed, 97 insertions(+), 0 deletions(-)\n create mode 100644 olddir/ucontext.cpp\n\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'22\\na\\n// Sup, /git/!\\n.\\nw\\nq\\n'")]),t._v(" | ed olddir/ucontext.cpp\n1983\n    if (!stacks) { stacks = stacks3; }\n1998\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sample commit'")]),t._v("\n[master 83940c9] sample commit\n 1 files changed, 1 insertions(+), 0 deletions(-)\n$ printf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'33\\nd\\nw\\nq\\n'")]),t._v(" | ed olddir/ucontext.cpp\n1998\n    }else{\n1990\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -am")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sample commit 2'")]),t._v("\n[master 6599932] sample commit 2\n 1 files changed, 0 insertions(+), 1 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git format-patch HEAD~2"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --stdout")]),t._v(" > saved-commites.patch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" HEAD~2")]),t._v("\nHEAD is now at c0bf371 initial commit\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git mv olddir newdir")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'rename dir'")]),t._v("\n[master bd8a77e] rename dir\n 1 files changed, 0 insertions(+), 0 deletions(-)\n rename {olddir => newdir}/ucontext.cpp (100%)\n\n$ sed -i.bak "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'s!\\([ab]/\\)olddir/!\\1newdir/!g'")]),t._v(" saved-commites.patch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git am saved-commites.patch")]),t._v("\nApplying: sample commit\nApplying: sample commit 2\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("60. Usage scenario: Revert back to a specific commit in git, build, then revert to the latest changes")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/5859271",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git tag 1.0\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"good stopping point for v1.1"')]),t._v("\ngit tag 1.1\ngit checkout 1.0\n.. do your build stuff/whatever\ngit checkout 1.1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br")])]),e("p",[e("strong",[t._v("61. Usage scenario: Git: Merge remote files with local files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/8839044",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git commit\n\ngit pull\n\ngit add\n\ngit commit\n\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("62. Usage scenario: How to fetch someone else's pull request (to fix it)")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 4    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/21255590",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git remote add ...\n\ngit branch other_branch\n\ngit checkout other_branch\n\ngit checkout -b other_branch\n\ngit pull other_source other_branch\n\ngit add\ngit commit\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("63. Usage scenario: git automatically squash commits to previous commits that changed the same file/s")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/63510871",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Example\ngit add A B C D\ngit absorb --and-rebase\n\n▲ Further Links\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("64. Usage scenario: How to track config files of submodules in Git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/1429326",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add lib.conf\nln -s ../lib.conf lib/\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("strong",[t._v("65. Usage scenario: How to update commit hash in parent repo of submodule?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/13535986",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add path/to/submodule\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("66. Usage scenario: How to commit from a downloaded (.zip) repository?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/59780251",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone git@REPO_LOCATION_INFO\n\ngit checkout -b branch-name\n\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My commit message"')]),t._v("\ngit push origin branch-name\n\ngit remote add origin git@github.com:user/repo_name\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("67. Usage scenario: How to automatically add the commit message details to the checked in file location")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-show.html"}},[t._v("git show")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/42200839",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\npath="),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"D:/temp.txt"')]),t._v("\ngit diff HEAD~1 --name-only > ${path}\nif ! test ${GIT_BYPASS_POST_COMMIT+set}\nthen\n    export GIT_BYPASS_POST_COMMIT=1\n    for line in `cat $path`; do\n        if [[ ! $line =~ version.txt ]];then\n            file_path=`dirname $line`\n            git show --format=%B -s | cut -d "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'#'")]),t._v(" -f2 > ${file_path}/version.txt\n            echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('" - "')]),t._v(" >> ${file_path}/version.txt\n            echo $line >> ${file_path}/version.txt\n            git add ${file_path}/version.txt\n        fi  \n    done    \n    git commit --amend -C HEAD\nfi\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br")])]),e("p",[e("strong",[t._v("68. Usage scenario: git commit to remote repository not working")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/9826812",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add test\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("69. Usage scenario: git: checking out from remote branch changes local files?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/55957143",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Short Answer\ngit checkout HEAD -- .\n\ngit config core.fileMode false\n\ngit checkout master\n\ngit ck master\n\n▲ Detailed Explanation\ngit add .\n\nmode change 100644 => 100755 .gitignore\n\n264 files changed, 0 insertions(+), 0 deletions(-)\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git diff origin/master")]),t._v("\ndiff --git a/.gitignore b/.gitignore\nold mode 100644\nnew mode 100755\n[...]\n\n▲ Git Philosophy\ngit checkout HEAD -- .\n\n▲ Comparing Files\ngit diff origin/master\n\ngit diff origin/master -- .gitignore README.md\n\ngit diff --cached\n\ngit diff --cached -- README.md\n\ngit diff\ngit diff -- README.md\n\n▲ Detached HEAD\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br")])]),e("p",[e("strong",[t._v("70. Usage scenario: Create new git repository inside subfolder by git init and ignore in the main git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-submodule.html"}},[t._v("git submodule")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53797759",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("$HOME/\n      [various dot files, personal files, etc]\n      src/\n          project-A/\n                    .git/\n                         [all of Git's files]\n                    .gitignore\n                    README.md\n                    [various files]\n          project-B/\n                    .git/\n                         [all of Git's files]\n                    .gitignore\n                    README.md\n                    [various files]\n\n$HOME/\n      [various dot files, personal files, etc]\n      src/\n          project-A/\n                    .git/\n                         [all of Git's files]\n                    .gitignore                           <-- lists `/project-B/`\n                    project-B/\n                              .git/\n                                   [all of Git's files]  <-- these files are untracked in A\n                              .gitignore                 <-- and this is untracked in A\n                              README.md                  <-- and so is this\n                              [various files]            <-- and all of these\n                    README.md\n                    [various files]\n\n<click some buttons in browser>\n\ngit clone <url> A      # so now you have A/README.md and A/.git and so on\ncd A\n\nmkdir A\ncd A\ngit init\n\ngit submodule add ssh://github.com/someuser/B project-B\n\n▲ The operation of a submodule\ncd project-B\ngit checkout develop\n... do some work ...\ngit add ... some files ...\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'do work on B to make it more useful for A'")]),t._v("\n\ngit add project-B\n\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'update submodule B to 8088dad...'")]),t._v("\n\n▲ Summary\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br"),e("span",{staticClass:"line-number"},[t._v("51")]),e("br"),e("span",{staticClass:"line-number"},[t._v("52")]),e("br"),e("span",{staticClass:"line-number"},[t._v("53")]),e("br"),e("span",{staticClass:"line-number"},[t._v("54")]),e("br"),e("span",{staticClass:"line-number"},[t._v("55")]),e("br")])]),e("p",[e("strong",[t._v("71. Usage scenario: How to remove certain files from global .gitignore?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/45668655",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add . \n\ngit add *\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("72. Usage scenario: How to properly switch GIT branches and return to later work.")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-cherry-pick.html"}},[t._v("git cherry-pick")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/53788333",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .\ngit commit -a -M"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'WIP: (describe where you are)'")]),t._v("\ngit checkout Y\n\ngit checkout -b pick-a-descriptive-name-for-the-branch\ngit commit ...   # commits land on this new branch\ngit checkout Y\n\ngit checkout pick-a-descriptive-name-for-the-branch\ngit log -1 # Note the SHA1 of the commit, which is your work in progress\ngit checkout X\ngit cherry-pick -n SHA1\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("73. Usage scenario: Track existing folder from remote git repo")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/24917312",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -m")]),t._v(" ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'some comment'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add origin git@gitserver:/opt/git/project.git")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("74. Usage scenario: How to add all files to stage whose file path is given in a file")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/66366909",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add $(cat files_to_stage.txt)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("75. Usage scenario: State of identical files being both added and removed")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/43428225",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git init repo")]),t._v("\nInitialized empty Git repository in /Users/schwern/tmp/repo/.git/\n$ cd repo/\n$ touch this\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add this")]),t._v("\n$ rm this\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git status")]),t._v("\nOn branch master\n\nInitial commit\n\nChanges to be committed:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git rm --cached <file>..."')]),t._v(" to unstage)\n\n    new file:   this\n\nChanges not staged for commit:\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add/rm <file>..."')]),t._v(" to update what will be committed)\n  (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git checkout -- <file>..."')]),t._v(" to discard changes in working directory)\n\n    deleted:    this\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br")])]),e("p",[e("strong",[t._v("76. Usage scenario: How do I get the sha for the parent commits while in a conflicted merge state?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-ls-files.html"}},[t._v("git ls-files")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20109064",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ For example, if I attempt to merge a branch that creates a conflict on a.txt:\n% git merge br\nAuto-merging a.txt\nCONFLICT (content): Merge conflict in a.txt\nAutomatic merge failed; fix conflicts and then commit the result.\n\n% git ls-files --stage\n100644 6041e76b484cbe25004efdf4e5faf3396d6f95a6 1       a.txt\n100644 0b6a7cf8dc44738a17d322c315ded9265f38a3fa 2       a.txt\n100644 67244df04c82140ad8e763a52daa670878b9d574 3       a.txt\n\n▲ If you want a simple way to get the hash for a single entry, you can use git revision syntax to refer to an item at a stage.  To get the hash for the conflicting file in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"their"')]),t._v(" branch (being merged in):\n% git rev-parse :3:a.txt\n67244df04c82140ad8e763a52daa670878b9d574\n\n% echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resolved!"')]),t._v(" > a.txt\n% git add a.txt\n\n% git ls-files --stage a.txt\n100644 8a1c1b8cc46d9c722630b3bf561ecde155554831 0       a.txt\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br")])]),e("p",[e("strong",[t._v("77. Usage scenario: Breaking up a branch into single file commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-list.html"}},[t._v("git rev-list")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/11502444",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout -b experiment master^^^^\ngit rev-list master^^^..master | \n  while read rev; \n  do \n    git diff --name-only $rev^..$rev | \n      while read file; \n      do \n        git checkout $rev -- $file;\n        git add $file; \n        git commit -C $rev;\n      done; \n  done\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br")])]),e("p",[e("strong",[t._v("78. Usage scenario: How to start tracking directories/files again which were removed from git index?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30117051",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add <your directory>\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("79. Usage scenario: How to guarantee git submodule is checking out a specific tag?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/67796692",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add sub/mod\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("80. Usage scenario: How can I check out only a part of a git repository during a bamboo build?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-tag.html"}},[t._v("git tag")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-mktree.html"}},[t._v("git mktree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/10457397",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Easiest is probably to have whoever's hosting the repo tag and commit the particular tree you want.  For instance,\ngit tag quickie $(git commit-tree $(git rev-parse HEAD:path/to/dir) </dev/null)\n\ngit fetch upstream quickie\n\n▲ If you want the upstream repo to automatically track a subtree on a branch, you can do (a suitably decrypted version of) something like this:\nsed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'s,^[^ ]* [^ ]* refs/heads/master$,git update-ref refs/heads/master-subtree -m "Auto-tracking master" $(git commit-tree master:subtree -m "Auto-tracking master subtree" $(test -r refs/heads/master-subtree \\&\\& echo -p refs/heads/master-subtree)),p\'')]),t._v(" | sh -x\n\nmkdir ~/tryitout && cd ~/tryitout && git init foo && git init bar --bare\ncat >bar/hooks/post-receive <<"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'EOF'")]),t._v("\nsed -n "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('\'s,^[^ ]* [^ ]* refs/heads/master$,git update-ref refs/heads/master-subtree -m "Auto-tracking master" $(git commit-tree master:subtree -m "Auto-tracking master subtree" $(test -r refs/heads/master-subtree \\&\\& echo -p refs/heads/master-subtree)),p\'')]),t._v(" | sh -x\nEOF\nchmod a+x bar/hooks/post-receive\ncd foo\nmkdir subtree && touch subtree/oooo && git add . && git commit -am-\ngit push ../bar master\n\n▲ If you're sharing a filesystem with the other repo, you can do this:\ngit clone --no-checkout /path/to/local/repo/.git subtree\ncd subtree\ngit commit-tree origin/rev:subtree </dev/null | xargs git checkout -B peek\n\ngit mktree </dev/null | xargs git commit-tree | xargs git checkout -b empty\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br")])]),e("p",[e("strong",[t._v("81. Usage scenario: How to push to git without merge files")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/50084769",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .\ngit commit -a -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Some comment"')]),t._v("\n\ngit fetch\n\ngit rebase\n\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("82. Usage scenario: split and push committed files to two different branches")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-clone.html"}},[t._v("git clone")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56230313",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git clone <repo> repo.dev\ncd repo.dev\ngit checkout -b dev  # remove -b if origin/dev exists\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# edit, commit, edit, commit, edit, commit")]),t._v("\ngit push --set-upstream origin dev # remove --set-upstream if you removed -b above\n\ncd ..\ngit clone <repo> repo.dist\ncd repo.dist\ngit checkout -b master # remove -b if origin/master exists\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# copy the .vuepress/dist directory into this sandbox as required for deployment")]),t._v("\ngit add .\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'initial dist'")]),t._v("\ngit push --set-upstream origin master # remove --set-upstream if you removed -b above\n\ncd ../repo.dev\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# edit, commit, edit, commit, edit, commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# make vuepress update repo.dist/.vuepress/dist,")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# possibly by symlinking it from your repo.dev sandbox.")]),t._v("\ncd ../repo.dist\ngit commit -a -m"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'updated dist'")]),t._v("\ngit push\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br")])]),e("p",[e("strong",[t._v("83. Usage scenario: How to update a shallow cloned submodule without increasing main repo size")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/20508591",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd sub_module\ngit fetch --depth 1\ngit reset --hard origin/master\ncd ..\ngit add sub_module\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'updated sub_module'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("84. Usage scenario: can we squash the latest commit to a specific previous commit?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-log.html"}},[t._v("git log")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37732935",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")])]),t._v("\nddd4444 (HEAD, my-feature-branch) A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git commit"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --fixup")]),t._v(" aaa1111")]),t._v("\n[my-feature-branch eee5555] fixup! A first commit\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git log"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --oneline")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --decorate")])]),t._v("\neee5555 (HEAD, my-feature-branch) fixup! A first commit\nddd4444 A fourth commit\nccc3333 A third commit\nbbb2222 A second commit\naaa1111 A first commit\n9999999 (master) Old stuff on master\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br")])]),e("p",[e("strong",[t._v("85. Usage scenario: Local Gitlab installation doesn't show all commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/37043315",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# git add/commit first")]),t._v("\ngit branch tmp\ngit checkout master\ngit merge tmp\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v('86. Usage scenario: Wrongly use "git add ." to add hundreds of files from the library "node_modules" directories, how do I undo this before git commit?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-status.html"}},[t._v("git status")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61421418",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git reset node_modules\n\necho node_modules/ >> .gitignore\ngit status\ngit add .\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br")])]),e("p",[e("strong",[t._v("87. Usage scenario: How to correctly configure git submodule")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56399265",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("cd <submodule_path>\ngit checkout a4709b3\n\ncd <submodule_path>\ngit checkout master # reconcile detached HEAD\ngit pull origin master\n\ncd <parent_dir_path>\ngit add <submodule_path>\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Update submodule"')]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("88. Usage scenario: How to prevent tracked config files from being changed by merges in git?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-config.html"}},[t._v("git config")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/30119507",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git config --local merge.alwaysours.driver true\n\ngit add .gitattributes\n\necho "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/.gitattributes merge=alwaysours'")]),t._v(" > .gitattributes\ngit commit .gitattributes -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Register alwaysours driver for .gitattributes'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br")])]),e("p",[e("strong",[t._v("89. Usage scenario: How to discard stash pop in Git without dropping my uncommitted changes?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-diff.html"}},[t._v("git diff")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-apply.html"}},[t._v("git apply")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/60351270",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git branch stash_data [stash hash ID]\n\n[on `master` branch, with all changes]\ngit checkout -b combined_data\ngit add [your files]\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"preparing to revert a stash pop"')]),t._v("\n\n[still on branch `combined_data`]\ngit diff stash_data master | git apply\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("90. Usage scenario: Replace branch in git repo from with another branch with changes history")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 2    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-pull.html"}},[t._v("git pull")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/41097377",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add remote reparser <reparser/repo/url>  # add a new remote named reparser")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch reparser                         # sync with ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'reparser'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master                        # checkout to master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -D")]),t._v(" Production                   # delete existing local ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'production'")]),t._v(" branch\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -b")]),t._v(" Production                 # create and checkout ")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new production'")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git pull reparser master                   # replace parser/Production with reparser/master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" -f")]),t._v(" origin HEAD                    # force push to remote Production of Parser ")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br")])]),e("p",[e("strong",[t._v("91. Usage scenario: How to add old zipped sources at the beginning of origin trunk?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/18194189",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git checkout --orphan newroot\ngit rm -rf .\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip zip1 to project directory")]),t._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zip1'")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# unzip zip2 to project directory")]),t._v("\ngit add .\ngit commit  -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'zip2'")]),t._v("\n...\ngit rebase --onto newroot --root master\ngit branch -d newroot\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br")])]),e("p",[e("strong",[t._v("92. Usage scenario: git checkout carries unstaged files to the new branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/36401261",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch new-branch")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout new-branch")]),t._v("\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'new-branch'")]),t._v("\n$ echo "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"test"')]),t._v(" > newfile\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add newfile")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout master")]),t._v("\nA       newfile\nSwitched to branch "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'master'")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("93. Usage scenario: How can I switch between unstaged changes and old code?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-stash.html"}},[t._v("git stash")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/52899168",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add .; git stash\n\ngit stash pop\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("94. Usage scenario: Create automated git commits into a branch created only for them, in parallel to the usual manual commits")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-write-tree.html"}},[t._v("git write-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit-tree.html"}},[t._v("git commit-tree")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-update-ref.html"}},[t._v("git update-ref")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rev-parse.html"}},[t._v("git rev-parse")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/61978796",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\nbase=`git rev-parse 2>&- timed-commits || git rev-parse @`\nGIT_INDEX_FILE=`git rev-parse --git-dir`/timed-index || { echo couldn\\'t get git dir; exit; }\nexport GIT_INDEX_FILE\nwhile sleep $((30*60)); do\n        git add .\n        git update-ref -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'automatic timed commit'")]),t._v(" refs/heads/timed-commits $(\n                git commit-tree -p $base -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'timed commit'")]),t._v(" `git write-tree`\n        )\ndone & \n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br")])]),e("p",[e("strong",[t._v("95. Usage scenario: How to add a few comments to the repository files before commitment")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47907659",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#!/bin/sh")]),t._v("\n\nprintf "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add automatically\\n"')]),t._v(" >> file\ngit add file\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br")])]),e("p",[e("strong",[t._v("96. Usage scenario: Git Flow merging a release branch back to Development")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-merge.html"}},[t._v("git merge")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-commit.html"}},[t._v("git commit")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-init.html"}},[t._v("git init")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/69735911",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("mkdir test\ncd test\ngit init\necho a > a\ngit add a\ngit commit -m "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"add a"')]),t._v("\ngit branch release-A\ngit merge release-A\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("97. Usage scenario: How do I make git add my code without recognizing it as a submodule?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-rm.html"}},[t._v("git rm")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/56309202",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git rm -r --cached B\ngit push\ngit add B\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br")])]),e("p",[e("strong",[t._v("98. Usage scenario: Clone of an old bare repository appears empty")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/35671766",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   HEAD")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   config")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   description")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   hooks/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   info/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#   refs/")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\nnothing added to commit but untracked files present (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br")])]),e("p",[e("strong",[t._v('99. Usage scenario: How to Undo "git add -A" in uninitialized local empty repository (while keeping the files on my computer)?')])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/12002059",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# On branch master")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Initial commit")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# Untracked files:")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('#   (use "git add <file>..." to include in what will be committed)')]),t._v("\n***All files listed***\nnothing added to commit but untracked files present (use "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git add"')]),t._v(" to track)\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[e("strong",[t._v("100. Usage scenario: Git: How to check whether local branch is ahead of remote branch when working directory is modified?")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/17572365",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("git add path/to/your/file.php\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[e("strong",[t._v("101. Usage scenario: Merging local branch into modified original branch")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 1    🔗Associated commands: [ "),e("RouterLink",{attrs:{to:"/richen/git-remote.html"}},[t._v("git remote")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-reset.html"}},[t._v("git reset")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-rebase.html"}},[t._v("git rebase")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-branch.html"}},[t._v("git branch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-checkout.html"}},[t._v("git checkout")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-fetch.html"}},[t._v("git fetch")]),t._v(", "),e("RouterLink",{attrs:{to:"/richen/git-push.html"}},[t._v("git push")]),t._v(" ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/47768510",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)],1)],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("// I assume that your local master branch is set up to track origin/master branch, where origin is your forked version of the original repository. \n// 1. Local branch named "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"my-new-feature"')]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git branch my-new-feature")]),t._v("\n// 2. Reset your master branch back to the state before changes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch origin")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git reset"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --hard")]),t._v(" origin/master")]),t._v("\n// 3. Update local master branch. First you need to add the original repository as a remote (let's name it "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"upstream"')]),t._v(") \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git remote add upstream https://github.com/some-user/some-project.git")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git fetch upstream")]),t._v("\n// you should still be on your local master branch. Now update this local branch with changes from the original repo\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase upstream/master")]),t._v("\n// 4. Push your local master to your forked repository\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin master")]),t._v("\n// 5. Rebase your changes onto master\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git checkout my-new-feature")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase master")]),t._v("\n// This is the place where you are most likely to have conficts. Read git messages, as it helps you what to do. \n// Once all conflicts have been resolved, stage your changes but do not commit. If committed they will not be detected by ongoing rebase.  \n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git add .")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git rebase"),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v(" --continue")])]),t._v("\n// 6. Push your local branch with newest changes\n"),e("span",{pre:!0,attrs:{class:"token command"}},[t._v("$ git push origin my-new-feature")]),t._v("\n// 7. Issue a pull request on GitHub using your just pushed branch\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);