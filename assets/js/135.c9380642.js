(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{561:function(t,s,e){"use strict";e.r(s);var a=e(19),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),e("p",[t._v("📖 "+t._s(t.$page.readingTime.text)+"    🔡 "+t._s(t.$page.readingTime.words)),e("br")])]),t._v(" "),e("h1",{attrs:{id:"git-stripspace-remove-unnecessary-whitespace"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#git-stripspace-remove-unnecessary-whitespace"}},[t._v("#")]),t._v(" 📌 git stripspace - Remove unnecessary whitespace")]),t._v(" "),e("h2",{attrs:{id:"strip-comments"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#strip-comments"}},[t._v("#")]),t._v(" 🔹 --strip-comments")]),t._v(" "),e("p",[e("strong",[t._v("1. Usage scenario: Git: Show list of commits during interactive rebase")])]),t._v(" "),e("blockquote",[e("p",[e("font",{attrs:{size:"2"}},[t._v("💯Score: 3    🔗Associated commands: [ None ]    🌐"),e("a",{attrs:{href:"https://stackoverflow.com/questions/28285323",target:"_blank",rel:"noopener noreferrer"}},[t._v("Details"),e("OutboundLink")],1)])],1)]),t._v(" "),e("p",[e("strong",[t._v("Example:")])]),t._v(" "),e("div",{staticClass:"language-git line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-git"}},[e("code",[t._v("▲ Note that Git 2.3.0 (February 2015) will display the number of "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"todo"')]),t._v(" during an interactive rebase.\ntodocount=$(git stripspace --strip-comments <"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$todo"')]),t._v(" | wc -l)\ncat >>"),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"$todo"')]),t._v(" <<EOF\n$comment_char Rebase $shortrevisions onto $shortonto ($todocount TODO item(s))\n\n▲ Note that with Git 2.16 (Q1 2018), an interactive rebase will be able to produce the todo list with a single-letter command names (if the  configuration variable rebase.abbreviateCommands is set).\n▲ Note that Git 2.21 (Q1 2019) makes "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"git stripspace"')]),t._v(" usable outside a git repository, even in "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-s"')]),t._v(" or "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"-c"')]),t._v(" mode.\n▲ With Git 2.26 (Q1 2020), allow the rebase.missingCommitsCheck configuration to kick in when "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rebase --edit-todo"')]),t._v(" and "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rebase --continue"')]),t._v(" restarts the procedure.\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);